{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index/","title":"Index","text":"<p>Welcome to Pydio documentation</p>"},{"location":"admin-guide/installation-guide/index/","title":"Index","text":"<p>This section covers the full installation process of Pydio 8.</p> <ul> <li>Pydio Requirements</li> <li>Quick Start</li> <li>Install Collabora Online</li> <li>Checking APIs</li> <li>Checking Sync</li> <li>Securing your installation</li> <li>Upgrading from previous version</li> <li>Troubleshooting</li> </ul>"},{"location":"admin-guide/installation-guide/pydio-requirements/","title":"Pydio Requirements","text":""},{"location":"admin-guide/installation-guide/pydio-requirements/#core-installation","title":"Core Installation","text":""},{"location":"admin-guide/installation-guide/pydio-requirements/#lamp-stack-or-equivalent","title":"LAMP stack or equivalent","text":""},{"location":"admin-guide/installation-guide/pydio-requirements/#web-server","title":"Web Server","text":"<p>The webserver software can be the one of your choice : Pydio is known to be running on Apache, Nginx, Lighttpd or IIS on Windows. Being the more wide-spread and tested in many different configurations, Apache is recommended for a production environment if you are not already familiar with other software. Please note that we do not support Apache on Windows.</p>"},{"location":"admin-guide/installation-guide/pydio-requirements/#database","title":"Database","text":"<p>Pydio can run on three types of databases : MySQL/MariaDB, PostgreSQL or Sqlite. The latter is not recommended for production environment but can be useful for testing or quick simple deployments.</p>"},{"location":"admin-guide/installation-guide/pydio-requirements/#php","title":"PHP","text":"<p>Pydio Enterprise Distribution requires PHP 5.6 or later. Recommended version is PHP 7.0, particularly on Windows as there is now an official 64bit build. </p> <p>The following PHP extensions are required as well for the core pydio installation: </p> <ul> <li><code>Mbstring</code>, <code>gd</code>, <code>dom-xml</code>, <code>intl</code></li> <li><code>Mysql</code>, <code>PostgreSQL</code> or <code>Sqlite</code> php extension for connecting to the database</li> <li><code>OpenSSL</code> or <code>Mcrypt</code>. The latter will be deprecated in next versions of PHP so you should prefer using Open SSL. </li> <li><code>Opcache</code> or equivalent Opcode Caching extension</li> <li>[ED] IonCube Loaders must be installed configured as a zend_extension in your php.ini. Please see https://ioncube.com/loaders.php to pick the right version for your OS / PHP Version.</li> </ul>"},{"location":"admin-guide/installation-guide/pydio-requirements/#additional-recommended-setup","title":"Additional Recommended setup:","text":"<ul> <li>A working Command Line PHP (CLI) runnable by webserver will allow Pydio to launch commands in background and make the  user experience more fluid.</li> <li>PHP APC/APCu extension or an additional Redis Server will allow Pydio to cache many data in-memory and greatly boost the performances as well.</li> </ul> <p>Some plugins may require additional extensions / libraries to be available on the server (see below).</p>"},{"location":"admin-guide/installation-guide/pydio-requirements/#networking","title":"Networking","text":"<p>It is highly recommended to server the Pydio software using the HTTPS protocol to make sure that all communications between server and client are encrypted. If you do not own already an SSL Certificate for your domain, you can check the Let's Encrypt tools to easily secure your server.</p> <p>Pydio thus requires port 443 to be open (or 80 if you still want to run on HTTP). To be able to use the web-socket feature provided by Pydio Booster, you must also allow another port, by default 8090/TCP. You can change this port number in the configuration.</p>"},{"location":"admin-guide/installation-guide/pydio-requirements/#hardware","title":"Hardware","text":"<p>This may highly vary, depending your number of users and volume of documents. The application is running on many shared hosting where you are generally allocated few memory and virtual cores, as well as embedded devices like NAS with few CPU, but if possible, it is always recommended to oversize the CPU and memory to provide the best user experience.</p> <p>Thus, if you can provide a dedicated server, starting with a 2GHz dual-core with 2Go of RAM should be more than enough for basic needs (up to 100 users). Uploads are known to be long and CPU-consuming, thus if you know that your users will frequently require big files uploads, you should size the CPU accordingly.</p>"},{"location":"admin-guide/installation-guide/pydio-requirements/#other-plugins-requirements","title":"Other Plugins Requirements","text":"<p>Many plugins have their own dependencies to external libraries, either as a PHP Extension, and PEAR library, or a given utility that must be installed on the server and accessible via command line. In the later case, there are generally common tools that can be installed directly on Linux distribution using the package manager (apt / yum), but their Windows version generally exists and as been tested successfully as well.</p> Name Identifier PHP Extension External (PEAR or command line) Email Viewer editor.eml Mail_mimeDecode SFTP Driver access.sftp ssh2 Samba Driver access.smb smbclient via command line Office Docs editor.zoho openssl PDF Viewer editor.imagick Imagick via command line Exif extractor meta.exif exif Git meta.git git via command line Mailbox access.mailbox imap"},{"location":"admin-guide/installation-guide/quick-start/","title":"Quick Start","text":"<p>Deploy Pydio in a couple of steps :</p> <ol> <li>Run through the diagnostic and fix your server configurations</li> <li>Run through the installer to be up and running quickly</li> <li>Use Pydio.</li> </ol>"},{"location":"admin-guide/installation-guide/quick-start/#run-through-the-diagnostic-and-fix-the-necessary-errors","title":"Run through the diagnostic and fix the necessary errors","text":"<p>At very first run, a diagnostic tool will check a couple of features and configurations of your server, and will report errors or warning as it find them, along with suggestions for fixing the issues.</p> <p></p> <p>While \u201cWarnings\u201d can be generally ignored without preventing the application from running, you should still try to fix them if you can, as you will surely encounter problems at one point or another.</p> <p>\u201cError\u201d failing tests must be fixed before going further, otherwise the application will very surely crash.</p> <p>Once you think you have correctly fixed the issue, simply reload the page to see if the test now correctly passes. See the Troubleshooting section for an exhaustive list of tests and solutions.</p>"},{"location":"admin-guide/installation-guide/quick-start/#pydio-installation-wizard","title":"Pydio Installation Wizard","text":"<p>After the diagnostic tool, an easy wizard will guide you through the configuration of the platform. Make sure to gather the necessary information before starting: create a database and prepare its credentials.</p> <p></p>"},{"location":"admin-guide/installation-guide/quick-start/#global-settings-and-admin-user","title":"Global Settings and admin user","text":"<p>Set up a title for your installation and a welcome message for your users.</p> <p></p> <p>Choose an identifier and a password for your administrative user, and eventually set up it's display name that will be shown to other users.</p> <p></p>"},{"location":"admin-guide/installation-guide/quick-start/#database-access","title":"Database Access","text":"<p>In this section, define the database driver and access. MySQL and PostgreSQL are fitted for production, Sqlite3 is definitely not, use it for quick testing only. If you are using MariaDB, simply select MySQL.</p> <p></p>"},{"location":"admin-guide/installation-guide/quick-start/#advanced-options","title":"Advanced Options","text":"<ul> <li>Server Path: the server path should be automatically detected by the installer, but make sure that it\u2019s correct. This is important as it is used for to generate correct rewrite rules.</li> <li>Encoding: the \u201cEncoding\u201d parameter must be correctly set otherwise you will very probably bump into problems if you upload files with names containing non-ascii characters (like french \u00e8\u00e9, german \u00fc, etc;\u2026). On a Linux install, the detected value will generally display an ENCODING (like UTF-8), but make sure to set it with a LOCALE.ENCODING value, like en_US.UTF-8, or fr_FR.UTF-8, etc\u2026 Login to your server and type \u2018echo $LANG\u2019 in a console and copy the result. Windows should be left empty.</li> <li>Cache: If you have installed APC/APCu php extension, this should be enabled automatically. If not, you can manage this setting later in the administration board.</li> <li>Mailer: If your php has mail or sendmail correctly configured, you can directly configure and test it from there.</li> <li>Default Language: Default language for the interface, users can select their own language anyway.</li> </ul>"},{"location":"admin-guide/installation-guide/quick-start/#ed-license-setup","title":"[ED] License Setup","text":"<p>For Enterprise Distribution only, you can set up the license name / license key that was provided to you via your pydio.com account. If you don't have any, leave values empty to start a 30-days trial. This step is not present in the Community Edition.</p> <p></p>"},{"location":"admin-guide/installation-guide/quick-start/#ed-eula","title":"[ED] EULA","text":"<p>Pydio Enterprise Distribution requires you to agree with the terms of the End Users License Agreement. This step is not present in the Community Edition.</p> <p></p>"},{"location":"admin-guide/installation-guide/quick-start/#finish","title":"Finish","text":"<p>Once you are ready to go, click on \u201cInstall Pydio\u201d and the page should refresh and provide you a login dialog. Use the admin login you just defined to enter. You\u2019re in!</p> <p></p>"},{"location":"admin-guide/installation-guide/install-collabora-online/","title":"Install Collabora Online","text":""},{"location":"admin-guide/installation-guide/install-collabora-online/#edit-documents-online-with-collabora-online","title":"Edit Documents Online with Collabora Online","text":"<p>Collabora Online is a powerful LibreOffice-based online office suite which supports all major document, spreadsheet and presentation file formats. It supports all major document formats:\u200b DOC, DOCX, PPT, PPTX, XLS, XLS, ODF, ODS, ODP. Shared editing: One person at a time edits a document, others see changes in real time. A different person can do changes at any time</p> <p>This documentation describes how to deploy Collabora CODE application, which is a cutting-edge community-oriented Docker provided for free by Collabora Online. If you wish to switch to a supported version with more capacities, please contact us.</p>"},{"location":"admin-guide/installation-guide/install-collabora-online/#installing-collabora-online-development-environment-via-the-docker-image","title":"Installing Collabora Online Development Environment via the Docker Image","text":""},{"location":"admin-guide/installation-guide/install-collabora-online/#prerequisite","title":"Prerequisite","text":"<p>In this documentation, you have to replace  with a suitable domain matching your certificates eg. office.yourdomain.com You also have to replace  with the same subdomain where dots are \"escaped\", eg. office.yourdomain.com <p>Here we will give you an example on one configuration if you want more detail about collabora you can go Here.</p>"},{"location":"admin-guide/installation-guide/install-collabora-online/#start-docker-image","title":"Start Docker Image","text":"<p>You can find a link to the docker for collabora here</p> <p>Install Docker on a server. </p> <pre><code>&lt;!-- $ docker pull collabora/code --&gt;\n$ docker run -t -d -p 127.0.0.1:9980:9980 -e \\\n     \"domain=&lt;your-escaped-domain&gt;\" --cap-add MKNOD collabora/code\n</code></pre> <p>This makes the docker image listen on localhost:9980.</p> <p>Note: this docker image does not work on Ubuntu 14.04 LTS, because Ubuntu 14.04 LTS has missing kernel compile option CONFIG_AUFS_XATTR=y, which is leading to setcap not working on docker\u2019s aufs storage. Upstream bug: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1557776</p>"},{"location":"admin-guide/installation-guide/install-collabora-online/#configuring-the-local-apache-reverse-proxy","title":"Configuring the local Apache reverse proxy:","text":"<p>In order to be able to launch the Collabora frame directly inside Pydio that is served on yourdomain.com, we have to use a Proxy configuration to serve the container requests through a matching domain name.</p> <p>Install apache reverse proxy</p> <p>On a recent Ubuntu or Debian this should be possible using:</p> <pre><code>apt-get install apache2\na2enmod proxy\na2enmod proxy_wstunnel\na2enmod proxy_http\na2enmod ssl\n</code></pre> <p>Afterwards, configure one VirtualHost properly to proxy the traffic. For enhanced reason we recommend to use a subdomain such as \"code.example.com\" instead of running on the same domain. An sample config can be found below:</p> <pre><code>&lt;VirtualHost *:443&gt;\n    ServerName &lt;your-domain&gt;:443\n\n    # SSL configuration, you may want to take the easy route instead and use Lets Encrypt!\n    SSLEngine on\n    SSLCertificateFile /path/to/signed_certificate\n    SSLCertificateChainFile /path/to/intermediate_certificate\n    SSLCertificateKeyFile /path/to/private/key\n    SSLProtocol             all -SSLv2 -SSLv3\n    SSLCipherSuite\n    ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS\n    SSLHonorCipherOrder     on\n\n    # Encoded slashes need to be allowed\n    AllowEncodedSlashes On\n\n    # Container uses a unique non-signed certificate\n    SSLProxyEngine On\n    SSLProxyVerify None\n    SSLProxyCheckPeerCN Off\n    SSLProxyCheckPeerName Off\n\n    # keep the host\n    ProxyPreserveHost On\n\n    # static html, js, images, etc. served from loolwsd\n    # loleaflet is the client part of LibreOffice Online\n    ProxyPass           /loleaflet https://127.0.0.1:9980/loleaflet retry=0\n    ProxyPassReverse    /loleaflet https://127.0.0.1:9980/loleaflet\n\n    # WOPI discovery URL\n    ProxyPass           /hosting/discovery\n    https://127.0.0.1:9980/hosting/discovery retry=0\n    ProxyPassReverse    /hosting/discovery\n    https://127.0.0.1:9980/hosting/discovery\n\n    # Main websocket\n    ProxyPassMatch \u201c/lool/(.*)/ws$\u201d wss://127.0.0.1:9980/lool/$1/ws\n\n    # Admin Console websocket\n    ProxyPass   /lool/adminws wss://127.0.0.1:9980/lool/adminws\n\n    # Download as, Fullscreen presentation and Image upload operations\n    ProxyPass           /lool https://127.0.0.1:9980/lool\n    ProxyPassReverse    /lool https://127.0.0.1:9980/lool\n&lt;/VirtualHost&gt;\n</code></pre> <p>After editing this virtual host, restart your apache using /etc/init.d/apache2 restart.</p>"},{"location":"admin-guide/installation-guide/install-collabora-online/#configuring-pydio-plugin-to-connect-to-code","title":"Configuring Pydio Plugin to connect to CODE","text":"<p>In the Settings panel, go to All Plugins &gt; Features Plugins &gt; Editors and enable the Collabora Online plugin. </p> <p></p> <p>Edit its parameters as follow: </p> <ul> <li>Url to the Libre Office Editor iFrame: <code>https://&lt;your-domain&gt;/loleaflet/dist/loleaflet.html</code></li> <li>WebSocket use TLS: <code>true</code></li> <li>Web Socket Connector Host: <code>&lt;your-domain&gt;</code></li> <li>Web Socket Connector Port: <code>9980</code> (see virtual host configuration above).</li> </ul>"},{"location":"admin-guide/installation-guide/install-collabora-online/#test-and-start-editing-docs","title":"Test and start editing docs !","text":"<p>Switch to a workspace and use the \"New Folder\" &gt; \"You can also create an empty Document\" link to create e.g. an ODT Document.</p> <p>Double click the new file to edit, you should now be able to edit it directly in Pydio!</p> <p></p>"},{"location":"admin-guide/installation-guide/checking-apis/","title":"Checking APIs","text":"<p>Pydio requires a RewriteRule to redirect all request to /index.php.  </p>"},{"location":"admin-guide/installation-guide/checking-apis/#enabling-rewrite-rules","title":"Enabling Rewrite Rules","text":"<p>The most important requirement is the webserver ability to support a RewriteRule mechanism, and that the application .htaccess files (or equivalent) are correctly configured.</p>"},{"location":"admin-guide/installation-guide/checking-apis/#enabling-modrewrite-on-apache-or-similar-for-iis-nginx","title":"Enabling ModRewrite on Apache (or similar for IIS &amp; Nginx)","text":"<p>This is done by activating the module ModRewrite. On most linux server, you can achieve this with the following command</p> <pre><code>a2enmod rewrite\n</code></pre> <p>You must also make sure that .htaccess instructions are really taken into account. This done by configuring the vhost and making sure that AllowOverride is set to All instead of None. Inside the vhost, check that you see:</p> <pre><code>AllowOverride All\n</code></pre> <p>For IIS, you can adapt this sample configuration IIS SAMPLE.</p> <p>For Nginx, the location{} tag also contains the according instructions, see NGINX SAMPLE.</p>"},{"location":"admin-guide/installation-guide/checking-apis/#apache-pydio-install-path-htaccess-rules","title":"Apache: pydio install path .htaccess rules","text":"<p>If the installation path of Pydio was webserver-writeable during install, the .htaccess should have been automatically updated.</p> <p>The variable part of this file is concerning the \u201cRewriteBase\u201d, which reflects the path of Pydio relative to the DocumentRoot : if Pydio is installed on http://domain.tld/pydio/, the RewriteBase shall be \u201c/pydio\u201d. If it\u2019s installed on http://domain.tld, should be \u201c/\u201d.</p> <pre><code>&lt;IfModule mod_rewrite.c&gt;\n\n# Make sure to enable RewriteRule on your server, and the the RewriteBase is correctly set.\n# If your install is accessible on https://yourdomain.tld/pydio, RewriteBase should be /pydio.\n# If your install is accessible on https://yourdomain.tld/, RewriteBase should be /.\n\nRewriteEngine on\nRewriteBase ${APPLICATION_ROOT}         # &lt;&lt; THIS LINE SHOULD REFLECT YOUR INSTALLATION PATH\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule (.*) index.php [L]\n</code></pre> <p>You can also see in that file some specific instructions that can be uncommented for specific php configurations (fast-cgi, php-fpm)</p> <pre><code>#Following lines seem to be necessary if PHP is working\n#with apache as CGI or FCGI. Just remove the #\n#See http://doc.tiki.org/WebDAV#Note_about_Apache_with_PHP_as_fcgi_or_cgi\nRewriteCond %{HTTP:Authorization} ^(.*)\nRewriteRule ^(.*) - [E=HTTP_AUTHORIZATION:%1]\n\n#Following lines may be necessary for a PHP-FPM setup\n# to make sure that authorization is transmitted.\n# Just remove the # at the beginning of the line\nSetEnvIf Authorization \"(.*)\" HTTP_AUTHORIZATION=$1\n</code></pre> <p>If when testing the API access, you have an infinite authorization loop, try uncommenting one of these lines.</p>"},{"location":"admin-guide/installation-guide/checking-apis/#other-servers-iis-and-nginx","title":"Other servers: IIS and Nginx","text":"<p>The content of the .htaccess file is only understood by Apache ModRewrite. If you are using another webserver, please refer to the dedicated How-To\u2019s in our knowledge base.</p>"},{"location":"admin-guide/installation-guide/checking-apis/#testing-rewrite-is-working","title":"Testing rewrite is working","text":"<p>Along with the Rewrite mechanism and the HTML tag \u201cBASE\u201d, the GUI can use a routing mechanism to create \u201cfake\u201d URLs: when you switch from one workspace to another, you must see that the URL is updated accordingly in the browser. E.G https://domain.tld/pydio/ws-workspace-slug,https://domain.tld/pydio/ws-otherone, https://domain.tld/pydio/dashboard, etc\u2026 Same with the current folder path. This allows the end-user to easily use their back/forward browser button to navigate through their own pydio history.</p> <p>The basic check is to enter a workspace (e.g. https://domain.tld/pydio/ws-workspace-slug) and simply reload the page.</p> <p>If you encounter a 404 here, this means that the RewriteRule is not correctly configured. If it were correctly working, the htaccess would be saying \u201ctransfer all urls starting with /pydio/ws- to /pydio/\u201d.</p> <p>If you encounter a white screen from startup, you may have a wrong BASE value inside the generated HTML, due to a proxy or wrong path detection on the server. You can verify that using your preferred web-developer tools, looking to the BASE tag in the very head of the html code. The BASE must be pointing to the real root of pydio. For example, if installed on https://domain.tld/my-pydio/, you should see the base value \u201c/my-pydio/\u201d (including trailing slahes). If you have set a wrong Server URL in your Pydio Core Options, this might be interpreted to build a wrong BASE, and this will fail the resources to load. To fix that, simply clear the core.ajaxplorer options from the ajxp_plugin_configs in the DB, and the auto-detection should revert to a correct value.</p>"},{"location":"admin-guide/installation-guide/checking-apis/#shared-links","title":"Shared links","text":"<p>In Pydio, links are served by default on https://domain.tld/pydio/public/. Unlike previous versions, this is handled directly by the main routing, so it should work out of the box. If you are upgrading from a previous version, the legacy data/public/share.php file should have been modified during upgrade  process and links will be both accessible on /pydio/data/public/linkhash and /pydio/public/linkhash.</p> <p>You can change this virtual url part in the Pydio configurations, to serve links e.g. on https://domain.tld/pydio/pub/.</p>"},{"location":"admin-guide/installation-guide/checking-apis/#rest-api","title":"REST API","text":"<p>The REST API relies as well on the Rewrite rules, and in some case (fcgi setup) on a specific set of htaccess instructions for authorization. You can test this only once you have created a Pydio user and tested you could normally access Pydio with these credentials. Then open a new tab and use the following url, using the same credentials when the browser asks you for user/password: https://domain.tld/pydio/api/my-files/ls/</p> <p>You should receive an XML result listing the content of the \u201cMy Files\u201d default workspace.</p>"},{"location":"admin-guide/installation-guide/checking-apis/#troubleshooting-login-loops","title":"Troubleshooting login loops","text":"<p>When testing the API, if you have an authorization loop (browser is asking for login &amp; password again and again), or you have login issues directly in the PydioSync client, please check the following:</p> <ul> <li>Php-FPM or FastCGI: see above in this article, make sure to uncomment the according lines in the main .htaccess of the application.</li> <li>Using \u201cSession Credentials\u201d feature to connect to a remote storage: if you are authenticating against an alternative backend like ftp or smb using \u201cSession Credentials\u201d, this may prevent an additional performance layer added for the sync client that use a unique key pair to authenticate devices. Try disabling the authfront.keystore plugin.</li> </ul>"},{"location":"admin-guide/installation-guide/checking-sync/","title":"Checking Sync","text":"<p>Since Pydio 6, the new PydioSync client is now based on a number of server features to make the desktop client lighter and more efficient. Please read go through the basic checks described here to make sure it will work ok.</p>"},{"location":"admin-guide/installation-guide/checking-sync/#how-the-sync-client-works","title":"How the sync client works","text":"<p>The new python-based PydioSync client is leveraging a Pydio6 unique feature to perform efficient synchronisation with a minimal footprint on both the server and the client. This is achieved by comparing set of \u201cchanges\u201d between server and client on a regular basis. The client rarely asks the server for a whole listing of a workspace, instead remembers a given state and ask for changes since that last check. In otherway, instead of requiring \u201csnapshots\u201d of the server, the client requires \u201cdelta\u201d of file and folders tree since last check.</p> <p>Server-side, these \u201cchanges\u201d are computed and stored on the fly, on each file/folder modification. Thus, when the client ask for changes, if nothing happened, no compute is performed and the query will just return an empty result, loaded directly from the database.</p> <p></p> <p>Last but not least, it\u2019s important to understand that the PydioSync client is using our new REST-based protocol. The first checks will be to make sure that the REST API is correctly working.</p>"},{"location":"admin-guide/installation-guide/checking-sync/#rest-api","title":"Rest Api","text":"<p>The first important thing to check is that the REST API is correctly working. If you went through the previous chapter of this Administrator Guide, you probably already made sure that the RewriteRules are correctly activated and translated by the server. Only once it\u2019s sure you can get further.</p> <p>Testing URL (on pydio default workspace)</p> <pre><code>REQUEST: https://yourserver.tld/pydio/api/default-files/ls/\n---\nANSWER:\n&lt;tree repo_has_recycle=\"true\" is_file=\"false\" filename=\"\" mimestring_id=\"8\" icon=\"folder.png\" openicon=\"folder_open.png\" ajxp_mime=\"ajxp_folder\" file_group=\"1\" file_owner=\"1\" file_perms=\"0777\" ajxp_modiftime=\"1426148120\" ajxp_relativetime=\"Modified yesterday at 09:15\" ajxp_description=\"Modified yesterday at 09:15\" bytesize=\"0\" filesize=\"-\" meta_fields=\"tags\" meta_labels=\"Tags\" meta_types=\"string\" text=\"\"&gt;\n&lt;/tree&gt;\n&lt;tree text=\"autows10\" is_file=\"false\" filename=\"/autows10\" mimestring_id=\"8\" icon=\"folder.png\" openicon=\"folder_open.png\" ajxp_mime=\"ajxp_folder\" file_group=\"1\" file_owner=\"1\" file_perms=\"0777\" ajxp_modiftime=\"1401974077\" ajxp_relativetime=\"Modified on June, 5th 2014\" ajxp_description=\"Modified on June, 5th 2014\" bytesize=\"0\" filesize=\"-\" meta_fields=\"tags\" meta_labels=\"Tags\" meta_types=\"string\" mimestring=\"Directory\"/&gt;\n&lt;/tree&gt;\n&lt;tree text=\"autows13\" is_file=\"false\" filename=\"/autows13\" mimestring_id=\"8\" icon=\"folder.png\" openicon=\"folder_open.png\" ajxp_mime=\"ajxp_folder\" file_group=\"1\" file_owner=\"1\" file_perms=\"0777\" ajxp_modiftime=\"1402565915\" ajxp_relativetime=\"Modified on June, 12th 2014\" ajxp_description=\"Modified on June, 12th 2014\" bytesize=\"0\" filesize=\"-\" meta_fields=\"tags\" meta_labels=\"Tags\" meta_types=\"string\" mimestring=\"Directory\"/&gt;\n&lt;/tree&gt;\n&lt;tree text=\"autows18\" is_file=\"false\" filename=\"/autows18\" mimestring_id=\"8\" icon=\"folder.png\" openicon=\"folder_open.png\" ajxp_mime=\"ajxp_folder\" file_group=\"1\" file_owner=\"1\" file_perms=\"0777\" ajxp_modiftime=\"1402248791\" ajxp_relativetime=\"Modified on June, 8th 2014\" ajxp_description=\"Modified on June, 8th 2014\" bytesize=\"0\" filesize=\"-\" meta_fields=\"tags\" meta_labels=\"Tags\" meta_types=\"string\" mimestring=\"Directory\"/&gt;\n&lt;/tree&gt;\n</code></pre>"},{"location":"admin-guide/installation-guide/checking-sync/#db-and-sql-triggers-set-up","title":"DB and SQL Triggers set up.","text":"<p>Another key feature needed by our indexation is that your Pydio install is using a DB. If you are using a No-DB install (which is not required in production, but might be the case if you come from Pydio 5), you would have to make sure to provide a DB connexion and install the necessary tables for the indexation to work.</p>"},{"location":"admin-guide/installation-guide/checking-sync/#db-was-setup-during-install-wizard","title":"DB was setup during install wizard","text":"<p>Nothing specific to do here. Tables should be already installed, and SQL Triggers as well. However you can verify that by checking that the ajxp_index and ajxp_changes tables are both present in your database.</p>"},{"location":"admin-guide/installation-guide/checking-sync/#db-was-not-setup-during-install","title":"DB was not setup during install","text":"<p>You can configure a Core Connexion in the Configurations Management panel of Pydio, and then manually install the necessary tables by grabing the SQL script corresponding to your DB inside the plugin meta.syncable folder.</p>"},{"location":"admin-guide/installation-guide/checking-sync/#checking-triggers","title":"Checking Triggers","text":"<p>In some cases, you can be disallowed to install triggers in your DB, or some specific DB config can break the mechanism. To verify it\u2019s working, you can simply try to manually add a row with fake data inside the ajxp_index table (using your prefered sql client). Once done, you should verify that a new row was created inside ajxp_changes. If you delete the index row, again, you see another new row inside ajxp_changes: on each modification of ajxp_index, a new row is added inside ajxp_changes.</p> <p></p>"},{"location":"admin-guide/installation-guide/checking-sync/#workspace-configuration","title":"Workspace configuration","text":"<p>Now that the DB is correctly setup, make sure to enable the \u201cSyncable Workspace (meta.syncable)\u201d plugin in your workspace. This is done via the \u201cWorkspace Features\u201d tab of the workspace creation window. For the default workspaces (Default Files and My Files), this should be the case by default, and you can verify this inside the file conf/bootstrap_repositories.php. Finally, make sure that the according parameter \u201cWorkspace is Syncable\u201d is set to Yes.</p> <p></p> <p>This parameter can be refined by a group/user/role edition, so if you are testing with a given user, make sure she does not have the parameter set to No because of inheritance.</p>"},{"location":"admin-guide/installation-guide/checking-sync/#server-side-indexation","title":"Server-side indexation","text":"<p>Finally, if you started a fresh new workspace using following the instructions above, as soon as you will start adding data inside this workspace, you will see that the ajxp_changes table is feeding with all events that happened. If the workspace was already containing some contents, you have to make sure to re-index it entirely to make sure ajxp_index (and ajxp_changes) are up to date.</p> <p>You can request the server changes by calling the following URL.</p> <p>Where</p> <ul> <li>https://yourserver.tld/pydio/ might depend on your server installation path,</li> <li> <p>workspace-slug is the \u201cpretty name\u201d of the workspace. You can see it by logging to this workspace and seeing in the URL of your browser the /ws-workspace-slug/ part (remove ws- to get the slug). You should receive a json listing all changes since creation of workspace.</p> <p>REQUEST: https://yourserver.tld/pydio/api/workspace-slug/changes/0 ANSWER:{\"changes\":[   {   \"seq\":3504,\"node_id\":2364,\"type\":\"create\",\"source\":\"NULL\",\"target\":\"/logo.png\",     \"node\":       {\"bytesize\":null,\"md5\":null,\"mtime\":null,\"node_path\":null,\"repository_identifier\":\"1-administrator\"}},   {   \"seq\":98570,\"node_id\":2364,\"type\":\"delete\",\"source\":\"/logo.png\",\"target\":\"NULL\",       \"node\":         {\"bytesize\":null,\"md5\":null,\"mtime\":null,\"node_path\":null,\"repository_identifier\":\"1-administrator\"}},   {   \"seq\":5362,\"node_id\":3328,\"type\":\"create\",\"source\":\"NULL\",\"target\":\"/Public Minisite/Test Folder/6Capt @ ure.png\",       \"node\":         {\"bytesize\":null,\"md5\":null,\"mtime\":null,\"node_path\":null,\"repository_identifier\":\"1-administrator\"}},   {   \"seq\":110546,\"node_id\":3328,\"type\":\"delete\",\"source\":\"/Public Minisite/Test Folder/6Capt @ ure.png\",\"target\":\"NULL\",       \"node\":         {\"bytesize\":null,\"md5\":null,\"mtime\":null,\"node_path\":null,\"repository_identifier\":\"1-administrator\"}},   {   \"seq\":5363,\"node_id\":3329,\"type\":\"create\",\"source\":\"NULL\",\"target\":\"/Public Minisite/Test Folder/Again.png\",       \"node\":         {\"bytesize\":null,\"md5\":null,\"mtime\":null,\"node_path\":null,\"repository_identifier\":\"1-administrator\"}},   {   \"seq\":110547,\"node_id\":3329,\"type\":\"delete\",\"source\":\"/Public Minisite/Test Folder/Again.png\",\"target\":\"NULL\",       \"node\":         {\"bytesize\":null,\"md5\":null,\"mtime\":null,\"node_path\":null,\"repository_identifier\":\"1-administrator\"}},   {   \"seq\":5364,\"node_id\":3330,\"type\":\"create\",\"source\":\"NULL\",\"target\":\"/Public Minisite/Test Folder/CamReview.png\",       \"node\":         {\"bytesize\":null,\"md5\":null,\"mtime\":null,\"node_path\":null,\"repository_identifier\":\"1-administrator\"}},   {   \"seq\":110548,\"node_id\":3330,\"type\":\"delete\",\"source\":\"/Public Minisite/Test Folder/CamReview.png\",\"</p> </li> </ul>"},{"location":"admin-guide/installation-guide/checking-sync/#putting-things-together-testing-script","title":"Putting things together: testing script","text":"<p>To help you in that task, we\u2019ve setup a script that will try to use the API to create a file inside a workspace, and check if it can find back the \u201cchange\u201d afterward. For that, uncomment the die() line of the /runTests.php file and call the following url in your browser : https://yourserver.tld/runTests.php?api=true.</p> <p>Please note: If your server is not located at the document root (e.g. https://yourserver.tld/pydio/), there is a small issue in the current version of this script. Please grab the latest version from github and replace the script before testing (https://raw.githubusercontent.com/pydio/pydio-core/develop/core/src/runTests.php).</p>"},{"location":"admin-guide/installation-guide/securing-your-installation/","title":"Securing your installation","text":"<p>Pydio code is continuously audited by security experts, and should be resistant to the most common web attacks. But at some point, Pydio cannot fix holes created by a wrong server configuration. Here are some basic recommendations for securing your Pydio installation.</p>"},{"location":"admin-guide/installation-guide/securing-your-installation/#protect-your-folders-from-direct-web-access","title":"Protect your folders from direct web access","text":"<p>Under the main Pydio installation folder, the following folders contents must be hidden from the web server. It is by default the case if you are using Apache, as .htaccess files are part of the distribution.</p> <ul> <li>pydio_install/conf</li> <li>pydio_install/data/[all subfolders except \u201cpublic\u201d].  data/public/ is the default container for the \u201cshared links\u201d public files.</li> </ul> <p>Note:  concerning the .htaccess files under Apache, be sure to AllowOverride of the Limit directives on your web server (contact your Webmaster).</p> <p>If you can, do not use the default \u201cfiles\u201d folder placed inside the distribution, but create a repository pointing to a folder outside your web \u201cdocument root\u201d.</p>"},{"location":"admin-guide/installation-guide/securing-your-installation/#basic-security-rules","title":"Basic security rules","text":"<p>HTTPS usage is recommended, but you have to configure your server for that, it cannot be done automatically by Pydio.</p> <p>Always use strong passwords. There is a password minimum length option that is set to 8 characters by default.</p>"},{"location":"admin-guide/installation-guide/securing-your-installation/#check-for-updates","title":"Check for updates","text":"<p>Security issues are always released with high priority, use the integrated upgrade tool to check if updates are available and apply them!</p>"},{"location":"admin-guide/installation-guide/upgrading-from-previous-version/","title":"Upgrading from previous version","text":""},{"location":"admin-guide/installation-guide/upgrading-from-previous-version/#in-app-upgrade-from-pydio-6","title":"In-App upgrade from Pydio 6","text":"<p>Upgrade is automatic from within the app for archive-based installs (zip / tar.gz). Make sure to backup the database and the files.</p> <p></p> <p>For update to v6 from stable version 5.2.5, please be sure that you have configured action.updater as following capture:</p> <p></p> <p>After saving the modification, click on upgrade button on top right bar, you can see this dialog.</p> <p></p> <p>Click on Start Upgrade on dialog</p> <p>If there is no error reported, You can logout, refresh the page login again and experience new version</p>"},{"location":"admin-guide/installation-guide/upgrading-from-previous-version/#upgrading-from-pydio-6-when-installed-via-aptyum","title":"Upgrading from Pydio 6 when installed via apt/yum","text":"<p>If Pydio is installed via a package manager, you can use the in-app upgrade processus. You first have to update the packages, using yum / apt-get commands, then manually apply the followings steps:</p> <ul> <li>Update database</li> <li>Check /etc/bootstrap_*.php are up-to-date</li> <li>Update share.php</li> </ul>"},{"location":"admin-guide/installation-guide/upgrading-from-previous-version/#upgrading-from-previous-versions","title":"Upgrading from previous versions","text":"<p>Please read the upgrade instructions of v6 documentation.</p>"},{"location":"admin-guide/installation-guide/troubleshooting/","title":"Troubleshooting","text":"<p>Here are some common mistakes you might encounter when you try to install Pydio and a way to fix them.</p>"},{"location":"admin-guide/installation-guide/troubleshooting/#permission-issue","title":"Permission issue:","text":"<p>After you put your pydio in your /var/www folder you go to your web browser and you may see this:</p> <p></p> <p>Pydio need to have some access right to read and/or write files. Just run: <code>sudo chown -r www-data:www-data /var/www/pydio/data</code></p>"},{"location":"admin-guide/installation-guide/troubleshooting/#diagnostic-tool-issue","title":"Diagnostic tool issue:","text":"<p>After refreshing your web browser, you should can see this Pydio Diagnostic Tool:</p> <p></p>"},{"location":"admin-guide/installation-guide/troubleshooting/#security-breach-issue","title":"Security breach issue:","text":"<p>So, we have several problems here; first, the \"Security Breach\" problem is when your data folder is not correctly protected by your apache server. Go to your apache2 folder and edit the \"apache2.conf\" ( /etc/apache2/apache2.conf ).</p> <p>You need to edit your conf because from now, your apache2 server ignore all .htaccess files which are in /var/www :</p> <p></p> <p>So you need to accept all .htaccess files which are in this directory :</p> <p></p> <p>After that you can restart your apache2: <code>sudo service apache2 restart</code></p> <p>The \"Security Breach\" error should now be fixed.</p>"},{"location":"admin-guide/installation-guide/troubleshooting/#ioncubeloader-issue","title":"IoncubeLoader issue:","text":"<p>The second and one the most important extension for Pydio-enterprise is \"IonCube Extension\"; First you need to know if your system it's a 32Bits or 64Bits : <code>uname -a</code></p> <p></p> <p>As you can see my server is a 64Bits because of the \"x86_64\", if you have \"i386\" it's a 32Bits system ( rare now ). After that you need to download the loader ( 32Bits 64Bits ) and extract it: <code>tar xfz ioncube_loaders_lin_x86*</code> <code>cd ioncube</code></p> <p>Then you have several file like this:</p> <p></p> <p>The files have a number that corresponds with the PHP version they are made for and there is also a \"_ts\" (Thread Safe) version of each loader. We will use the version without thread safety here. To find your PHP version tap: <code>php -v</code></p> <p></p> <p>You just need to take the first 2 digit ( 5.6 in my case, so i need to take the file \"ionucbe_loader_lin_5.6.so\" ).Now you have your PHP version and the ioncube file to copy but you also need to have the extension directory of your PHP: <code>php -i | grep extension_dir</code></p> <p></p> <p>You need to take the last directory ( \"/usr/lib/php5/20131226\" in my case ). Now copy your ioncube file to your PHP extension directory, it will looks like: <code>sudo cp ioncube_loader_lin_5.6.so /usr/lib/php5/20131226/</code></p> <p>Now you need to configure your PHP for Ioncube, you just add this part at first line in all your php.ini ( usually in /etc/php5/apache2/php.ini and /etc/php5/cli/php.ini ): <code>zend_extension = /usr/lib/php5/20131226/ioncube_loader_lin_5.6.so</code> <code>sudo service apache2 restart</code>  To know you can tap:  <code>php -v</code></p> <p></p>"},{"location":"admin-guide/installation-guide/troubleshooting/#output-buffering-issue","title":"Output buffering issue:","text":"<p>After that you can resolve the last warning, the output buffering, all you need to do it's to edit all of your php.ini: <code>output_buffering = Off</code></p> <p>You can find your php.ini using <code>php -i | grep \"Loaded Configuration File\"</code>.</p> <p>After that you just need to restart apache and the \"Pydio Diagnostic Tool\".</p>"},{"location":"admin-guide/installation-guide/troubleshooting/#mysql-extension-issue","title":"MySQL extension issue:","text":"<p>When you test your SQL connection during the installation wizard, if you have an error \"mysql extension missing\", make sure to install  the php-mysql additional packages on your server. For example on a debian: </p> <p><code>sudo apt-get install php-mysql</code> <code>sudo service apache2 restart</code></p> <p>You can now test if your database connection is good.</p>"},{"location":"admin-guide/installation-guide/troubleshooting/#rewrite-refresh-issue","title":"Rewrite ( refresh ) issue:","text":"<p>Another problem is when you refresh your browser you have an issue like this:</p> <p></p> <p>If you want to use Pydio features such as Public shares, APIs (sync), WebDav... You must enable rewrite rules. Maybe you forgot to enable the rewrite mod in apache2: <code>sudo a2enmod rewrite</code> <code>sudo service apache2 restart</code></p>"},{"location":"admin-guide/installation-guide/install-pydio-community/index/","title":"Index","text":"<p>You can easily install Pydio on your server either by downloading and extracting directly an archive in ZIP or TAR.GZ format, or by using your favorite package manager on Linux systems. This part gives instruction about Pydio Community Distribution.</p> <ul> <li>Install from archive</li> <li>Debian/Ubuntu Systems</li> <li>CentOS/RHEL Systems</li> </ul> <p>If you are upgrading an already deployed Pydio installation, see Upgrading From Previous Version chapter.</p>"},{"location":"admin-guide/installation-guide/install-pydio-community/install-from-archive/","title":"Install from archive","text":"<p>Download the latest stable version from Download Page either as ZIP or TAR.GZ format. Alternatively, you can use our Linux repositories to install Pydio using a package manager on Debian or CentOS Linux flavors.</p> <p>Using your favorite FTP client or SCP command, upload this package to your webserver, and extract its content to a web-accessible folder (e.g. /var/www/pydio).</p> <p>Make sure the data path is writeable by the web server. For example :</p> <p><code>chown -R www-data:www-data /var/www/pydio/data</code></p>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/","title":"Debian/Ubuntu Systems","text":""},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#debian-9-stretch","title":"Debian 9 (Stretch)","text":"<p>Configure the pydio repository</p> <pre><code># Pydio Community repositories\necho \"deb https://download.pydio.com/pub/linux/debian/ stretch main\" &gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\n</code></pre> <p>Now update all repositories, with https support if not already installed</p> <pre><code>sudo apt-get install apt-transport-https\nsudo apt-get update\n</code></pre> <p>And finally install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#debian-8-jessie","title":"Debian 8 (Jessie)","text":"<p>Configure the pydio repository</p> <pre><code># Pydio Community repositories\necho \"deb https://download.pydio.com/pub/linux/debian/ jessie-backports main\" &gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\n</code></pre> <p>Now update all repositories, with https support if not already installed</p> <pre><code>sudo apt-get install apt-transport-https\nsudo apt-get update\n</code></pre> <p>And finally install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#debian-7-wheezy","title":"Debian 7 (Wheezy)","text":"<p>Ensure that wheezy-backports repositories are enabled in <code>/etc/apt/sources.list</code> :</p> <pre><code>deb http://httpredir.debian.org/debian wheezy-backports main\ndeb-src http://httpredir.debian.org/debian wheezy-backports main\n</code></pre> <p>Configure the pydio repository as well as its dependencies</p> <pre><code># DotDeb\necho \"deb http://packages.dotdeb.org wheezy-php56 all\" &gt; /etc/apt/sources.list.d/dotdeb.list\necho \"deb-src http://packages.dotdeb.org wheezy-php56 all\" &gt;&gt; /etc/apt/sources.list.d/dotdeb.list\nwget -qO - http://www.dotdeb.org/dotdeb.gpg | sudo apt-key add -\n\n# Pydio Community repositories\necho \"deb https://download.pydio.com/pub/linux/debian/ wheezy-backports main\" &gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\n</code></pre> <p>Now update all repositories, with https support if not already installed</p> <pre><code>sudo apt-get install apt-transport-https debian-keyring debian-archive-keyring\nsudo apt-get update\n</code></pre> <p>And finally install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#ubuntu-1710-artful","title":"Ubuntu 17.10 (artful)","text":"<p>First, configure the pydio repository as well as its dependencies</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ artful main\" &gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now, install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#ubuntu-1704-zesty","title":"Ubuntu 17.04 (zesty)","text":"<p>First, configure the pydio repository as well as its dependencies</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ zesty main\" &gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now, install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#ubuntu-1604-xenial","title":"Ubuntu 16.04 (xenial)","text":"<p>First, configure the pydio repository as well as its dependencies</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ xenial main\" &gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now, install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#ubuntu-1404-trusty","title":"Ubuntu 14.04 (trusty)","text":"<p>Stop apache if it is running</p> <pre><code>sudo service apache2 stop\n</code></pre> <p>Install the main PPA for PHP</p> <pre><code>sudo apt-get install -yq software-properties-common\nsudo add-apt-repository ppa:ondrej/php\nsudo apt-get update\n</code></pre> <p>Configure the pydio repository as well as its dependencies</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ trusty main\" &gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now, install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\n</code></pre> <p>Enable the correct apache php module - Note that by default, php5 is installed on Ubuntu 14.04, so these instructions are enabling the php5 module version that Pydio is compatible with. If you have already installed php7 or are in the process of setting up php7, then you can invert the parameters :</p> <pre><code>a2enmod php5\na2dismod php7.0\n</code></pre> <p>Restart apache</p> <pre><code>sudo service apache2 restart\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#upgrading-from-previous-version","title":"UPGRADING FROM PREVIOUS VERSION","text":""},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#pydio-updater-plugin","title":"Pydio Updater Plugin","text":"<p>In pydio 8, the brand new updater plugin eases the transition to the latest version. You just have to install this package, and the functionality will check and perform the database upgrade for you when first connecting to the Pydio application</p> <pre><code>sudo apt-get install pydio-plugin-action.updater\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#update-database","title":"Update Database","text":"<p>If you are updating from version 6, you will have to manually update the database. Get the upgrade script and apply it to your DB as follow:</p> <pre><code>wget https://raw.githubusercontent.com/pydio/pydio-core/develop/dist/php/7.0.1.mysql\nmysql -u DB_USER -p DB_NAME &lt; 7.0.1.mysql\n</code></pre> <p>Select the correct db type if it's not mysql (<code>7.0.1.pgsql</code>, <code>7.0.1.sqlite</code>)</p>"},{"location":"admin-guide/installation-guide/install-pydio-community/debian-ubuntu-systems/#debian-7-manually-update-apache-configuration","title":"[Debian 7] Manually update Apache configuration","text":"<p>During upgrade, package manager may not have updated the apache configuration. Look inside /etc/apache2/conf.d/, you must see a symbolic link from pydio.conf to /etc/pydio/apache2.2.conf. Unlink and replace the symlink with /etc/pydio/apache2.conf.</p> <p>You can test that a shared link (https://yourserver/pydio/public/linkHash) is working.</p> <p>After that step, you should be able to access pydio through your browser: http://YOUR_IP_ADDRESS/pydio/</p>"},{"location":"admin-guide/installation-guide/install-pydio-community/centos-rhel-systems/","title":"CentOS/RHEL Systems","text":""},{"location":"admin-guide/installation-guide/install-pydio-community/centos-rhel-systems/#install-software-collection-epel-and-pydio-repositories","title":"Install Software Collection, EPEL and Pydio repositories","text":"<p>EPEL</p> <pre><code>yum install epel-release scl-utils\n</code></pre> <p>CentOS 7 </p> <pre><code>yum install centos-release-scl\n</code></pre> <p>or RHEL 7</p> <pre><code>yum-config-manager --enable rhel-server-rhscl-7-rpms\n</code></pre> <p>Remi's RPM</p> <pre><code>rpm -Uvh https://www.softwarecollections.org/en/scls/remi/php56more/epel-7-x86_64/download/remi-php56more-epel-7-x86_64.noarch.rpm\n</code></pre> <p>Pydio</p> <pre><code>rpm -Uvh https://download.pydio.com/pub/linux/centos/7/pydio-release-1-1.el7.centos.noarch.rpm\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/centos-rhel-systems/#installation","title":"Installation","text":"<p>At this point, your box contains all dependencies necessary to install Pydio. Hit the following commands to update.</p> <pre><code>yum clean all\nyum update\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/centos-rhel-systems/#installing-pydio-core-first-time","title":"Installing Pydio Core (first time)","text":"<p>Pydio can be installed by: <code>yum install pydio-core</code></p> <p>pydio-core: contains essential packages with basic functionalities.</p> <p>you can additionally install some plugins by using command: <code>yum install pydio-plugin-pluginName</code></p> <p>Or <code>yum install pydio-all</code> to install all community packages of Pydio.</p>"},{"location":"admin-guide/installation-guide/install-pydio-community/centos-rhel-systems/#upgrading-from-pydio-642","title":"Upgrading from Pydio 6.4.2","text":"<p>Warning: If you've installed Pydio before, please backup your sytem or take a snapshoot before upgrade.</p> <p>Update the whole system</p> <pre><code>yum update -y\n</code></pre> <p>Upgrade pydio only</p> <pre><code>yum update pydio-core\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-community/centos-rhel-systems/#post-installupgrade","title":"Post install/upgrade.","text":"<p>This step is required to reconfigure Pydio, apache and php. Because the system now contains multiple version of apache and php, we should do:</p> <ol> <li>Disable default apache and php5.4</li> <li>Enable new apache and php5.6</li> <li>Migrate configuration of php5.4, old apache to new version</li> </ol> <p>Disable default apache:</p> <pre><code>systemctl disable httpd\nsystemctl stop httpd\n</code></pre> <p>Enable new apache:</p> <pre><code>systemctl enable httpd24-httpd\nsystemctl start httpd24-httpd\n</code></pre> <p>Enable php56</p> <pre><code>source /opt/rh/rh-php56/enable\n</code></pre> <p>Enable httpd24-http</p> <pre><code>source /opt/rh/httpd24/enable\n</code></pre> <p>Now you can verify the PHP version by typing the command in terminal windows:</p> <pre><code>[root@localhost ~]# php -v\nPHP 5.6.5 (cli) (built: Aug 30 2016 13:52:26)\nCopyright (c) 1997-2014 The PHP Group\nZend Engine v2.6.0, Copyright (c) 1998-2014 Zend Technologies\n    with the ionCube PHP Loader (enabled) + Intrusion Protection from ioncube24.com (unconfigured) v6.0.5, Copyright (c) 2002-2016, by ionCube Ltd.\n    with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies\n</code></pre> <p>Software Collection use different location than default to deploy software base on its version. And new location for PHP56 is:</p> <p>Equivalent paths between default and software collection version</p> file default version Softwarecollection version php.ini /etc/php.ini /etc/opt/rh/rh-php56/php.ini php cli /usr/bin/php /opt/rh/rh-php56/root/usr/bin/php php module configs /usr/lib64/php/modules /opt/rh/rh-php56/root/usr/lib64/php/modules apache module configs /etc/httpd/conf.modules.d/ /opt/rh/httpd24/root/etc/httpd/conf.modules.d/ pydio.conf /etc/httpd/conf.d/pydio.conf/pydio.conf /opt/rh/httpd24/root/etc/httpd/conf.d/pydio.conf/pydio.conf <p>If you upgrade from Pydio 6.4.2, and php.ini was changed, you should change such parameters in new php.ini as well: /etc/opt/rh/rh-php56/php.ini</p>"},{"location":"admin-guide/installation-guide/install-pydio-community/centos-rhel-systems/#update-database","title":"Update database","text":"<p>All sql script is store in /usr/share/doc/pydio/sql, you can execute following command to upgrade your exited DB</p> <pre><code>mysql -u username -p databasename &lt; /usr/share/doc/pydio/sql/pydio.mysql\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/index/","title":"Index","text":"<p>You can easily install Pydio on your server either by downloading and extracting directly an archive in ZIP or TAR.GZ format, or by using your favorite package manager on Linux systems. This part gives instruction about Pydio Enterprise Distribution.</p> <ul> <li>[ED] Install from archive</li> <li>[ED] Debian/Ubuntu Systems</li> <li>[ED] CentOS/RHEL 7 Systems</li> <li>[ED] CentOS/RHEL 6 Systems</li> <li>In-app Migration from Community to Enterprise</li> </ul> <p>If you are upgrading an already deployed Pydio installation, see Upgrading From Previous Version chapter.</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-install-from-archive/","title":"[ED] Install from archive","text":"<p>Download the latest stable version from Download Page either as ZIP or TAR.GZ format. Alternatively, you can use our Linux repositories to install Pydio using a package manager on Debian or CentOS Linux flavors.</p> <p>Using your favorite FTP client or SCP command, upload this package to your webserver, and extract its content to a web-accessible folder (e.g. /var/www/pydio).</p> <p>Make sure the data path is writeable by the web server. For example :</p> <p><code>chown -R www-data:www-data /var/www/pydio/data</code></p> <p>Assuming your webserver is configured to serve /var/www/pydio/data. You can now connect to your server and set up Pydio to suit your needs.</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/","title":"[ED] Debian/Ubuntu Systems","text":""},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#get-your-api-credentials","title":"Get your API Credentials","text":"<p>Our Enterprise Repositories are password-protected via API Key and API Secret. You can find them in your Pydio.com Account, under the \"My API Keys\" menu:</p> <p></p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#debian-9-stretch","title":"Debian 9 (stretch)","text":"<p>Configure the pydio repository</p> <pre><code># Pydio Community &amp; Enterprise repositories\necho \"deb https://download.pydio.com/pub/linux/debian/ stretch main\" &gt; /etc/apt/sources.list.d/pydio.list\necho \"deb https://API_KEY:API_SECRET@download.pydio.com/auth/linux/debian/ stretch main\" &gt;&gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\n</code></pre> <p>Now update all repositories, with https support if not already installed</p> <pre><code>sudo apt-get install apt-transport-https\nsudo apt-get update\n</code></pre> <p>And finally install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install pydio-enterprise\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#debian-8-jessie","title":"Debian 8 (jessie)","text":"<p>Configure the pydio repository</p> <pre><code># Pydio Community &amp; Enterprise repositories\necho \"deb https://download.pydio.com/pub/linux/debian/ jessie-backports main\" &gt; /etc/apt/sources.list.d/pydio.list\necho \"deb https://API_KEY:API_SECRET@download.pydio.com/auth/linux/debian/ jessie-backports main\" &gt;&gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\n</code></pre> <p>Now update all repositories, with https support if not already installed</p> <pre><code>sudo apt-get install apt-transport-https\nsudo apt-get update\n</code></pre> <p>And finally install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install pydio-enterprise\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#debian-7-wheezy","title":"Debian 7 (wheezy)","text":"<p>Ensure that wheezy-backports repositories are enabled in <code>/etc/apt/sources.list</code> :</p> <pre><code>deb http://httpredir.debian.org/debian wheezy-backports main\ndeb-src http://httpredir.debian.org/debian wheezy-backports main\n</code></pre> <p>Configure the pydio repository as well as its dependencies</p> <pre><code># DotDeb\necho \"deb http://packages.dotdeb.org wheezy-php56 all\" &gt; /etc/apt/sources.list.d/dotdeb.list\necho \"deb-src http://packages.dotdeb.org wheezy-php56 all\" &gt;&gt; /etc/apt/sources.list.d/dotdeb.list\nwget -qO - http://www.dotdeb.org/dotdeb.gpg | sudo apt-key add -\n\n# Pydio Community &amp; Enterprise repositories\necho \"deb https://download.pydio.com/pub/linux/debian/ wheezy-backports main\" &gt; /etc/apt/sources.list.d/pydio.list\necho \"deb https://API_KEY:API_SECRET@download.pydio.com/auth/linux/debian/ wheezy-backports main\" &gt;&gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\n</code></pre> <p>Now update all repositories, with https support if not already installed</p> <pre><code>sudo apt-get install apt-transport-https debian-keyring debian-archive-keyring\nsudo apt-get update\n</code></pre> <p>And finally install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install pydio-enterprise\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#ubuntu-1710-artful","title":"Ubuntu 17.10 (artful)","text":"<p>First, configure the pydio repositories</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ artful main\" &gt; /etc/apt/sources.list.d/pydio.list\necho \"deb https://API_KEY:API_SECRET@download.pydio.com/auth/linux/debian/ artful main\" &gt;&gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install pydio-enterprise\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#ubuntu-1704-zesty","title":"Ubuntu 17.04 (zesty)","text":"<p>First, configure the pydio repositories</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ zesty main\" &gt; /etc/apt/sources.list.d/pydio.list\necho \"deb https://API_KEY:API_SECRET@download.pydio.com/auth/linux/debian/ zesty main\" &gt;&gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install pydio-enterprise\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#ubuntu-1604-xenial","title":"Ubuntu 16.04 (xenial)","text":"<p>First, configure the pydio repositories</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ xenial main\" &gt; /etc/apt/sources.list.d/pydio.list\necho \"deb https://API_KEY:API_SECRET@download.pydio.com/auth/linux/debian/ xenial main\" &gt;&gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install pydio-enterprise\nsudo apt-get install php-xml\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#ubuntu-1404-trusty","title":"Ubuntu 14.04 (trusty)","text":"<p>Stop apache if it is running</p> <pre><code>sudo service apache2 stop\n</code></pre> <p>Install the main PPA for PHP</p> <pre><code>sudo apt-get install -yq software-properties-common\nsudo add-apt-repository ppa:ondrej/php\nsudo apt-get update\n</code></pre> <p>Configure the pydio repositories</p> <pre><code>echo \"deb https://download.pydio.com/pub/linux/debian/ trusty main\" &gt; /etc/apt/sources.list.d/pydio.list\necho \"deb https://API_KEY:API_SECRET@download.pydio.com/auth/linux/debian/ trusty main\" &gt;&gt; /etc/apt/sources.list.d/pydio.list\nwget -qO - https://download.pydio.com/pub/linux/debian/key/pubkey | sudo apt-key add -\nsudo apt-get update\n</code></pre> <p>Now, install pydio</p> <pre><code>sudo apt-get install pydio\nsudo apt-get install pydio-all\nsudo apt-get install pydio-enterprise\n</code></pre> <p>Enable the correct apache php module - Note that by default, php5 is installed on Ubuntu 14.04, so these instructions are enabling the php5 module version that Pydio is compatible with. If you have already installed php7 or are in the process of setting up php7, then you can invert the parameters :</p> <pre><code>a2enmod php5\na2dismod php7.0\n</code></pre> <p>Restart apache</p> <pre><code>sudo service apache2 restart\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#upgrading-from-previous-version","title":"UPGRADING FROM PREVIOUS VERSION","text":""},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#update-database","title":"Update Database","text":"<p>In version 8, the migration to the latest version of the database is done automatically when first opening Pydio.</p> <p>In case of a problem during the migration, you still have the possibility to run the database upgrade scripts yourself :</p> <p>Get the scripts and apply it to your DB as follow:</p> <pre><code>wget https://raw.githubusercontent.com/pydio/pydio-core/develop/dist/php/8.0.0.mysql\nmysql -u DB_USER -p DB_NAME &lt; 8.0.0.mysql\n</code></pre> <p>Select the correct db type if it's not mysql (<code>8.0.0.pgsql</code>, <code>8.0.0.sqlite</code>)</p> <p>Run each upgrade script, starting from your current version to the last. The list of files can be found here:</p> <pre><code>https://github.com/pydio/pydio-core/tree/develop/dist/php\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-debian-ubuntu-systems/#debian-7-manually-update-apache-configuration","title":"[Debian 7] Manually update Apache configuration","text":"<p>During upgrade, package manager may not have updated the apache configuration. Look inside /etc/apache2/conf.d/, you must see a symbolic link from pydio.conf to /etc/pydio/apache2.2.conf. Unlink and replace the symlink with /etc/pydio/apache2.conf.</p> <p>You can test that a shared link (https://yourserver/pydio/public/linkHash) is working.</p> <p>After that step, you should be able to access pydio through your browser: http://YOUR_IP_ADDRESS/pydio/</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/","title":"[ED] CentOS/RHEL 7 Systems","text":""},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#create-an-account-to-grab-your-api-credentials","title":"Create an account to grab your API Credentials","text":"<p>Our Enterprise Repositories are password-protected via API Key and API Secret. You can find them in your Pydio.com Account, under the \"My API Keys\" menu:</p> <p></p> <p>Warning: - This how-to is applied for Centos 7 and RHEL 7 x86_64 only. - This repo uses software collection, please make sure that your box is running to provide only Pydio service. It may break other services due to php version.</p> <p>Pydio 7 and its dependencies require PHP version &gt;= 5.6. However, centos 7/rhel 7 are still support PHP 5.4 as official version. That's why we have to use extra repos to pack with Pydio 7. For more information about software collection, please visit: rh-php56</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#install-software-collection-epel-and-pydio-repositories","title":"Install Software Collection, EPEL and Pydio repositories","text":"<p>EPEL</p> <pre><code>yum install epel-release scl-utils\n</code></pre> <p>CentOS 7 </p> <pre><code>yum install centos-release-scl\n</code></pre> <p>or RHEL 7</p> <pre><code>yum-config-manager --enable rhel-server-rhscl-7-rpms\n</code></pre> <p>Remi's RPM</p> <pre><code>rpm -Uvh https://www.softwarecollections.org/en/scls/remi/php56more/epel-7-x86_64/download/remi-php56more-epel-7-x86_64.noarch.rpm\n</code></pre> <p>Pydio</p> <pre><code>rpm -Uvh https://download.pydio.com/pub/linux/centos/7/pydio-release-1-1.el7.centos.noarch.rpm\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#installation","title":"Installation","text":"<p>At this point, your box contains all dependencies necessary to install Pydio. Hit the following commands to update.</p> <pre><code>yum clean all\nyum update\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#installing-pydio-core-first-time","title":"Installing Pydio Core (first time)","text":"<p>Pydio can be installed by: <code>yum install pydio-core</code></p> <p>pydio-core: contains essential packages with basic functionalities.</p> <p>you can additionally install some plugins by using command: <code>yum install pydio-plugin-pluginName</code></p> <p>Or <code>yum install pydio-all</code> to install all community packages of Pydio.</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#installing-pydio-enterprise","title":"Installing Pydio Enterprise","text":"<p>Enterprise version requires extra repo which is reserved only for subscribed clients.</p> <p>Add enterprise repo:</p> <pre><code>rpm -Uvh https://API_KEY:API_SECRET@download.pydio.com/auth/linux/centos/7/x86_64/pydio-enterprise-release-1-1.el7.centos.noarch.rpm\n</code></pre> <p>Note: If your system runs on SSL port, httpd24-mod_ssl module is required.</p> <p>Then edit /etc/yum.repos.d/pydio-enterprise.repo and replace API_KEY, API_SECRET by your credential. You can get API_KEY, API_SECRET in https://pydio.com &gt; login with your account &gt; User account &gt;&gt; MY LICENSES</p> <pre><code>[pydio-enterprise]\nname=Pydio official packages for enterprise version\nbaseurl=https://API_KEY:API_SECRET@download.pydio.com/auth/linux/centos/7/x86_64\nenabled=1\ngpgcheck=1\nprotect=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-PYDIO\n</code></pre> <p>Your box is ready for this command: <code>yum install pydio-enterprise</code> to install all enterprise packages</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#upgrading-from-pydio-642","title":"Upgrading from Pydio 6.4.2","text":"<p>Warning: If you've installed Pydio before, please backup your sytem or take a snapshoot before upgrade.</p> <p>Update the whole system</p> <pre><code>yum update -y\n</code></pre> <p>Upgrade pydio only</p> <pre><code>yum update pydio-core pydio-enterprise\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#post-installupgrade","title":"Post install/upgrade.","text":"<p>This step is required to reconfigure Pydio, apache and php. Because the system now contains multiple version of apache and php, we should do:</p> <ol> <li>Disable default apache and php5.4</li> <li>Enable new apache and php5.6</li> <li>Migrate configuration of php5.4, old apache to new version</li> </ol> <p>Disable default apache:</p> <pre><code>systemctl disable httpd\nsystemctl stop httpd\n</code></pre> <p>Enable new apache:</p> <pre><code>systemctl enable httpd24-httpd\nsystemctl start httpd24-httpd\n</code></pre> <p>Enable php56</p> <pre><code>source /opt/rh/rh-php56/enable\n</code></pre> <p>Enable httpd24-http</p> <pre><code>source /opt/rh/httpd24/enable\n</code></pre> <p>Now you can verify the PHP version by typing the command in terminal windows:</p> <pre><code>[root@localhost ~]# php -v\nPHP 5.6.5 (cli) (built: Aug 30 2016 13:52:26)\nCopyright (c) 1997-2014 The PHP Group\nZend Engine v2.6.0, Copyright (c) 1998-2014 Zend Technologies\n    with the ionCube PHP Loader (enabled) + Intrusion Protection from ioncube24.com (unconfigured) v6.0.5, Copyright (c) 2002-2016, by ionCube Ltd.\n    with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies\n</code></pre> <p>Software Collection use different location than default to deploy software base on its version. And new location for PHP56 is:</p> <p>Equivalent paths between default and software collection version</p> file default version Softwarecollection version php.ini /etc/php.ini /etc/opt/rh/rh-php56/php.ini php cli /usr/bin/php /opt/rh/rh-php56/root/usr/bin/php php module configs /usr/lib64/php/modules /opt/rh/rh-php56/root/usr/lib64/php/modules apache module configs /etc/httpd/conf.modules.d/ /opt/rh/httpd24/root/etc/httpd/conf.modules.d/ pydio.conf /etc/httpd/conf.d/pydio.conf /opt/rh/httpd24/root/etc/httpd/conf.d/pydio.conf <p>If you upgrade from Pydio 6.4.2, and php.ini was changed, you should change such parameters in new php.ini as well: /etc/opt/rh/rh-php56/php.ini</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#update-database","title":"Update database","text":"<p>All sql script is store in /usr/share/doc/pydio/sql, you can execute following commands to upgrade your exited DB. The script for updating DB can be downloaded:</p> <ul> <li>MySQL </li> <li>Postgre </li> <li>SQLite</li> </ul> <p>For example:</p> <pre><code>mysql -u username -p databasename &lt; path/7.0.0.mysql\n</code></pre> <p>Change the version number:</p> <pre><code>mysql&gt; UPDATE ajxp_version SET `db_build`=\"66\";\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#others-configurations","title":"Others configurations","text":""},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#phpini-parameters","title":"PHP.ini parameters","text":"<p>Following parameters should be reconfigured in /etc/opt/rh/rh-php56/php.ini (not /etc/php.ini)</p> <p>Example:</p> <pre><code>max_execution_time = 300\npost_max_size = 200M\nupload_max_filesize = 200M\noutput_buffering = Off\n</code></pre> <p>Then restart apache</p> <pre><code>systemctl restart httpd24-httpd\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-7-systems/#mariadb","title":"MariaDB","text":"<p>In this how-to, we take an example of using MySQL to store all configuration of Pydio.</p> <p>Install mariadb:</p> <pre><code>yum install mariadb mariadb-server\n</code></pre> <p>Start mariadb service at boot time</p> <pre><code>systemctl enable mariadb\nsystemctl start mariadb\n</code></pre> <p>Run secure installation</p> <pre><code>mysql_secure_installation\n</code></pre> <p>Enter mysql command line</p> <pre><code>mysql -u root -p\n</code></pre> <p>Execute following commands to create database for pydio</p> <pre><code>create database pydio;\ncreate user 'pydio'@'localhost' identified by 'password';\ngrant all privileges on pydio.* to 'pydio'@'localhost';\nflush privileges;\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/","title":"[ED] CentOS/RHEL 6 Systems","text":""},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#create-an-account-to-grab-your-api-credentials","title":"Create an account to grab your API Credentials","text":"<p>Our Enterprise Repositories are password-protected via API Key and API Secret. You can find them in your Pydio.com Account, under the \"My API Keys\" menu:</p> <p></p> <p>Warning: - This how-to is applied for Centos 7 and RHEL 7 x86_64 only. - This repo uses software collection, please make sure that your box is running to provide only Pydio service. It may break other services due to php version.</p> <p>Pydio 7 and its dependencies require PHP version &gt;= 5.6. However, centos 7/rhel 7 are still support PHP 5.4 as official version. That's why we have to use extra repos to pack with Pydio 7. For more information about software collection, please visit: rh-php56</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#install-software-collection-epel-and-pydio-repositories","title":"Install Software Collection, EPEL and Pydio repositories","text":"<p>EPEL</p> <pre><code>yum install epel-release scl-utils\n</code></pre> <p>CentOS 6 </p> <pre><code>yum install centos-release-scl centos-release-scl-rh\n</code></pre> <p>or RHEL 6</p> <pre><code>yum-config-manager --enable rhel-server-rhscl-6-rpms\n</code></pre> <p>Remi's RPM</p> <pre><code>rpm -Uvh https://www.softwarecollections.org/en/scls/remi/php56more/epel-6-x86_64/download/remi-php56more-epel-6-x86_64.noarch.rpm\n</code></pre> <p>Pydio</p> <pre><code>rpm -Uvh https://download.pydio.com/pub/linux/centos/6/pydio-release-1-1.el6.noarch.rpm\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#installation","title":"Installation","text":"<p>At this point, your box contains all dependencies necessary to install Pydio. Hit the following commands to update.</p> <pre><code>yum clean all\nyum update\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#installing-pydio-core-first-time","title":"Installing Pydio Core (first time)","text":"<p>Pydio can be installed by: <code>yum install pydio-core</code></p> <p>pydio-core: contains essential packages with basic functionalities.</p> <p>you can additionally install some plugins by using command: <code>yum install pydio-plugin-pluginName</code></p> <p>Or <code>yum install pydio-all</code> to install all community packages of Pydio.</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#installing-pydio-enterprise","title":"Installing Pydio Enterprise","text":"<p>Enterprise version requires extra repo which is reserved only for subscribed clients.</p> <p>Add enterprise repo:</p> <pre><code>rpm -Uvh https://API_KEY:API_SECRET@download.pydio.com/auth/linux/centos/6/x86_64/pydio-enterprise-release-1-1.el6.noarch.rpm\n</code></pre> <p>Note: If your system runs on SSL port, httpd24-mod_ssl module is required.</p> <p>Then edit /etc/yum.repos.d/pydio-enterprise.repo and replace API_KEY, API_SECRET by your credential. You can get API_KEY, API_SECRET in https://pydio.com &gt; login with your account &gt; User account &gt;&gt; MY LICENSES</p> <pre><code>[pydio-enterprise]\nname=Pydio official packages for enterprise version\nbaseurl=https://API_KEY:API_SECRET@download.pydio.com/auth/linux/centos/6/x86_64\nenabled=1\ngpgcheck=1\nprotect=1\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-PYDIO\n</code></pre> <p>Your box is ready for this command: <code>yum install pydio-enterprise</code> to install all enterprise packages</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#upgrading-from-pydio-642","title":"Upgrading from Pydio 6.4.2","text":"<p>Warning: If you've installed Pydio before, please backup your sytem or take a snapshoot before upgrade.</p> <p>Update the whole system</p> <pre><code>yum update -y\n</code></pre> <p>Upgrade pydio only</p> <pre><code>yum update pydio-core pydio-enterprise\n</code></pre> <p>Note: if you have issue with samba dependancies, try to execute following commands:     rpm -e --nodeps samba4-client     rpm -e --nodeps samba4-common</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#post-installupgrade","title":"Post install/upgrade.","text":"<p>This step is required to reconfigure Pydio, apache and php. Because the system now contains multiple version of apache and php, we should do:</p> <ol> <li>Disable default apache and php5.4</li> <li>Enable new apache and php5.6</li> <li>Migrate configuration of php5.4, old apache to new version</li> </ol> <p>Disable default apache:</p> <pre><code>service httpd stop\nchkconfig httpd off\n</code></pre> <p>Enable new apache:</p> <pre><code>chkconfig httpd24-httpd on\nservice httpd24-httpd start\n</code></pre> <p>Enable php56</p> <pre><code>source /opt/rh/rh-php56/enable\n</code></pre> <p>Enable httpd24-http</p> <pre><code>source /opt/rh/httpd24/enable\n</code></pre> <p>Now you can verify the PHP version by typing the command in terminal windows:</p> <pre><code>[root@localhost ~]# php -v\nPHP 5.6.5 (cli) (built: Aug 30 2016 13:52:26)\nCopyright (c) 1997-2014 The PHP Group\nZend Engine v2.6.0, Copyright (c) 1998-2014 Zend Technologies\n    with the ionCube PHP Loader (enabled) + Intrusion Protection from ioncube24.com (unconfigured) v6.0.5, Copyright (c) 2002-2016, by ionCube Ltd.\n    with Zend OPcache v7.0.4-dev, Copyright (c) 1999-2014, by Zend Technologies\n</code></pre> <p>Software Collection use different location than default to deploy software base on its version. And new location for PHP56 is:</p> <p>Equivalent paths between default and software collection version</p> file default version Softwarecollection version php.ini /etc/php.ini /etc/opt/rh/rh-php56/php.ini php cli /usr/bin/php /opt/rh/rh-php56/root/usr/bin/php php module configs /usr/lib64/php/modules /opt/rh/rh-php56/root/usr/lib64/php/modules apache module configs /etc/httpd/conf.modules.d/ /opt/rh/httpd24/root/etc/httpd/conf.modules.d/ pydio.conf /etc/httpd/conf.d/pydio.conf /opt/rh/httpd24/root/etc/httpd/conf.d/pydio.conf <p>If you upgrade from Pydio 6.4.2, and php.ini was changed, you should change such parameters in new php.ini as well: /etc/opt/rh/rh-php56/php.ini</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#update-database","title":"Update database","text":"<p>All sql script is store in /usr/share/doc/pydio/sql, you can execute following commands to upgrade your exited DB. The script for updating DB can be downloaded:</p> <ul> <li>MySQL </li> <li>Postgre </li> <li>SQLite</li> </ul> <p>For example:</p> <pre><code>mysql -u username -p databasename &lt; path/7.0.0.mysql\n</code></pre> <p>Change the version number:</p> <pre><code>mysql&gt; UPDATE ajxp_version SET `db_build`=\"66\";\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#others-configurations","title":"Others configurations","text":""},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#phpini-parameters","title":"PHP.ini parameters","text":"<p>Following parameters should be reconfigured in /etc/opt/rh/rh-php56/php.ini (not /etc/php.ini)</p> <p>Example:</p> <pre><code>max_execution_time = 300\npost_max_size = 200M\nupload_max_filesize = 200M\noutput_buffering = Off\n</code></pre> <p>Then restart apache</p> <pre><code>service httpd24-httpd restart\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/ed-centos-rhel-6-systems/#mariadb","title":"MariaDB","text":"<p>In this how-to, we take an example of using MySQL to store all configuration of Pydio.</p> <p>Install mariadb:</p> <pre><code>yum install mariadb mariadb-server\n</code></pre> <p>Start mariadb service at boot time</p> <pre><code>systemctl enable mariadb\nsystemctl start mariadb\n</code></pre> <p>Run secure installation</p> <pre><code>mysql_secure_installation\n</code></pre> <p>Enter mysql command line</p> <pre><code>mysql -u root -p\n</code></pre> <p>Execute following commands to create database for pydio</p> <pre><code>create database pydio;\ncreate user 'pydio'@'localhost' identified by 'password';\ngrant all privileges on pydio.* to 'pydio'@'localhost';\nflush privileges;\n</code></pre>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/in-app-migration-from-community-to-enterprise/","title":"In-app Migration from Community to Enterprise","text":"<p>Pydio in-app upgrade tool allows you to directly migrate from an existing Community Edition installation to Pydio Enterprise Distribution. The steps are described below.</p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/in-app-migration-from-community-to-enterprise/#prepare-for-migration","title":"Prepare for migration","text":"<p>There are some differences for running Pydio Enterprise Distribution (ED) compared to our core community package. Based on an End User License Agreement, some files of the ED are encrypted and require a license key to be used. </p> <ul> <li>IonCube Loaders: Install on your server the php IonCube Loaders provided by IonCube on their server and the PHP version. Their wizard provides you an easy way to install the loaders.</li> <li>License Key: Once installed, the ED will require a license name/license key pair that is available in your Pydio.com account once you have bought them to our sales services.</li> <li>API Keys: In order to connect to our protect packages repositories, you will need the API Keys provided in your pydio.com. These are NOT the same as the license name/license key pair.</li> </ul>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/in-app-migration-from-community-to-enterprise/#set-up-upgrade-channel","title":"Set up upgrade channel","text":"<p>Go to **Menu &gt; Logs &amp; Other data &gt; Upgrade ** :</p> <ul> <li>Change the update site to https://update.pydio.com/auth/</li> <li>Update the target channel to \"Install Enterprise Distribution\" : this will be for the migration only, after the operation make sure to switch back to \"Stable\" channel.</li> <li>In the Authenticated Update Site section, copy and paste the API Keys you took from your account. </li> </ul> <p></p> <p>Once you have saved the modification of the upgrade engine, click on \"CHECK NOW\". You should see a new package ready for installation: pydio-enterprise-migration-8.0.0.zip. If you have a connection error, like a '401 not authorized', make sure you correctly copied the API keys and try again.</p> <p></p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/in-app-migration-from-community-to-enterprise/#apply-upgrade","title":"Apply upgrade","text":"<p>You may now select the package, and apply upgrade.</p> <p></p> <p>If everything goes well, you should see a welcome screen in the upgrade panel:</p> <p></p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/in-app-migration-from-community-to-enterprise/#set-up-license-information","title":"Set up license information","text":"<p>If you now reload the page fully, you should see an error message warning about the invalid license. Don't panic, this is normal. </p> <p></p> <p>In the left column menu, go to the newly appeared \"Enterprise License\" section, and there enter your License Name / License String in the form, then save. If you have some weird displays, please manually clear the caches of the application by connecting to your server and running the following command in your pydio installation folder, then reload.</p> <pre><code>rm data/cache/plugins_*.*\nrm data/cache/i18n/*.*\n</code></pre> <p></p> <p>Once the license is detected as valid, the panel should show the license information (number of users, expiration date)</p> <p></p>"},{"location":"admin-guide/installation-guide/install-pydio-enterprise-distribution/in-app-migration-from-community-to-enterprise/#youre-done","title":"You're done!","text":"<p>Reloading the page, you should now have access to the new Enterprise Dashboard and the whole set of professional features provided by this distribution! </p> <p></p>"},{"location":"admin-guide/installation-guide/pydio-booster/index/","title":"Index","text":"<p>Pydio Booster is a unique tool developed to easily boost your installation performance, by overriding inherent limitation of the PHP language:  it is written in Go and runs as a standalone server application that will communicate with the core pydio layer.</p> <p>Main benefits are :</p> <ul> <li>WebSocket out of the box: constant polling of the servers by the various Pydio \"clients\" (web browsers, PydioSync applications) putting a load on the system just to get the \"last news\" (any new file added? any new action by current user?). To avoid that, Pydio Booster provides a rock-solid, cross-platform, easy-to-deploy websocket server: clients can keep an open connection to this service and get events in real-time, with zero-impact on the main server CPU.</li> <li>Overcome PHP upload limitations: when it comes to uploads, PHP is often a bottleneck in term of maximum file size or simply when it comes to writing files to underlying storage. Pydio Booster can take care of that, and just inform the php server when a new file has been added to storage! This is currently only working with a local (or mounted) file system, or with S3 object storages. More to come.</li> <li>No more need for this complex CRONtab entry (or windows scheduling task) to fully use Pydio Scheduler. Booster will handle the \"master\" trigger for you.</li> <li> <p>Booster can also take care of the download of the files, removing the burden on the php server.</p> </li> <li> <p>Install Pydio Booster Automatically</p> </li> <li>Install Pydio Booster Manually</li> </ul>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-automatically/","title":"Install Pydio Booster Automatically","text":""},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-automatically/#installing-binary","title":"Installing Binary","text":"<p>The Enterprise Distribution provides a dedicated in-app mechanism to download the last version of Pydio Booster for your OS, run it and monitor if it is working properly. Along with the default configuration, this tool should generally be sufficient to have Pydio Booster up and running easily. However, if your networking setup is involving proxies, internal / external URL's or multiple-nodes, you may need to customize the configuration. You can even fully customize the generated configuration file and start Pydio Booster manually.</p> <p>In the administrator panel, look for Pydio Booster in the left-hand menu, and scroll to the \"INSTALL / CHECK FOR UPDATE\" button. This dialog should first detect your server operating system. Please make sure it is correct, the 64bits / 32bits is not always accurate, as this valeur reflects your PHP architecture, not your real architecture. For example, if you a running a PHP5.X version on Windows, PHP will probably report 32bits whereas your server is 64bits. Select the latter value for Pydio Booster in that case.</p> <p></p> <p>The tool should detect the last available version: you can from there download it and run it.</p>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-automatically/#configure-and-start","title":"Configure and start","text":"<p>After install, you should already see some changes in the \"monitoring\" panel. By default, most important features (web socket, upload) are not checked, so you will have to quickly review the configuration panel and reload the Booster.</p> <p></p> <ul> <li>The most important field here is the \"Host\": it should be the same as your Pydio server domain. If pydio is available at https://yourdomain.tld/pydio , the Booster Host should be yourdomain.tld as well.</li> <li>If you are serving Pydio through https (which is recommended), you can check the \"SSL\" box and in that case you will have to point to the domain SSL key/certificates as configured in your virtual host.</li> <li>Check the \"WebSocket Server\" and \"Upload Server\" to enable the features.</li> <li>The default port for Pydio Booster is 8090. Make sure that it is open for TCP connection in your firewall (or select your own port value).</li> </ul> <p>If you make any changes, hit the SAVE button, and when you scroll back to top, you should see an alert telling you that you need to reload the tool.</p> <p></p> <p>Click on Reload Pydio Booster (or on the reload icon button in the top right), wait for a couple of seconds to see if all lights turn to green.</p>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-automatically/#monitoring-booster-status","title":"Monitoring Booster status","text":"<p>The administration panel tries to perform various connections to the Booster server to check if features are working correctly.</p> <p></p> <p>To make 100% sure everything is ok, the simplest is to use the \"Developer Tools\" of your preferred browser (best is Chrome for that), open the \"Network\" panel, and switch to a Pydio workspace. Hit the browser reload button, and check that you don't see any \"WebSocket Connection closed error\". Looking under Network &gt; WS you should be able to see that a connection is open, and that it receives \"frames\" when you do any action on the files.</p> <p></p> <p>If you enabled file upload, you should see in the Network &gt; XHR panel some POST request going to the alternative (8090 by default) port defined for Pydio Booster.</p>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-automatically/#troubleshooting","title":"Troubleshooting","text":"<p>For more advanced configurations and troubleshooting, make sure to read the dedicated articles in the Knowledge Base.</p>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-manually/","title":"Install Pydio Booster Manually","text":""},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-manually/#installing-binary","title":"Installing Binary","text":"<p>You can download our booster from DOWNLOAD PYDIO BOOSTER choosing the correct version for your architecture.</p>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-manually/#network-configuration","title":"Network Configuration","text":"<p>The diagram below shows how Pydio Booster will communicate with your server.</p> <p></p>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-manually/#configure-and-start","title":"Configure and start","text":"<p>Before being able to configure Pydio Booster you will need to generate a TOKENP and TOKENS pair.</p>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-manually/#initial-pydio-setup","title":"Initial Pydio setup","text":"<p>Go to Message Queuing plugin configuration Application Parameters &gt; Pydio Booster:  Here you can enable the socket for Booster and set the parameters.</p> <p></p> <p>Now scroll down to Administrative API key and press Generate API Key. The resulting file should be available in data/plugins/core.mq/apikey(it will be found in this form TOKENP:TOKENS). You will need the information from this file to replace the TOKENP and TOKENS in the following sample configuration files.</p> <p>Pydio Booster component was built on top of Caddy, leveraging NSQ, it implements websockets and an upload server. Here is a sample configuration files to make it work use them and change the values to the ones that you have, it's also useful for advanced configurations:</p> <p>pydioconf.sample:</p> <pre><code>{\n    \"scheduler\": {\n        \"host\": \"http:\\/\\/YOUR_HOSTNAME\",\n        \"tokenP\": \"TOKENP\",\n        \"tokenS\": \"TOKENS\",\n        \"minutes\": 2\n    },\n    \"nsq\": {\n        \"host\": \"0.0.0.0\",\n        \"port\": 4150\n    },\n    \"caddyFilePath\": \".\\/pydiocaddy\"\n}\n</code></pre> <p>pydiocaddy.sample:</p> <pre><code>http://127.0.0.1:8090 {\n    pydiows /ws     {\n        pre {\n            if {&gt;Cookie} has \"AjaXplorer\"\n            type request\n            url http://YOUR_HOSTNAME:YOUR_OPTIONAL_PORT?get_action=keystore_generate_auth_token&amp;device=websocket\n            cookie AjaXplorer\n            out token\n        }\n        pre {\n            type request\n            url http://YOUR_HOSTNAME:YOUR_OPTIONAL_PORT/api/pydio/ws_authenticate?key=TOKENP:TOKENS\n            query auth_hash\n            query auth_token\n            out user\n        }\n    }\n    header /io {\n        Access-Control-Allow-Origin http://YOUR_HOSTNAME:YOUR_OPTIONAL_PORT\n        Access-Control-Request-Headers *\n        Access-Control-Allow-Methods POST\n        Access-Control-Allow-Headers Range\n        Access-Control-Allow-Credentials true\n    }\n    pydioupload /io     {\n        pre {\n            type node\n            out node\n        }\n        pre {\n            if {query} has \"minisite_session\"\n            type request\n            url http://YOUR_HOSTNAME:YOUR_OPTIONAL_PORT?get_action=keystore_generate_auth_token&amp;device=upload\n            query minisite_session\n            cookie AjaXplorer_Shared\n            out token\n        }\n        pre {\n            if {query} not_has \"minisite_session\"\n            if {&gt;Cookie} has \"AjaXplorer=\"\n            type request\n            url http://YOUR_HOSTNAME:YOUR_OPTIONAL_PORT?get_action=keystore_generate_auth_token&amp;device=upload\n            cookie AjaXplorer\n            out token\n        }\n        pre {\n            type request\n            url http://YOUR_HOSTNAME:YOUR_OPTIONAL_PORT/api/{repo}/upload/put/{nodedir}?xhr_uploader=true\n            header X-File-Direct-Upload request-options\n            header X-Pydio-Admin-Auth TOKENP:TOKENS\n            header X-File-Name {nodename}\n            query *\n            out options\n        }\n        post {\n            type request\n            url http://YOUR_HOSTNAME:YOUR_OPTIONAL_PORT/api/{repo}/upload/put/{nodedir}?xhr_uploader=true\n            header X-File-Direct-Upload upload-finished\n            header X-Pydio-Admin-Auth TOKENP:TOKENS\n            header X-File-Name {nodename}\n            query auth_hash\n            query auth_token\n            out body\n        }\n    }\n    pydioadmin /admin\n    basicauth /admin TOKENP TOKENS\n}\n</code></pre> <p>To run Pydio Booster you simply need to run:</p> <pre><code>/path/to/pydiobooster -conf /path/to/pydioconf\n</code></pre> <p><code>For the path/to/pydiobooster, pydiobooster stands for the file that you downloaded above it should be named Pydio by default</code> Make sure to pass an absolute path to the conf.</p> <p>However especially if you want to use the upload feature we recommend you to run it changing the process' owner:</p> <pre><code>sudo -u www-data /path/to/pydiobooster -conf /path/to/pydioconf\n</code></pre>"},{"location":"admin-guide/installation-guide/pydio-booster/install-pydio-booster-manually/#troubleshooting","title":"Troubleshooting","text":"<p>You can check the websocket status in your web browser's developer tools reloading the page with the console open (Chrome). If you dont see a <code>switching back to polling</code> message it means that it's working.</p> <p>You should regularly check your logs.</p> <p>For more advanced configurations and troubleshooting, make sure to read the dedicated articles in the Knowledge Base.</p>"},{"location":"admin-guide/getting-started/index/","title":"Index","text":"<p>In this section, you will learn how to quickly start using Pydio after a clean installation.</p> <ul> <li>Setup a Workspace and Assign Rights</li> <li>Mobile Apps</li> <li>Enterprise License</li> <li>File Gateway</li> <li>Sharing Features</li> <li>Customizing User Interface</li> </ul>"},{"location":"admin-guide/getting-started/setup-a-workspace-and-assign-rights/","title":"Setup a Workspace and Assign Rights","text":"<p>In this section, you will quickly learn how to create workspaces and assign rights.</p> <p>What is a workspace?</p> <p>With Pydio, in order to manage your data, you can create workspaces.  - Technically speaking, each workspace is a separate \"datasource\" for storing files and folders. Typically, they point to a specific folder of the server where pydio si installed. - Conceptually speaking, you as an administrator will use workspaces to grant accesses to specific data selectively to any users of your platform.</p>"},{"location":"admin-guide/getting-started/setup-a-workspace-and-assign-rights/#create-a-workspace","title":"Create a workspace","text":"<p>Let's create a simple workspace that will store all files and folders in a directory on the Pydio server, let's say /var/data/files. This directory can (and actually should) be anywhere on the filesystem, outside of Pydio install directory, as long as the web server software has a write permission on it.</p> <p>Go to Workspaces &amp; Users &gt; Workspaces then click on the +WORKSPACE button:</p> <p>1 - Select a template or driver: - Choose \"From driver\" - Select \"File System (Standard)\" driver</p> <p></p> <p>2 - Set storage location</p> <ul> <li>Use the \"Path\" field to point to the desired local directory /var/data/files. </li> </ul> <p></p> <p>3 - Workspace options:</p> <ul> <li>Input the workspace name inside \"Label\" field</li> <li>Input the workspace description inside \"Description\" field</li> </ul> <p></p> <p>4 - Click on the CREATE button to save this workspace.</p> <p>You have now created your first workspace with Pydio dashboard.</p>"},{"location":"admin-guide/getting-started/setup-a-workspace-and-assign-rights/#create-a-user-and-assign-rights","title":"Create a user and assign rights","text":"<p>To create a user, go to Workspaces &amp; Users &gt; Users then click on the +USER button:</p> <p>Fill the primary information inside the popup.</p> <p></p> <p>Now you should see the detailed settings for the user. These fields are optionals, but feel free to fill them.</p> <p>Now go to \"Workspace Accesses\" tab and there you can allow your user to access your workspace the way you want:</p> <p></p>"},{"location":"admin-guide/getting-started/mobile-apps/","title":"Mobile Apps","text":"<p>Pydio is available for iOS and Android.</p> <p>The mobile applications allow you to browse and preview your files.</p> <p>Depending on your server's configuration you can also: - Synchronise files (Keep them offline) - Force users to have a pin code - Prevent users from saving the password - Use a Qrcode to log in easily</p> <p>Both application use aggressive caching techniques to minize network traffic. The Android app is especially careful with data usage and does not by default load thumbnails or allow transfers without wifi, everything is configurable.</p> <p>Here are the links to download each application:</p> <p>Android application</p> <p>iOS application</p> <p>Now, we need to connect the application to the Pydio server.</p> <p>To do that simply start the application and fill the requested fields:</p> <p></p> <p>If you see this page, congratulations, you are now connected!  </p>"},{"location":"admin-guide/getting-started/enterprise-license/","title":"Enterprise License","text":"<p>You will find the required information on your pydio.com user page MY ACCOUNT</p> <p></p> <p>On your Pydio server you can check the status and modify the credentials. This is useful to renew your license and check for updates.</p> <p></p> <p>In this section you can see and manage your license informations. Your Enterprise Distribution license is available in your Pydio.com account. Make sure to avoid adding white-space at the beginning or end of the license name / license key if you are copy/pasting the value from another page.</p> <p>Providing an administrator email will allow Pydio to send you a warning email if the number of users is soon reached or if the license is about to expire.</p>"},{"location":"admin-guide/getting-started/file-gateway/","title":"File Gateway","text":""},{"location":"admin-guide/getting-started/file-gateway/#what-is-file-gateway","title":"What is File Gateway ?","text":"<p>File Gateway is a unique service proposed by Pydio to help you secure your installation. When you share a public link with an external person, it will \"by design\" send to the outside world the base URL of your Pydio installation, like https://yourdomain.tld/pydio/public/{unique_hash}. </p> <p>To avoid disclosing this base URL (https://yourdomain.tld/pydio/), File Gateway is a hosted proxy that will transform the public link into https://filesend.cc/{another_unique_hash}. People accessing this link will never see your base URL.</p>"},{"location":"admin-guide/getting-started/file-gateway/#setup-file-gateway","title":"Setup File Gateway","text":"<p>As a hosted service, File Gateway is a paying feature. If you are interested, please contact our Sales service and once you have a valid subscription for this, you will need your API Key as featured in your Pydio.com account.</p> <p></p> <p>Open the Settings panel of your pydio and under go to All Plugins &gt; URL Shortening , look for the \"File Gateway\" link shortener plugin. Enable the plugin and put your API Key / API Secret in the configuration ( click on the pen located on the right of the plugin's line). Pick the domain and region on which you want your link to be hosted. We currently propose 2 different domains (filesend.cc, yoursha.re), and each of them can be hosted in either United States or Europe. Choose the region closest to your installation and your most common users. </p> <p></p>"},{"location":"admin-guide/getting-started/file-gateway/#checking-setup","title":"Checking Setup","text":"<p>Once it is activated, the usage is transparent for your users. As soon as you generate a public link, you should see that the links are now generated with this remote URL instead of your pydio URL.</p> <p></p>"},{"location":"admin-guide/getting-started/sharing-features/","title":"Sharing Features","text":"<p>With Pydio, it is possible to share your folders and files publicly, privately and from version 6.4, also remotely.</p>"},{"location":"admin-guide/getting-started/sharing-features/#administration","title":"Administration","text":""},{"location":"admin-guide/getting-started/sharing-features/#public-sharing","title":"Public sharing","text":""},{"location":"admin-guide/getting-started/sharing-features/#installation","title":"Installation","text":"<ul> <li> <p>To enable the ability for users to generate Public Links for their files, simply go to the \u2018Sharing features\u2019 screen in the Administration screens, and click on \u2018Enable public links for files.</p> </li> <li> <p>If you want it to work for folders as well - make sure that one of \u2018Minisites and Workspaces\u2019 or \u2018Minisites\u2019 is chosen.</p> </li> </ul>"},{"location":"admin-guide/getting-started/sharing-features/#advanced-configuration","title":"Advanced configuration","text":"<p>To do an advanced configuration you have to go to All Plugins &gt; Available Plugins &gt; Action Plugins &gt; Sharing Features and edit it by clicking on the pen that's located on the right of this line.</p> <p>The settings are pretty straighforward so it should be easy to obtain what you wish. You can for example change the number of downloads allowed from a link, give it an expiration time and such.</p>"},{"location":"admin-guide/getting-started/sharing-features/#private-sharing","title":"Private sharing","text":""},{"location":"admin-guide/getting-started/sharing-features/#installation_1","title":"Installation","text":"<ul> <li>This functionality is enabled by default.</li> <li>If you want to enable / disable the functionality for folders - make sure that one of \u2018Minisites and Workspaces\u2019 or \u2018Workspaces\u2019 is / is not chosen.</li> </ul>"},{"location":"admin-guide/getting-started/sharing-features/#remote-sharing-pydio-cloud","title":"Remote sharing (Pydio Cloud)","text":"<p>Pydio Cloud is a feature allowing your users to share files or folder directly with other instances of Pydio, and actually other instances of file sharing platforms supporting the Open Cloud API. Major open source EFSS providers are compatible with this API. Use the Pydio Cloud panel to enable this feature. </p> <p></p> <p>Pydio provides an advanced feature allowing you to preset a list of \"Trusted Servers\" that will expose their users directories to your Pydio instance. Currently this is only working between Pydio instances (not part of the OCS Api). To add a trusted server, ask the server admin to create a technical account for you, and use the credentials provided in the configuration.</p>"},{"location":"admin-guide/getting-started/sharing-features/#installation_2","title":"Installation","text":"<ul> <li>To enable the ability for users to share their files privately with one or more users on a separate system, simply go to the \u2018Pydio cloud\u2019 screen in the Administration screens, and click on \u2018Enable Federated Sharing\u2019.</li> </ul>"},{"location":"admin-guide/getting-started/sharing-features/#end-user","title":"End-User","text":"<p>The Share Dialog Box is accessible by clicking on the Share button in the Information bar on the right hand side, or from the right click menu, after having selected a file or folder</p>"},{"location":"admin-guide/getting-started/sharing-features/#public-sharing_1","title":"Public sharing","text":"<p>This functionality is useful if you want to share files or folders from your Pydio to multiple users that don\u2019t have an account in your Pydio network. When you activate it, a public url is generated and you can then copy and paste it to share it with anybody with an Internet access. They will be given access to a mini-version of the Pydio interface where they can view the file or folder you wanted them to see.</p> <p>But if you don\u2019t feel too good about people having free access to your stuff, you can always set permissions so that they cannot Download (nor Upload for folders). You can also set a password that people will need to enter, limit the number of days this link will be accessible for, or set a maximum number of downloads allowed for this particular link.</p> <p>Still not feeling reassured about that, why not try privately sharing with known Users.</p>"},{"location":"admin-guide/getting-started/sharing-features/#users","title":"Users","text":"<p>This functionality is great if you want to share files or folders to users that have an account within your Pydio network (Local users)</p> <p>Simply go to the Users section of the Share Dialog Box, and :</p> <ul> <li>For local users, start entering the username of the person you want to share your stuff with.</li> </ul> <p>Once the file has been shared, or the invitation has been accepted, you will be able modify the permissions assigned to the user (read/write).</p>"},{"location":"admin-guide/getting-started/sharing-features/#advanced","title":"Advanced","text":"<p>For people who know their way round the sharing world, a few advanced perks have been added such as :</p> <ul> <li> <p>Description - You can write a descritpion if you want to.</p> </li> <li> <p>Notification - If enabled, this will trigger Alerts whenever the content has been accessed or modified.</p> </li> <li> <p>Share Visibility - Enable users wioth whom you share the workspace to view and edit the sharing options you have set up (by default it's private).</p> </li> </ul>"},{"location":"admin-guide/getting-started/sharing-features/#items-shared-with-me","title":"Items shared with me","text":"<p>If you can share files and folders with others, people can also share files or folders with you (tadaaam !) If you\u2019re wondering where to find those items, just look at the left bar (directly visible on  the home page ) under the section Shared with me it works like a list you can expand it.</p>"},{"location":"admin-guide/getting-started/sharing-features/#shared-files","title":"Shared Files","text":"<p>If files are shared with you, you will see a Workspace named SHARED FILES, where you will find all files shared by all users, local or remote.</p> <p>The number of files that have not been seen yet will be shown as a tag.</p> <p>Approval is required for and only for files that have shared with you remotely. You will see a list of pending invitations at the top and you can either Approve or Reject each from the top bar or the information bar on the right hand side.</p> <p>If you start having a lot of content shared with you, you can filter it using the search box or the different filter tags on the left hand side. </p>"},{"location":"admin-guide/getting-started/sharing-features/#shared-folders","title":"Shared Folders","text":"<p>If you have folders shared with you, you will see multiple Workspaces listed under SHARED FILES. Folders that have never been accessed will be tagged NEW.</p> <p>Only \u2018remotely shared items\u2019 are concerned by the following functionality :</p> <p>You need to approve folders that have been shared with you by a remote user. Upon access, a warning will be issued asking you to decide whether you want to continue accessing it, or never hear from it again.</p>"},{"location":"admin-guide/getting-started/customizing-user-interface/","title":"Customizing User Interface","text":"<p>As part of the Enterprise Distribution, Pydio Branding Tool gives you an extremely simple way of pushing your brand identity to your collaborators,  by customizing interface colors and logos.</p>"},{"location":"admin-guide/getting-started/customizing-user-interface/#interface-logos-backgrounds","title":"Interface Logos &amp; Backgrounds","text":"<p>Use the Admin Dashboard &gt; User Features &gt; Appearance panel to update your own brand images.</p> <p>For background, make sure to use high resolution images, but save them as JPG to avoid loading huge images. Stick to a size inferior to 2MB, which should be sufficient for definition.</p>"},{"location":"admin-guide/getting-started/customizing-user-interface/#enable-the-branding-tool","title":"Enable the branding tool:","text":"<p>First of all, you need to enable the branding tool. To do so, please go to the administration dashboard, then to Users Features &gt; Appearance.</p> <p>In the Main Options tab, make sure it's set like that: </p> <p>Make sure to save changes, go to any workspace on your Pydio server, then refresh the page.</p> <p>You should see the branding tool showing up:</p> <p></p>"},{"location":"admin-guide/getting-started/customizing-user-interface/#change-interfaces-colors","title":"Change interface's colors:","text":"<p>This tool allows you to change every colors on the interface. </p> <p>The color palette is organized as follow : </p> <ul> <li>Primary Color : this is the main color of the header part. Currently the typo color is always expected to be white, so make sure to stick to a \"dark\" color. This color will be declined into many variants for other zones in the UI.</li> <li>Accent Color : used to draw attention of your users on some specific actions, this color should be flashy. Text is white as well.</li> <li> <p>Selection Color: used to identify the currently selected files or folders. When changing, if it is not updated directly, try to simply click on a different file to see it refreshed.</p> </li> <li> <p>Sharing Features : sharing-related features (like sharing dialog, share icon, etc) are using this color as their main tint.</p> </li> <li>Avatars: Users avatars, e.g. in address book or share lists, are using this color.  </li> </ul> <p>Try to change the colors to see how it affects the various parts of the UI. The color picker gives you a quick access to the Google Material main palette. We recommend sticking to this palette if you can, but of course, nothing is mandatory!</p> <p>Here are a couple of samples generated with the branding tool : </p> <p>Google Colors </p> <p>Healthcare Green </p> <p>Black &amp; White </p>"},{"location":"admin-guide/getting-started/customizing-user-interface/#custom-css","title":"Custom CSS","text":"<p>If our tool is not sufficient for your needs, you can use the \"Custom CSS\" tab to add your custom CSS Rules directly to the page. </p> <p>This requires a technical knowledge of CSS Style Sheets.</p>"},{"location":"admin-guide/getting-started/customizing-user-interface/#add-buttons-to-interface","title":"Add buttons to interface:","text":"<p>Pydio Branding Tool also allows you to add one or many button to the interface. This can be typically handy if you want to position a \"Back To Home\" button somewhere that  would point to a specific page of your website or intranet. Or to trigger a custom javascript or network call for e.g. disconnecting from a custom authentication backend.</p> <p></p> <p>Here are the settings for a button:</p> <ul> <li>Button Label</li> <li>Button Location (the part where you want your button to be displayed). The list will display some specific toolbars, plus any toolbars declared in the application.</li> <li>Main Toolbar: toolbar heading the files list</li> <li>New... button menu : menu opened by clicking on the \"New\" button</li> <li>Display Options Bar : right-hand icons used for display options</li> <li>Left Panel Widget: Top left user cartouche, toolbar where the \"address book\" and \"alerts\" are displayed</li> <li>Left Panel User Menu: Top left user cartouche, menu opens when clicking on the vertical dots.</li> <li>Button Icon: icons are listed from the ones available as web fonts in the page, from both the Font Awesome and Material Design Icons library. Refer to these libraries.</li> <li>Button Behaviour: choose between</li> <li>Button Link (paste the url of your webpage)</li> <li>Link target (in the current page or in a new tab)</li> <li>Write your own javascript code been called by clicking on the button</li> </ul> <p>For example, the button below is using the Material 'rocket' icon, with label \"Pydio.com Website\", located in the \"Left Panel Widget\" toolbar.</p> <p></p>"},{"location":"admin-guide/getting-started/customizing-user-interface/#save-settings","title":"Save settings:","text":"<p>Once you are ready, click on the \"Save\" button then \"Close\". It will change the settings to hide the branding tool, and use the branding data you have just configured. If you want   to disable this branding and see the original colors, just go to the User Features &gt; Appearance and toggle the settings here.</p>"},{"location":"admin-guide/getting-started/importing-users/index/","title":"Index","text":"<p>This section will describe ways to connect Pydio to your existing users directories.</p> <ul> <li>Import users from CSV (Enterprise Distribution)</li> <li>Setup authentication driver</li> <li>Binding to an LDAP/AD server</li> <li>Enabling SSO with a php-based CMS (Dupral, Joomla!, Wordpress, your own)</li> </ul>"},{"location":"admin-guide/getting-started/importing-users/import-users-from-csv-enterprise-distribution/","title":"Import users from CSV (Enterprise Distribution)","text":"<p>This is a specific Enterprise Distribution feature: starting with Pydio 8, you can import users massively using a Comma Separated file.</p>"},{"location":"admin-guide/getting-started/importing-users/import-users-from-csv-enterprise-distribution/#prepare-the-csv","title":"Prepare the CSV","text":"<p>Using a text editor or a spreadsheet editor, prepare the data that you will import with at least the following columns: </p> <ul> <li>login user identifier used to login</li> <li>password user password</li> </ul> <p>You can also add other columns containing the following data : </p> <ul> <li>name The display name showed to other users</li> <li>email an email address</li> <li>role a pydio role to be applied at import when creating the user. If it does not already exists in Pydio, it will be created.</li> </ul> <p>You don't have to name these columns, the importer provides a step to map the columns to the expected data. That said, you can use a line as header, imported lets you  ignore the first line. Below is a sample file prepared for import.</p> <p></p> <p>Make sure to set up the correct \"delimiter\" and \"separator\" when exporting to CSV. Default values are generally respectively \"quotes\" and \"semi-column.\"</p>"},{"location":"admin-guide/getting-started/importing-users/import-users-from-csv-enterprise-distribution/#load-file-in-importer","title":"Load file in Importer","text":"<p>In your Admin Dashboard &gt; People section, use the third button in the header to open the CSV importer</p> <p></p> <p>Drop the CSV file you have prepared or open the picker to select it from your computer. It will be uploaded and the first lines will be displayed to setup the mapping. There, you can see each columns, and choose the selector in each column header to tell what data it is containing. If you have extra data, you can select \"Ignore\" as well.</p> <p></p> <p>If you have a line of headers in your CSV, you can ignore it by checking the box at the bottom of the screen.</p>"},{"location":"admin-guide/getting-started/importing-users/import-users-from-csv-enterprise-distribution/#start-importing","title":"Start Importing","text":"<p>Once you are ready, start importing and the task will run in the background.</p> <p></p> <p>You should see the various users creation in the bottom right notification bar.</p> <p></p>"},{"location":"admin-guide/getting-started/importing-users/import-users-from-csv-enterprise-distribution/#refresh-the-list","title":"Refresh the list","text":"<p>The list is not automatically refreshed. Hit the refresh icon in the top right of the list to see the users and start assign rights to them!</p>"},{"location":"admin-guide/getting-started/importing-users/setup-authentication-driver/","title":"Setup authentication driver","text":""},{"location":"admin-guide/getting-started/importing-users/setup-authentication-driver/#data-concerned-available-plugins","title":"Data concerned &amp; available plugins","text":"<p>As explained in the previous chapter, there are various types of data managed in Pydio: configurations vs. \u201cbusiness\u201d data ( = your files ). All the configurations data are managed by the configuration backend, but the users directory is handled by another type of plugins, Authentication ones. Basically, these plugins are just able to tell whether a user exists or not, if he can be logged in with a given password, and if he is part of group.</p> <p>Although configuration backends are few (basically serialized files or DB), authentication backend have more implementations:</p> <ul> <li>auth.serial, auth.sql: \u201cInternal\u201c implementations, that keep all data inside Pydio, and that are very close to their \u201cconf\u201d counter part.</li> <li>auth.ldap, auth.cas: SSO like implementations that can query an LDAP/AD directory or a CAS server.</li> <li>auth.ftp, auth.smb: specific implementations that are linked to a workspace for performing authentication \u201cdynamically\u201d.</li> <li>auth.remote, auth.cmsms, auth.phpbb: bridges allowing to use an external PHP CMS as a user directory. Currently there are WordPress, Joomla and Drupal counterparts, as well as detailed how-to to log to any existing system.</li> </ul> <p>The following articles will go through the most used implementations. Use the Application Parameters &gt; Authentication to switch the backend.</p>"},{"location":"admin-guide/getting-started/importing-users/setup-authentication-driver/#one-ore-two-instances-master-or-slave","title":"One ore two instances? Master or Slave?","text":"<p>If you open the Authentication panel, below the first set of generic parameters, you will see two sections: Main Instance &amp; Secondary Instance (optional).</p> <p></p> <p>For Master Driver :</p> <p></p> <p>By default, depending on the value you chose at install, you will see the \u201cMain Instance\u201d set with a value (either Serialized or DB) and the associated options, and the secondary instance is not used.</p> <p>This secondary instance can be used in two different situations:</p> <ul> <li>You want to \u201cmerge\u201d two different data sources for authenticating the users. For example, your company already manages two directories, one for internal users and the other for external collaborators, and you want to keep them separate. You also want to let the user choose at login time to which backend she will log. You use the \u201cUser Choice\u201d Mode and define a secondary auth plugin instance for that.</li> <li>Your primary directory is readonly. It is for example very frequently the case if you are connecting to a central LDAP directory. In that case, if you define your Main Instance to point to this directory, users of Pydio will not be able to create new temporary users to share folders! That\u2019s why you will configure a secondary instance using one of the Pydio \u201cinternal\u201d implementation (serialized files or DB), which will maintain a secondary directory for external users, without having to pollute your central directory. Using the \u201cMaster / Slave\u201d mode, will put this second instance as a slave of the first one, allowing also better performances and caching the original users inside the secondary store as well.</li> </ul> <p>If you're going to use a remote authentification you should in most cases put the Pydio database in the secondary driver so that if you have an issue with you're remote authentifcation you can log with your Pydio database and administrate.</p> <p>Note: for those familiar with the previous versions of Pydio, this is nothing more than the encapsulation of the auth.multi plugin.</p>"},{"location":"admin-guide/getting-started/importing-users/setup-authentication-driver/#auth-plugins-common-options","title":"Auth plugins common options","text":"<p>As you can see when you select the various possible AUTH plugins, some options are commons to all of them. Some parameters worth to be noticed:</p> <p>Transmit Clear Pass: This is deprecated, leave this value to Yes.</p> <p>Store Password in Session: this option can be necessary in the case of a \u201cdynamic\u201d authentication to a remote system, for example for mounting a folder using the current user credentials.</p> <p>Auto Create User: Generally, this should be set to true if you are binding Pydio to an external users directory. This is highlighting the separation between the proper authentication data and the configurations data: when a user will log in for the very first time, if he is correctly authenticated by the \u201cAuth\u201d plugin, the whole Pydio counterpart storing his/her preferences, rights, etc, does not exists by default. If this option is set to Yes, and Pydio user object will be created, with the various defaults values applied (default profile and role, default rights from the workspaces, etc\u2026).</p>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/","title":"Binding to an LDAP/AD server","text":"<p>Binding to an existing LDAP  directory or Microsoft Active Directory (AD)  allows you to reuse the user accounts that you already have in the directory, without having to create new accounts in Pydio. It is therefore  one of the most frequently wanted features  when deploying Pydio on top of an existing infrastructure., even more so if you have e.g. a Windows environment where access to files is managed with AD accounts, and you want to use those file servers as backend storage.</p> <p>However, correctly setting up the correct parameters can be tricky, as every LDAP deployment is different.</p> <p>Also note that this is not a Single Sign-on  configuration : your users will still be required  to log in to Pydio, using their LDAP/AD username and password. The Pydio \u201cAdmin\u201d account will also still work.</p>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/#requirements","title":"Requirements","text":"<ul> <li>you need to have the PHP LDAP module installed, eg  on Ubuntu/Debian : <code>apt-get install php-ldap</code>.</li> <li>you can also add phpldapadmin : <code>apt install phpldapadmin</code> it will help you administrate your ldap easily.</li> <li>in Pydio you need to  set up a multiple authentication configuration, using the \u201cSecondary Instance\u201d parameter, to allow your existing users to create new ones outside of the directory (e.g. to share files with 3rd parties)</li> <li>in the Authentication Parameters (see previous chapter), you probably want \u201cAuto Create User\u201d set to YES. Pydio will then create an Pydio user object for each user that logs in with LDAP/AD username and password. You can further use those user object for user rights management in Pydio.</li> <li>in the Authentication Parameters, set  \u201cTransmit Clear Pass\u201d to YES, at least until your LDAP/AD authentication is set up and working.</li> </ul>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/#ldap-connexion-information","title":"LDAP connexion information","text":"<p>Open the Application Parameters &gt; Authentication, and go to the \u201cMaster Driver\u201d section. Here you will have to switch to the LDAP driver, and set up the correct values to connect to the server.</p> <p>This first set of the parameters define how the connexion is done, which username to use as directory administrator to bind, and filters to perform the search query that searches and authenticates  your users.</p> <p></p>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/#description-of-the-parameters","title":"Description of the parameters :","text":"<ul> <li> <p>Server Connection</p> <ul> <li>URL : Server hosting the LDAP directory, or a MS AD Domain Controller, \u2026 : IP address or FQDN  e.g  192.168.0.14,  dc1.mydomain.tld, localhost, \u2026</li> <li>Protocol : You can choose protocols such as SSL(ldaps) or StartTLS.</li> <li>Port :  the port your LDAP/AD listens on, usually  389</li> <li>LDAP bind username and password. This is optional, and depends on your server configuration. Either you let it empty, and the connexion for searching will be anonymous, or if you set username and password, search will be done via binding. The user name must be a complete DN, like <code>cn=admin,dc=domain,dc=ext</code>. For authentication agains AD, you usually must provide the username and password of an account in the Domain Admins group. (Best practice is to create a dedicated account, and not use the default Administrator account)</li> </ul> </li> <li> <p>Users Schema</p> <ul> <li>People DN  :  The part of your LDAP/AD where Pydio should look for the user accounts. Usually this will be a specific Organizational Unit (OU); typical values  will be for example <code>ou=People,dc=pydio,dc=org</code> or <code>ou=Users,dc=mydomain,dc=tld</code>. this is a repeatable field, i.e you can define it multiple times to allow you to perform the search on multiple branches.</li> <li>LDAP Filter : a default filter applied to all search queries, to restrict the search to e.g a certain objectClass, or for example a certain group of users, if your schema is using the membersOf overlay. For AD, try <code>objectClass=user</code> or <code>objectClass=person</code></li> <li>User Attribute : the LDAP/AD attribute that holds the username with which users will log on.  It will be used in an ldap query together with the LDAP Filter Attribute. E.g. if it is set to \u201cuid\u201d, the final query will search something like <code>(&amp;(objectClass=person)(uid=userlogin))</code>. For AD, <code>sAMAccountname</code> is a good value.</li> </ul> </li> </ul> <p>These are all you need for LDAP/AD user authentication. At the bottom of the form, you can see a \u201cTest connection\u201d button : once you have filled the fields mentioned above, you can check if your search is working by entering an existing user login here, and testing the search with the button. You should definitely have it working before saving your configuration and before you continue with additional LDAP/AD configuration.</p>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/#mapping-ldap-attributes","title":"Mapping LDAP attributes","text":"<p>Once you\u2019ve setup a basic LDAP/AD connection, your LDAP/AD users can log on to Pydio, and an Pydio user object will be created for them when they log on. Essentially, you\u2019ve mapped Pydio logins to LDAP/AD accounts. Next, you will probably want to retrieve additional information out of the LDAP/AD, such as the user\u2019s email address, user\u2019s display name or full name, etc. This is done by mapping additional LDAP/AD attributes to local parameters of Pydio.</p> <p>These mappings are done login time, and the user data is updated only if a change is detected, to impact low in term of performances.</p> <p>Mapping of attributes works with a set of parameters  that work in triplet : {ldap attribute, mapping type, plugin parameter}. This set is repeatable, so that you can retrieve and map several distinct LDAP/AD attributes.</p> <ul> <li>LDAP attribute : the attribute to retrieve when searching for user, and to get the value from.</li> <li>Mapping type can take 4 values :<ul> <li>Plugin parameter : will use the value provided in the following \u201cplugin parameter\u201d field to map the retrieve value to any arbitrary plugin parameter of the current user (see further).</li> <li>Role id : will apply to the current user a role with the value id. Create the role if it does not exists.</li> <li>Group Path : apply the group path to the current user, e.g. /group1/ will create a user being automatically part of group1.</li> <li>Profile : set the specific profile to the current user (to be used with caution).</li> </ul> </li> <li>Plugin parameter : if the mapping type is set to plugin parameter, the driver will expect this field to be<ul> <li>either a simple text value (like MY_PARAMETER), in which case it will add a parameter with this name linked to the \u201cauth.ldap\u201d plugin (see the Roles filtering section),</li> <li>in the form of PLUGIN_ID/MY_PARAMETER, in which case it will link this parameter to the given plugin id.</li> </ul> </li> </ul> <p>An example will probably make this more clear.</p>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/#example","title":"example","text":"<p>An example of straightforward attribute mapping :</p> <p>In the <code>core.conf/manifest.xml</code> you can find the various parameters provided by the <code>core.conf plugin</code>, that actually define the user account data. For instance, you\u2019ll find that Pydio has a <code>core.conf/email</code> parameter and a <code>core.conf/USER_DISPLAY_NAME</code>, respectively referring to the user \u201cMail\u201d field and Display name in the GUI.</p> <p>So, you can map the LDAP \u201cemail\u201d attribute or AD \u201cMail\u201d attribute to the Pydio \u201ccore.conf/email\u201d attribute of the authenticated User. Likewise, you can map any suitable LDAP or AD attribute to the Pydio <code>core.conf/USER_DISPLAY_NAME</code> parameter to get human-friendly names in the GUI.</p>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/#using-ldapad-groups","title":"Using LDAP/AD Groups","text":"<p>When you\u2019re using an LDAP directory that supports the \u00ab memberOf \u00bb attribute (i.e. you have Microsoft Active Directory, or an LDAP server with the \u00ab memberOf \u00bb overlay set up), you can use the attribute mapping mechanism to integrate your Active Directory groups in Pydio. This is explained in more detail in the How-To section.</p> <p>You will also need a good understanding of Pydio\u2019s Groups and Roles to make good use of this feature.</p>"},{"location":"admin-guide/getting-started/importing-users/binding-to-an-ldap-ad-server/#setting-up-a-secondary-auth-driver","title":"Setting up a secondary auth driver","text":"<p>Most generally, LDAP accesses are readonly, thus preventing Pydio users to create new users for sharing. For this reason, you have to configure a secondary instance to keep a parallel user base that is fully manageable by Pydio. Choose either SQL or Serial files, depending on the Configuration storage you already use (SQL or Serial), and depending on the user load you expect. Set the \u201cMode\u201d in \u201cMaster / Slave\u201d, as LDAP will be the master reference. See previous page (Authentication) for more details.</p>"},{"location":"admin-guide/getting-started/importing-users/enabling-sso-with-a-php-based-cms-dupral-joomla-wordpress-your-own/","title":"Enabling SSO with a php-based CMS (Dupral, Joomla!, Wordpress, your own)","text":"<p>Pydio provides a set of \u201cCMS Bridges\u201d to allow you to use your existing CMS as a users directory. The principle of the bridge is that Pydio becomes a \u201cSlave\u201d of the CMS, in that when a user logs in the CMS, she is automatically logged in Pydio also. If not logged and accessing to Pydio, she is automatically redirected to the CMS login page.</p> <p>Disclaimer : If you installed Pydio-Enterprise with the linux repository (apt, yum etc...), you must install the \"pydio-plugin-auth.remote\" package and don't forget to refresh your pydio after that.</p> <p>Then, you can go in \"All plugins\" &gt; Available Plugins &gt; Authentification Backends and activate the \"Remote authentification\".</p> <p>Supported CMS are currently PHP-based : WordPress, Joomla! and Drupal. There is also a \u201cblank\u201d implementation that should allow you to plug to your own CMS. For the first three, you will have to install a dedicated \u201cplugin\u201d or \u201cmodule\u201d (depending on the CMS) to make the connexion effective. See the dedicated page Extensions &gt; Bridges for more info about versions supported and download links.</p>"},{"location":"admin-guide/getting-started/importing-users/enabling-sso-with-a-php-based-cms-dupral-joomla-wordpress-your-own/#install-the-dedicated-plugin-in-the-cms","title":"Install the dedicated plugin in the CMS","text":"<p>Download the Pydio-CMS-Bridges package from the dedicated page, and unzip it on your local computer. Locate the correct plugin from the content of the folder</p> <ul> <li>WordPress: all WordPress version</li> <li>Joomla!<ul> <li>1.5: Joomla! 1.5 only</li> <li>1.6: Joomla! 1.6 to 2.5 included</li> <li>3.0: Joomla! 3.0 and upper</li> </ul> </li> <li>Drupal<ul> <li>6.X: Drupal 6.X</li> <li>7.X: Drupal 7.X</li> </ul> </li> </ul> <p>Deploy the plugin to your CMS, using their specific procedure. Activate and configure the plugin using the following parameters:</p> <ul> <li>Pydio Installation Path: full path of Pydio on the server. Must be absolute, e.g. /var/www/pydio, or /home/mylogin/public_html/pydio, etc</li> <li>Secret Key: this is a secret key that you set up on both sides (pydio and the CMS) to make sure they recognize each other.</li> <li>Create Users: generally set to yes, this means that at login, if the user is not already in the Pydio base, it will be created automatically. See also the Readmes &amp; How-Tos contained in the Bridges package to get more specific instruction for your CMS of choice.</li> </ul>"},{"location":"admin-guide/getting-started/importing-users/enabling-sso-with-a-php-based-cms-dupral-joomla-wordpress-your-own/#switch-authentication-to-remote","title":"Switch Authentication to Remote","text":"<p>In the Settings panel, under Application Parameters &gt; Authentication, switch the Master Driver to the \u201cauth.remote\u201d driver. Here you will have to define a couple of URLs and parameters to make the plugin function properly.</p> <p>The Authentication must work in two ways : when successfully logging in from the CMS, we will hook into Pydio and force the user to be logged in as well. But when using other clients like the mobile devices clients, we will need to perform the authentication directly in Pydio, and interrogate the remote CMS directory by some kind of API.</p> <ul> <li>Main URL:  must be either an complete URL (like http://localhost/drupal/, or http://192.168.0.23/, etc), or a URI starting from the root of the webserver (like \u201c/drupal/\u201d or \u201c/\u201d, in that case the host will be automatically detected). It is pointing to the root of the CMS installation.</li> <li>Login URL: a page of the CMS in which a user login form is displayed. It will be used for both redirecting a non-logged user trying to access Pydio, and for programmatically interrogating the CMS for authentication. Thus it MUST contain a login form. Generally, the home page would be ok, thus the value \u201c/\u201d</li> <li>Auth Form ID: this is linked to the previous field : the HTML ID of the login form displayed inside the login page. When logging programmatically, we fake the CMS by automatically posting this form with the user\u2019s credential. Default values are provided by default, but you must make sure this is correct. Not necessary for WordPress.</li> <li>Exit Action: whether to directly logout or simply go back to main page with the \u201cBack\u201d Pydio action. Not available in Joomla!, the logout is not a simple operation (two-steps post).</li> <li>Secret Key: the same key as defined in the the corresponding module. Remote Authentication Parameters</li> </ul> <p></p>"},{"location":"admin-guide/day-to-day-with-pydio/index/","title":"Index","text":"<p>Pydio simplifies the admin's job by providing dashboard and monitoring tools. Get the status of your installation at a glance!</p> <ul> <li>Administrator Dashboard</li> <li>Activity Log</li> <li>Sessions Monitoring</li> <li>Workspaces Maintenance</li> <li>Users Activities</li> <li>Monitoring Shares</li> </ul>"},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/","title":"Administrator Dashboard","text":"<p>The dashboard is the main page of Pydio Enterprise. This page allows you to quickly know what is going on your server. You can easily change the way you want this page by adding, deleting and reordering widgets.</p>"},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#dashboard-builder","title":"Dashboard Builder","text":"<p>You can access Dashboard Builder by clicking on the bottom-right orange button. This panel allows you to create/remove plugins. I you want to get back the default settings, you can reset the dashboard layout.</p> <p>Each Widget you add should be configured.</p> <p>It's also possible to reorder the widget, just drag and drop the wanted widget.</p> <p></p>"},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#widget-types","title":"Widget types","text":"<p>When you add a widgets, you'll have some settings to fill depending the type. For some widgets, you can apply a filter on a selected workspace. It is also possible to filter the data by file extension (for example you just want to monitor downloads on .doc files).</p> <p>Here are the different widgets attributes:</p> <ul> <li>Legend / Title</li> <li>Data type (Downloads, Uploads, ...)</li> <li>Sampling frequency</li> <li>daily (last 10 days)</li> <li>weekly (last 4 weeks)</li> <li>monthly (last 12 months)</li> <li>Workspace filter [optional]</li> <li>Filename filter [optional]</li> <li>\"*.doc\" (will monitor only .doc files)</li> <li>\"prefix*\" (will monitor only files with this prefix)</li> <li>Refresh delay</li> </ul>"},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#small-graph","title":"Small graph:","text":""},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#big-graph","title":"Big graph:","text":""},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#most-active","title":"Most active:","text":""},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#recents-events","title":"Recents events:","text":""},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#server-status","title":"Server status:","text":""},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#quick-access","title":"Quick access:","text":""},{"location":"admin-guide/day-to-day-with-pydio/administrator-dashboard/#example","title":"Example","text":"<p>Let's say we want to create a small graph to monitor the \".docx\" downloads daily on a selected workspace: </p> <ul> <li>Click on the button to add a widget</li> <li>Choose Small Graph Widget</li> <li>Fill the legend with the name you want</li> <li>Select Downloads in the Chart combobox</li> <li>Pick Daily as sampling frequency</li> <li>Choose the workspace you want to filter</li> <li>Type \"*.docx\" to filter only \".docx\" files</li> <li>Change the Refresh interval if you want</li> <li>Click on create widget</li> </ul> <p>Here is the resulting widget: </p>"},{"location":"admin-guide/day-to-day-with-pydio/activity-log/","title":"Activity Log","text":"<p>The activity page allows you to monitor what is inside the ajxp_log table. By default, you'll see the current day actions on the server. You also can change the date and put search content inside the rows.</p> <p>In the Enterprise Distribution, you have the ability to export the logs in CSV format for offsite archiving or analysis. Please note that this is done directly via a database dump and currently is only working on MySQL.</p> <p></p>"},{"location":"admin-guide/day-to-day-with-pydio/sessions-monitoring/","title":"Sessions Monitoring","text":"<p>The security Dashboard allows you to monitor who is currently connected to your Pydio server.</p> <p>The first part shows all users currently connected to Pydio with an internet browser. If you detect any suspiscious activity here, you can kill this session in real-time, which means the user will be automatically disconnected, and won't be able to access the application for the next minute. You can then use the \"People\" dashboard to lock this user out of the application.</p> <p>The second part shows the API-based connections over the last 24 hours. As this connection are not linked to a session, you cannot disconnect the user in real-time, but you can lock out this user via the People dashboard if necessary.</p>"},{"location":"admin-guide/day-to-day-with-pydio/workspaces-maintenance/","title":"Workspaces Maintenance","text":"<p>Along with the global administration dashboard, you can use the workspaces editor to monitor information specific to a given workspace, as well as perform some maintenance tasks.</p>"},{"location":"admin-guide/day-to-day-with-pydio/workspaces-maintenance/#workspace-activity","title":"Workspace Activity","text":"<p>The Activity tab provides an overview of the recent events that happened on the current workspace. The graph shows the total number of files that were uploaded, downloaded and shared in this workspace. As on the main dashboard, you can use the date picker to change the period of the graph.</p> <p></p> <p>It allows shows a detail of the most recent events on this workspace.</p>"},{"location":"admin-guide/day-to-day-with-pydio/workspaces-maintenance/#shares","title":"Shares","text":"<p>You can list and see the details of all shares performed from within this workspace. As an administrator, you also have the ability to totally disable an existing share.</p> <p></p>"},{"location":"admin-guide/day-to-day-with-pydio/workspaces-maintenance/#maintenance","title":"Maintenance","text":"<p>This tab (new in Pydio 7) gives the administrator a way to perform a couple of \"maintenance\" tasks on the selected workspace. If an indexer is configured for the workspace (which is generally the case by default, using Lucene indexer), you can force a re-indexation of the workspace. If the workspace is defined using a dynamic keyword like AJXP_USER, the indexation will be performed on this workspace for each user.</p> <p>The panel will also offer you the ability to directly add a task to the scheduler, if you want to e.g. trigger the reindexation every day over night. Please note that this requires the scheduler to be properly configured to work.</p> <p>The panel will show every currently running tasks.</p> <p></p> <p>You also have the ability to clear all activity (displayed to the user in the right-hand panel of a workspace), which can be useful if you tested Pydio on a staging environment that you now want to put live in production and reset any activity. </p>"},{"location":"admin-guide/day-to-day-with-pydio/users-activities/","title":"Users Activities","text":"<p>Like for the workspaces, you can check the recent activity of specific user via the users editor panel.</p>"},{"location":"admin-guide/day-to-day-with-pydio/users-activities/#user-activity","title":"User Activity","text":"<p>The Activity tab provides an overview of the connections and files activity of the user. The graph shows the total number of files that were uploaded, downloaded and shared in this workspace. As on the main dashboard, you can use the date picker to change the period of the graph.</p> <p></p> <p>It allows shows a detail of the most recent events done only by this user. You can use the generic Activity Log pane with a filter as well.</p>"},{"location":"admin-guide/day-to-day-with-pydio/users-activities/#shares","title":"Shares","text":"<p>You can list and see the details of all files and folders that are shared with and shared by the currently selected user.</p> <p></p>"},{"location":"admin-guide/day-to-day-with-pydio/monitoring-shares/","title":"Monitoring Shares","text":"<p>Pydio 8 brings a new tool for administrator to more easily browse every files and folders shared on the platform. This is useful to spot mistakes and anomalies,  or simply generate reports based on users or workspaces.</p>"},{"location":"admin-guide/day-to-day-with-pydio/monitoring-shares/#shares-explorer","title":"Shares Explorer","text":"<p>The shares explorer allows you to browse the shares by grouping them successively by the following parameters : </p> <ul> <li>Users</li> <li>Workspaces</li> <li>Share Type (public link or workspace)</li> </ul> <p>You can select for each level one of this parameter to trigger the next column. </p> <p></p> <p>For each grouping, it shows you a number of shares: beware that this number may sometimes be approximate. As this listing does not check the consistency of each and every  share it counts, some underlying broken links may be counted but will not appear in the final listing. </p> <p></p>"},{"location":"admin-guide/day-to-day-with-pydio/monitoring-shares/#editing-shares","title":"Editing Shares","text":"<p>Once you have a full list of shares, you cannot open a share, that will appear in the next right panel. You cannot change all parameters of this share, but one of the three actions are available: </p> <ul> <li>Open corresponding file This will work only if you have a proper access to the containing workspace</li> <li>Delete Share This will stop this file or folder from being shared.</li> <li>Close Simply close the panel to open another share.</li> </ul> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/index/","title":"Index","text":"<ul> <li>Introduction</li> <li>Groups Admin and Delegation</li> <li>Inheritance Groups and Users Roles</li> <li>Action parameters</li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/introduction/","title":"Introduction","text":"<p>At this step, you will probably have deeply configured your Pydio installation for all the internal data stores (users, rights, preferences, etc). Now it's time fine-tune Pydio for your actual business data : your files!</p> <p>One of the core concept of Pydio is the \"Workspace\"\u009d. Basically, a workspace can be seen as a virtual drive mounted to access a set of data. In most case, a workspace will access a set of folders and files, locally or remotely via various types of protocol, but it can also be an access to other type of data, like a database content (MySQL repositories), or even the Pydio configurations themselves (Settings workspace). The way the files are accessed is defined when creating the workspace, by choosing a \"Driver\"\u009d to map the data.</p> <p></p> <p>The rights to access a given set of data for one or more users is handled at a workspace level. Thus, once you have created a workspace, you will be able to grant read and/or write access to this workspace to your users. You can assign these access individually, but you can also create Roles, a set of right access, and then assign one or more roles to your users.</p> <p>In the following chapters, we will go through the major drivers used to define a workspace. But first, let's go through some common parameters you will have to set up, whatever the driver you select.</p>"},{"location":"admin-guide/setup-workspaces-and-users/introduction/#parameters-common-to-all-drivers","title":"Parameters common to all drivers","text":"<p>Default Rights : this settings is very handy to apply automatically an access right to all users for this workspace. If you set it e.g. to \"Read\"\u009d, all new users will by default have a Read access to this workspace. This is particularly handy when you are binding Pydio to an external users directory : when a user logs for the first time, his Pydio counterpart is created at this moment, and using default rights is a good way to assign some workspace by defaults for all users.</p> <p>Description : this is now appearing as a legend in the Workspace selector.</p> <p>Alias : this is automatically generated from the workspace label (like the \"slugs\" in Wordpress for example), and can be used as a workspace identifier for all the low-level operations : building the WebDAV server URLs, triggering an action via the Command Line, etc.</p>"},{"location":"admin-guide/setup-workspaces-and-users/groups-admin-and-delegation/","title":"Groups Admin and Delegation","text":"<p>The group feature gives you the ability to control the rights belonging to a group of user.</p> <ul> <li>Using the mechanism explained in the previous section, it is now possible (if not \u201ceasy\u201d) to totally customize a set of plugins parameters values as well as disable a specific set of actions for a given group of users. For this, you use the \u201cgroup role\u201d accessible by clicking on the small pencil in Workspaces &amp; Users &gt; People.</li> </ul> <p></p> <ul> <li>Inside a group, you can assign the administrator profile to any user. This user will not be a \u201csuperadmin\u201d. She will only have access to a subset of the configurations data, and this limited to the current group :<ul> <li>Users / Roles : create users INSIDE the group only, create roles that will be only available for this group.</li> <li>Workspace : create workspace from the templates the super admin has configured, available only inside this group.</li> </ul> </li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/inheritance-groups-and-users-roles/","title":"Inheritance Groups and Users Roles","text":""},{"location":"admin-guide/setup-workspaces-and-users/inheritance-groups-and-users-roles/#using-roles-in-pydio","title":"Using Roles in Pydio","text":"<p>Role can be found in \"Workspaces &amp; Users\" &gt; \"People\"; you can see in the left of the panel 2 tabs ( Groups and Roles ). When you click on \"Roles\" 2 new buttons can be found at the bottom of the panel ( + Role and Edit ).</p> <p></p> <p>A role contains the following informations:</p> <ul> <li> <p>Workspaces Accesses (Access Controls): a list of rights giving or denying an access to each workspace defined in the application. Internally, the right string can be \u00ab read \u00bb, \u00ab write \u00bb, a combination of these two, or \u00ab deny \u00bb (to force clearing a previously set value in another role).</p> </li> <li> <p>Application Pages you can choose if give them access to pages such as My account,welcome page, ...</p> </li> <li> <p>Application Parameters (Customize Parameters): a tree of  disabled plugins actions, that can be as well disabled for all workspace or only a precise list. Parameters and Actions can in some case be applicable only for a given list of workspace.</p> </li> <li> <p>All workspaces parameters (Customize Parameters): a tree of plugins parameters values that can be applied to all of the workspaces.</p> </li> <li> <p>Per-workspaces parameters (Customize Parameters): a tree of plugins parameters values that can be applied to a given set of workspace. If you want to edit them for all workspace you must go to All workspaces parameters.</p> </li> </ul> <p>You can see the various categories to the corresponding tabs of the edition interface in the Settings workspace (see screenshot below).</p> <p> Figure 1 Role Edition Interface (Whole workspace)</p> <p> Figure 2 Role Edition Interface (Sub folders)</p> <p>The power of the \u00ab Role \u00bb object is that it is a shared concept that is \u00ab additive \u00bb: a sequence of n roles can be \u00ab added \u00bb to create a new role, each role n in turn overriding the various parameters of the role n-1.  That way, one can define for example a given plugin parameter value for in role1, then refine this value in Role2, and if a user has these two roles in this order, the latest value will be taken into account.</p>"},{"location":"admin-guide/setup-workspaces-and-users/inheritance-groups-and-users-roles/#groups-and-users-runtime-role","title":"Groups and users \u00ab runtime \u00bb role","text":"<p>Practically, one will probably not want to define X roles and apply them one by one to the users.  But the other power of this object is that it is shared by Groups and Users as well. Which means a user automatically will provide its own role (internally name AJXP_USER_/userlogin), and if he belongs to a group, this group will also provide a specific group (named AJXP_GRP_/groupPath/groupName).</p> <p>You can see that editing a user or a group, you\u2019ll find the same tabs \"Workspaces Accesses\", Actions and Parameters that you would find in the role edition. They correspond to the specific roles created for each object ( a group or a user).</p> <p>You can add a role in the section of the user editing : \"Workspaces &amp; Users\" &gt; \"Users\" &gt; \"Roles tab\" &gt; \"+ ROLE\"</p> <p></p> <p>Once configured, the various roles that are applicable to a user will be \u00ab added \u00bb in the following order: first the groups roles (if a user belongs to a subgroup, then the parent group role is applied, then the subgroup role), then the administrator-defined roles, then the proper user role. This is summarized in the figure below:</p> <p>For example, a user U1 from group G1, to whom one have applied a specific role R, will then have a \u00ab merged \u00bb role that result in the addition of the following:</p> <p>AJXP_GRP_/G1 + R + AJXP_USR_/U1 =  user runtime role.</p>"},{"location":"admin-guide/setup-workspaces-and-users/inheritance-groups-and-users-roles/#use-cases","title":"Use Cases","text":"<p>This \u00ab refinement \u00bb process is very flexible, and allows you to configure the accesses, parameters and actions of each plugin, for each workspace, at a very fine level. Generally, the \u00ab Groups \u00bb is a right place to preconfigure a couple of parameters, but sometime you\u2019ll want to disable some specific action for a given user, in which case you\u2019ll edit directly the user role.</p>"},{"location":"admin-guide/setup-workspaces-and-users/inheritance-groups-and-users-roles/#specific-profiles","title":"Specific profiles","text":"<p>Another interesting feature of the roles one creates manually in the application is that they can automatically be applied to a given profile of users. There are currently four profiles of users: Standard, Administrator, Shared and Guest.</p> <p>The \u00ab shared \u00bb profile is automatically applied to \u00ab external \u00bb users created by the internal users. If you want that these user have a specific role, you can create a role and set it to be  automatically applied to all shared users.</p>"},{"location":"admin-guide/setup-workspaces-and-users/action-parameters/","title":"Action parameters","text":"<p>When you edit a group or a user, you are actually editing its underlaying role. Thus for the three of them (roles, groups, users), you will see the same tabs accessible : Common Info, ACLs, Actions and Parameters.</p> <p>Go to your User/Group/Role edit it and go to Application Parameters</p>"},{"location":"admin-guide/setup-workspaces-and-users/action-parameters/#enabling-plugins-disabling-plugins","title":"Enabling Plugins / Disabling Plugins","text":"<p>Starting with Pydio 8, you can now fully enable/disable plugins for a specific role. This may be typically useful if you want to enable specific editors only for a subset of users, if these editors require third-party licensing.</p> <p>In the parameters browser, look for \"Enable \" or for the name of the plugin to find the corresponding \"Enable Plugin Name (pluginType.pluginId)\" value.</p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/action-parameters/#overriding-default-parameters-values","title":"Overriding default parameters values","text":"<p>In the last tab of the role editor, \u201cParameters\u201d, you will be able to set up a predefined value for any parameter of any plugin, using a multiple-step selector as for the actions disabler.</p> <p>For example, let\u2019s assume have two groups of users, one that has a Quota of 50M by default, and another group that should have a quota limit of 200M for their \u201cMy Files\u201d workspace. You have already configured the default Quota value to 50M.</p> <ul> <li>Edit the second group and under Parameters, select the plugin identified by  \u201cmeta.quota\u201d</li> <li>Then in the second selector switch to \u201cDEFAULT_QUOTA\u201d parameter</li> <li>And in the third selector, select the \u201cMy Files\u201d workspace.</li> <li>Click on \u201cAdd parameter\u201d and Save the group.</li> </ul> <p>You should now see something like this :</p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/index/","title":"Index","text":"<p>As explained in the Introduction to Workspaces, workspace is defined by two things : the \"driver\"\u009d used to access the data (local filesystem, remote ftp server, database, etc...), and the configuration of this driver (the local path to the files, the database credentials, etc). You can even develop your own access driver by following the plugin api. The full list of available drivers for accessing the data is in the \"Plugins\"\u009d part of this documentation, above the \"access\"\u009d category : https://pydio.com/docs/references/plugins/access/</p> <p>To create a workspace, go on your \"Menu\" &gt; \"Workspaces &amp; Users\" &gt; \"Workspaces\" in click on +Workspace (top of page) and fill the dialog window : use a short, unique and understandable label, and choose the driver that will be used for this workspace. If you don't have an idea of what a driver is, simply choose the \"File System (Standard)\"\u009d driver. Then, depending on the chosen driver, some parameters will appear. All parameters followed by a star \"*\"\u009d are mandatory. Consult also the \"access\"\u009d plugin documentation on the website. Once your configuration is ok, save the workspace. The workspaces list (left of your screen) should be automatically updated, and you can switch to the new workspace to see if everything is alright (by default, admin user has read/write to all repositories, even newly created).</p> <p>The following chapter will go through the main drivers available.</p> <ul> <li>Most standard case: FS driver</li> <li>Accessing remote servers: ftp, sftp, smb, webdav, dropbox</li> <li>Access.fs + Meta.mount</li> <li>Object Storage drivers: S3, Swift</li> <li>Non-files drivers: mysql, imap, ajxp_*, jsapi</li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/most-standard-case-fs-driver/","title":"Most standard case: FS driver","text":"<p>The most standard driver you can use is actually the File System driver : it has the huge advantage of storing the files directly on the local file system, thus on the other way round, to read any existing data stored in a file system and empower it with Pydio capabilities.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/most-standard-case-fs-driver/#defining-the-path","title":"Defining the path","text":"<p>Here, the most important parameter will be the PATH. In one word as in thousand : THE PATH PARAMETER MUST BE AN ABSOLUTE PATH, which mean it must be a path starting from the root of the server. The good news is that there are a couple of available keywords you can use in this field (and in any other field actually), that will be automatically resolved by the application to an absolute path (see below).</p> <p>Possible values can then be:</p> <ul> <li><code>/var/repository/path/to/folder</code></li> <li><code>C:UsersAdminDocuments</code></li> <li><code>AJXP_INSTALL_PATH/../../</code>: AJXP_INSTALL_PATH is automatically replaced by the current Pydio installation folder</li> <li><code>AJXP_DATA_PATH/files</code>: AJXP_DATA_PATH is defined in the bootstrap_context.php file, it is pointing by default to AJXP_INSTALL_PATH/data, e.g. the folder that Pydio write into</li> <li><code>/home/AJXP_USER</code>: AJXP_USER is automatically replaced by the current user name, which answer the next question</li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/most-standard-case-fs-driver/#how-do-i-create-a-personal-workspace","title":"How do I create a \"Personal\"\u009d workspace ?","text":"<p>This is a frequent usage of Pydio: you want each user to have her/his own personal space, in which the other users cannot access. Instead of manually creating one workspace per user (which would be awful), you simply create one UNIQUE workspace with the Path parameter using the <code>AJXP_USER</code> keyword : this keyword will be dynamically replaced by the current user login, thus although it seem that all users access the \"same\"\u009d workspace, this workspace is actually always pointing to a different user, depending on the user logged. You can see that this keyword is used for the default \"My Files\"\u009d workspace bundled with the application : the path is <code>AJXP_DATA_PATH/personal/AJXP_USER</code>.</p> <p>As you guessed it, this also requires the Workspace to be configured to automatically \"Create\"\u009d the personal folder when it is necessary. For this, you set the \"Create\"\u009d option to true in the workspace configuration.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/most-standard-case-fs-driver/#other-driver-parameters","title":"Other driver parameters","text":"<p>Please see the plugin identity card for a complete description of all the options provided by the access.fs driver. Some are global (plugin options applicable to all workspaces), some are \"instance\"\u009d, e.g. defined on a per-workspace basis.</p> <p>Interesting options to note:</p> <p>In the \"Global part\"\u009d (E.g. you have to go to Available Plugins &gt; Workspaces Drivers &gt; File System (Standard)), the Real Size Probing option may fix some issues with files of size greater than 2G.</p> <p>In the instance part (options you see when creating a repository), the Pagination parameters will trigger a paginated view if a folder contains more than XXX number of items, the File Creation Mask is a chmod value applied at file creation, and the Purge Days can be setup to clear all files older than this number of days. This later option is not automatic, you have to set up a cron job (or see the Scheduler tool) to actually trigger the purge.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/accessing-remote-servers-ftp-sftp-smb-webdav-dropbox/","title":"Accessing remote servers: ftp, sftp, smb, webdav, dropbox","text":"<p>Pydio comes bundled with plugins to accessing remote file-system based servers via various protocols:</p> <p>Disclaimer : If you installed Pydio by the linux repository ( apt / yum ), you must install the \"pydio-plugin-access.ftp\", \"pydio-plugin-access.sftp\", \"pydio-plugin-auth.ftp\" packages.</p> <ul> <li> <p>FTP: use the FTP protocol to access the remote server. You can setup the standard FTP parameters (Port, Active / Passive, etc). Authentication credentials to be identified on the remote server can be passed in various manners (see below).</p> </li> <li> <p>Sftp: implement FTP over SSH (enable the plugin FTP over SSH). This is more stable and more performant than FTP, thus recommended if your server can handle it. However, this requires libssl2 to be installed php-ssh2 extension on linux.</p> </li> <li> <p>Samba: Browse files on a server available via the Samba protocol. This requires smbclient to be installed on the server (tested on *nix &amp; windows). For linux based servers, access.fs + meta.mount solution should be preferred (using CIFS protocol instead of SMB). You might need to edit the plugin setttings to change the smbclient path to do so use go to All Plugins &gt; Available Plugins &gt; Workspaces Drivers then to find the path on your server if linux based you can use <code>which samba</code> and then write the path. You also have other options such as ZIP ...</p> </li> <li> <p>WebDAV: Browse an http WebDAV server. Warning, do not confuse this feature with the ability of Pydio to serve any workspaces files as through WebDAV to other clients! This driver requires the Pear::HTTP_WebDAV_Client library.</p> </li> <li> <p>Dropbox: using this driver, you can create a connexion to an existing Dropbox account. Requires an OAuth implementation (see the plugin identity card). Using \"Templates\"\u009d, you could let your users create their own repository, thus entering their own Dropbox keys.</p> </li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/accessing-remote-servers-ftp-sftp-smb-webdav-dropbox/#passing-drivers-credentials","title":"Passing drivers credentials","text":"<p>When accessing remote servers, most drivers will require an identification using credentials (user / password pair). When configuring a workspace driver, the necessary credentials can be passed in various manners (again):</p> <ul> <li>Setting the credentials at driver level: all Pydio users accessing the workspace will trigger a remote connexion using a unique shared credential.</li> <li>Setting the credentials at user level: once a workspace is created using a \"credential-consumer\" driver, new fields will appear inside the users editor: that way, it's possible to setup a specific credential for each user.</li> <li>Using the user's Pydio credentials: passed through the session, it is possible to directly pass the Pydio credentials to the underlying workspace. For this, you have to set both the \"Use Session Credentials\" flag in the workspace configuration, and in the Authentication configuration, the \"Set Credentials in Session\" flag.</li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/access-fs-meta-mount/","title":"Access.fs + Meta.mount","text":""},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/access-fs-meta-mount/#the-mount-command-line","title":"The mount command line","text":"<p>Warning, this is only implemented for *nix servers!</p> <p>Accessing a remote server can be done using the existing protocols like FTP, FTP over SSH, etc. But using these drivers may present some limitation in terms of available additional features. Most interesting features are generally developed by default for a local file system.</p> <p>A good option can thus be to use existing OS capabilities to actually mount the remote drive as a \"local\"\u009d folder. On Linux, you are used to do that with the \"mount\"\u009d command, that will use kernel or FUSE-based modules to load remote FS as local folders. But as generally the remote servers must be provided with credentials (see previous chapter), the mount operation may require the same type of credentials passing, as well as eventually mounting a given folder just for the time where the user is logged, and unmount it automatically afterward.</p> <p>This is exactly the mechanism \"meta.mount\"\u009d is implementing : dynamically calling a \"mount -t\"\u009d command at user login (where when a user switches to a workspace) and unmounting the folder when the user logs out. The typical case we recommend, whenever possible, is for example to replace the Access.smb driver by a CIFS dynamic mounting setup. This is the setup described below, and can easily be adapted for other FS types.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/access-fs-meta-mount/#setup-a-dynamic-cifs-access","title":"Setup a dynamic CIFS access","text":"<p>In our case, we assume to have the following : an SMB server accessible at 192.168.0.156, via the CIFS protocol, that presents a \"/username\"\u009d share for mounting. We want to access it through an access.fs driver instead of an access.smb. We want the mounted folder to be dynamically mounted and unmounted when user enters / exits the workspace.</p> <p>Also we assume that we will create Pydio users with the same credentials as the ones they would provide to access the SMB share directly.</p> <ul> <li>Create a new workspace, selecting the Standard FS driver</li> <li>Setup the Path to point to a folder containing the AJXP_USER keyword : e.g; /mnt/ajxp/AJXP_USER</li> <li>Set the \"Create\"\u009d option to True. The various /mnt/ajxp/user1, /mnt/ajxp/user2 will be created automatically.</li> <li>Set up other options of the driver as you like. Save.</li> <li>Add a \"Repository Feature\"\u009d by choosing \"FS Mount\"\u009d in the Meta plugin list.</li> <li>Configure the FS Mount plugin as follow :<ul> <li>FS Type : cifs This is the value that will appear after the \"-t\"\u009d of the mount command</li> <li>Sudo : yes or no ? Generally, this mount operation should be performed by a super user. A good way is to use SUDO to achieve this. You would allow the web server user (e.g. httpd, www-data) to perform both mount &amp; unmount commands. On Debian this would add the following line in the /etc/sudoers file : <code>www-data ALL = NOPASSWD: /bin/umount,/bin/mount</code></li> <li>Remote path : //192.168.0.156/AJXP_USER Enter samba-like path to the share.</li> <li>Mount options : user=AJXP_USER,pass=AJXP_PASS,uid=www-data,gid=www-data Add various options the current mount protocol can handle. Added after the \"-o\"\u009d options. Here we want to dynamically pass the user &amp; pass through the mount command.</li> <li>User / Password : leave empty</li> <li>Session Credentials : Yes. We want to use the Pydio credentials for logging to the SMB share. Don't forget to also check the \"Set Credentials in Session\"\u009d flag in the main Authentication configuration panel.</li> </ul> </li> </ul> <p>That's it. Save these option, cross your fingers, and try accessing to this new workspace.</p> <p>Common problems will generally come from the SUDO configuration, or if you are using Session Credentials, don't forget you must use a user that is bother authenticated on Pydio and on the remote SMB server.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/object-storage-drivers-s3-swift/","title":"Cloud drivers : s3, hpcloud","text":"<p>Naturally, with the high rise of the Object-Storage systems, particularly in the cloud, a couple of drivers may help you in getting access to this kind of storage. Currently access.s3 and access.hpcloud are the only ones available.</p> <p>Disclaimer : If you installed Pydio by the linux repository ( apt / yum ), you must install the \"pydio-plugin-access.s3\" adn the \"pydio-plugin-metastore.s3\" package before.</p> <p>The access.swift should be generalized to an open-stack Swift driver, as they are actually using this technology. It requires the PHP Swift Bindings.</p> <p>The S3 driver uses the \"Better AS3 Stream Wrapper\"\u009d class to access the amazon Simple Storage System. You must configure the  API &amp; SECRET KEYS, the REGION to query, the CONTAINER you want to browse and the API Version ( 2 or 3 ). Optionally, you can set the \"Signature Version\" of the API. Using this kind of storage driver is handy for cloud architectures, and more features should be developed around it. Worth noting, the \"Metastore.S3\"\u009d is a specific metadata storage implementation that goes along with this driver, using directly the S3 metadata system.</p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/non-files-drivers-mysql-imap-ajxp-jsapi/","title":"Non-files drivers: mysql, imap, ajxp_*, jsapi","text":"<p>Some other drivers nicely demonstrate how Pydio can be used as a generic data-browsing framework.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/non-files-drivers-mysql-imap-ajxp-jsapi/#accessmysql-deprecated","title":"Access.mysql (DEPRECATED)","text":"<p>Disclaimer : If you installed Pydio by the linux repository ( apt / yum ), you must install the <code>pydio-plugin-access.mysql</code> or <code>pydio-all</code> package.</p> <p>You can enable the plugin go to All Plugins &gt; Available Plugins &gt; Workspaces Drivers &gt; MySQL Database</p> <p>First you need to create a workspace with \"Mysql Database\" storage driver :</p> <p></p> <p>Then you need to add the Host, the database name, the user and the password. After that, as you can see This one will turn your Pydio client into a phpMyAdmin-like interface: you can browse tables and records, and modify the database structure: create/delete tables, create/delete columns from tables:</p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-drivers/non-files-drivers-mysql-imap-ajxp-jsapi/#accessimap","title":"Access.imap","text":"<p>Disclaimer : If you installed Pydio by the linux repository ( apt / yum ), you must install the <code>pydio-plugin-access.imap</code> or <code>pydio-all</code> package.</p> <p>Disclaimer : Don't forget to install the \"Mail_mimeDecode\" package from pear.</p> <p>You can enable the plugin go to All Plugins &gt; Available Plugins &gt; Workspaces Drivers &gt; Mailbox(Imap or POP) and then Crete a workspace with \"Mailbox\" storage driver:</p> <p>Associated with the Email Viewer (editor.eml), a workspace created with the driver transforms Pydio into a mailbox. View all your mailboxes and the emails, with support for text and HTML, as well as attachment. Only reading is supported, there is no ability to actually Send an email.</p> <p>This can be handy to transfer a huge attachment directly from an email to another Pydio workspace, without having to download it to your desktop and re-upload it afterward.</p> <p>A good usecase would probably to create a workspace template and let user add their own email-workspace, providing their own credentials for connexion. </p> <p></p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/index/","title":"Index","text":"<p>Once the workspace is saved, you can reopen it and see that you have a new tab in the workspace edition dialog, \"Additional Features\"\u009d. In this tab, you can add \"Metadata\"\u009d sources support for the workspace. \"Metadata\"\u009d are data that will be attached dynamically to the \"core\"\u009d data of the workspace.</p> <p>For example, it can be users comments attached to any file/folder of a filesystem, or versioning information, etc. This is \"decoupled\"\u009d from the main access driver of the workspace, because the metadata can use various implementation for the same result. For example, user comments on a file/folder can be saved directly in the filesystem (in hidden files, or in the filesystem metadata if supported), or in an external database, or even why not in the client browser cookies... ?? Below is a schema demonstrating how metadata \"enrich\"\u009d the data.</p> <p>[:image-popup:4_setup_workspaces_and_users/workspaces_meta_sources.png]</p> <p>The chapters below will describe the most commons \"meta\"\u009d plugins used to add features to a workspace.</p> <ul> <li>Easy Transfer Layout</li> <li>Metastore, meta &amp; index plugins</li> <li>User-editable text metadata</li> <li>Comments Feed</li> <li>Enabling quotas</li> <li>Files versionning</li> <li>Watches and Notifications</li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/easy-transfer-layout/","title":"Easy Transfer Layout","text":"<p>EasyTransfer is a specific layout that can be applied to any workspace, providing an ultra intuitive interface to \"upload-and-share\" files in one operation.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/easy-transfer-layout/#recommended-setup","title":"Recommended Setup","text":"<p>While organisations are looking for secure and on-site file sharing solutions, they want to provide simple interface to their users, and eventually have some users use an even simpler interface without knowing about workspaces, pydio users, etc.</p> <p>The idea is in that case to let the user login to pydio, but give them access to a single dashboard to quickly drag'n'drop a file and get a public link in return. In that case, follow the steps below: </p> <ul> <li>Create a \"personal\" workspace by using the AJXP_USER keyword inside the Path parameter of the workspace driver. That way, under the hood, each user will have her own personal folder for uploading files.</li> <li>Once the workspace is created, use the \"Additional Features\" to add the \"Easy Transfer Layout\" feature to this workspace.</li> <li>Create a specific role for denying access to everything else than this workspace to the user : particularly, disable access to the \"Home\" application page.</li> <li>Grant a read-write access to this workspace on this role.</li> <li>Apply the role to the desired users.</li> <li>If you want to raise the level of security, you can use the parameters list in the role configuration to set \"Password Mandatory\" on shared links. This will requires the users to enter a password as soon as they upload a file, before creating the actual link.</li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/easy-transfer-layout/#layout","title":"Layout","text":"<p>Before dropping a file </p> <p></p> <p>After dropping a file </p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/metastore-meta-index-plugins/","title":"Metastore, meta & index plugins","text":"<p>As explained in the previous chapter, a workspace is mainly configured by :</p> <ul> <li> <p>1/ Its access driver (how do I access the actual data?)</p> </li> <li> <p>2/ Additional plugins (enriching the data &amp; features)</p> </li> </ul> <p>This second part is handled by various plugins that are all of a specific type : metastore, meta,  and index. This order is not a random one : when adding a plugin you will notice that Pydio will always reorder them like that. All these aspects will generally handle not the \"data\" itself (your files, their content), but \"metadata\", that is additional data describing the files. This data can be inherent to the files (e.g., the file size can actually be seen as a metadata), or external, generated by the users (user-defined metadata) or by any system (a revision number from a versioning system).</p> <p>So to take them in the order :</p> <ul> <li>Metastore:<ul> <li>Defines how the metadata will be stored for the current workspace.  This can be linked to the underlying access driver but not necessarily.</li> <li>Always the first in the stack, as meta &amp; index plugins will often actually depend on a metastore.  Other features (like sharing and bookmarks) makes use of this feature to provide a better user experience as well. It it thus always recommended to add at least a metastore to each workspace.</li> <li>Current implementations include metastore.serial (stores files metadata on local filesystem, inside hidden files), metastore.s3 (to be used with access.s3, uses Amazon metadata capabilities) and metastore.xattr (uses file system Extended attributes, still experimental).</li> <li>Generally if you are not sure, metastore.serial will do the job.</li> </ul> </li> <li>Meta:<ul> <li>One or many meta plugins can be added, they will actually implement the real features, and generally will require a metastore to be present for storing/retrieving their custom metadata.</li> <li>Can go from user-defined metadata to quota implementation or versioning. See following sections of this manual.</li> </ul> </li> <li>Index:<ul> <li>Indexation plugins, only Lucene is currently bundled by default, should be sufficient.</li> <li>Always appears at the end of the stack, as other plugins can register metadata to be indexed by the search engine.</li> </ul> </li> </ul> <p></p> <p>In the next sections, we will go through the common features one wants to implement on the workspaces. Please check the plugins documentations for detailed instruction and additional available features.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/user-editable-text-metadata/","title":"User-editable text metadata","text":"<p>A common need for a system like Pydio is to let the users enter their own comments or remarks about the files they use. Pydio lets you simply define as much metadata fields as you want, with various field types available, through this plugin meta.user.</p> <p>This plugin requires a \"metastore\" plugin to be active to do the actual storing implementation. If you are not sure of what this mean, just read the previous section. Metastore will handle the actual storing of the metadata, where as the plugin will handle how it is displayed and other users interface.</p> <p>Metadata is attached to a file, which means it is moved/copied/deleted between folders when such operations are applied on the files. The plugin provides a little editor for adding/modifying these properties as simple text lines, display them in both the file list and in the infoPanel, and the added metadata is also searchable.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/user-editable-text-metadata/#add-metadata-to-a-workspace","title":"Add Metadata to a workspace","text":"<p>To add some metadata fields, simply follow the steps:</p> <ul> <li>In the \"Additional Features\"\u009d of a workspace configuration panel, make sure a MetaStore is defined, and add a \"Text Metadata\"\u009d plugin to the stack.</li> <li>You can see a replicable set of fields:<ul> <li>Meta Field: a technical name for the field. Please use only alphanumerical characters. See below for specific keywords.</li> <li>Meta Label: will be displayed to the user</li> <li>Field Type: possible types of fields (see below)</li> <li>Column visibility: can be \"visible\"\u009d or \"hidden\"\u009d (without quotes). This defines whether in List mode, the associated will be visible by default or not.</li> <li>Additional Info: used for \"Selection\" type (see below)</li> </ul> </li> </ul>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/user-editable-text-metadata/#metadata-types","title":"Metadata Types","text":"<p>The various possible types are described below:</p> <ul> <li>Short Text: A simple text</li> <li>Long Text: A longer text</li> <li>Created By: Value will be automatically provisionned with the name of the user who uploaded/created the file</li> <li>Updated By: Value will be automatically provisionned with the name of the user who last updated the file</li> <li>Stars Rating: the field automatically turns into a 5-stars rating system for the files. View and edit the rating directly in the InfoPanel, in the FilesList (in list mode only for the moment), and in the \"File Meta Data\" form.</li> <li>Color Label: the field turns into a labeling system that will apply a given css class to either the table row when in list mode, or the thumbnail cell when in thumb mode. The css classes are defined in plugins/meta.serial/css and by default they define 5 levels of priority with associated background colors. Use png transparent images as background colors, that way the user can still notice when a row is selected or not.</li> <li>Selection: A select box with a set of value that you can define using the \"Additional Info\" field, using the following syntax: <code>key1|Label 1,key2|Label 2,key3|Label 3</code>.</li> </ul> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/user-editable-text-metadata/#indexing-metadata-for-search-engine","title":"Indexing metadata for search engine","text":"<p>If you want the metadata to be indexed and searchable, you will have to edit the indexer (generally Lucene Indexer) feature and add a comma-separated list of fields names in the \"Index Meta Fields\" field.</p> <p>Once configured, the search engine provides an advanced faceted search with the metadata:</p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/user-editable-text-metadata/#rendering","title":"Rendering","text":"<p>Below, you can see how the various meta field types will render in the information panel when selecting a given file: </p> <p></p> <p>Additionally, you can mass-edit a selection of files or folders. In that case, the edition dialog will let you choose which metadata field you want to update. The changed value will be applied to all selected files.</p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/comments-feed/","title":"Comments Feed","text":"<p>Add the Comment Feed feature to let users add their comment on any files or folders in a workspace. This content appeared as a conversation feed, and is refreshed real-time, thus acting almost as a live-chat.</p> <p>First you need to enable the feature on your workspaces to do that go to Workspaces &amp; Users &gt; Workspaces &gt; Choose a workspace and edit it and in the Additional Features add Comment Feed.</p> <p></p> <p></p> <p>The comment field will look like that.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/enabling-quotas/","title":"Enabling quotas","text":""},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/enabling-quotas/#the-metaquota-plugin","title":"The meta.quota plugin","text":"<p>If you need to enable some storage limitations for your users, the meta.quota plugin can be added as a workspace feature. To add it to workspaces go to Workspaces &amp; Users &gt; Workspaces &gt; Choose a workspace and edit it and add the User Quota Feature.</p> <p>This will allow the following behaviors:</p> <ul> <li>Limit storage usage on a per-workspace basis or on a global basis (this is configured via the plugin global options), e.g. \"50M for a given workspace\", or \"50M for all cumulated workspaces a user can access\".</li> <li>Define a maximum quota value as well as a soft limit triggering an alert (will send an email to the user).</li> <li>Use the roles-defined parameters to finely override the quota values on a per-group or per-user basis.</li> </ul> <p>See the meta.quota plugin documentation for detailed parameters instruction.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/enabling-quotas/#sample-use-cases","title":"Sample use cases","text":"<p>Users have access to 2 workspaces, one Personal (user-specific) and one Common (all users can access it). For most of them, we want to limit their personal space to 200M, and the overall usage of the common space to 1G.</p> <p>Simply add the meta.quota feature to both workspaces.</p> <ul> <li>In the Personal workspace, set the Default Quota to 200M (the value accept php.ini-like format, with K, M, G, etc).</li> <li>In the Common workspace, set the Default Quota to 1G</li> </ul> <p>A small subset of users, gathered in a group \"SuperPowers\" can have their personal space extended to 500M.</p> <ul> <li>Edit the SuperPowers group (right-click and \"Edit\"), go to the \"Parameters\" tab</li> <li>Using the selectors, add a parameter for<ul> <li>Plugin Identifier : meta.quota</li> <li>Parameter Name : DEFAULT_QUOTA</li> <li>Repository Scope : My Files (the personal workspace name)</li> </ul> </li> <li>Set the parameter value to 500M and Save the group.</li> </ul> <p></p> <p>That's it! Now if you log like a user of this group, you should see that your quota value is extended to 500M. This could have been done at the user level (Parameters tab of the user editor), the group level (like here), or the Role level (all users with this role would have this new value applied).</p> <p>If you are at loss with this mechanism, you should probably read the \"Users Management\" section, where you will learn about parameters refinement based on Roles.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/enabling-quotas/#user-interface","title":"User interface","text":"<p>Once enable, the quota will appear in the right-hand info panel of the users, when they first enter a workspace, as shown on the screenshot below.</p> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/files-versionning/","title":"Files versionning","text":""},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/files-versionning/#introduction","title":"Introduction","text":"<p>Files versioning allows you to keep track of file changes.</p> <p>Disclaimer : If you installed Pydio by the linux repository ( apt / yum ), you must install the \"pydio-plugin-meta.git\" package.</p> <p>The current implementation is based on Git for the sake of simplicity, and it has some drawbacks :</p> <ul> <li>Only works for FS-based workspaces</li> <li>Git is known for not very well scaling for huge files. Thus if you are planning to use only media files for example (videos), you should probably avoid this. A part of that, it's working neatly, and implementing versioning through a git repository also allows you to interact with the versioning system through external application.</li> </ul> <p></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/files-versionning/#installing","title":"Installing","text":"<p>First enable this plugin go to All Plugins &gt; Available Plugins &gt; Workspaces Meta Aspects &gt; Git-based Versioning.</p> <p>To enable this feature go to Workspaces &amp; Users &gt; Workspaces &gt; Choose a workspace and edit it and Git-based Versioning to the workspace.</p> <p>Once installed, you will be able to see a list of actions of what happened on a given file, eventually download a given previous revision, or directly reverse the current revision to a previous one (thus creating a new revision). To install, simply make sure that the GIT command is accessible through the command-line on your server, and that the PEAR/VersionControl_Git client is installed as well.</p> <p>Previous implementation was based on SVN instead of Git. As they share some client resources (history browser), the meta.svn plugin must be installed as well (it is by default).</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/files-versionning/#troubleshooting","title":"Troubleshooting","text":"<p>When switching for the first time to this workspace and making a file operation (upload, move, whatever), a \"git init\"\u009d operation will be launched. If you encounter strange errors, maybe you can manually initiate the workspace by applying the following command line at the root of your workspace path :</p> <p><code>$ git init .</code></p> <p><code>$ git add .</code></p> <p><code>$ git commit -a -m \"Initial commit\"</code></p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/files-versionning/#alternatives","title":"Alternatives","text":"<p>Other versioning systems should be introduced in future versions, either leveraging specific access drivers capacities (cloud storage generally directly provide versioning, accessible through an API), or by storing diffs and version in an additional database.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/watches-and-notifications/","title":"Watches and Notifications","text":""},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/watches-and-notifications/#introduction","title":"Introduction","text":"<p>Notification is a powerful feature of Pydio, once activated through a specific plugin, and as of v5, part of the core. It will allow the publication of two kind of objects :</p> <ul> <li>Alerts: based on a user voluntary opt-in, alerts can send email when the content of a file or folder is either modified or consulted.</li> <li>Event feeds: to reflect the \"life\" of the data, the event feed lists all actions triggered in all workspaces that the user can access.</li> </ul> <p>Those two could be compared respectively to Facebook \"Notifications\" and \"Feed\".</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/watches-and-notifications/#basic-installation","title":"Basic installation","text":"<p>Activating notifications used to be quite cumbersome, but the procedure was greatly simplified with the introduction of the application installer. Basically, this feature requires an SQL database (for the moment, no-sql implementation are in the way). Still, this can be as simple as specifying an Sqlite file, so you don't really need a MySql running somewhere.</p> <ul> <li>Configure an SQL Connexion: if not already done, in the Application Parameters &gt; Configs Backends.</li> <li>Activate the \"User events and alerts\" in the Notification Center (Application Parameters &gt; Notifications). There is only one plugin available, so it's selected by default (Events SQL). Click on the Install SQL Tables button to make sure ajxp_feed table is created.</li> <li>This will already be enough to enable the Events Feeds.  But you will also want to let the user watch for a given folder to receive alerts :</li> <li>Add a \"Watch Metadata\" feature to each workspace</li> <li>Make sure the emailer is correctly setup by checking the various parameters of the Application Parameters &gt; Mailers panel. Warning, either through the administrator Email, or via the \"Sender Email\" field of this panel, you must make sure that an email is configured to fill the \"From\" value of the emails, otherwise they won't be sent correctly. </li> </ul> <p>Once all this is active, switch to any workspace, you should see the \"Notifications\" button appear in the top toolbar. If you right-click on a file or folder, you should as well see the \"Watch... \" menu allowing you to flag the selected item as watched.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/watches-and-notifications/#optimizing-performances","title":"Optimizing performances","text":""},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/watches-and-notifications/#disable-output-buffering","title":"Disable output buffering!","text":"<p>Make sure that output buffering is disabled for your PHP configuration. This allows Pydio to register some actions to be performed AFTER the pages are render to the client browser. Events feeds can be time consuming, as every action on the data must be logged and analysed to see if it must trigger an alert. When the system is correctly configured, this is done at the very end of the scripts, after rendering results of the queries for the clients.</p> <p>This is not recommended only for this feature, many features implying metadata update or indexation are also using this system to avoid lowering your system response celerity.</p>"},{"location":"admin-guide/setup-workspaces-and-users/workspaces-additional-features/watches-and-notifications/#messages-queuing","title":"Messages Queuing","text":"<p>For system under high load (high number of users basically), you should consider switching on the \"Messages Queuing\" mechanism. This will allow the events to be treated asynchronously : all events are stored in a queue, and you will have to setup a CRON job to consume the queue on a regular basis.</p> <p>You can also do you it through the console. You will have enable the CLI version of the framework, and then launch the following command, for example every 5 minutes:</p> <p><code>php /path/to/ajxp/cmd.php -r=ajxp_conf -u=admin -p=adminpassword -a=consume_notification_queue</code></p>"},{"location":"admin-guide/pydio-advanced-configuration/index/","title":"Index","text":"<ul> <li>Setup WebDAV server access</li> <li>Plugins</li> <li>Setup Configuration Storage</li> <li>Setup WebDAV server access</li> <li>Tuning server performances</li> <li>Configure mail digest</li> </ul>"},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/","title":"Setup WebDAV server access","text":""},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/#command-line-version-of-the-framework","title":"Command-line version of the framework","text":"<p>It\u2019s possible to launch the whole framework and execute the actions via the command line. This has interesting consequences :</p> <ul> <li>Launch \u201casynchronous\u201d tasks from the GUI : they are started on the server and do not need to keep a window open</li> <li>Launch some administrative tasks from outside the web, e.g. via a CRON job..</li> <li>On Linux, if permissions allow it, it can be possible to stop a process.</li> </ul> <p>This is already implemented in two new features, (see further), and should be generalized wherever possible!</p> <ul> <li>Http Downloader : ability to trigger a remote file download asynchronously, without to have to keep a browser window open.</li> <li>Zend Indexation : index the whole content of a workspace asynchronously.</li> </ul> <p>If you want to play with the command line, placed at the root of the installation, you can simply call something like :</p> <pre><code>php cmd.php -u=user -p=password -a=action -r=workspace_id --param1=value1 --param2=value2\n</code></pre> <p>Note the difference between simple-dash parameters and double-dash parameters : the latter ones are the parameters passed to the required \u201caction\u201d.</p> <p>When launched from the web framework, an encrypted token is passed instead of the password.</p>"},{"location":"admin-guide/pydio-advanced-configuration/plugins/","title":"Plugins","text":""},{"location":"admin-guide/pydio-advanced-configuration/plugins/#introduction","title":"Introduction","text":"<p>Pydio comes fully loaded with various plugins to ease the integration with other systems, help you develop your own specific installation, or even use Pydio as a very generic explorer-like GUI, for browsing any type of data (see access.ajxp_conf and access.mysql for example).</p> <p>Plugins can be seen as \u201cfeatures\u201d. They come packed with their own actions and parameters, and can drastically change the way Pydio works.  A plugin is composed of a folder \u201cplugintype.pluginname\u201d containing at least an XML file describing the plugin, the manifest.xml. When you want to customize, duplicate, understand a plugin, a good start is always to look at the manifest.xml.</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;logdriver name=\"text\" label=\"CONF_MESSAGE[Text logger]\" description=\"CONF_MESSAGE[Stores the logs as readable tab delimited text.]\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"file:../core.ajaxplorer/ajxp_registry.xsd\"&gt;\n    &lt;class_definition filename=\"plugins/log.text/class.textLogDriver.php\" classname=\"textLogDriver\"/&gt;\n    &lt;client_settings&gt;\n        &lt;resources&gt;\n            &lt;i18n namespace=\"text_logger\" path=\"plugins/log.text/i18n\"/&gt;\n        &lt;/resources&gt;\n    &lt;/client_settings&gt;\n    &lt;server_settings&gt;\n        &lt;param name=\"LOG_PATH\" type=\"string\" label=\"CONF_MESSAGE[Logpath]\" description=\"CONF_MESSAGE[The path to where the logs are kept.]\" mandatory=\"true\"/&gt;\n        &lt;param name=\"LOG_FILE_NAME\" type=\"string\" label=\"CONF_MESSAGE[Logfile]\" description=\"CONF_MESSAGE[The name of the log file]\" mandatory=\"true\"/&gt;\n        &lt;param name=\"LOG_CHMOD\" type=\"integer\" label=\"CONF_MESSAGE[Files Permissions]\" description=\"CONF_MESSAGE[]\" default=\"0770\" mandatory=\"true\"/&gt;\n    &lt;/server_settings&gt;\n&lt;/logdriver&gt;\n</code></pre> <p>The manifest.xml defines all the parameters a plugin can handle. Parameters can be \u201cglobal\u201d (i.e. shared by all instances of this plugin) or \u201clocal\u201d (specific for an instance). This apply to plugins that are linked to a workspace : the \u201clocal\u201d  or \u201cinstance\u201d parameters can be different from one workspace to another. It can also import options from the Pydio mixins, that allow the factorization of common behaviors across plugins. All these parameters are self-documented, and the \u201cPlugins\u201d section of this site gives you a description of each parameter.</p> <p>The core* plugin type is a specific type that also factorize behaviors : given any \u201cptype\u201d plugin type, if there is a \u201ccore.ptype\u201d plugin, it will be automatically loaded and the parameters will be added to any \u201cptype.pname\u201d plugin. For example, all \u201cauth\u201d plugins inherits from the \u201ccore.auth\u201d plugin. At the top of this is the core.ajaxplorer** that is untouchable, and comes bundled with various basic resources.</p>"},{"location":"admin-guide/pydio-advanced-configuration/plugins/#troubleshooting-plugins-the-cache","title":"Troubleshooting plugins : the cache","text":"<p>As all plugins are loaded dynamically to construct the full state of the application, and particularly under the form of a big XML registry, it was quite soon necessary to introduce a caching mechanism that improved performances drastically. However, there is no automatic clearing of the cache and one is very often faced to the fact that nothing is changing although a plugin has been modified.</p> <p>Most of the time, you\u2019ll have to simply CLEAR THE SERVER CACHE : simply remove the two files /data/cache/plugins_requires.ser  and /data/cache/plugins_cache.ser. Another way to clear the cache without accessing the server directly is to edit any plugin configuration via the GUI (for example disable then re-enable a plugin) : the cache is automatically cleared at this moment.</p> <p>You can use the following commands to clear the cache : <code>rm -f plugins_*</code>. Or you can use the Refresh cache button located at the top in All Plugins &gt; Available Plugins</p>"},{"location":"admin-guide/pydio-advanced-configuration/plugins/#understanding-plugins-lifecycle","title":"Understanding plugins lifecycle","text":"<p>By default, all plugin have the following lifecycle :</p> <p>Detected by the application (folder has been dropped in the plugins folder) =&gt; Special checks performed (if wrong, cannot be activated) =&gt; Enabled (i.e ready for use) =&gt; \u201cActivated\u201d, either through the GUI (example editor.diaporama), through specific configuration files (exemple auth.serial), or through the activation of a workspace that explicitly makes use of this plugin (example meta.exif), see next section.</p> <p>Plugins can define dependencies to other plugins, making them inactive if the given dependencies cannot be found. When troubleshooting a plugin, fist thing is to check it\u2019s defined in the ACTIVE_PLUGINS of the config file, next it can be interesting to verify that all these dependancies are indeed active. Again, see the dependencies in the manifest.xml.For example, the editor.codepress plugin is a source code editor, that is based on the editor.text plugin. In the manifest file, you can see</p> <pre><code>&lt;dependencies&gt;\n       &lt;pluginResources pluginName=\"editor.text\"/&gt;\n       &lt;!-- Stream Wrapper Access --&gt;\n      &lt;activePlugin pluginName=\"access.fs|access.ftp|access.demo|access.remote_fs\"/&gt;\n&lt;/dependencies&gt;\n</code></pre> <p>This shows that the plugin needs the editor.text resources to be loaded (so the editor.text must be indeed available), and also that this plugin will be active only if one of the defined access plugin is also active. Concretely, this means that editor.codepress is active when the current workspace is an access.fs workspace, but not when the current workspace is based on access.mysql for example. Which is logical, as editor.codepress can only handle a given type of data, a file.</p>"},{"location":"admin-guide/pydio-advanced-configuration/setup-configuration-storage/","title":"Setup Configuration Storage","text":""},{"location":"admin-guide/pydio-advanced-configuration/setup-configuration-storage/#configurations-backends","title":"Configurations backends","text":"<p>There are two major data types handle by Pydio: your actual \u201cbusiness\u201d data, ie. your files and their metadata, and \u201cconfigurations\u201d data, i.e. plugins options and other internal parameters. Configurations are themselves divided in two parts: users credentials, managed by AUTH plugins, and all the rest, managed by CONF plugins. We are only speaking here of the latter sort.</p>"},{"location":"admin-guide/pydio-advanced-configuration/setup-configuration-storage/#data-concerned","title":"Data concerned","text":"<ul> <li>users preferences, rights, roles and profiles.</li> <li>workspaces definitions (previously \u201crepositories\u201d)</li> <li>plugins configurations</li> <li>other binaries and data registered by other plugins. E.g. notifications.</li> </ul> <p>Currently, there are two ways to store the configurations data: either in serialized files stored on filesystem (under the AJXP_DATA_PATH , data/ by default, defined in conf/bootstrap_context.php), or inside an SQL database (see below).</p>"},{"location":"admin-guide/pydio-advanced-configuration/setup-configuration-storage/#enabling-sql-storage","title":"Enabling SQL storage","text":"<p>If you have already configured a database storage when installing the application, you probably don\u2019t have to go through this.</p> <p>Currently, MySQL and Sqlite are supported. For both, you will need to make sure that the corresponding php extension is installed. Configuring the conf.sql plugin will be a multiple step action:</p> <ul> <li>Inside the Application Parameters &gt; Configs Backends, first define an SQL Connexion: choose the correct driver (MySQL or Sqlite) and fill the options values accordingly.<ul> <li>For MySQL<ul> <li>Host: generally localhost, or a server name provided by your hosting</li> <li>Database: an existing database name</li> <li>User: a MySQL user with all privileges on this database</li> <li>Password: the mysql user password.</li> </ul> </li> <li>For Sqlite<ul> <li>A filename on the server. Make sure it points to a folder that is writeable by your webserver, and that is NOT web-accessible.</li> </ul> </li> <li>Save the options.</li> </ul> </li> <li>Still in the same panel (Configurations Management), now scroll down to \u201cInstance Param\u201d section and switch the to the DB Storage value. Leave the connexion value to \u201cCore Connexion\u201d by default, and click on \u201cInstall SQL Tables\u201d button. If there are connexion problems, you may see red errors appear. Otherwise, green message will appear. The SQL instruction contain CREATE TABLE IF NOT EXISTS, so you will not override existing tables.</li> <li>Save: you will be automatically logged out, as switching configuration backend is quite fundamental in the lifecycle of the application.</li> </ul>"},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/","title":"Setup WebDAV server access","text":"<p>Pydio comes with a bundled webDAV server which allows you to expose your files to a variety of clients applications for easy access. All you need to do is to \"Allow webDAV Access\" through Pydio's web interface.</p>"},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/#webdav-feature-requirements-activation","title":"WebDAV feature requirements &amp; activation","text":"<p>If you managed to properly configure the Pydio rewrite rule everything should work smoothly.</p>"},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/#webdav-urls-in-pydio","title":"WebDAV URLs in Pydio","text":"<p>To understand the configurations, lets explain how this will work : your Pydio is installed on a server http[s]://yourdomain.com, inside the folder pydio for example. Normal web access is then http[s]://yourdomain/pydio/ (or http[s]://yourdomain/). What we\u2019ll do is create a \u201cvirtual\u201d folder that will be the root of all DAV urls. By default, this is called \u201cshares\u201d, but you can change it. On this basis, any workspace will be accessible (by an accredited user of course) at the following url : http[s]://yourdomain.com/pydio/shares/workspace_id or http[s]://yourdomain.com/pydio/shares/workspace_alias (Or in this case : http[s]://yourdomain.com/shares/workspace_id or http[s]://yourdomain.com/shares/workspace_alias).</p> <p>When you want to share you can use the base url http[s]://yourdomain.com/pydio/shares/ (or http[s]://yourdomain.com/shares/) that will also be accessible, displaying all the logged user workspaces like folders. Thus it is generally the unique URL you have to provide to your users.</p>"},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/#pydio-configuration","title":"Pydio configuration","text":"<p>The WebDAV configurations can be changed through the web user interface. You\u2019ll find them in the Settings section, under Application Parameters &gt; Application Core, there is a \u201cWebDAV Server\u201d header.</p> <p></p> <p>Options are described below:</p> <ul> <li>Enable WebDAV : totally enable or disable the webdav feature. false by default.</li> <li>Enable for all users : you can now enable webDAV for all users, they no longer need to take action.</li> <li>Shares URI : the exact mirror of the previous .htaccess configs : path to the virtual directory, thus something like \u201c/files/shares\u201d. Make sure to start with a slash, and end without slash.</li> <li>Shares Host : the Host used in your webdav protocol.</li> <li>Digest Realm : used for the digest authentication, and to store the webdav password encoded. Thus, if you want to change this, change it the very first time you install the feature, otherwise you\u2019ll have to ask the users to re-enter their password.</li> <li>Force Basic Auth : in some case, you know that the clients you will be using can only use Basic Authentication, and you want to force this authentication method. It is best secured to leave it to No.</li> <li>Browser Access : wether the shares URL are directly browsable in WebDAV through the browser. This generally creates a kind of duplicate of the standard web-based interface, but it is generally VERY useful to enable that one to test if the configuration is correct.</li> </ul>"},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/#per-user-activation-and-authentication","title":"Per-user activation and authentication","text":"<p>Once the webDAV is globally activated, each user will still have to manually activate it for his/her account.</p> <p>In some cases, the user will have to create a dedicated password for webdav authentication. This is not very handy, but unfortunately it can be necessary if the TRANSMIT_CLEAR_PASS option of the Pydio Authentication is set to No. The webDAV authentication mechanism implies either knowing the password in its clear form (basic) or in its encoded form (digest), in the latter case using a different algorithm than the one used by Pydio. For this reason, we have to store the user webDAV password in an encrypted form as a user preference, and he/she has to enter this password manually the first time the webDAV is activated.</p> <p>In both case, the WebDAV activation (and password configuration) is under the user menu, in WebDAV preferences.</p> <p></p>"},{"location":"admin-guide/pydio-advanced-configuration/setup-webdav-server-access/#known-issues-limitations-workarounds","title":"Known issues, limitations, workarounds","text":"<ul> <li> <p>Authorization mechanism may fail in the Apache + PHP as CGI case, and some more lines need to be added to the .htaccess file to ensure correct headers redirection. See the .htaccess file for more info, simply uncomment the lines.</p> </li> <li> <p>There are plenty of documentation about WebDAV, both client and server on the web, one very useful website is the wiki of the SabreDAV project. It is the library we use, and most well-kown webDAV clients are carefully documented. See for example http://sabre.io/dav/ for the previous problem.</p> </li> </ul>"},{"location":"admin-guide/pydio-advanced-configuration/tuning-server-performances/","title":"Tuning server performances","text":"<p>As many PHP frameworks, Pydio ends up loading quite a lot of PHP files at runtime, which can result in poor performances if the server is not correctly configured. Furthermore, managing files, and particularly big files, can also lead PHP to high CPU load for some operations. We present here the basic strategies that can be implemented to enhance performance, from easy (and really recommanded) to more complex setups.</p>"},{"location":"admin-guide/pydio-advanced-configuration/tuning-server-performances/#install-a-php-accelerator","title":"Install a PHP Accelerator","text":"<p>It is REALLY RECOMMENDED to use a PHP Accelerator when running Pydio. As any PHP framework, we load and read a lot of PHP files at runtime (all classes), and using an accelerator will simply \u201cprecompile\u201d the files (turn them into opcode) and cache the code in memory, avoiding the retriggering this operation at each request. This will generally really improve the performance, dividing by two or three each request time.</p> <p>PHP APC is a recommended choice, but other accelerators may do the job as well.</p>"},{"location":"admin-guide/pydio-advanced-configuration/tuning-server-performances/#execute-actions-asynchronously","title":"Execute actions asynchronously","text":"<p>Although not as good as NodeJS to provide such behaviour, PHP offers a way to send display results to the users before actually performing some actions. The Event system of Pydio takes party of this to improve the user experience and perceived performance. To make sure this is working, please check that php output_buffering is DISABLED for your virtual host.</p> <p>To go further, many events like sending notifications on files operation can be performed really asynchronously, by storing them inside a queue and triggering the queue processing via a CRON job. To do that, you must enable the feature in Global Configurations &gt; Core Configs &gt; Message Queuing, making sure to have defined an mq instance (SQL is recommended here).</p> <p>Then you will have to set up a CRON job using the CLi version of the framework, that will trigger the queue processing. Add the following line to your crontab, for example on a 5minutes cycle :</p> <p><code>php /path/to/pydio/cmd.php -u=admin -p=password -r=ajxp_conf -a=consume_notification_queue</code></p>"},{"location":"admin-guide/pydio-advanced-configuration/tuning-server-performances/#delegate-download-operation-to-apache","title":"Delegate download operation to Apache","text":"<p>In PHP, reading a file to the output buffer for downloading can prove a CPU-consuming task. If you encounter CPU peaks during downloads, you should consider using the XSendFile extension. Originally an NGinx extension, there is also an apache port (mod_xsendfile), and the idea is that once the Pydio framework has done the necessary checks to let a user download a file, it will actually send a header to Apache and return, letting Apache server the file, which it does quite well.</p> <p>You first have to correctly install &amp; configure XSendFile, making sure that the authorized pathes include the real path to the workspace roots on the server. Then activate XSendFile support inside the access.fs plugin global options.</p>"},{"location":"admin-guide/pydio-advanced-configuration/tuning-server-performances/#delegate-zip-operation-to-server","title":"Delegate Zip operation to server","text":"<p>Same as download, the ZIP operation necessary for multiple download of files can end up a very long operation if your users want to download a whole, deep folder at once. To avoid hogging the system, use the access.powerfs plugin to actually delegate this compression to the underlying server.</p> <p>This requires having the ZIP utilitary available through the command line (working ok on Linux &amp; Windows systems), and when triggering a full folder download, Pydio will launch a zip command on the OS, monitor its progress and display the percentage to the user, and once it\u2019s done, trigger a download of the created archive.</p> <p>You can enable this feature by going to All Plugins &gt; Available Plugins &gt; Action Plugins and enable Zip Delegation.</p>"},{"location":"admin-guide/pydio-advanced-configuration/tuning-server-performances/#make-use-of-a-cache-server-mechanism","title":"Make use of a Cache Server mechanism","text":"<p>Caching helps in consistently reducing hefty/slow operations and minimizing system resources needed to load a page. Thus boosting the performance to a great extent. Pydio provides an option to configure third party vendor's caching service with pydio.</p> <p>Though caching service was introduced in pydio v6.2.X, the ease of configuring it has been greatly enhanced in the later versions. Now you can directly configure the caching options from Pydio admin panel.</p> <p>Along with the PHP Accelerator (PHP APC) pydio provides memcache, memcached, redis, xcache options by default to configure cache server.. The NOSQL keyvalue stores like memcache, memcached and Redis runs a server on a local port to provide the caching service.</p> <p></p>"},{"location":"admin-guide/pydio-advanced-configuration/configure-mail-digest/","title":"Configure mail digest","text":"<p>Since Pydio 6.4.0, we added the \"Mail digest\" feature to avoid receiving tons of emails when watching for a file or folder modification.</p> <p>This page is here to help you configure the mail digest and the mail sender. The mail sender is required to send digest emails.</p>"},{"location":"admin-guide/pydio-advanced-configuration/configure-mail-digest/#enable-the-feature","title":"Enable the feature","text":"<p>You need to go to your Setting page, then click to the mail icon in your left and enable the feature by clicking in the \"Activate Queue\" field.</p> <p></p>"},{"location":"admin-guide/pydio-advanced-configuration/configure-mail-digest/#configure-the-mailer-plugin","title":"Configure the Mailer Plugin","text":""},{"location":"admin-guide/pydio-advanced-configuration/configure-mail-digest/#this-example-is-for-the-enterprise-edition","title":"This example is for the Enterprise Edition","text":"<p>Now we need to configure the Mailer plugin to avoid any problem when Pydio send a mail. I take the easiest exemple by using the smtp of Gmail with PHPMailer</p> <p></p> <ul> <li> <p>Mailer Plugin : I choose \"PHPMailer\" because I use the smtp ( who's disabled in \"PHPMailer-lite\")   </p> </li> <li> <p>Mailer : The mail software, \"smtp\" is selected in this exemple   </p> </li> </ul> <p>When you choose \"smtp\" as mail software, several fields are added :   </p> <ul> <li> <p>Host : The host of the smtp, for gmail it's \"smtp.gmail.com\"   </p> </li> <li> <p>Port : The port number of the Host, gmail use the port 587   </p> </li> <li> <p>SMTP Authentification : If you need to add your login / password to use the smtp, select \"YES\"   </p> </li> <li> <p>Username : In many case, it's your email   </p> </li> <li> <p>Password : The password of your email   </p> </li> </ul> <p>You also need to configure the sender when Pydio send a mail.</p> <p></p> <ul> <li> <p>Sender Mail : The mail of the sender ( generaly the same as your email )   </p> </li> <li> <p>Sender Name : The name of the sender ( can be your real name or a bot name such as \"Pydio-bot\" )   </p> </li> <li> <p>Unique Sender : You can force Pydio to use only the \"Sender Mail\" to avoid any problem   </p> </li> </ul> <p>It's optionnal but you can also configure the content of the mail</p> <p></p> <p>Subject Prepend : Before the subject of Pydio, you can add a prefix so the mail can be more visible   </p> <ul> <li> <p>Subject Append : After the subject of Pydio, you can add a sufix   </p> </li> <li> <p>Body Layout : The body of the mail send by Pydio, you can add HTML to change the template ( DO NOT DELETE AJXP_MAIL_BODY )   </p> </li> <li> <p>Layout Folder : The folder where are the layout   </p> </li> </ul>"},{"location":"admin-guide/pydio-advanced-configuration/configure-mail-digest/#configure-the-digest-in-my-profile","title":"Configure the digest in My Profile","text":"<p>Go to My Account &gt; My Profile on the top right of your Pydio and configure your own digest frequency. Dont forget to put you email so that you get the notifications.</p> <p></p> <p>Don't forget to save before leaving the page.</p>"},{"location":"admin-guide/pydio-advanced-configuration/configure-mail-digest/#enable-and-configure-the-task-with-a-cron-expression","title":"Enable and configure the Task with a CRON expression","text":"<p>We configured the digest mail, but we need to activate an action to send the mail. The action that sends grouped email is named consume_mail_queue and need to be called to work. That's why we gonna create a Task in our Pydio. The scheduler is going to call this action at the frequency that we configured with the CRON expression.</p> <p>You can go to this how-to that will explain to you in details how to use the scheduler and  Schedule tasks.</p> <p>https://pydio.com/en/docs/kb/plugins/using-tasks-scheduler</p>"},{"location":"developer-guide/introduction/","title":"Introduction","text":""},{"location":"developer-guide/introduction/#introduction","title":"Introduction","text":"<p>[Pydio 8] This document is targetted as a broad audience: it will describe the most simple usages of the Pydio REST API, teach you how to write a simple Pydio plugin by following an example, and digg down to the internals of the Pydio code to put you quickly on track for hacking and contributing. </p> <p>As such, this reading is highly recommended if you want either to customize your installation or if you want to develop a full-featured plugin. You should be basically comfortable with XML and XPath syntaxes, as well as PHP if you want to add server-side functions, and JavaScript if you want to add client-side behaviours.</p> <p>[:summary]</p>"},{"location":"developer-guide/what-s-new-in-pydio-8/","title":"What's new in Pydio 8","text":""},{"location":"developer-guide/what-s-new-in-pydio-8/#bye-bye-prototypejs-hello-reactjs","title":"Bye bye PrototypeJS, hello ReactJS!","text":"<p>Pydio 8 is a major UX release, and sees the work started in Pydio 7 of transitioning legacy javascript code to new standards terminated. </p> <p>PrototypeJS was entirely removed, as well as some dependencides for some specific features (e.g jquery+backbone for router) and all was totally rewritten to use ReactJS.</p> <p>As a developer point-of-view, it means :  - That you do have to understand the basics of ReactJS and MVVM concept. - That you have to properly install npm / grunt when you want to hack - That the code you will write will follow the ES6 javascript standards - ... and that the code you will write will be naturally cleaner, better, and more performant :-).</p> <p>Please read the \"Setting up Development Environment\" section to learn about the tools required for development.</p>"},{"location":"developer-guide/going-deeper/index/","title":"Index","text":"<p>In this section, we will go through the various technologies running under the hood of Pydio. You will learn how to setup  a development environment how to get started hacking Pydio.</p> <ul> <li>Internal Data Model</li> <li>Plugin Architecture</li> <li>Setting up your dev environment</li> <li>Technologies overview</li> <li>Understanding XML Registry</li> </ul>"},{"location":"developer-guide/going-deeper/internal-data-model/","title":"Internal Data Model","text":""},{"location":"developer-guide/going-deeper/internal-data-model/#data-model","title":"Data Model","text":"<p>By Pydio internal data, we refer to all \u201cconfiguration\u201d data that are not the files and folders stored in the workspaces. These data cover workspaces definitions, users, roles, etc\u2026 The following schema describes the datamodel.</p> <p></p>"},{"location":"developer-guide/going-deeper/internal-data-model/#accessing-this-data","title":"Accessing this Data","text":"<p>As you might already have understood, most of these objects can be stored in various backends, depending on the chosen plugin. For the most commonly used (workspaces &amp; users/roles data), there are two static classes that you must know: AuthService and ConfService. These classes will hide the actual plugin implemenation and provide simple to use APIs to CRUD the various objects.</p>"},{"location":"developer-guide/going-deeper/plugin-architecture/","title":"Plugin Architecture","text":""},{"location":"developer-guide/going-deeper/plugin-architecture/#plugins","title":"Plugins","text":""},{"location":"developer-guide/going-deeper/plugin-architecture/#overview","title":"Overview","text":"<p>For those familiar with the Eclipse architecture, Pydio is based on the same approach : all features provided by the application are packed as \u201cplugins\u201d. Even the GUI itself is a plugin. This allow a huge modularity in creating features, overriding them, creating dependencies between them, etc. Some plugin will implement a given interface or abstract PHP class to give a precise set of features that are \u201cunderstood\u201d by the core of the application (like the Authentification plugins for example), other can add purely custom features to access a given set of data, manipulate it, add a specific \u201chello world\u201d button somewhere in the application, etc\u2026</p> <p>Below, you can see the organisation of some of the plugins that are embedded in the core application, and that may be used for all the \u201cinternal data\u201d management: configuration storage, authentication drivers, logs, etc.</p> <p></p> <p>In this second diagram, you can see the plugins implied in all the actual business data manipulation: workspace drivers and metadata management.</p> <p></p> <p>The keypoint here, is that whatever feature you want to develop, you should create your own plugin: it will be encapsulated, upgrade-proof, and should always demonstrate the flexibility of the system.</p>"},{"location":"developer-guide/going-deeper/plugin-architecture/#manifestxml","title":"Manifest.xml","text":"<p>A plug-in is \u201cauto-declarative\u201d via a specific XML file, called <code>manifest.xml</code>. This file contains all information needed to understand how it should be initialized and used, it\u2019s declaring all necessary files and resources used by this plugin, and it will be able to have an impact on server and/or the client side. If the manifest.xml is present inside the plugin folder and its syntax is ok, the plugin can be activated.</p> <p>As we will understand in the next chapter (XML Registry), plugins can, through their manifest.xml file, declare both server-side AND client-side behaviours :</p> <ul> <li>Server-side: trigger a user-defined PHP function (\u201ccallback\u201d) to answer a query when calling \u201cmy_action\u201d : remember the paramenter get_action described above in this tutorial? your plugin will define a given function that will be called by the application when index.php?get_action=my_action is called by the client. All http parameters are passed to your callback, so you can do exactly anything you want with it.</li> <li>Client-side: add an button to any toolbar or menu, trigger a JavaScript code snippet on the client side when clicking this button, and more generally, add any bit of code to the loaded GUI\u2026</li> </ul>"},{"location":"developer-guide/going-deeper/plugin-architecture/#core-plugins","title":"\u201cCore\u201d plugins","text":"<p>Plugins are always characterized by a \u201ctype.name\u201d syntax. \u201cType\u201d allows a certain taxonomy in the plugins organisation, and the only reserved word is \u201ccore\u201d. The \u201ccore.*\u201d plugins have their name part referring to an existing \u201ctype\u201d of plugin. A \u201ccore.type\u201d has two particularities</p> <ol> <li>it is always activated by the framework, and can be in charge of deciding whether to load the existing type.* plugins</li> <li>all type.* plugins can access this plugin, in a kind of \u201cinheritance\u201d fashion.</li> </ol> <p>For example, all workspaces drivers have an \u201caccess\u201d type (access.fs, access.ftp, access.s3, etc), and the \u201ccore.access\u201d plugin is a special plugin that defines an abstract PHP class that all access plugins must implement.</p>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/","title":"Setting up your dev environment","text":""},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#pydio-code-and-dependencies","title":"Pydio Code and Dependencies","text":"<p>Pydio code is available on Github. Clone our main repository on your local machine, and set up apache (or any web server running on your machine to server the core/src/ folder as the DocumentRoot.</p> <pre><code>git clone https://github.com/pydio/pydio-core.git\n</code></pre> <p>Of course, your machine should have PHP5.5.9+ installed, and a Database server (MySQL/PostGreSQL) as well. Php 7.1 would be a recommanded setup.</p>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#javascript-required-tools","title":"Javascript Required Tools","text":""},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#install-node-and-grunt","title":"Install node and grunt","text":"<p>If you plan to modify the interface, you will probably have to modify either Javascript or CSS files. As explained in the global overview, you need NPM and Grunt instaleld on your machine.</p> <p>Install NPM (the Node Package Manager) globally on your machine. Please google and follow the necessary steps for your OS, there are many tuto's on the Internet on how to install Node.</p> <p>Finally install the Grunt command line globally with </p> <pre><code>npm install -g grunt-cli\n</code></pre>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#recompile-a-plugin","title":"Recompile a plugin","text":"<p>This will allow you to recompile UI resources by running the following command inside each plugin that contains a Gruntfile.js file: </p> <pre><code>npm install\ngrunt\n</code></pre>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#live-compilation","title":"Live compilation","text":"<p>When developing, you definitely don't want to manually run grunt each time you save a file. A specific 'watch' task is defined exactly to do that for you. If you are inside a plugins folder, run </p> <pre><code>grunt watch\n</code></pre> <p>Now each time you save a file, a grunt taks will automatically run to compile it. </p> <p>One important note is that for most plugin, this is just enough. The \"gui.ajax\" plugin, wich is a bit heavier, if the \"watch\" task triggers a full grunt on each save, it's really long and not optimized. For that reason, the 'watch' task inside this plugin will just recompile the modified library, without going through the rest of minification tasks. To be able to see the changes in your browser, you will have to switch pydio to \"CLIENT_DEBUG\" mode, by editing <code>conf/bootstrap_context.php</code> file.</p> <p></p> <p>Once you are done, make sure to manually run <code>grunt</code> once inside gui.ajax, and then switch back from CLIENT_DEBUG mode. </p>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#other-useful-tools","title":"Other Useful tools","text":""},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#php-xdebug-extension","title":"PHP Xdebug Extension","text":"<p>If you are working on PHP, you should as well install the PHP XDebug extension, as it can be interacting with your IDE and provide very useful way of understanding what's going on in your (or our) code.</p>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#chrome-developer-tools","title":"Chrome Developer Tools","text":"<p>When developing Javascript in the browser, learn yourself the best tool ever : the Web Developer Tools from Google Chrome. It will allow you to scan the DOM structure in real time, monitor the XHR queries, debug the JavaScript, etc. But be also aware that what you develop will be executed on many different browsers : Firefox, Webkit (chrome/safari), Internet Explorer, Opera, etc\u2026 Always test your changes on all browser.</p>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#pydio-debug-modes","title":"Pydio Debug Modes","text":"<p>When developing on Pydio, there are two configurations that you must be aware of in the conf/bootstrap_context.php file :</p> <ul> <li>AJXP_CLIENT_DEBUG : when set to true, the web client will load most of the javascript and css files independantly, instead of loading the minified concatenated version. This is really useful for developing. Make always sure to recompile everything and test your changes with false afterward.</li> <li>AJXP_SERVER_DEBUG : When set to true, triggers a more verbose level of logging in the server. Coupled with that, it can be handy to switch your logger to \"Text Logger\" when developing, to be able to tail the content of the logs via a command line instead of by listing the content of an SQL table.</li> </ul>"},{"location":"developer-guide/going-deeper/setting-up-your-dev-environment/#contributing","title":"Contributing","text":"<p>We are always very happy and excited to welcome new contributers on the code. There are just a couple of rules that you must follow in order to make the on-boarding process smooth: </p> <ol> <li>Check that there is not an on-going PR or opened issue already on the same topic.</li> <li>Sign the CLA</li> <li>Submit a Pull Request via Github.</li> <li>Don't be offended if we discuss your PR with you :-)</li> </ol>"},{"location":"developer-guide/going-deeper/technologies-overview/","title":"Technologies overview","text":""},{"location":"developer-guide/going-deeper/technologies-overview/#php-server-access-points","title":"PHP Server \u2013 access points","text":"<p>Pydio is based on the PHP scripting language for the server-side, the main entry point being the /index.php of the root of the installation. Queries parameters are sent via HTTP GET or HTTP POST to the script, and responses can be sent back with various content types, depending on the action. The most common format is currently XML (always encoded in UTF-8) but JSON can be used for some specific actions (particularly in the Settings panel actions), and the downloads trigger \u201cforce-download\u201d headers and binary data.</p>"},{"location":"developer-guide/going-deeper/technologies-overview/#session-based-api","title":"Session-based API","text":"<p>The standard API usage would be calling index.php with at least a get_action parameter. This parameter can be seen as the target service the query is adressing.  Additional parameters would then depend on this get_action value. This \u201cactions\u201d are in fact declared by all plugins, through XML files. See the Plugins Architecture paragraph for more details. Below, you can see a trace of the queries sent by the client to the server. The secure_token is a unique token attached to this instance of the GUI, for CSRF protection.</p> <p></p>"},{"location":"developer-guide/going-deeper/technologies-overview/#rest-api-v1","title":"REST API v1","text":"<p>Actions can be triggered by the REST API: either using the API V1, that is listening on yourserver.com/pydio/api/ URL. If a \u201crestParams\u201d attribute is declared in the server callbacks in the XML files, and action is available through a REST call via /api/repository_alias/action_name/restParameters. Additional POST/GET parameters can be appended to the request as well.</p>"},{"location":"developer-guide/going-deeper/technologies-overview/#rest-api-v2","title":"REST API v2","text":"<p>Starting with Pydio 7, we introduced a new REST API that was designed from ground up to closely follow REST standards. The API v2 URLs are more specific and are mapped under the hood to specific pydio actions. Please see the References &gt; REST API V2 for more information.</p>"},{"location":"developer-guide/going-deeper/technologies-overview/#php-command-line","title":"PHP Command line","text":"<p>Finally, all these actions can also be triggered from the command line, using PHP CLI and loading the /cmd.php file. Actions are in that case passed through the -a parameter, along with a repository id, users credential, and additional action parameters. The output is currently exactly the same as it would though an Http call.</p>"},{"location":"developer-guide/going-deeper/technologies-overview/#html5js-webapp","title":"HTML5/JS WebAPP","text":"<p>The standard HTML client of Pydio must be seen more as a standalone application talking to the server as any \u201cdesktop\u201d application would, than as the good old HTML pages PHP would generate on-the-fly: once all javascript resources are loaded in the browser, it acts as a remote client and only talks to the server through the API described above, retrieving and putting data but never getting \u201cviews\u201d.</p> <p>The Javascript layer is based on pure two stacks : a core library written in javascript (ES6) and graphical components written in React JS. Both are transpiled into pure-javascript using commong Grunt tasks (see below).</p>"},{"location":"developer-guide/going-deeper/technologies-overview/#javascript-compilation","title":"JavaScript Compilation","text":"<p>Transpilation &amp; Browserification</p> <p>It is now a common practice to write javascript file using cutting edge Javascript syntax, either ES6 or ES7, and \"transpiling\" them to javascript that will be surely understood by all browsers (ES5). Pydio uses ES6, along with JSX syntaxt (React specific syntax). The transpile operation is done using Babel.</p> <p>Another aspect is the ability to use all the existing open source libraries available on NPM registry. This was originally designed for NodeJS programs, that can handle dynamically the load of these dependencies (using import 'libname' instructions). When it comes to browser application, an additional step is required to statically link to all dependencies and make sure they will be loaded inside the browser at runtime. This is done using Browserify.</p> <p>Grunt Task</p> <p>Happily, if you need to make changes to javascript files or create your own plugin, you don't have to apply all these steps manually. An additional tool, Grunt, can run all the necessary operation, following a set of instructions defined inside a Gruntfile. This is a NodeJS based tool, so in order to perform these transformation, you will have to install NodeJS/NPM on your server, and the grunt command line tool.</p> <p>See next chapter \"Setup Hacking\".</p>"},{"location":"developer-guide/going-deeper/understanding-xml-registry/","title":"Understanding XML Registry","text":""},{"location":"developer-guide/going-deeper/understanding-xml-registry/#gathering-all-plugins-contributions","title":"Gathering all plugins contributions","text":"<p>One of the key concept of Pydio internals is that all active plugins are contributing a certain amount of information, directly declared from their manifest.xml or eventually programmatically built, and that information compose a big XML Document called the XML Registry. This registry is thus reflecting very precisely the state of the application (all active plugins), and can be queried using XPath to get such or such information.</p> <p>Furthermore, once expurged from a couple of XML Elements for the sake of both performance and security, this registry is actually sent to the client, and can be parsed and searched in the same fashion directly in the web application. For this reason, a plugin will be able to declare in the same bit of XML both a specific GUI action behaviour (in javascript) and a server-side webservice pointing to a specific function of the plugin class.</p> <p>Once you get this, you can even see the other way round : every XML node declared somewhere in the XML manifest files of the plugins are just fragments of a bigger document, the XML registry. This allows to merge XML branches that have the same parent node into one.</p>"},{"location":"developer-guide/going-deeper/understanding-xml-registry/#xml-merging-example","title":"XML Merging example","text":"<p>For example, if one active plugin contains the node plugin/actions/action[name=\u2019action1\u2032] and another one contains the same kind of structure with [name=\u2019action2\u2032], both <code>&lt;action&gt;</code> nodes will be merged under one unique <code>&lt;actions&gt;</code> branch in the registry. Going further, if a third plugin contains a node plugin/actions/action[name=\u2019action1\u2032]/action_detail, this <code>&lt;action_detail&gt;</code> subnode will be appended to the <code>&lt;action name=\"actions1\"&gt;</code> node declared by the first plugin inside the registry. Want to understand this better? Open some manifest.xml files that are inside plugins you are indeed using, then call content.php?get_action=get_xml_registry to see the big picture!</p> <p>This mechanism of XML merging is one of the important legs of the plugins architecture, as it allows to dynamically append or overwrite the XML contributions of a given plugin from within another one! And since this XML registry is the unique interface between the world and the plugin, and that all Javascript or PHP calls are declared in this XML, you can understand the power of this extension mechanism. In fact, it\u2019s clearly converging with the well-known Eclipse Osgi architecture.</p>"},{"location":"developer-guide/going-deeper/understanding-xml-registry/#importing-external-xml-nodes","title":"Importing external XML Nodes","text":"<p>Last thing need to use these XML files nearly as a language scripting is to be able to insert a given set of XML from another file into a Manifest. For example, the FTP plugin is using all the same actions as the FS plugin, so it would be useless to have to re-declare all actions definitions in the FTP plugin. The <code>&lt;external_file&gt;</code> key is here to do the job : with an include/exclude mechanism that takes XPath expression as arguments, it allows you to import all the nodes returned by the include expression inside your current XML.</p>"},{"location":"developer-guide/going-deeper/understanding-xml-registry/#dependencies-mechanism","title":"Dependencies mechanism","text":"<p>At this point, you might ask your self \u201chow to be sure that one plugin will be loaded after another?\u201d so that plugin B overrides plugin A data and not the opposite? The third leg of the plugin mechanism indeed resides in the \u201cdependencies\u201d mechanism, once again declared in the manifest.xml file. If a plugin B declares that it depends on plugin A, it will indeed be loaded (and integrated to the registry) after plugin A, or not loaded at all if plugin A is not present. This mechanism can play at load level and at activation level.</p>"},{"location":"developer-guide/going-deeper/understanding-xml-registry/#how-the-registry-is-changing-in-time","title":"How the registry is changing in time","text":"<p>Now that you understand that the registry is built from the bunch of plugins contributions, you must understand how central it is in the way application, particularly the GUI. By nature, some plugins (namely the access., auth. and serial. ones) can have only one instance linked to a given state of the application. For example, even if auth.serial, auth.remote, auth.ldap, etc, are available plugins, only one can be active* at a time in each category of plugin. Going further, the active plugin in this given category can dynamically change its own registry contributions, depending on the state of the current session!</p> <p>Try this : log in to Pydio, then in another tab call index.php?get_action=get_xml_registry (or use Pydio.getXmlRegistry() in a JavaScript console). Observe how the current <code>&lt;user&gt;</code> data is passed inside the registry? Now log out and update your registry : <code>&lt;user&gt;</code> is out. It\u2019s exactly the same when you are switching repository : the registry is totally rebuilt, given the registry_contributions of the active access.* plugin, which is determined by the current repository.</p> <p></p> <p>The GUI Ajax client itself is based on the XML Registry : since the XML registry is evolving in time during a session, it must be partially or totally reloaded by the client when some predefined events occur (login, logout, switch_repository, etc\u2026). This allow also to pass GUI components configuration to the client via the registry, and they will be reparsed and reapplyed on-the-fly (if the target components allows it). See Ajax GUI &gt; Updating components configurations.</p>"},{"location":"developer-guide/server-component/index/","title":"Index","text":"<p>This section will describe the main PHP classes used on the server-side and what they are used for. We will also cover the \"Hook\" mechanism, our event-driven model to loosely couple plugins together.</p> <ul> <li>Core Classes</li> <li>Hooks: event-driven model</li> </ul>"},{"location":"developer-guide/server-component/core-classes/","title":"Core Classes","text":"<p>We will briefly describe here the core classes provided by the framework. From a developer point of view, the most important ones should be PluginsFramework\\Plugin (from which your own plugin will extend), and all the Services\\* classes that gives you quick access to the application state.</p> <p>Main Namespace is \\Pydio, it should be prefixed inside all classes below.</p>"},{"location":"developer-guide/server-component/core-classes/#controller","title":"Controller","text":"<p>This package contains the main Controller class (C of MVC) plus various alternative tools to run pydio action, either on command line or after the connection is closed.</p> <ul> <li>Controller\\CliRunner</li> <li>Controller\\Controller</li> <li>Controller\\HTMLWriter</li> <li>Controller\\ProgressBarCLI</li> <li>Controller\\ShutdownScheduler</li> <li>Controller\\UnixProcess</li> </ul>"},{"location":"developer-guide/server-component/core-classes/#exception","title":"Exception","text":"<p>Pydio specific exceptions</p> <ul> <li>Exception\\ActionNotFoundException</li> <li>Exception\\AuthRequiredException</li> <li>Exception\\DBConnectionException</li> <li>Exception\\ForbiddenCharacterException</li> <li>Exception\\LoggingException</li> <li>Exception\\LoginException</li> <li>Exception\\NoActiveWorkspaceException</li> <li>Exception\\PydioException</li> <li>Exception\\PydioPromptException</li> <li>Exception\\PydioUserAlertException</li> <li>Exception\\RepositoryLoadException</li> <li>Exception\\ResponseEmissionException</li> <li>Exception\\RouteNotFoundException</li> <li>Exception\\UserInterruptException</li> <li>Exception\\UserNotFoundException</li> <li>Exception\\WorkspaceAuthRequired</li> <li>Exception\\WorkspaceForbiddenException</li> <li>Exception\\WorkspaceNotFoundException</li> </ul>"},{"location":"developer-guide/server-component/core-classes/#http","title":"Http","text":"<p>This package handles all the communication to\\from server. This is entirely based on PSR-7 interfaces (ServerRequestInterface, ResponseInterface), using the Zend\\Diactoros implementation (loaded via Composer). Additionally, the Router is based on FastRoute package (loaded via composer as well).</p> <ul> <li>Http*Base* : A static class in charge of boot the Server object.</li> <li> <p>Http*Cli* : a specific \"server\" that encapsulates pydio middlewares when running via Command Line.</p> <ul> <li>Http\\Cli\\AuthCliMiddleware</li> <li>Http\\Cli\\CliMiddleware</li> <li>Http\\Cli\\CliServer</li> <li>Http\\Cli\\Command</li> <li>Http\\Cli\\FreeArgvOptions</li> <li>Http\\Cli\\FreeDefOptions</li> </ul> </li> <li> <p>Http*Dav* : dedicated server for serving workspace data via WebDAV.</p> <ul> <li>Http\\Dav\\AuthBackendBasic</li> <li>Http\\Dav\\AuthBackendDigest</li> <li>Http\\Dav\\BrowserPlugin</li> <li>Http\\Dav\\Collection</li> <li>Http\\Dav\\DAVResponse</li> <li>Http\\Dav\\DAVServer</li> <li>Http\\Dav\\Node</li> <li>Http\\Dav\\NodeLeaf</li> <li>Http\\Dav\\RootCollection</li> <li> <p>Http*Message* : Various classes encapsulating specific response messages</p> </li> <li> <p>Http\\Message\\ExternalUploadedFile</p> </li> <li>Http\\Message\\JsActionTrigger</li> <li>Http\\Message\\LoggingResult</li> <li>Http\\Message\\Message</li> <li>Http\\Message\\RegistryMessage</li> <li>Http\\Message\\ReloadMessage</li> <li>Http\\Message\\ReloadRepoListMessage</li> <li>Http\\Message\\UserMessage</li> <li>Http\\Message\\XMLDocMessage</li> <li>Http\\Message\\XMLMessage</li> </ul> </li> <li> <p>Http*Middleware* : Main middleware stacked when calling a request from server</p> <ul> <li>Http\\Middleware\\AuthMiddleware</li> <li>Http\\Middleware\\ITopLevelMiddleware</li> <li>Http\\Middleware\\SapiMiddleware</li> <li>Http\\Middleware\\SecureTokenMiddleware</li> <li>Http\\Middleware\\SessionMiddleware</li> <li>Http\\Middleware\\SessionRepositoryMiddleware</li> <li>Http\\Middleware\\WorkspaceAuthMiddleware</li> </ul> </li> <li> <p>Http*Response* : Special response objects that can be easily serialized to a given format (namely XML or JSON)</p> <ul> <li>Http\\Response\\AsyncResponseStream</li> <li>Http\\Response\\CLISerializableResponseChunk</li> <li>Http\\Response\\FileReaderResponse</li> <li>Http\\Response\\JSONSerializableResponseChunk</li> <li>Http\\Response\\SerializableResponseChunk</li> <li>Http\\Response\\SerializableResponseStream</li> <li>Http\\Response\\XMLDocSerializableResponseChunk</li> <li>Http\\Response\\XMLSerializableResponseChunk</li> </ul> </li> <li> <p>Http*Rest* : Specific middlewares when accessing via REST</p> <ul> <li>Http\\Rest\\ApiRouter</li> <li>Http\\Rest\\RestApiMiddleware</li> <li>Http\\Rest\\RestApiServer</li> <li>Http\\Rest\\RestAuthMiddleware</li> </ul> </li> <li>Http*Server* : the base class of our PSR-7 server</li> <li>Http*SimpleRestResourceRouter*: Simpel router for rest resources</li> <li>Http*TopLevelRouter* : Top level router using plugins\\core.ajaxplorer\\routes*.json files to load into FastRoute</li> <li>Http*Wopi* : Specific middlewares for serving files via the Wopi protocol (used for Collabora)<ul> <li>Http\\Wopi\\AuthFrontend</li> <li>Http\\Wopi\\AuthMiddleware</li> <li>Http\\Wopi\\Middleware</li> <li>Http\\Wopi\\Router</li> <li>Http\\Wopi\\Server</li> </ul> </li> </ul>"},{"location":"developer-guide/server-component/core-classes/#model","title":"Model","text":"<p>This package contains some Model classes or interfaces for various aspects of the application (users, workpaces, etc). Interfaces are generally implemented inside the plugins.</p> <ul> <li>Model\\AddressBookItem</li> <li>Model\\Context</li> <li>Model\\ContextInterface</li> <li>Model\\ContextProviderInterface</li> <li>Model\\FilteredRepositoriesList</li> <li>Model\\FilteredUsersList</li> <li>Model\\RepositoryInterface</li> <li>Model\\UserInterface</li> </ul>"},{"location":"developer-guide/server-component/core-classes/#pluginframework","title":"PluginFramework","text":"<p>Core framework for detecting plugins and launching the plugin registry. This is really the heart of the machine.</p> <ul> <li>PluginFramework\\CoreInstanceProvider</li> <li>PluginFramework\\Plugin</li> <li>PluginFramework\\PluginsService</li> <li>PluginFramework\\SqlTableProvider</li> </ul>"},{"location":"developer-guide/server-component/core-classes/#serializer","title":"Serializer","text":"<p>Utils used for serializing model objects into specific formats</p> <ul> <li>Serializer\\NodeXML</li> <li>Serializer\\RepositoryXML</li> <li>Serializer\\UserXML</li> </ul>"},{"location":"developer-guide/server-component/core-classes/#services","title":"Services","text":"<p>Singletons available throughout the application, for getting or setting the datamodel objects.</p> <ul> <li>Services\\ApiKeysService</li> <li>Services\\ApplicationState</li> <li>Services\\AuthService</li> <li>Services\\CacheService</li> <li>Services\\ConfService</li> <li>Services\\LocalCache</li> <li>Services\\LocaleService</li> <li>Services\\RepositoriesCache</li> <li>Services\\RepositoryService</li> <li>Services\\RolesService</li> <li>Services\\SessionService</li> <li>Services\\UsersService</li> </ul>"},{"location":"developer-guide/server-component/core-classes/#utils","title":"Utils","text":"<p>Many tools for helping with string manipulation, request parsing, etc.</p> <ul> <li>Utils*Crypto*<ul> <li>Utils\\Crypto\\Key</li> <li>Utils\\Crypto\\ZeroPaddingRijndael</li> <li>Utils\\Crypto</li> </ul> </li> <li>Utils*DBHelper*</li> <li>Utils*FileHelper*</li> <li>Utils*Http*<ul> <li>Utils\\Http\\BruteForceHelper</li> <li>Utils\\Http\\captcha_words.txt</li> <li>Utils\\Http\\CaptchaProvider</li> <li>Utils\\Http\\CookiesHelper</li> <li>Utils\\Http\\UserAgent</li> </ul> </li> <li>Utils*Reflection*<ul> <li>Utils\\Reflection\\DiagnosticRunner</li> <li>Utils\\Reflection\\DocsParser</li> <li>Utils\\Reflection\\LocaleExtractor</li> <li>Utils\\Reflection\\PydioSdkGenerator</li> </ul> </li> <li>Utils*TextEncoder*</li> <li>Utils\\Vars<ul> <li>Utils\\Vars\\InputFilter</li> <li>Utils\\Vars\\OptionsHelper</li> <li>Utils\\Vars\\PasswordEncoder</li> <li>Utils\\Vars\\PathUtils</li> <li>Utils\\Vars\\StatHelper</li> <li>Utils\\Vars\\StringHelper</li> <li>Utils\\Vars\\UrlUtils</li> <li>Utils\\Vars\\VarsFilter</li> <li>Utils\\Vars\\XMLFilter</li> </ul> </li> <li>Utils\\XMLHelper</li> </ul>"},{"location":"developer-guide/server-component/hooks-event-driven-model/","title":"Hooks: event-driven model","text":""},{"location":"developer-guide/server-component/hooks-event-driven-model/#basics","title":"Basics","text":"<p>Along with the flexibility of a plugin-oriented framework comes always the need for an event-oriented mechanism to link the plugins together. This is very important to avoid introducing hard dependencies from one plugin to another, by directly calling a plugin method from within another.</p> <p>Instead, the first plugin will trigger an event (here, a hook), that will be handled by a central manager, without much knowledge of what will happen to this event. The event can \u201ctransport\u201d some bit of informations, like a node, or anything else that makes sense.</p> <p>On the other side, any plugin can register to the central manager, to be informed of whenever this event is triggered. That way, Plugin A actually triggers a function inside Plugin B (and / or plugin C, D, etc), without knowing anything about the existence of plugin B.</p>"},{"location":"developer-guide/server-component/hooks-event-driven-model/#hooks","title":"Hooks","text":"<p>In Pydio, hooks are declared as needed directly in the PHP code, by simply calling the Controller::applyHook() method. Thus, the available hooks list is gathered by a script that does some code introspection. The result is visible in the Settings panel, under Developer Resources &gt; Hooks Definitions. Currently, there are 3 types of hooks : node. (informing a change on a data node), user. (informing about users creation/deletion), and msg.* (used for transporting any specific messages, generally in an \u201cinstant\u201d manner).</p> <p>To register a listener to a given hook, a plugin will add a callback inside the <code>&lt;hooks&gt;</code> element of its manifest.xml, declaring a method of the plugin class. For example :</p> <pre><code>&lt;hooks&gt;\n    &lt;serverCallback hookName=\"node.info\" methodName=\"loadNodeInfo\"/&gt;\n&lt;/hooks&gt;\n</code></pre> <p>The serverCallback will take an optional defer attribute, that would apply the node at the very end of the script, after all output is sent to the user.</p>"},{"location":"developer-guide/server-component/hooks-event-driven-model/#examples","title":"Examples","text":"<p>The figure below show some of the hooks triggered during the life of a node when a file is uploaded (node1) or when listing a directory content (node 2).</p> <p></p>"},{"location":"developer-guide/pydio-api/index/","title":"Index","text":"<p>This section will describe how to consume our REST API's. You should make sure to read the first introductory section to  be familiar about their structure.</p> <ul> <li>Introduction to Pydio APIs</li> <li>Api V2 summary</li> <li>FileSystem API (v1)</li> <li>Provisioning API (v1)</li> <li>Lifecycle API (v1)</li> <li>Other Access Drivers (v1)</li> <li>Other plugins API (v1)</li> </ul>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/","title":"Introduction to Pydio APIs","text":""},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#setup-io-formats","title":"Setup - I/O Formats","text":""},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#checking-apis-are-working","title":"Checking API's are working","text":"<p>In this documentation, we will assume that you already have a working Pydio server, and especially that you went through the steps to make sure that the REST API are correctly configured. Basically, this just requires making sure that your  web server is correctly configured for RewriteRules. If you are not sure, please check the administrator guide : https://pydio.com/en/docs/v8/checking-apis</p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#input-output-expected-formats","title":"Input / Output Expected Formats","text":"<p>Being over the place for a long time now, Pydio (formerly called AjaXplorer), exposes a set of API's that may have been  written long ago, as well as more recent ones. For this reason, and although we are working hard to make that more homogeneous,  some API's may output XML, some may output JSON, etc..  That said, our most common format still is a SOAP-like format : </p> <ul> <li>Input : URI parameters (see below) + POST parameters if required</li> <li>Output : XML (content type is text/xml).</li> </ul> <p>Input and output are expected to use UTF-8 encoding.</p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#api-v1","title":"Api V1","text":""},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#building-rest-api-urls","title":"Building REST Api URL's","text":"<p>All the Pydio actions that can be addressed via the standard Pydio clients (web, mobile, sync) can be accessed directly  through various standard protocols by your own client application.</p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#base-uri","title":"Base URI","text":"<p>On a default Pydio installation, the rest API is configured to be available on https://yourpydio.com/api/. This can be modified by changing the .htaccess definitions for the rewrite rules. </p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#workspace-id-or-alias","title":"Workspace ID or ALIAS","text":"<p>Once logged in to Pydio, a \"user\" is always logged to a given \"workspace\". Even when you are looking the welcome page, you are in fact logged on a special \"workspace\", powered in background by the access.ajxp_home plugin. Depending on this workspace you are browsing,  one or many plugins may be active, and as actions are always contributed by plugins, actions are accessible or not via the API  depending on this current \"workspace\" state as well.</p> <p>For this reason, every call to the REST api will be built as follow:  </p> <pre><code>/api/workspace_id_or_alias/action_name/{paramValue1}/{paramValue2}/...\n</code></pre> <p>This is important to keep in mind. In our generated API documentation, we will generally use {default} as the workspace alias, but you will have to replace it with your own. For specific actions like users/groups provisioning, you must be working on the Admin Panel workspace, and the API docs thus use /api/settings/ instead of /api/default/.</p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#action-name","title":"Action Name","text":"<p>Finally, the next mandatory part of the URI is the name of the action to be performed. It is defined in each plugins under the &lt;actions&gt; xml elements.</p> <p>[:summary]</p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#api-v2","title":"Api V2","text":"<p>Starting with Pydio 7, we have rewritten the REST API from ground up to stick more closely to the REST standards. The api V2 is accessible under <code>yourpydio/api/v2</code> and provides access points for managing files and folders, as well as a whole set of commands for provisioning users and workspaces.</p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#authentication","title":"Authentication","text":"<p>Our REST API supports basic http authentication, with two types of credentials : </p> <ul> <li>Either the standard login / password of a Pydio user</li> <li>Or a pair of Key/Secret as generated by our keystore plugin. The pairs are generated on-demand by a logged-in user, and can be revoked from within Pydio UI. </li> </ul>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#alternative-accesses","title":"Alternative Accesses","text":""},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#using-php-on-command-line","title":"Using PHP on Command-line","text":"<p>Alternatively to the RESTfull access, all actions can also be triggered directly on the server where Pydio is installed,  via the Command Line. For that, we provide a cmd.php script a the root of the Pydio installation folder, that can be called using PHP. </p> <p>Similarly to building the REST URL to call, you would build the command with the following system: </p> <pre><code>php cmd.php -u=USERNAME -p=PASSWORD -r=WORKSPACE_ID -a=ACTION --param1=value1 --param2=value2\n</code></pre> <p>Where the four first parameters are mandatory, and the following ones will depend on the ACTION called. Beware that -u, -p, -r, -a take a single dash whereas any additional parameter takes a double-dash (--).</p>"},{"location":"developer-guide/pydio-api/introduction-to-pydio-apis/#using-our-legacy-soap-access-point","title":"Using our legacy \"SOAP\" access point","text":"<p>REST is cool and has emerged as a reference protocol for consuming API's. But for example our Web client  does not use this REST access, but a \"Soap-like\" session-based access point instead. You can use this as well, but this  requires a more complex negocation for authentication against the server. The advantage can be that we store some data in the session and this makes requests faster to load.</p> <p>To call an action defined by the API directly through this endpoint, you would call the following</p> <pre><code>https://yourpydio.com/index.php?get_action=ACTION_NAME&amp;secure_token=SECURE_TOKEN&amp;param1=value1&amp;param2=value2\n</code></pre> <p>This request expects a valid PHP Session ID passed through the Cookie Headers. SECURE_TOKEN is NOT the PHP session ID,  it is an additional token added for CSRF protection.  Basically, opening a valid session is an 3-steps process : </p> <ul> <li>Call get_boot_conf action to get a SECURE_TOKEN</li> <li>Post a login action with user credentials (login &amp; password)</li> <li>Call switch_repository action to log the user on a given workspace ( = repository ).</li> </ul> <p>If login is successful, you can then call any action that may be active on the current workspace.</p>"},{"location":"developer-guide/pydio-api/api-v2-summary/","title":"Api V2 summary","text":"<p>Starting with Pydio 7, we have rewritten the REST API from ground up to stick more closely to the REST standards. The api V2 is accessible under <code>yourpydio/api/v2</code> and provides access points for managing files and folders, as well as a whole set of commands for provisioning users and workspaces.</p> <p>This API is entirely described in the OpenAPI format (formerly Swagger). Please use the Reference to get all informations about the possible requests. Below is a short description of the major groups of this api.</p> <p>The access point use the various Http Methods (GET/POST/PATCH/DELETE) to perform the standard CRUD operations.</p>"},{"location":"developer-guide/pydio-api/api-v2-summary/#file","title":"File","text":"<p>These requests are related to all files manipulation (create files/folders, get information, uploads, etc...). It is split in two parts, the /api/v2/fs/ for manipulating the files and /api/v2/io/ for just uploading and downloading the content of the files. </p>"},{"location":"developer-guide/pydio-api/api-v2-summary/#user-account","title":"User Account","text":"<p>These requests are used for getting information about the user who is currently logged in.</p>"},{"location":"developer-guide/pydio-api/api-v2-summary/#workspace","title":"Workspace","text":"<p>These request provide information about a given workspace, and some plugins can extend it to provide more info. Typically, the \"changes\" list used for synchronisation is done here.</p>"},{"location":"developer-guide/pydio-api/api-v2-summary/#provisioning","title":"Provisioning","text":"<p>The group contains all requests for creating users, roles, workspaces and editing them as an administrator. This is what you will want to look at if you want to automate the provisioning of pydio.</p>"},{"location":"developer-guide/pydio-api/api-v2-summary/#task","title":"Task","text":"<p>This API is specific for the background tasks manager.</p>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/","title":"FileSystem API (v1)","text":"<p>Most current operations on files and folders, their metadata, and additional sharing features.</p>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#file-system-standard","title":"File System (Standard)","text":"<p>The most standard access to a filesystem located on the server.</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#audio-player","title":"Audio Player","text":"<p>Inserts a flash player for reading mp3 files online, and playing a whole folder in a separate window.</p> <ul> <li>/workspace_alias/audio_proxy/file+   Server an audio file as a stream Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#image-viewer","title":"Image viewer","text":"<p>Image viewer, used for previewing images and browsing them in a diaporama. Generates a thumbnail version of the images.</p> <ul> <li>/workspace_alias/preview_data_proxy/file+   Server an image with correct mimetype, eventually rendered as thumb. Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#image-magick","title":"Image Magick","text":"<p>Image Magick viewer supports PDF and various images formats preview. Requires external library to be installed on the server.</p> <ul> <li>/workspace_alias/imagick_data_proxy/file+   Serve JPG previews for a PDF or imagick-compatible file. Details</li> <li>/workspace_alias/get_extracted_page/file/src_file+   Server a prefetched thumbnail for a PDF or imagick compatible file. See imagick_data_proxy. Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#video-player","title":"Video Player","text":"<p>Inserts a video player in the info panel, either HTML5 or Flash depending on the format.</p> <ul> <li>/workspace_alias/read_video_data/file+   Server a video file as a stream Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#power-fs","title":"Power FS","text":"<p>This set of extensions assume that you have an administration access to your server: ability to tweak the webserver and the php configuration, ability to access the command line, etc.</p> <ul> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#sharing-features","title":"Sharing Features","text":"<p>Share Center actions and hooks</p> <ul> <li>/workspace_alias/share/simple_share_type/file+   Main action for sharing a file or a folder Details</li> <li>/workspace_alias/load_shared_element_data/file+   Loads all current sharing data for a given resource. Workspace must support metadata management (metastore). Details</li> <li>/workspace_alias/unshare/file+   Stop sharing a folder, or remove a public link from a file. Details</li> <li>/workspace_alias/toggle_link_watch/file+   Toggle a shared element status for being watched or not. Details</li> <li>/workspace_alias/reset_counter/file+   Reset download counter for a given link generated on a file. Details</li> <li>/workspace_alias/sharelist-clearExpired/   Clear expired links Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#lucene-search-engine","title":"Lucene Search Engine","text":"<p>Zend_Search_Lucene implementation to index all files and search a whole workspace quickly.</p> <ul> <li>/workspace_alias/search/query   Search the Lucene index Details</li> <li>/workspace_alias/search_by_keyword/field/query   Search the Lucene on a specific document field Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#syncable-workspace","title":"Syncable Workspace","text":"<p>Track changes on this workspace to enable the synchronization with an external client</p> <ul> <li>/workspace_alias/changes/seq_id   List all changes on this workspace starting at a given sequence id Details</li> <li>/workspace_alias/resync_storage/   Use the current index to compare with underlying storage and detect events Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#exif-metadata","title":"Exif Metadata","text":"<p>Extracts the EXIF metadata of a JPG image. Used in conjunction with editor.exif</p> <ul> <li>/workspace_alias/extract_exif/format/file+   Extract all exif data from a compatible image (JPG). Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#comments-feed","title":"Comments Feed","text":"<p>Display a chat-like feed on all nodes</p> <ul> <li>/workspace_alias/load_comments_feed/file+   Load the comments on this file or below Details</li> <li>/workspace_alias/post_comment/file+   Post a comment linked to a given file Details</li> <li>/workspace_alias/delete_comment/   Delete a comment by reposting its json representation Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#file-hasher","title":"File Hasher","text":"<p>Compute on-demand a hash of the file content and stores it in the metadata if a metastore is provided</p> <ul> <li>/workspace_alias/filehasher_signature/file+   Get the signature of an existing file Details</li> <li>/workspace_alias/filehasher_delta/file+   Compute a delta computed against an existing signature. Signature is posted as attached file (userfile_0) Details</li> <li>/workspace_alias/filehasher_patch/file+   Apply a patch to an existing file. Patch is posted as attached file (userfile_0) Details</li> <li>/workspace_alias/stat_hash/file+   Returns an fstat() structure including the hash of the file Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#git-based-versioning","title":"Git-based Versioning","text":"<p>Keep tracks of all files modifications using a local Git workspace</p> <ul> <li>/workspace_alias/git_history/file+   Load the GIT history of this file Details</li> <li>/workspace_alias/git_getfile/file+   Download a given version of the file Details</li> <li>/workspace_alias/git_revertfile/file+   Revert a file to a given version in GIT Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#user-quota","title":"User quota","text":"<p>Maintain the size of a given directory for each user</p> <ul> <li>/workspace_alias/monitor_quota/   Get current quota usage information Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#simple-lock","title":"Simple Lock","text":"<p>Manual Locking mechanism to avoid concurrent edition</p> <ul> <li>/workspace_alias/sl_lock/file+   Lock/Unlock a file for usage by other users. Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#text-metadata","title":"Text Metadata","text":"<p>Simple metadata implementation stored in a hidden file.</p> <ul> <li>/workspace_alias/edit_user_meta/file+   Edit user-defined metadata on a node Details</li> </ul>"},{"location":"developer-guide/pydio-api/filesystem-api-v1/#watch-metadata","title":"Watch Metadata","text":"<p>Register watched on files or folders</p> <ul> <li>/workspace_alias/toggle_watch/file+   Set or unset a monitor watch on the selected node Details</li> </ul>"},{"location":"developer-guide/pydio-api/provisioning-api-v1/","title":"Provisioning API (v1)","text":"<p>Administration task : users/groups/workspaces provisionning, maintenance tasks, etc... Generally performed using /settings/ as workspace alias.</p>"},{"location":"developer-guide/pydio-api/provisioning-api-v1/#admin-driver","title":"Admin Driver","text":"<p>Access Pydio configuration data.</p> <ul> <li>/settings/ls/dir+   List the content of the config. Depending on the path, will return users, workspaces, roles, etc.. Details</li> <li>/settings/admin_search/query/dir+   Remote search implementation, currently only supporting users search. Details</li> <li>/settings/stat   To comply with GUI client, always returns true. Details</li> <li>/settings/list_all_plugins_actions/   Returns a structured JSON object of all plugins and all their available actions Details</li> <li>/settings/list_all_plugins_parameters/   Returns a structured JSON object of all plugins and all their available parameter Details</li> <li>/settings/parameters_to_form_definitions/   Takes in input a list of plugin parameters and builds the corresponding XML to create a standard form. Details</li> <li>/settings/list_all_repositories/   Returns all repository (output format is XML) Details</li> <li>/settings/list_all_repositories_json/   Returns all repository (output format is JSON) Details</li> <li>/settings/list_all_users/   Returns all users Details</li> <li>/settings/generate_api_docs/version   Generate API docs Details</li> <li>/settings/get_plugin_manifest/plugin_id   Send a plugin Manifest file. Details</li> <li>/settings/run_plugin_action/action_plugin_id/action_plugin_method   Execute a class method on a plugin. Used for example for testing a DB connexion. Details</li> <li>/settings/create_user/new_user_login/new_user_pwd   Create a user with login and password in the AUTH directory. Details</li> <li>/settings/create_role/role_id   Create an empty role Details</li> <li>/settings/create_group/group_label/group_path+   Create a new group of users Details</li> <li>/settings/user_update_group/file/group_path+   Move an existing user to an existing group Details</li> <li>/settings/create_repository/json_data   Create a workspace ( = repository, it's the same ) by passing a structured JSON object. Details</li> <li>/settings/user_update_role/file/update_role_action/role_id   Add or remove a given role to a set of users. The rest access can only handle one user at a time, using the file parameter. Details</li> <li>/settings/edit/sub_action   Shortcut for various actions, calling edit with subaction parameter. Details</li> <li>/settings/edit_repository_label/repository_id/newLabel   Update a workspace label Details</li> <li>/settings/save_user_preference/user_id/pref_name_0/pref_value_0   Sets a user preference value. Rest can only take one value, but CLI or http GET can pass many preferences, using _1, _2, _3, etc. Details</li> <li>/settings/meta_source_edit/repository_id/plugId/json_data   Edit an existing meta source parameters. Details</li> <li>/settings/meta_source_add/repository_id/plugId/json_data   Add a meta source to a repository, setting its parameters. Details</li> <li>/settings/meta_source_delete/repository_id/plugId   Remove a given meta source from a repository. Details</li> <li>/settings/delete/data_type/data_id+   Generic delete action for config driver, used to delete users, workspaces, roles, etc. Details</li> <li>/settings/user_update_right/repository_id/user_id/right   Update a user access right on a given workspace. Details</li> <li>/settings/role_update_right/repository_id/role_id/right   Update a role access right on a given workspace. Details</li> </ul>"},{"location":"developer-guide/pydio-api/provisioning-api-v1/#tasks-scheduler","title":"Tasks Scheduler","text":"<p>Register tasks to be run on a regular basis instead of writing them one by one in cron tab.</p> <ul> <li>/settings/scheduler_generateCronExpression   Generate a correct expression to be inserted in Crontab, in order to trigger the {runAll} action on a regular basis. Details</li> <li>/settings/scheduler_runAll   Run the scheduler: check if some tasks must be run now, and launch them. Generally launched from command line. Details</li> <li>/settings/scheduler_loadTask   Returns a JSON representation of the task parameters Details</li> <li>/settings/scheduler_addTask   Create a new task by posting parameters Details</li> <li>/settings/scheduler_runTask   Force running a specific task Details</li> <li>/settings/scheduler_removeTask   Remove a given task from scheduler Details</li> <li>/settings/scheduler_fakeLongTask   Launch a fake long task. Details</li> </ul>"},{"location":"developer-guide/pydio-api/provisioning-api-v1/#update-engine","title":"Update Engine","text":"<p>Detect necessary upgrades for Pydio packages.</p> <ul> <li>/settings/get_upgrade_path/   Check if there are packages available for upgrade. Details</li> <li>/settings/display_upgrade_note/   Display upgrade note Details</li> <li>/settings/perform_upgrade/   Apply the update following available upgrade path. Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/","title":"Lifecycle API (v1)","text":"<p>Application objects lifecycle, like current user access rights and preferences, authentication utils, etc. As they are generally not linked to a specific workspace, these actions can be performed using /pydio/ instead of a workspace alias.</p>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#client-plugin","title":"Client Plugin","text":"<p>Browser-based rich interface. Contains configurations for theming, custom welcome message, etc.</p> <ul> <li>/pydio/get_i18n_messages/   Load the list of translation strings Details</li> <li>/pydio/display_doc/doc_file   Load a doc file Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#avatars","title":"Avatars","text":"<p>Get user avatar from Gravatar/Libravatar</p> <ul> <li>/pydio/get_avatar_url   Get avatar URL for currently logged user Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#indexation","title":"Indexation","text":"<p>Indexation plugins</p> <ul> <li>/pydio/index/file+   Trigger re-indexation of a directory, recursively Details</li> <li>/pydio/check_index_status/   Check the indexation process status. Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#mailers","title":"Mailers","text":"<p>Core configs for sending emails</p> <ul> <li>/pydio/send_mail/   Trigger an email to a user or external email, sent by currently logged user Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#notification-center","title":"Notification Center","text":"<p>Handle users watches and notifications</p> <ul> <li>/pydio/feed/feed_type/path+   Load an activity feed for the given node. Filtered by what the current user is authorized to see Details</li> <li>/pydio/dismiss_user_alert/alert_id/occurences   Dismiss one or more occurences of alerts Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#message-queuing","title":"Message Queuing","text":"<p>MQ Abstraction for dynamic dispatching</p> <ul> <li>/pydio/client_register_channel/channel/client_id   Subscribe to given queue of events. Details</li> <li>/pydio/client_unregister_channel/channel/client_id   Subscribe to given queue of events. Details</li> <li>/pydio/client_consume_channel/channel/client_id   Subscribe to given queue of events. Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#serialized-files","title":"Serialized Files","text":"<p>Stores the conf data as serialized PHP values on the filesystem.</p> <ul> <li>/pydio/state/xPath+   REST equivalent of the get_xml_registry query, to load some non-workspace-specific data based on a registry xPath. Output format can be sent back in JSON (XML by default). Details</li> <li>/pydio/load_repository_info/   Retrieve some plugins-contributed info about the workspace (e.g. Quota, Sharing status, etc). Details</li> <li>/pydio/get_permissions_mask/   Send the permissions mask for the current workspace, if defined. Details</li> <li>/pydio/user_list_authorized_users/value   List users that are visible to the currently logged users Details</li> </ul>"},{"location":"developer-guide/pydio-api/lifecycle-api-v1/#db-storage","title":"DB Storage","text":"<p>Stores the conf data in an SQL database.</p> <ul> <li>/pydio/state/xPath+   REST equivalent of the get_xml_registry query, to load some non-workspace-specific data based on a registry xPath. Output format can be sent back in JSON (XML by default). Details</li> <li>/pydio/load_repository_info/   Retrieve some plugins-contributed info about the workspace (e.g. Quota, Sharing status, etc). Details</li> <li>/pydio/get_permissions_mask/   Send the permissions mask for the current workspace, if defined. Details</li> <li>/pydio/user_list_authorized_users/value   List users that are visible to the currently logged users Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/","title":"Other Access Drivers (v1)","text":"<p>Non-standard drivers accessing to structured data like IMAP, MySQL, Apis, etc.</p>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#demo-no-write-actions","title":"Demo (no write actions)","text":"<p>This is a standard access to the filesystem but with all write actions disabled server-side.</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#remote-server-via-api","title":"Remote Server (via API)","text":"<p>Access a remote server implementing the Pydio API (most commonly a remote server with another Pydio installed)</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#dropbox","title":"Dropbox","text":"<p>This plugin allows accessing a dropbox account. Still experimental, requires PEAR/HTTP_OAuth extension.</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#ftp-server","title":"FTP Server","text":"<p>This driver can access a remote FTP server</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#mailbox-imap-or-pop","title":"Mailbox (Imap or POP)","text":"<p>This plugin will browse the content of a mailbox (imap or pop) and allow to grab emails attachments and copy them to another repository. Requires the PHP IMAP extension.</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#inbox-workspace","title":"Inbox Workspace","text":"<p>Received Files</p> <ul> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/copy_inbox/   Copy one or more items to a given target Details</li> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#s3-amazon-web-service","title":"S3 (Amazon Web Service)","text":"<p>Access an AWS server. Requires AWS-SDK (Version 2) for PHP </p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#ftp-over-ssh","title":"FTP over SSH","text":"<p>Access a remote server filesystem using FTP via SSH server. Handy for working around permissions problems.</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#ssh-file-transfer-protocol-sftp","title":"SSH File Transfer Protocol (SFTP)","text":"<p>The SSH File Transfer Protocol is a network protocol that provides file access, file transfer, and file management functionalities over SSH2.</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#samba","title":"Samba","text":"<p>Browse a Samba Server</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#open-stack-swift","title":"Open Stack (Swift)","text":"<p>Access Open Stack Object Storage via Swift API</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-access-drivers-v1/#webdav","title":"WebDAV","text":"<p>Access WebDAV through Guzzle and SabreDAV</p> <ul> <li>/workspace_alias/ls/dir+   Standard listing action         to retrieve the list of children for a given directory. For the main parameters, use {nodes} parameter, the {dir}+{file} are kept for backward compatibility. Details</li> <li>/workspace_alias/mkdir/file+   Creates a directory with name {dirname} at the given location. Details</li> <li>/workspace_alias/mkfile/node+   Creates a file at the given path. Optionally sets a content. Details</li> <li>/workspace_alias/upload/input_stream/dir+   Post a file content for upload, by default as x-www-form-urlencoded, but can be passed as input stream as well. Details</li> <li>/workspace_alias/download/file+   Download one or many files at once. If multiple files (or a folder path) passed, they are sent back as an archive. Details</li> <li>/workspace_alias/compress/file+   Compress one or many files into a Zip archive. May be disabled for remote-access workspaces (like FTP). Details</li> <li>/workspace_alias/stat/file+   Returns an fstat() structure Details</li> <li>/workspace_alias/lsync/   For externally modified files, triggers the node.change event in the platform Details</li> <li>/workspace_alias/apply_check_hook/hook_name/node+   Applies a node.before_create or node.before_change event to check for exemple that an upload is authorized before posting actual upload. Details</li> <li>/workspace_alias/get_content/node+   Alternative to Download, without attachment headers but more in a stream-like format, depending on file type (image, audio, video, plain text). Details</li> <li>/workspace_alias/put_content/node+   PUT the content inside a file, directly from the POST array. Details</li> <li>/workspace_alias/restore/node+   For an item located inside the recycle bin, tries to find its original location and move it there. Details</li> <li>/workspace_alias/rename/   Rename a resource, file or folder. Details</li> <li>/workspace_alias/copy/   Copy one or more items to a given target Details</li> <li>/workspace_alias/move/   Move a resource at a given target Details</li> <li>/workspace_alias/delete/nodes+   Delete one or more resources. If the workspace supports Recycle Bin features, resource is actually moved to the recycle bin. Details</li> <li>/workspace_alias/chmod/node+   Change the FS permissions of the selected item. Details</li> <li>/workspace_alias/prepare_chunk_dl/chunk_count/node+   Use the filesize of the file to generate an list of pieces to be downloaded using {download_chunk} action. Will generate a unique file_id to be used later. Details</li> <li>/workspace_alias/download_chunk/chunk_index/file_id   Chunk file into pieces before downloading the pieces. Can be handy for problematic and limited servers. Details</li> <li>/workspace_alias/purge/   If the workspace has a PURGE configured parameter, finds the expired files and delete them. Can be typically called from command line. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-plugins-api-v1/","title":"Other plugins API (v1)","text":"<p>Other plugins actions.</p>"},{"location":"developer-guide/pydio-api/other-plugins-api-v1/#disclaimer","title":"Disclaimer","text":"<p>Display a disclaimer and force acceptation by user</p> <ul> <li>/workspace_alias/validate_disclaimer/validate   Set disclaimer in accepted state or not Details</li> <li>/workspace_alias/load_disclaimer/   Return HTML content of the disclaimer Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-plugins-api-v1/#api-keystore","title":"API Keystore","text":"<p>Store API keys/token to simplify REST connection</p> <ul> <li>/workspace_alias/keystore_generate_auth_token/device   Generate and store a authentication key that can be used by the currently logged user. Used by SDKs talking to REST API to avoid renegociating basic auth on each query. Details</li> <li>/workspace_alias/keystore_revoke_tokens/   Revoke current tokens for logged user. Details</li> <li>/workspace_alias/keystore_list_tokens/   List current tokens for logged user. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-plugins-api-v1/#encfs-mount","title":"Encfs Mount","text":"<p>Dynamically create/mount/umount an encfs filesystem</p> <ul> <li>/workspace_alias/encfs.cypher_folder/dir+   Cypher a folder using EncFS plugin Details</li> <li>/workspace_alias/encfs.uncypher_folder/dir+   Decrypt a folder using EncFS plugin. Details</li> </ul>"},{"location":"developer-guide/pydio-api/other-plugins-api-v1/#db-storage","title":"DB Storage","text":"<p>Stores the logs in an SQL database.</p> <ul> <li>/workspace_alias/analytic_query/query_name/start/count   Perform an analytics query by name Details</li> <li>/workspace_alias/analytic_list_queries/   List available analytics queries Details</li> </ul>"},{"location":"developer-guide/web-application/index/","title":"Index","text":"<p>This section will cover the main JavaScript classes used by our standard Web Application.</p> <ul> <li>Architecture</li> <li>Core JS Classes</li> <li>Pydio Forms</li> </ul>"},{"location":"developer-guide/web-application/architecture/","title":"Architecture","text":""},{"location":"developer-guide/web-application/architecture/#es6-and-jsx-codes","title":"ES6 and JSX Codes","text":"<p>As explained in the Global Architecture &gt; Technology Overview pages, Pydio javascript require a \"transpilation\" step to be transformed to pure ES5-compatible javascript, which is done with Babel. When you install Pydio directly from the github sources, the scripts are NOT built by default. You do have to launch grunt in each plugin. If you develop directly on a packaged version of pydio, you will see both the sources and the transpiled versions folders, generally react/ (sources) and build/. Make sure to always modify the source and then perform the transpilation.</p> <p>Luckily, this step is easily done using the Grunt tool. Each plugin containing files requiring transpilation is now packed with two files: package.json and Gruntfile.js. The first one is an NPM dependencies file that will install all necessary dependencies, the second is the actual definition of tasks that will be performed by grunt. To see your changes correctly transpiled, go to the plugin folder and run the following commands : </p> <p><code>$&gt; npm install</code></p> <p><code>$&gt; grunt</code></p> <p>This will transpile all the files, and in the case of gui.ajax plugin, it will also perform a couple of JS/CSS minification and compilation. Furthermore, most of the Gruntfile declare a watch task: while developing, launch <code>grunt watch</code> on the command line: it will monitor any changes in the javascript sources and trigger the transpilation automatically.</p>"},{"location":"developer-guide/web-application/architecture/#react-js-components","title":"React JS Components","text":"<p>Pydio UI is entirely written using the ReactJS framework. It helps make the codebase more scalable and maintainable, while executing super fast in the browser, thanks to its MVVM and Virtual DOM approach.</p> <p>Please read about the basics of ReactJS if you want to go further.</p>"},{"location":"developer-guide/web-application/architecture/#events-and-pydiodatamodel","title":"Events and PydioDataModel","text":"<p>You must be familiar with event-oriented GUI building. The big advantage of this approach is that beside a couple of core components that are initialized by the main Pydio class, the GUI itself is built dynamically and couples to the core only via events. This was not the case before this release, and basically it allows us to remove/change any GUI component without breaking anything, the events just being trigger but not listened by anyone. It removes dependencies between components that have nothing to do with each other. This allow a dynamic building/refreshing of the GUI components.</p>"},{"location":"developer-guide/web-application/architecture/#templates","title":"Templates","text":"<p>Once you have some React components written and ready to be displayed, you will want to actually mount them in the interface. This is not done by the classical <code>ReactDOM.mountComponentAtNode()</code> call, but by declaring some \"templates\" tags in the XML of your plugin (then pydio will actually perform the 'mount' call).</p> <p>See for example in <code>plugins/gui.ajax.manifest.xml</code> :</p> <p>As you can see, the whole application layout is defined here: &lt;template&gt; tags are pointing to specific React components and may be mounted on certain condition (e.g. if theme is XXX).</p> <pre><code>&lt;!-- The bottom black message bar appearing/disappearing on-demand --&gt;\n&lt;template name=\"material_snack\" element=\"body\" position=\"bottom\" namespace=\"PydioReactUI\" component=\"MessageBar\" props='{\"containerId\":\"pydio_message_bar\"}'/&gt;\n&lt;!-- The top progress bar that registers itself to listen to any network call and display an indeterminate progress --&gt;\n&lt;template name=\"network_loader\" element=\"body\" position=\"bottom\" namespace=\"PydioReactUI\" component=\"NetworkLoader\" props='{}'/&gt;\n</code></pre> <p>Beside this &lt;template&gt; element, you can also see the &lt;component_config&gt; element. This &lt;component_config&gt; node will trigger an event inside the GUI, and if a component is listening to this event, it can then take the content and parse it as needed. For example, this is how the columns definition is dynamically updated inside the FilesList component when you are switching to a repository that uses the access.fs plugin (see access.fs manifest).</p>"},{"location":"developer-guide/web-application/core-js-classes/","title":"Core JS Classes","text":"<p>Below is a description of the main Pydio JavaScript classes that are used in the GUI. We don\u2019t cover all the libraries, and see the JSApi access driver to have a way more detailed documentation of each class and its methods.</p> <p>This document correspond to Pydio 6.4.0 release.</p>"},{"location":"developer-guide/web-application/core-js-classes/#core-classes","title":"Core Classes","text":"<p>ES6 classes that build the core of the interface. They contain no UX component, just datamodels, controllers, http clients, etc. Generally-speaking, unless for debugging purpose, you should NOT touch this part.</p> <p>Folder: plugins/gui.ajax/res/js/core  </p> <ul> <li>Pydio Main class. Handles registry, plugins, widgets instanciations, etc.. Singleton instance accessible as \u201cpydio\u201d global variable.</li> <li>PydioBootstrap Lighter class that can be loaded in the html page and will load Pydio.</li> <li>model/</li> <li>Action Abstraction of a Pydio Action as defined in our XML registry.</li> <li>AjxpNode Basic representation of a node, Tree model used by all files/folders lists</li> <li>BackgroundTasksManager Singleton registering / launching background tasks</li> <li>Controller Main controller, parsing the XML registry to create Action classes, receiving events from the datamodel to enable/disable actions based on the context.</li> <li>EmptyNodeProvider INodeProvider doing nothing.</li> <li>PydioDataModel Main container for a set of nodes and their children, sending events when DM is changing.</li> <li>Registry Abstraction of the XML registry</li> <li>RemoteNodeProvider INodeProvider talking to get_action=ls by default, can be configured at startup.</li> <li>Repository Abstraction of a Workspace object.</li> <li>User Abstraction of the currently logged user object.</li> <li>lang/</li> <li>Logger Utilitary to log data to console.</li> <li>Observable Interface that can be added as mixin to implement pub/sub pattern on an object.</li> <li>util/</li> <li>CookiesManager Read/write from navigator cookies.</li> <li>HasherUtils MD5 computer</li> <li>LangUtils Utils methods on arrays and objects. Provides translation from/to PrototypeJS structures (Hash, Array).</li> <li>PassUtils Utils methods to compute a password complexity.</li> <li>PathUtils Utils methods to manipulate file paths (dirname, basename, etc..).</li> <li>XMLUtils Utils XPath methods to query an XML doc.</li> <li>ActivityMonitor Helper for handling detection of activity on screen.</li> <li>DOMUtils Some functions that are generally provided by other framework to get info about window size, observe resize events, etc.</li> <li>FuncUtils Find functions in a context</li> <li> <p>PeriodicalExecuter Wrapper for setInterval()</p> </li> <li> <p>http/</p> </li> <li>Connexion Wraps all network calls, since Pydio 8 it is encapsulating the window.fetch API.</li> <li>PydioApi Can be seen as the SDK to communicate with server.</li> <li>PydioUsersApi Extension of previous class providing methods to list users.</li> <li>ResourcesManager Dependency manager that parses the XML registry and dynamically load JS/CSS files on-demand. Could be replaced by a CommonJS or similar system at one point.</li> <li>MetaCacheManager Helper to cache data in memory to avoid too many server calls.</li> </ul>"},{"location":"developer-guide/web-application/core-js-classes/#reactjs-ui-components","title":"ReactJS UI Components","text":"<p>Pydio UI components are distributed into various libraries. Most of them are located under gui.ajax plugin, but beware that many of them will also be provided by plugins, and loaded dynamically by the interface. Below, we list the main libraries provided by gui.ajax, see the Admin Dashboard for more info about every classes.</p> <p>Folder: plugins/gui.ajax/res/js/ui/ </p> <p>Each library currently provides a global namespace starting with Pydio and lib folder name (like PydioReactUI, PydioComponents, etc), but you should avoid using that access as it may be deprecated in the future.</p>"},{"location":"developer-guide/web-application/core-js-classes/#reactui","title":"ReactUI","text":"<p>Contains the core of the reactJs UI. </p> <p>Example: </p> <pre><code>import Pydio from 'pydio'\nconst {Loader} = Pydio.requireLib('boot')\n</code></pre>"},{"location":"developer-guide/web-application/core-js-classes/#components","title":"Components","text":"<p>Contains many generic components should be easily reused, like lists, tree views, menu, etc..</p> <p>Example:</p> <pre><code>import Pydio from 'pydio'\nconst {ClipboardTextField} = Pydio.requireLib('components')\n</code></pre>"},{"location":"developer-guide/web-application/core-js-classes/#hocs","title":"HOCs","text":"<p>React High Order Components are \"wrapping\" classes that are used everywhere in the application. It helps programming generic behaviours that can be applied to any other component.</p> <p>Example: </p> <pre><code>import Pydio from 'pydio'\nconst {withContextMenu} = Pydio.requireLib('hoc')\n</code></pre>"},{"location":"developer-guide/web-application/core-js-classes/#workspaces","title":"Workspaces","text":"<p>Contains higher level components that are generally more specific to workspaces, like full dashboard with many components, enriched files list, etc.</p> <p>Example:</p> <pre><code>import Pydio from 'pydio'\nconst {FSTemplate} = Pydio.requireLib('workspaces')\n</code></pre>"},{"location":"developer-guide/web-application/core-js-classes/#form","title":"Form","text":"<p>Contains helpers and UI components for rendering forms</p> <p>Example:</p> <pre><code>import Pydio from 'pydio'\nconst {FormPanel} = Pydio.requireLib('form')\n</code></pre>"},{"location":"developer-guide/web-application/core-js-classes/#coreactions","title":"CoreActions","text":"<p>Static callbacks for many actions, that can be used in the XML registry declaration via the \"component\" tag.</p> <p>Example:</p> <pre><code>&lt;action&gt;\n    [.....]\n    &lt;processing&gt;\n        &lt;clientCallback module=\"PydioCoreActions.Navigation.up\"/&gt;\n    &lt;/processing&gt;\n&lt;/action&gt;\n</code></pre>"},{"location":"developer-guide/web-application/pydio-forms/","title":"Pydio Forms","text":"<p>One common task you may have to handle when creating interfaces will be providing forms. Over the time, we developed our own form manager that provides tools to handle fields and values on both the client and the server side. The components implied are prefixed with \u201cSF\u201d or \u201cstandardForms\u201d on both sides.</p>"},{"location":"developer-guide/web-application/pydio-forms/#defining-forms-in-xml","title":"Defining forms in XML","text":"<p>The definition of a set of form fields is generally done via XML, through a set of <code>&lt;param&gt;</code> elements. It can actually also be done via JavaScript, in that case you simply have to create javascript objects that contain the same keys as the param XML attributes. The attributes are described below (extract from the XSD).</p> <pre><code>&lt;xs:element name=\"param\"&gt;\n    &lt;xs:complexType&gt;\n\n        &lt;!-- Basic attributes: technical name of the field, label and description (help tooltip), mandatory or not --&gt;\n        &lt;xs:attribute name=\"name\" use=\"required\" type=\"xs:NCName\"/&gt;\n        &lt;xs:attribute name=\"label\" use=\"required\"/&gt;\n        &lt;xs:attribute name=\"description\" use=\"required\"/&gt;\n        &lt;xs:attribute name=\"mandatory\" type=\"xs:boolean\"/&gt;\n\n        &lt;!-- Type of field to display.\n        Currently supported are:\n        boolean, string, select (requires the choices attribute), hidden,\n        plugin_instance:pType (will generate a list of available plugins for this type),\n        --&gt;\n        &lt;xs:attribute name=\"type\" use=\"required\" type=\"xs:Name\"/&gt;\n        &lt;!-- Type \"select\" specific field --&gt;\n        &lt;xs:attribute name=\"choices\"/&gt;\n        &lt;!-- Type \"upload\" specific fields:\n        uploadAction: server action to call for uploading image\n        loadAction: server action to call for loading current image\n        defaultImage: replacement image if no value is set\n        --&gt;\n        &lt;xs:attribute name=\"uploadAction\" use=\"optional\"/&gt;\n        &lt;xs:attribute name=\"loadAction\" use=\"optional\"/&gt;\n        &lt;xs:attribute name=\"defaultImage\" use=\"optional\"/&gt;\n\n        &lt;!--\n        These fields are various ways to group the some parameters together:\n        . group: all fields with the same \"group\" value will appear in this group\n        . replicationGroup: all fields in the same replication group will be in a sub-frame, with a \"+\" sign giving the ability to replicate the whole frame of fields/\n        . group_switch_name/group_switch_value/group_switch_label : ability to have some fields appearing dynamically depending on a master \"select\" field. The select field must have its \"choices\" parameter set to group_switch:switchname.\n        --&gt;\n\n        &lt;xs:attribute name=\"group\"/&gt;\n        &lt;xs:attribute name=\"replicationGroup\"/&gt;\n        &lt;xs:attribute name=\"group_switch_name\" use=\"optional\"/&gt;\n        &lt;xs:attribute name=\"group_switch_value\" use=\"optional\"/&gt;\n        &lt;xs:attribute name=\"group_switch_label\" use=\"optional\"/&gt;\n\n        &lt;!-- The default value --&gt;\n        &lt;xs:attribute name=\"default\"/&gt;\n\n        &lt;!-- Plugins parameters specificities --&gt;\n        &lt;xs:attribute name=\"no_templates\" type=\"xs:boolean\"/&gt;\n        &lt;xs:attribute name=\"templates_only\" type=\"xs:boolean\"/&gt;\n        &lt;xs:attribute name=\"scope\"/&gt;\n        &lt;xs:attribute name=\"repoScope\"/&gt;\n        &lt;xs:attribute name=\"editable\" type=\"xs:boolean\" use=\"optional\"/&gt;\n    &lt;/xs:complexType&gt;\n&lt;/xs:element&gt;\n</code></pre>"},{"location":"developer-guide/web-application/pydio-forms/#handling-the-form","title":"Handling the form","text":"<p>Once the form is defined, either as XML or JavaScript structure, the \"PydioForm\" UI library contains all the necessary tools to generate a proper form to the user. The FormPanel react component is a \"controlled\" component: it takes a map of fields definition, an object of values, and changes are reflected through the \"onChange\" react \"prop\".</p> <p>Here is an example below, used in the Profile panel</p> <pre><code>import Pydio from 'pydio'\nconst {FormPanel} = Pydio.requireLib('form')\n\nonFormChange: function(newValues, dirty, removeValues){\n    // Do something with the new values\n}\n\nrender(){\n    return (\n        &lt;FormPanel\n            className=\"current-user-edit\"\n            parameters={definitions}\n            values={values}\n            binary_context={\"user_id=\"+this.props.pydio.user.id}\n            onChange={this.onFormChange}\n        /&gt;\n    );\n}\n</code></pre> <p>You can either manually define a full javascript object for fields definition, using the same attributes as the ones defined in the XML <code>&lt;param&gt;</code> tag. Or the Manager class from the same library can be useful if you want to parse XML located at a given location in the registry</p> <pre><code>import Pydio from 'pydio'\nconst {Manager} = Pydio.requireLib('form')\n\n// Use XPath query to find all parameters that are defined to be displayed in the user profile panel\nconst {pydio} = this.props;\nconst definitions = Manager.parseParameters(pydio.getXmlRegistry(), \"user/preferences/pref[@exposed='true']|//param[contains(@scope,'user') and @expose='true']\");\n// ... now use it for FormPanel\n</code></pre> <p>Finally, you\u2019ll want to submit the form to the server. If you have stored the values in the state of your component, and you can do whatever you want, using the api client to post data as key/value parameters, or eventually using <code>JSON.stringify()</code> to post whole values as a bunch.</p>"},{"location":"developer-guide/writing-a-plugin/index/","title":"Index","text":"<p>In this section, you will \"learn-by-example\" how to create your own Pydio plugin to extend the software functionnalities. This can go from adding a simple HTML block on the interface to adding your own API's to Pydio. </p> <p>If you want a better understanding of what you do, you can first read the \"GOING DEEPER\" chapter to grab Pydio's internals. However, it should not be necessary for this tutorial.</p> <p>The manifest.xml file is a central piece of each plugin. Its grammar is entirely described in the plugins/core.ajaxplorer/ajxp_registry.xsd XML Schema, thus it is very recommanded to use an XML editor supporting schemas. The tags and elements should be generally self explaining, and we try to document the schema, but here we will go through some specifc elements that are part of the day-to-day life of a plugin developer.</p> <ul> <li>Action.skeleton plugin</li> <li>Contributing actions</li> <li>Declaring resources</li> <li>Manifest.xml overview</li> <li>Modify the GUI</li> </ul>"},{"location":"developer-guide/writing-a-plugin/action-skeleton-plugin/","title":"Action.skeleton plugin","text":""},{"location":"developer-guide/writing-a-plugin/action-skeleton-plugin/#plugin-features","title":"Plugin features","text":"<p>This plugin is typically provided to help you kickstart the writing of a new plugin. It demonstrates a couple of features, particularly adding a button somewhere, as well as a header and footer in the interface, and a sample communication with the server.</p>"},{"location":"developer-guide/writing-a-plugin/action-skeleton-plugin/#header-and-footer","title":"Header and Footer","text":"<p>You can see the following registry_contribution in the manifest</p> <pre><code>&lt;registry_contributions&gt;\n    &lt;client_configs uuidAttr=\"name\"&gt;\n        &lt;template name=\"skeleton_bottom\" element=\"ajxp_desktop\" position=\"bottom\" theme=\"material\" namespace=\"SkeletonActions\" component=\"Template\"/&gt;\n    &lt;/client_configs&gt;\n&lt;/registry_contributions&gt;\n</code></pre> <p>This <code>SkeletonActions.Template</code> points to a react component defined in an external javascript library. This library is loaded in the same XML with : </p> <pre><code> &lt;client_settings&gt;\n     &lt;resources&gt;\n         &lt;js className=\"SkeletonActions\" file=\"plugins/action.skeleton/res/build/SkeletonActions.js\"/&gt;\n     &lt;/resources&gt;\n &lt;/client_settings&gt;\n</code></pre>"},{"location":"developer-guide/writing-a-plugin/action-skeleton-plugin/#action-button","title":"Action Button","text":"<p>The following code adds an action to the global toolbar, which opens a dialog, and use a Connexion() javascript object to retrieve some data on the server:</p> <pre><code>&lt;registry_contributions&gt;\n    &lt;actions&gt;\n        &lt;action name=\"my_skeleton_button\"&gt;\n            &lt;gui text=\"skeleton.1\" title=\"skeleton.2\" hasAccessKey=\"false\"&gt;\n                &lt;context selection=\"false\" dir=\"\" recycle=\"hidden\" actionBar=\"true\" actionBarGroup=\"change_main\"/&gt;\n            &lt;/gui&gt;\n            &lt;processing&gt;\n                &lt;clientCallback module=\"SkeletonActions.Callbacks.alertButton\"/&gt;\n            &lt;/processing&gt;\n        &lt;/action&gt;\n    &lt;/actions&gt;\n&lt;/registry_contributions&gt;\n</code></pre> <p>Again, the clientCallback points to our external JS library.</p>"},{"location":"developer-guide/writing-a-plugin/action-skeleton-plugin/#js-library","title":"JS Library","text":"<p>The structure of the JS library file is explained. Here the plugin does not use browserify to export the library, so we wrap the definitions in an anonymous function, and then we manually export the namespace to window.</p> <pre><code>(function(global){\n\n    class Callbacks{\n\n        static alertButton() {\n            // WILL BE CALLED WHEN my_skeleton_button ACTION IS TRIGGERED\n        }\n\n    }\n\n    /**\n     * Sample Dialog class used for reference only, ready to be\n     * copy/pasted :-)\n     */\n    const SkeletonDialog = React.createClass({\n\n        // Component is a dialog, let's use pydio utilitaries\n        mixins:[\n            ActionDialogMixin,\n            CancelButtonProviderMixin,\n            SubmitButtonProviderMixin\n        ],\n\n\n        // This is called on submit because it has SubmitButtonProviderMixin mixin.\n        submit(){\n            this.dismiss();\n        },\n\n        // Let's load the content of the dialog at mount time\n        componentDidMount: function(){\n            PydioApi.getClient().request({get_action:'my_skeleton_button_frame'}, (transport)=&gt;{\n                this.setState({content: transport.responseText});\n            });\n        },\n\n        // Finally the classical react render function\n        render: function(){\n\n            if(!this.state || !this.state.content){\n                return &lt;Loader/&gt;;\n            }\n            return (\n                &lt;div dangerouslySetInnerHTML={{__html:this.state.content}}/&gt;\n            );\n        }\n\n    });\n\n    // Export to global namespace\n    global.SkeletonActions = {\n        Callbacks: Callbacks,\n        Dialog   : SkeletonDialog\n    };\n\n})(window)\n</code></pre>"},{"location":"developer-guide/writing-a-plugin/action-skeleton-plugin/#server-callback","title":"Server callback","text":"<p>You can see that the serverCallback is pointing to the method \u201creceiveAction\u201d. In the PHP class, you\u2019ll find the corresponding receiveAction method, with the standard callback signature $action, $httpVars, $fileVars.</p> <pre><code>/**\n* @param String $action\n* @param Array $httpVars\n* @param Array $fileVars\n* @return void\n*/\nfunction receiveAction($action, $httpVars, $fileVars){\n    if($action == \"my_skeleton_button_frame\"){\n        header(\"Content-type:text/html\");\n        print(\"&lt;p&gt;This is a &lt;b&gt;dynamically&lt;/b&gt; generated content. It is sent back to the client by the server, thus it can be the result of what you want : a query to a remote API, a constant string (like it is now), or any specific data stored by the application...&lt;/p&gt;\");\n        print(\"&lt;p&gt;Here the server sends back directly HTML that is displayed by the client, but other formats can be used when it comes to more structured data, allowing the server to stay focus on the data and the client to adapt the display : &lt;ul&gt;&lt;li&gt;JSON : use &lt;b&gt;json_encode/json_decode&lt;/b&gt; on the PHP side, and &lt;b&gt;transport.reponseJSON&lt;/b&gt; on the client side&lt;/li&gt;&lt;li&gt;XML : print your own XML on the php side, and use &lt;b&gt;transport.responseXML&lt;/b&gt; on the client side.&lt;/li&gt;&lt;li&gt;The advantage of HTML can also be used to send javascript instruction to the client.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;\");\n    }\n}\n</code></pre>"},{"location":"developer-guide/writing-a-plugin/action-skeleton-plugin/#duplicate-the-plugin","title":"Duplicate the plugin","text":"<p>If your intention is to write down your own plugin, you should first duplicate this plugin and search/replace all \u201caction.skeleton\u201d occurences, either in the file/folder names or in the file contents themselves. Check also the resources namespaces/alias. Replace all that with your specific plugin ID / name, to make it coherent and all yours. Once done, don\u2019t forget to CLEAR THE PLUGIN CACHE to let this new plugin appear in the list. You can also clear the i18n cache if you provide a new translation library:</p> <pre><code>rm -f data/cache/plugins_*.ser\nrm -f data/cache/i18n/*.ser\n</code></pre> <p>You should now see your plugin appear in the plugins list.</p>"},{"location":"developer-guide/writing-a-plugin/contributing-actions/","title":"Contributing actions","text":""},{"location":"developer-guide/writing-a-plugin/contributing-actions/#the-action-xml-element","title":"The action XML element","text":"<p>The main contribution a plugin will bring to the registry is generally a set of \u201cactions\u201d, adding some buttons in one of the GUI toolbar, and declaring a supported callback for this action, thus extending the server API on the fly. This is done by using the <code>&lt;action&gt;</code> tag, inside a <code>&lt;registry_contributions&gt;&lt;actions&gt;&lt;/actions&gt;&lt;/registry_contributions&gt;</code>.</p> <p>The action tag must contain a name attribute, and can eventually declare a fileDefault or dirDefault attribute. In that case, it will be considered as default for double-clicking an item on the GUI.</p>"},{"location":"developer-guide/writing-a-plugin/contributing-actions/#gui-button-definition","title":"GUI Button definition","text":"<p>This is not mandatory (if you want to simply declare a service on the API side, you may not necessarily want to add a button somewhere). But if you want to, you\u2019ll have to cover the following:</p> <ul> <li>Button label and description: text &amp; title attributes, referring to an i18n library key.</li> <li>Button icon: iconSrc is a css class name for a font icon.</li> <li><code>&lt;context&gt;</code>: in what context will this action appear in the GUI? Whether it\u2019s linked to something being selected (selection), or if not the case, is it only inside a directory (dir), or inside the recycle. Where does it appear : define the toolbar (actionBar) and to which group it belongs (actionbarGroup), and if it appears in the context menu.</li> <li><code>&lt;selectionContext&gt;</code>: if the context refers to a selection, you\u2019ll be able to narrow here the type of selection concerned, files or folder, one or multiple, and even limit to a given set of mime types.</li> </ul>"},{"location":"developer-guide/writing-a-plugin/contributing-actions/#rights","title":"Rights","text":"<p>With the <code>&lt;rightsContext&gt;</code> element, you can decide some specific restrictions to activate the action or not:</p> <ul> <li>noUser [true|false]: does it appear if the whole user system is disabled?</li> <li>userLogged [only]: if set, it appears only if a user is logged</li> <li>read &amp; write: is read (write) right required to see this action</li> <li>adminOnly [true|false] : does the action appear only for admin?</li> </ul>"},{"location":"developer-guide/writing-a-plugin/contributing-actions/#client-side-code-snippet","title":"Client side code snippet","text":"<p>Once your action is correctly appearing at the place you want, you are able to write a code snippet that will be triggered when the action is fired. Use <code>&lt;processing&gt;&lt;clientCallback&gt;</code> element.</p> <p>In previous version, clientCallback tag would directly declare a javascript code snippet inside a CDATA section. This is now deprecated, and instead the clientCallback will point to a static function of any pydio javascript library.</p>"},{"location":"developer-guide/writing-a-plugin/contributing-actions/#server-side-callback","title":"Server side callback","text":"<p>If you declare a <code>&lt;processing&gt;&lt;serverCallback&gt;</code> , you point to a method of your contributed PHP class, and the query to the server with parameter get_action=your_action will be directed to this method (see the main architecture description).</p>"},{"location":"developer-guide/writing-a-plugin/contributing-actions/#submenus","title":"SubMenus","text":"<p>You can define submenus for your action, in either</p> <ul> <li>a static mode: submenu elements are defined directly in the XML. Use the <code>&lt;dynamicItems&gt;</code> element, and add <code>&lt;item1&gt;</code>, <code>&lt;item2&gt;</code> elements with an <code>actionId</code> attribute referring to other already defined actions.</li> <li> <p>or a dynamic mode: you refer to specific javascript code to dynamically populate the menu at load time. Use a <code>&lt;dynamicBuilder&gt;</code> element that contains a javascript snippet which will be called at launch time. Inside this snippet, you can access a window.builderContext object, inside wich you can add a key builderMenuItems that must be a PrototypeJS array.  E.G. you will do:</p> <p>window.buildContext.builderMenuItems = $A(); // And then push items in it context.builderMenuItems.push({     name:MessageHash[YOURKEY],     alt:MessageHash[YOURKEY],     icon_src: 'icon-something',     callback:function(e){} });</p> </li> </ul>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/","title":"Declaring resources","text":"<p>The  <code>&lt;client_settings&gt;</code> tag allows one to define dynamically a set of resources that a plugin will use. There are three available types : i18n (internationalisation library), js (javascript class), css (CSS Stylesheet).</p>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#language-library","title":"Language library","text":"<p>An i18n library is defined by its namespace and a path to a folder. Best practice is to use the plugin_dir/res/i18n folder, but it\u2019s not mandatory. The namespace is a unique keyword identifying the plugin, and the will be used to prefix all references to this library of strings.</p>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#library-structure","title":"Library structure","text":"<p>All PHP files must be UTF-8 encoded. The folder containing the library must be structure as follow</p> <ul> <li>en.php the \u201cmaster\u201d file of the strings, containing a PHP array named $mess , associating keys (number, or whatever) and values (english version of each strings). </li> <li>fr.php, de.php, \u201cany two-letters language code\u201d.php : a replica of the en.php, but in a foreign language version. Must contain exactly the same set of keys than the en.php, otherwise there will be problems. But if the current language of the application is not implemented, we will fallback automatically to the en.php file</li> <li>conf/ a folder containing more specific strings for all plugins labels and descriptions, as well as parameters.<ul> <li>en.php : same as above, but the keys are the strings found in the CONF_MESSAGE[\u201cstring\u201d] brackets, instead of arbitrary numbers (see below)</li> <li>other_languages.php: same as above.</li> </ul> </li> </ul>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#referring-to-a-language-file","title":"Referring to a language file","text":"<p>Once a library is declared with a namespace, the main files will contains key/value pairs like \u201c1\u201d =&gt; \u201cMy String\u201d , \u201c2\u201d =&gt; \u201cAnother String\u201d. They  can be used everywhere in the code by using the following syntaxes:</p>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#inside-an-xml-file","title":"Inside an XML file","text":"<ul> <li>Some specific attributes (like  <code>&lt;gui text=\"\" title=\"\"&gt;</code> ) are specifically referring to language files keys. Thus you can directly use namespace.key.</li> <li>Otherwise, for using for example inside a CDATA XML block, there is a filter applied to all XML that allows you to use AJXP_MESSAGE[namespace.key]</li> </ul> <p>Inside a Javascript file</p> <p>All i18n strings are compiled and sent to the client as big hash table. The global window variable MessageHash is available, thus you can use MessageHash[\u2018namespace.key\u2019]</p>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#inside-the-php-code","title":"Inside the PHP Code","text":"<p>The same message table is available in the code by getting ConfService::getMessages(), which returns an array $messages, and you can use $messages[\u201cnamespace.key\u201d].</p>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#namespace-exception","title":"Namespace exception","text":"<p>The plugin core.ajaxplorer is providing the main message file, and the strings defined in the library have no namespace, they can be called directly with their key.</p>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#javascript-class","title":"Javascript Class","text":"<p>Although the manifest files allow you to write Javascript snippets directly embedded in the XML, as soon as it\u2019s more complex than calling a couple of function, it is recommended to place your code in a dedicated javascript class. It must follow our modified PrototypeJS class definition (see Webapplication structure), as this is allowing the resource manager to detect whether it is already loaded or not. As a good practice, use res/js/ inside your plugin folder.</p> <p>For example, the editor.diaporama declares its javascript class (this mandatory for an editor) with the following tag :</p> <pre><code>&lt;js file=\"plugins/editor.diaporama/class.Diaporama.js\" className=\"Diaporama\"/&gt;\n</code></pre> <p>This will be loaded on demand (i.e. the first time a Diaporama is required), but you can also set an autoload=\u201dtrue\u201d attribute to make sure this Javascript library is loaded at the application startup.</p>"},{"location":"developer-guide/writing-a-plugin/declaring-resources/#css-stylesheet","title":"CSS Stylesheet","text":"<p>A plugin can also provide its own style sheet. This is done by using a <code>&lt;css&gt;</code> tag, where only the file is necessary. The autoload attribute is also optional to make sure the style sheet is loaded at startup. As a good practice, use res/css/ inside your plugin folder</p>"},{"location":"developer-guide/writing-a-plugin/manifest-xml-overview/","title":"Manifest.xml overview","text":"<p>The root element of any manifest should be an <code>&lt;ajxp_plugin&gt;</code> element, with the id attribute set to the plugin id (id = type.name). For the sake of listing and documenting the pluging, a couple of attributes are required :</p> <ul> <li>id: type.name of the plugin. Actually it is added automatically if not there</li> <li>label, description: can either be simple texts (\u201cMy Plugin Name\u201d, \u201cA more detailed description\u201d), but it is recommanded to enclose the text inside a CONF_MESSAGE[\u201cyour text here\u201d] bracket. This will refer to i18n libraries, see the dedicated section.</li> <li>mixins: refers to the /plugins/core.ajaxplorer/ajxp_mixins.xml file, where some commonly used set of XML elements are defined. You can refer to a comma-separated list of \u201cmixins\u201d, they will be merged automatically to this XML.</li> </ul> <p>Note: Editors (editor.*) plugins have some specific attributes, their root node must be an <code>&lt;editor&gt;</code> node.</p> <p>The first-level of children of the root element will be generally the following:</p> <ul> <li><code>&lt;plugin_info&gt;</code>  Documentation like set of tags, to describe the plugin author, version, etc.</li> <li><code>&lt;class_definition&gt;</code> defines the PHP file and class name of your plugin. The class must extend the AJXP_Plugin core class. This is not mandatory, a plugin can be a client-side only Javascript contributor.</li> <li><code>&lt;client_settings&gt;</code> a set of resources used by the clients : i18n (see specific section), javascript files to load, CSS stylesheets to load.</li> <li><code>&lt;server_settings&gt;</code> the parameters of this plugin, either global (will apply to all instances), or to be set for each instance of this plugin.</li> <li><code>&lt;registry_contributions&gt;</code> All the actions, hooks and other tags that will be dynamically concatenated to create the XML registry.</li> <li><code>&lt;dependencies&gt;</code> Add a dependency to another active plugin, so that if it\u2019s not active this one cannot activate, and/or trigger the load of another plugin resources (php class, or js/css resources).</li> </ul> <p>The parameters described in server_settings follow a syntax that can be used in a free manner to build forms, along with a set of Javascript tools to parse them, build the forms, and send the result. See the \u201cPydio Forms\u201d section.</p>"},{"location":"developer-guide/writing-a-plugin/modify-the-gui/","title":"Modify the GUI","text":"<p>The &lt;client_configs&gt; element of a plugin is a container to a couple of GUI-modifying tags. See XSD for full reference.</p>"},{"location":"developer-guide/writing-a-plugin/modify-the-gui/#component_config","title":"Component_config","text":"<p>The component_config element is a way to pass some parameters directly to an instanciated widget of the GUI, withouth this widget being recreated. If you developed your own widget, you\u2019ll have to make sure it listens to the pydio:component_configs event in the Javascript. Generally, this is way to set some parameters to the FilesList. You can pass whatever XML element you want, it\u2019s the widget mission to parse it.</p> <p>Currently the following elements are already available:</p> <p>&lt;columns&gt; Redefine the columns displayed in the FilesList. Contains &lt;column&gt; and &lt;additional_column&gt; elements, defining their labels, width, default visibility, etc.</p> <p>&lt;infoPanel&gt; &amp; &lt;infoPanelExtension&gt; Parsed by the InfoPanel widget, to pass arbitrary subwidgets to be displayed in the InfoPanel (see access.fs sample).</p>"},{"location":"developer-guide/writing-a-plugin/modify-the-gui/#template-template-part","title":"Template / Template part","text":"<p>With these tags, plugins can either</p> <ul> <li>redefine the whole layout with a &lt;template&gt;: this should be generally not be modified, as it is actually tricky. See the gui.ajax/manifest.xml where all master templates are defined</li> <li>redefine a given template part with a &lt;template_part&gt;: this is more frequently used, to dynamically reinstanciate an existing widget of a broader template.</li> </ul>"},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/","title":"Advanced Authentication with LDAP/AD","text":""},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/#advanced-settings-of-the-ldapad-authentification","title":"ADVANCED SETTINGS OF THE \"LDAP/AD\" AUTHENTIFICATION","text":"<p>In this guide we will look at the specifics that Pydio offers when you're authenticating with an LDAP/AD server and give you examples to make it easier to use it.</p> <p>First and foremost you have enabled the LDAP Authentication and you binded your server, second you have basic knowledge of the Groups &amp; Roles feature.</p>"},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/#group-mapping","title":"GROUP MAPPING","text":"<p>As you can see the Group Schema is sort of self explanatory but dont worry i will go in details and give you an example to help you have an up and running Pydio with LDAP/AD authentication.</p> <ul> <li>Groups DN : you can map groups with a Distinguished Names (you can add as many as you want) <pre><code>for example : OU=Sales,DC=Volvo,DC=COM\nCN stands for Common Name,OU for Organizational Unit and DC for Domain Component\n</code></pre></li> <li> <p>LDAP Groups Filter : you can specify the group scheme that you want Pydio to load/filter <pre><code>for example : OU=groups\nOU stands for Organizational Unit and is here the object class\n*Object Class Specifies the LDAP object class value that defines groups in the \ndirectory service.\n</code></pre></p> </li> <li> <p>Group Attribute : it's the main attribute that you'll be using as a label <pre><code>for example : CN=group\n</code></pre></p> </li> <li> <p>Role Prefix ( for memberOF) : you can put a prefix to make it easy to search, when you're mapping memberOF <pre><code>put the prefix of your choice to make it easy to know which LDAP/AD Users are part of what in Pydio\n</code></pre></p> </li> </ul>"},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/#attributes-mapping","title":"ATTRIBUTES MAPPING","text":"<p>Here you can map attributes in a more precise way so that they match your Pydio's attribute.</p> <p>I will give you an example of one of the many possibilities that you can achieve with the attribute mapping</p> <ul> <li>LDAP attribute : the ldap attribute of your choice that you're going to map <pre><code>for example : ON=Vendors\n</code></pre></li> <li>Mapping Type : the TYPE of the Pydio parameter/path/... that you want the mapping to target <pre><code>for example : Role ID\n(we want Vendors to be a role in Pydio)\n</code></pre></li> <li>Plugin parameter : the VALUE of the Pydio parameter/path/... that you're targeting  <pre><code>for example : ExampleROLE\n(the ID of the role that we want to be mapped with our LDAP attribute)\n</code></pre></li> </ul>"},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/#advanced-parameters","title":"ADVANCED PARAMETERS","text":"<p>You can set advanced parameters to have a more personalized experience with your Pydio</p> <ul> <li> <p>Fake Member from : if you dont have the memberOF attribute/overlay you can enter a group attribute that has the members ids to fake one on Pydio.</p> </li> <li> <p>Search MemberOF recursively ( with AD only) : if you want to recursively search for values of memberOF.</p> </li> <li> <p>Fake MemberOF value of member/memberUid attribute of group :  if you enable it the user attribute will be DN and if its disabled it will be CN.</p> </li> <li> <p>Search Users by Attribute :  you can specify the parameter that you want to be used for autocompletion when searching instead of the user ID</p> </li> <li> <p>LDAP Server page size : the size of the LDAP Server page</p> </li> <li> <p>Use referral bind : The Bind operation allows credentials to be exchanged between the client and server to establish a new authorization state.</p> </li> <li> <p>Cache Users Count ( in hours ) : if you want to locally cache the number of users for X hours, if you have huge directories it can be really a good to enable it</p> </li> </ul>"},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/#auth-driver-commons","title":"AUTH DRIVER COMMONS","text":"<ul> <li> <p>Auto Create User : if its enabled it will automatically create a user when you're using a remote authentication system.</p> </li> <li> <p>Login Redirect : you can choose to perform a redirection to a given URL after a login operation.</p> </li> <li> <p>Administrator Login : you can choose a user to be a default admin by specifying a User ID.  </p> </li> <li> <p>Auto apply role : you can choose to automatically apply a role to a user whenever he's authenticating through this driver.</p> </li> </ul> <p>And thats just a sample of what you can achieve with Pydio, i let you try and custom everything to fit what you want.</p>"},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/#troubleshooting-ldap","title":"TROUBLESHOOTING LDAP","text":"<ul> <li>PHP-LDAP extension : you should make sure that you have php-ldap  you can use <code>php -m | grep ldap</code> to check. If you do not have the ldap extension you can install it through aptitude, yum, curl ... by using <code>install php-ldap</code>.</li> </ul> <p>If you want to get more informations about the extension you can visit the PHP-LDAP page.</p>"},{"location":"knowledge-base/advanced-authentication-with-ldap-ad/#if-your-issue-was-not-listed","title":"IF YOUR ISSUE WAS NOT LISTED","text":"<p>You should re-check if the test between your LDAP and Pydio was successful when you were setting it up, you have the 'Try to connect to LDAP' Button to make sure that you gave the right informations. Otherwise i advise you to reconfigure it from scratch in case you missed a setting.</p> <p>If none of the above worked you should make sure that your Pydio installation was rightfully done, you can also go check Pydio's Troubleshooting page.</p> <p>Else you can go on our Forum and search if someone had a similar issue or you can create a post.</p>"},{"location":"knowledge-base/setup-a-webftp/","title":"Setup a WEBFTP","text":""},{"location":"knowledge-base/setup-a-webftp/#setup-a-webftp-remote-authentication","title":"SETUP A WEBFTP REMOTE AUTHENTICATION","text":"<p>With Pydio you can have FTP Workspaces implying that you will have to authenticate one way or another to access the content and so we offer you a plugin that allows you to have users log in this workspace as if they were logging in to a FTP server such as FileZilla.</p>"},{"location":"knowledge-base/setup-a-webftp/#requirements","title":"Requirements","text":"<ol> <li>Pydio installed and fully functionnal.</li> <li>FTP Workspace, you can go here to learn how to set an FTP Workspace.</li> <li>FTP Authentication Plugin.</li> </ol> <p>FTP Authentication Plugin</p> <p>First you need you enable this plugin go to Application Parameters &gt; Available Plugins &gt; Authentication Backends &gt; FTP Authentication.</p> <p>Then you can start to set it up, i will explain what every field stands for and it's usage. </p> <ul> <li>FTP Login Screen : if you want your users to have dialog allowing them to enter host/port data, but in most cases you should disable it.</li> <li>Workspace : The Workspace that you are using to check if the credentials are right.</li> <li>Auto Create User : you can enable this, it will automatically create a user when someone logs, in Pydio's database.</li> <li>Login Redirect : if you want a specific action to happen when someone is logging in you can give a Specific URL.</li> <li>Admin Login : Give a user that is considered as an Admin by default. </li> <li>Auto apply role : If you want a role to be applied to every user that is authenticating through this driver.</li> </ul>"},{"location":"knowledge-base/instalacion-de-pydio-on-ubuntu-spanish-video-included/","title":"Instala\u0107ion de Pydio on Ubuntu (Spanish, Video included)","text":"<p>Tutorial by Francisco Carrizales, Pydio v5.2.0 / Ubuntu 12.04.3 LTS</p> <p>http://fcarrizalest.com/?q=content/instalaci%C3%B3n-pydio</p>"},{"location":"knowledge-base/install-on-centos6-4/","title":"Install on CentOS6.4","text":"<p>Tutorial by Unixmen, Pydio v5.0.3 / LAMP stack on CentOS6.4</p> <p>http://www.unixmen.com/setup-fileserver-ajaxplorer/</p>"},{"location":"knowledge-base/installation-de-pydio-sur-iis8-french/","title":"Installation de Pydio sur IIS8 (French)","text":"<p>Tutorial by IT-Connect, Pydio v5.2.0 / Windows Server / IIS8 + MySQL</p> <p>http://www.it-connect.fr/installation-de-pydio-sous-iis-8/</p>"},{"location":"knowledge-base/using-pydio-in-an-ispconfig-3-multiserver-installation/","title":"Using Pydio In An ISPConfig 3 Multiserver Installation","text":"<p>Submitted by Croydon (Marius Cramer) on Howtoforge, this one was heavily retweeted!</p> <p>http://www.howtoforge.com/using-pydio-in-an-ispconfig-3-multiserver-installation</p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/","title":"Migration Pydio 6 to Pydio 7 with YUM","text":"<p>In this how-to, you will find the steps to do the migration and upgrade from Pydio 6 to pydio 7 on another machine base on CentOS 7.</p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#contents","title":"Contents","text":"<ol> <li>Install latest version Pydio on new machine</li> <li>Migrate Database</li> <li>Migrate data folder</li> <li>Test and finalize</li> </ol>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#step-1","title":"Step 1.","text":"<p>Install Pydio PHP latest version on CentOS 7:</p> <p>Another option is using virtual machine image (OVF). You can also download this file from https://pydio.com</p> <p>Tip: On CentOS 7, there are a lot of issues with selinux, it could be better if you disable selinux during installation &amp; testing. Use this command: <code>setenforce 0</code></p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#step-2","title":"Step 2.","text":""},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#21","title":"2.1","text":"<p>On new machine, create a new database using following command:</p> <pre><code>create database pydioold;\ngrant all privileges on pydioold.* to 'pydio'@'localhost';\nflush privileges;\n</code></pre>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#22","title":"2.2","text":"<p>Before exporting the db, please try to set Settings &gt; Main Options &gt; Server URL to blank value</p> <p>On old machine, export all data in DB by using <code>mysqldump</code></p> <pre><code>mysqldump -u username -p databasename &gt; pydio6.mysql\n</code></pre>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#23","title":"2.3","text":"<p>Copy pydio6.mysql file to new machine</p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#24","title":"2.4","text":"<p>Import to pydioold database:</p> <pre><code>mysql -u pydio -p pydioold &lt; pydio6.mysql\n</code></pre>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#25","title":"2.5","text":"<p>Execute some scripts to update pydioold database from version 6 to version 7:</p> <p>https://raw.githubusercontent.com/pydio/pydio-core/develop/dist/php/6.2.0.mysql</p> <p>https://raw.githubusercontent.com/pydio/pydio-core/develop/dist/php/6.4.0.mysql</p> <p>https://raw.githubusercontent.com/pydio/pydio-core/develop/dist/php/6.5.3.mysql</p> <p>https://raw.githubusercontent.com/pydio/pydio-core/develop/dist/php/7.0.0.mysql</p> <p>https://raw.githubusercontent.com/pydio/pydio-core/develop/dist/php/7.0.2.mysql</p> <p>Just copy and paste to terminal of mysql</p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#step-3","title":"Step 3","text":"<p>If you install Pydio by using yum, all data is located in: /var/lib/pydio</p> <p>On new machine, backup this folder <code>mv /var/lib/pydio /var/lib/pydio.latest</code></p> <p>Copy recursively /var/lib/pydio from old machine to /var/lib/pydio on new machine.</p> <p>(Visit this link to set permission correctly: https://pydio.com/en/docs/kb/security/permission-pydio%E2%80%99s-filesfolders)</p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#31","title":"3.1","text":"<p>Delete some cache file on new machine: <code>rm -rf /var/cache/pydio/plugins_*</code></p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#32","title":"3.2","text":"<p>Backup and edit /var/lib/pydio/plugins/boot.conf/bootstrap.json file to use new mysql connection (server, username, password, and database name - pydioold) or rename pydioold to other convenient name.</p>"},{"location":"knowledge-base/migration-pydio-6-to-pydio-7-with-yum/#step-4","title":"Step 4","text":"<p>Try to browse pydio by using new machine. If you have any problem with url, maybe this link is useful: https://pydio.com/en/docs/kb/miscellaneous/fix-public-link-after-upgrading-pydio-7#content</p>"},{"location":"knowledge-base/optimizing-pydio-performances/","title":"Optimizing Pydio Performances","text":""},{"location":"knowledge-base/optimizing-pydio-performances/#optimize-pydio","title":"OPTIMIZE PYDIO","text":"<p>Here we will give you all the tips that you need to have an optimized running Pydio.</p> <p>Most of the commands that i give are based on a Linux Distribution so unless you're using a different Distribution it should be more or less the same ( if it doesn't give you what was expected you should look at your OS's documentation )</p>"},{"location":"knowledge-base/optimizing-pydio-performances/#1-first-step-your-server","title":"1. FIRST STEP YOUR SERVER","text":"<p>You have to pick a good server with a good hardware. The best webservers on the market right now are Apache and Nginx. Apache is one of the most used server and is always the default choice. Nginx can be the better choice if you have the knowledge about its Nginx+PHP FPM setup.</p> <p>If you're not comfortable with Nginx stick to Apache</p>"},{"location":"knowledge-base/optimizing-pydio-performances/#2-configuration","title":"2. CONFIGURATION","text":"<ul> <li> <p>Output_buffering : The diagnostic tool will warn you about it and so i will show you how to set this one up. First you have to know where your php.ini file is located, you can use this command on Linux distrubitons to find it <code>php --ini | grep \"Loaded Configuration File:\"</code> and look for the line <code>Output_buffering =</code> and set it to <code>Output_buffering = off</code></p> </li> <li> <p>OP Cache : It should be standard as it's bundled by default with php 5.4 and above. You can check it using <code>php -v</code> and it will show you the following : <pre><code>PHP 7.0.22-0ubuntu0.16.04.1 (cli) ( NTS )\nCopyright (c) 1997-2017 The PHP Group\nZend Engine v3.0.0, Copyright (c) 1998-2017 Zend Technologies\n    with Zend OPcache v7.0.22-0ubuntu0.16.04.1, Copyright (c) 1999-2017, by Zend Technologies\n</code></pre> If you have this line it means that its working : with Zend OPcache v7.0.22-0ubuntu0.16.04.1, Copyright (c) 1999-2017, by Zend Technologies </p> </li> </ul> <p>You can also check it using <code>php -i | grep \"opcache.enable</code> and look at this line : \"opcache.enable =&gt; On =&gt; On\"</p> <p>Otherwise you can look in the php.ini file and get a look at the following line <code>opcache.enable =</code> and set it to <code>opcache.enable = 1</code></p> <p>For caching you can also use Xcache or APC. As long as you know how to set them up otherwise stick to OPcache.</p> <ul> <li>In-Memory caching : With Pydio you have an new tool which allows you to support other Key-Values Stores such as Memcache, Memcached, Redis, etc...</li> </ul> <p>To use it first make sure you have the plugin enabled, by going to All Plugins &gt; Available Plugins &gt; Cache Server and make sure that you have Doctrine Cache Driver enabled.</p> <p>Then go to Application Parameters &gt; Cache Server Cache store instance and set it as you want. I will give you an example :  </p> <ul> <li>Instance : If you want to use cache you have to put Doctrine cache driver ( the plugin allowing to use caching ).</li> <li>Cache Driver : What caching are you going to use. <pre><code>For example : memcache\nto show you how it works i will be using memcache but you can use the one that you want\n</code></pre></li> <li>Hostname : ( for the memcache case ) the server where your memcache is located.</li> <li>Port : ( for the memcache case ) the server's port for memcache.</li> <li>Cache Prefix : how you want the cache to be organized.</li> </ul>"},{"location":"knowledge-base/optimizing-pydio-performances/#3-misc","title":"3. MISC","text":"<p>You can use command-line PHP to send long running operations to the server such as for example : compression/decompression operations, indexation, etc ... Note that you can still navigate even though you launched an operation.</p> <p>If you are using the ENTERPRISE DISTRIBUTION make sure that you have IONCUBE Loader enabled check the following link HERE for more details.</p>"},{"location":"knowledge-base/use-pydio-sync-client/","title":"Use pydio sync client","text":""},{"location":"knowledge-base/use-pydio-sync-client/#how-to-use-the-pydio-sync-client","title":"How to use the pydio Sync client","text":""},{"location":"knowledge-base/use-pydio-sync-client/#setting-using-the-pydio-sync-client","title":"Setting &amp; Using the pydio sync client","text":""},{"location":"knowledge-base/use-pydio-sync-client/#1-for-windows-mac-linuxgraphical-environnement","title":"1. FOR WINDOWS, MAC &amp; LINUX(graphical environnement)","text":"<p>Now launch the app click on getting started and you should have the following screen.</p> <p></p> <ul> <li>HTTP/HTTPS : You should always choose HTTPS but if you didnt configure security you can use HTTP.</li> <li>URL : Its your Pydio's server URL.</li> <li>Login : Your Pydio Login.</li> <li>Password : Your Pydio's User Password.</li> </ul> <p></p> <p>Then choose the workspace that you want to be Synced.(You can also choose if you only want a subfolder of this workspace).</p> <p></p> <p>After that you will have to choose a destination, meaning the folder on your local device that you want to be synced with Pydio.</p> <p></p> <p>This screen shows you a global view of your syncronization, and also offers you more advanced parameters ( see below ).</p> <p></p> <p>The settings are the same with Windows and Linux</p>"},{"location":"knowledge-base/use-pydio-sync-client/#troubleshooting","title":"Troubleshooting","text":"<p>You can find the files and therefore the log files of the pydio sync client here:</p> <p>Win: <code>C:\\Users\\&lt;USER&gt;\\AppData\\Roaming\\Pydio</code></p> <p>Mac: <code>~/Library/Application\\ Support/Pydio</code> Full path : <code>/Users/username/Library/Application Support/Pydio</code></p>"},{"location":"knowledge-base/setting-up-emailers/","title":"Setting up emailers","text":""},{"location":"knowledge-base/setting-up-emailers/#how-to-use-the-emailer-on-your-system","title":"HOW TO USE THE EMAILER ON YOUR SYSTEM","text":"<p>We will provide you with a list that you can use to install your EMAILER.</p> <p>It is assumed that you have installed and correctly configured Pydio.</p>"},{"location":"knowledge-base/setting-up-emailers/#1-setting-up-the-emailer","title":"1. SETTING UP THE EMAILER","text":"<p>Here's a list of guides that are tested and approved.</p>"},{"location":"knowledge-base/setting-up-emailers/#for-linux-based-distributions","title":"FOR LINUX BASED DISTRIBUTIONS","text":"<p>You can use a lot of packages ( Exim, Sendmail, Qmail, ...) but we will only see examples running with PostFix.</p> <p>Installation You can use guides such as : + 1. Postfix/Linux + 2. Postfix/Linux/Send-ONLY + 3. Postfix/Linux/GMAIL</p>"},{"location":"knowledge-base/using-the-tasks-scheduler/","title":"Using the tasks scheduler","text":""},{"location":"knowledge-base/using-the-tasks-scheduler/#how-to-use-the-scheduler","title":"HOW TO USE THE SCHEDULER","text":"<p>With Pydio you can schedule tasks and gain a lot of time instead of running every task indivudaly you can run them all at a chosen time such as maintenance tasks.</p> <p>First make sure you have the Tasks Scheduler Plugin Enabled go to Available Plugins &gt; Actions Plugins.</p>"},{"location":"knowledge-base/using-the-tasks-scheduler/#programming-tasks","title":"PROGRAMMING TASKS","text":"<p>Now lets see how you can program &amp; run a task i will give you an example but you can apply the logic for other tasks.</p> <p>Go to Menu &gt; Scheduler and click on create a new task.</p> <p></p> <p>SCHEDULE TAB</p> <ul> <li>Schedule : you need to use a cron expression, to set the time for when the tasks are going to be executed. <pre><code>for example : 0 0 0/1 1/1 * ? * ( i want to send mails every HOUR )\n</code></pre> <p>Here's a Cron Expressions Generator theres plenty on the internet</p> </li> </ul> <p>ACTION TAB</p> <p></p> <ul> <li>Action : Choose the action that you want to perform. <pre><code>for example : consume_mail_queue ( it will send all the mails that i queued in one batch )\n</code></pre></li> <li>Action Parameters : Your action parameters, specify what you exactly need from the chosen action.</li> <li>Label : Name your Task, I advise you to always give it a clear name. <pre><code>for example : i'm creating a task that will send a notification mail lets name it should be  [NOTIF]mail, it will make it easier to find when i want to change something.\n</code></pre> <p>Its just an example feel free to name it as you want.</p> </li> </ul> <p>CONTEXT TAB</p> <p></p> <ul> <li>User(s) : The user that is identifying the task.</li> <li>Repository ID : The workspace that you're targeting with the task, you can choose all the workspaces if you wish to. You can add multiple single workspaces if you want to be more precise.</li> </ul> <p>For more details about CRON Expressions</p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/","title":"Configure ApplicationPool for Pydio in Windows2012 & IIS8 [Update Pydio 6]","text":"<p>In earlier version of IIS 8, it has sometimes been difficult to isolate web application pool from each other. If multiple web application pool are configured to run as the same identify (for example, Network Service), then code running inside one web application pool would be able to access to resources of others. In this \u201cHow-to\u201d, we will try to configure Pydio to run inside an Application Pool. For further info: http://adopenstatic.com/cs/blogs/ken/archive/2008/01/29/15759.aspx</p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#1-download-pydio-from-internet","title":"1. Download pydio from internet","text":""},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#2-extract-to-cinetpubwwwrootpydio","title":"2. Extract to C:\\inetpub\\wwwroot\\pydio","text":""},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#3-create-an-application-pool-in-iis-manager","title":"3. Create an Application Pool in IIS manager","text":"<p>Right-click on Application Pools and select Add.</p> <p>Type pydio in Name and No Managed Code</p> <p></p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#4-convert-pydio-folder-to-web-application","title":"4. Convert Pydio folder to web application","text":"<p>Right-click on folder pydio in Default Web Sites to convert this folder to web application</p> <p></p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#5-select-application-pool","title":"5. Select application pool","text":"<p>We select pydio in the application pools list</p> <p></p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#6-ntfs-permission","title":"6. NTFS permission","text":"<p>In this step, we will set the permission on the Pydio folder. there are two groups of data: 1, php script and configuration infomration 2, repository for user upload/modify. Of cours, we have to have 2 security policy for them. In our situation we need Pydio running in isolated process. We have to remove default user and add Application Pool user in the NTFS access list.</p> <p>\u2013 Disable inheritance: Because pydio folder is a subfolder of wwwroot, if we need to remove IIS_IUSRS, we must remove permission inheritance. Select \u201cConvert inherited permissions into \u2026\u201d</p> <p> </p> <p>\u2013 remove IIS_IUSRS</p> <p>select accout IIS_IUSRS and remove it</p> <p></p> <p>\u2013 Add \u201ciis apppool\\pydio\u201d in NTFS access list of pydio folder</p> <p>The Locations must be \u201cthis computer\u201d then type \u201ciis apppool\\pydio\u201d to search pydio worker process.</p> <p>This is a service account and it have no password.</p> <p></p> <p>\u2013 Permission for Pydio scripts. We prevent any modification on the code and configuration carried out by IIS therefore the permission read/exec is sufficient</p> <p></p> <p>\u2013 Permission for Pydio data. But for pydio/data, IIS need more permission to manipulate users\u2019 data such as upload/download, create new folder/files\u2026</p> <p></p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#61-edit-anonymous-authentication-credentials","title":"6.1 Edit Anonymous Authentication Credentials","text":""},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#7-verify-process-worker-for-pydio","title":"7. Verify process worker for pydio","text":"<p>In task manager, you can see w3wp.exe is running with user pydio</p> <p></p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#8-pydio-diagnostic-result","title":"8. Pydio diagnostic result:","text":"<p>Now we are ready to launch Pydio web site on a web browser. But\u2026 there are a lot of \u201cwarning\u201d. Don\u2019t worry, we will fix them all.</p> <p></p> <p>Sometimes PHP in our system can not recognize the repository to locate its session files. We have to specify in conf/bootstrap_conf.php</p> <p>open conf/bootstrap_conf.php and uncomment and do a small change lines:</p> <p>//$AJXP_INISET[\u201csession.save_path\u201d] = AJXP_DATA_PATH.\u201d/tmp/sessions\u201d;</p> <p>to</p> <p>$AJXP_INISET[\u201csession.save_path\u201d] = AJXP_DATA_PATH.\u201d/tmp/sessions\u201d;</p> <p>With this configuration, PHP will save all session files on AJXP_DATA_PATH.\u201d/tmp/sessions\u201d. Of course, we have to create tmp and tmp/sessions in AJXP_DATA_PATH.</p> <p>For security reason, we highly recommend to locate php session out of Pydio folder. If you do that, please remember to set appropriate permission (r/w) on this folder for iis apppool\\pydio.</p> <p>When you upload data to server, firstly PHP will cache them on a temporary folder and relocate it to desired location when the upload is complete. We also help PHP where it can locate for temporary files by uncomment in conf/boot_conf.php</p> <p>//define(\u201cAJXP_TMP_DIR\u201d, AJXP_DATA_PATH.\u201d/tmp\u201d);</p> <p>to</p> <p>define(\u201cAJXP_TMP_DIR\u201d, AJXP_DATA_PATH.\u201d/tmp\u201d);</p> <p>Don\u2019t forget to set permission on this folder for iis apppool\\pydio account</p>"},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#9-enforce-security-for-your-system","title":"9. Enforce security for your system","text":""},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#91-configure-mysql","title":"9.1. configure mysql","text":""},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#92-apply-security","title":"9.2. apply security","text":""},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#93-verify-the-result","title":"9.3. verify the result","text":""},{"location":"knowledge-base/configure-applicationpool-for-pydio-in-windows2012-iis8-update-pydio-6/#10-webconfig-pydio-6","title":"10. web.config (Pydio 6)","text":"<p>C:\\inetpub\\wwwroot\\pydio\\webconf</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;configuration&gt;\n    &lt;system.webServer&gt;\n        &lt;rewrite&gt;\n            &lt;rules&gt;\n                &lt;rule name=\"Pydio-Rule-1\" stopProcessing=\"true\"&gt;\n                    &lt;match url=\"^shares\" ignoreCase=\"false\" /&gt;\n                    &lt;conditions logicalGrouping=\"MatchAll\"&gt;\n                        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" ignoreCase=\"false\" negate=\"true\" /&gt;\n                        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" ignoreCase=\"false\" negate=\"true\" /&gt;\n                    &lt;/conditions&gt;\n                    &lt;action type=\"Rewrite\" url=\"./dav.php\" /&gt;\n                &lt;/rule&gt;\n                &lt;rule name=\"Pydio-Rule-2\" stopProcessing=\"true\"&gt;\n                    &lt;match url=\"^api\" ignoreCase=\"false\" /&gt;\n                    &lt;action type=\"Rewrite\" url=\"./rest.php\" /&gt;\n                &lt;/rule&gt;\n                &lt;rule name=\"Pydio-Rule-3\" stopProcessing=\"true\"&gt;\n                    &lt;match url=\"^user\" ignoreCase=\"false\" /&gt;\n                    &lt;action type=\"Rewrite\" url=\"./index.php?get_action=user_access_point\" appendQueryString=\"false\" /&gt;\n                &lt;/rule&gt;\n                &lt;rule name=\"Pydio-Rule-4\" stopProcessing=\"true\"&gt;\n                    &lt;match url=\"(.*)\" ignoreCase=\"false\" /&gt;\n                    &lt;conditions logicalGrouping=\"MatchAll\"&gt;\n                        &lt;add input=\"{URL}\" pattern=\"^/pydio6/index\" ignoreCase=\"false\" negate=\"true\" /&gt;\n                        &lt;add input=\"{URL}\" pattern=\"^/pydio6/plugins\" ignoreCase=\"false\" negate=\"true\" /&gt;\n                        &lt;add input=\"{URL}\" pattern=\"^/pydio6/dashboard|^/pydio6/welcome|^/pydio6/settings|^/pydio6/ws-\" ignoreCase=\"false\" /&gt;\n                    &lt;/conditions&gt;\n                    &lt;action type=\"Rewrite\" url=\"index.php\" /&gt;\n                &lt;/rule&gt;\n            &lt;/rules&gt;\n        &lt;/rewrite&gt;\n    &lt;/system.webServer&gt;\n&lt;/configuration&gt;\nC:\\inetpub\\wwwroot\\pydio\\data\\public\\webconfig\n\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;configuration&gt;\n    &lt;system.webServer&gt;\n        &lt;rewrite&gt;\n            &lt;rules&gt;\n                &lt;rule name=\"Pydio-Public-Folder-Rule-1\"&gt;\n                    &lt;match url=\"^([a-zA-Z0-9_-]+)\\.php$\" ignoreCase=\"false\" /&gt;\n                    &lt;conditions logicalGrouping=\"MatchAll\"&gt;\n                        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsFile\" ignoreCase=\"false\" negate=\"true\" /&gt;\n                        &lt;add input=\"{REQUEST_FILENAME}\" matchType=\"IsDirectory\" ignoreCase=\"false\" negate=\"true\" /&gt;\n                    &lt;/conditions&gt;\n                    &lt;action type=\"Rewrite\" url=\"share.php?hash={R:1}\" appendQueryString=\"true\" /&gt;\n                &lt;/rule&gt;\n                &lt;rule name=\"Pydio-Public-Folder-Rule-2\"&gt;\n                    &lt;match url=\"^([a-zA-Z0-9_-]+)--([a-z]+)$\" ignoreCase=\"false\" /&gt;\n                    &lt;action type=\"Rewrite\" url=\"share.php?hash={R:1}&amp;amp;lang={R:2}\" appendQueryString=\"true\" /&gt;\n                &lt;/rule&gt;\n                &lt;rule name=\"Pydio-Public-Folder-Rule-3\"&gt;\n                    &lt;match url=\"^([a-zA-Z0-9_-]+)$\" ignoreCase=\"false\" /&gt;\n                    &lt;action type=\"Rewrite\" url=\"share.php?hash={R:1}\" appendQueryString=\"true\" /&gt;\n                &lt;/rule&gt;\n            &lt;/rules&gt;\n        &lt;/rewrite&gt;\n    &lt;/system.webServer&gt;\n&lt;/configuration&gt;\n</code></pre>"},{"location":"knowledge-base/pydio-security-model/","title":"Pydio security model","text":""},{"location":"knowledge-base/pydio-security-model/#security-basics","title":"Security basics","text":""},{"location":"knowledge-base/pydio-security-model/#architecture","title":"Architecture","text":"<p>Storing all your organization information in a SaaS-based Box service can prove to turn into a nightmare: are the provider\u2019s servers located in a country that is compliant with your juridiction? Is the service provider trust-worthy? Can he actually read the data? And eventually let third-party read them (like NSA\u2026)? And what if a trainee has opened a \u201cbox\u201d last year, and no one can close it anymore? Will she still see all the documents forever??</p> <p>Using Pydio is a simple solution to this: take back the control, by installing your enterprise box on your own servers. This does not necessarily means a server inside your office building, but simply leveraging your existing architecture. Maybe the enterprise already owns a piece of storage somewhere in a data-center, that has been negociated with a local dealer, and why should you migrate everything to another storage mechanism? Or you have set up a public-cloud based infrastructure, but on which you decide to encrypt everything, keeping away the keys from the provider, and that you access only through a VPN\u2026</p> <p>As such, by construction, Pydio provides a \u201cpassive\u201d security model that will raise the standards in most cases.</p>"},{"location":"knowledge-base/pydio-security-model/#open-source-mature","title":"Open Source. Mature.","text":"<p>What open source guarantees, is a better quality and a more secure code: there can\u2019t be any spyware or malware delivered with the solution, as a whole community is watching the code closely, and it would just be disclosed in no time. Furthermore, security experts regulary audit the code for vulnerabilities, and when they are found, they are disclosed through the public channels. This forces the contributors to be always listening and reactive, to avoid losing the trust of the community.</p> <p>Pydio is a 5 years old project, with more than 500 000 downloads. Its maturity is a strong gage of security.</p>"},{"location":"knowledge-base/pydio-security-model/#encryption","title":"Encryption","text":"<p>Encrypting the data during communication and at rest is a recommanded procedure. The first is easier to provide that the latter, and should always be set up.</p> <p>By using SSL encryption ( = accessing Pydio through HTTPS instead of HTTP ), you will defeat the most easiest flaws that can happen. When connecting from a public Wi-Fi, it\u2019s really easy to intercept the communication, and sending everything in clear is the best way to get information stolen.</p> <p>For encryption Pydio currently provides an EncFS implementation, that is based on a encryption of the data on the file system, and the decryption is done only during the user session. Full client-side encryption is still a hard one, as it must be in that case provided by the HTML clients themselves (= the browser), requiring a lot of computer processing.</p>"},{"location":"knowledge-base/pydio-security-model/#common-security-flaws","title":"Common security flaws","text":""},{"location":"knowledge-base/pydio-security-model/#web-app-protection","title":"Web-App protection","text":"<p>Pydio is created with security in mind: you will put your IP in there, you HAVE to be protected. Beyond the common authentication features and protections barriers that every software like this provides, the web application has been regularly tested and coded with the common security flaws in mind.</p> <p>Below are some of the most current and how they are handled.</p> <ul> <li>XSS: Sanitization of many parameters, included filenames and metadata.</li> <li>CSRF: a secure token must be provided for all requests</li> <li>Brute-force login: After three wrong logins, user must prove she\u2019s a human by filling a CAPTCHA form</li> <li>XPath Injection: heavily relying on XML, the registry is protected from injections by a sanitization mechanism.</li> </ul>"},{"location":"knowledge-base/pydio-security-model/#mobile-clients","title":"Mobile Clients","text":"<p>The mobile applications (iOS and Android) store the passwords using the standard \u201cKeyChain\u201d mechanism of each platform. They both support HTTPS connection (see below). The iOS application also provides a way to PIN-lock the whole application, this is in the roadmap for the Android version.</p>"},{"location":"knowledge-base/pydio-security-model/#how-to-report-a-vulnerability","title":"How to report a vulnerability?","text":"<p>Write directly to security@pydio.com</p>"},{"location":"knowledge-base/pydio-security-model/#permissions-on-pydios-files-andor-folders","title":"Permissions on pydio's files and/or folders","text":"<p>The setting permissions on Pydio\u2019s files/folders is an easy but very important task. Correct permissions can reduce the risk of modifications from other entities than web server and system administrator. We highly recommend you to use the most restricted permissions for Pydio data.</p> <p>Under the concept of linux</p> <p>\u2013 All files/folders must be owned by root account</p> <p>\u2013 Everyone have no access</p> <p>\u2013 Web server (apache) has permission via group ownership</p> <p>\u2013 Web server has read and execution on .php files and read/write on user data</p> <p>Following this criteria, the solution below could be applied. When you install Pydio from deb or rpm, Pydio\u2019s files/folders are located in several places such as /etc/pydio for configuration, /usr/share/pydio for .php files \u2026 and it could be slightly difficult because you will have to look for each file separatly . In this example, we obviously can see that Pydio has group www and has no permission for everyone while it is owned by root. Note that data, configuration files and logs may be changed and permission must be r/w for group.</p> <p>Example:</p> <pre><code>  # www is for httpd group name\nchown -R root:www PYDIO_INSTALL_DIR/\ncd PYDIO_INSTALL_DIR/\nfind ./ -type d -exec chmod u=rwx,g=rx,o= '{}' \\;\nfind ./ -type f -exec chmod u=rw,g=r,o= '{}' \\;\n\n#Mod data dir for config changes and logs\nfind data -type d -exec chmod ug=rwx,o= '{}' \\;\nfind data -type f -exec chmod ug=rw,o= '{}' \\;\n\n# fix permission on .htaccess to read-only for apache\nfind /var/lib/pydio -name .htaccess -exec chmod 640 '{}' \\;\nfind /var/cache/pydio -name .htaccess -exec chmod 640 '{}' \\;\nfind /usr/share/pydio -name .htaccess -exec chmod 640 '{}' \\;\n</code></pre> <p>When Pydio is installed from the archive on your webserver you just have to :    </p> <pre><code>    chown -R root:www-data /var/www/PYDIO_INSTALL_DIR/\n    cd /var/www/PYDIO_INSTALL_DIR/\n    find ./ -type d -exec chmod u=rwx,g=rx,o= '{}' \\;\n    find ./ -type f -exec chmod u=rw,g=r,o= '{}' \\;\n\n    #Mod data dir for config changes and logs\n    find data -type d -exec chmod ug=rwx,o= '{}' \\;\n    find data -type f -exec chmod ug=rw,o= '{}' \\;\n\n    # fix permission on .htaccess to read-only for apache\n    find /var/www/PYDIO_INSTALL_DIR -name .htaccess -exec chmod 640 '{}' \\;\n</code></pre>"},{"location":"knowledge-base/pydio-security-model/#ensuring-your-security-setup","title":"Ensuring your security setup","text":"<p>As described in the security model, Pydio comes fully secured, and you should not have to worry about the major vulnerabilities brought by webapps. Still, there are a couple of tests you should make to be sure that your underlying configuration is not introducing problems.</p>"},{"location":"knowledge-base/pydio-security-model/#checking-web-access-to-sensitive-data","title":"Checking web access to sensitive data","text":"<p>Note: this chapter is valid for Zip/Tar packaging only. In the Linux Packages (Deb &amp; Rpm) the sensitive folders are spread elsewhere in the system, and by default never accessible via http.</p>"},{"location":"knowledge-base/pydio-security-model/#allowed-forbidden-folders","title":"Allowed / Forbidden folders","text":"<p>The most common mis-configuration of your web server that can lead to an information leakage lies in the \u201chtaccess\u201d (for Apache) or equivalents permission files configuration. When you deploy Pydio using the Zip or TarGz packages, the application is structured as follow. The folders marked with \u201cred\u201d must NOT be accessible through the web. This means for example that if you can read the content of http://yourserver/your_web_access/conf/, without having a \u201cForbidden\u201d error, you HAVE a problem.</p> <ul> <li> <p>web_access/</p> <ul> <li><code>conf/</code></li> <li>core/</li> <li>plugins/ </li> <li>data/<ul> <li><code>cache/</code></li> <li><code>plugins/</code></li> <li><code>\u2026.</code></li> <li>public/</li> </ul> </li> <li><code>+various php scripts</code></li> </ul> <p>The data/ folder is a bit specific: it must be accessible only to let the user access data/public/ folder. If you want to change this, you can change the Application Core &gt; Sharing, using for example another folder, and declaring an alias in your web server. That way, you can safely disable all access for data/</p> </li> </ul>"},{"location":"knowledge-base/pydio-security-model/#apache-htaccess","title":"Apache: .htaccess","text":"<p>The most basic way of preventing access is (in Apache) to use a .htaccess file containing the <code>Deny From All</code> instruction. This is actually packaged in the software by default, and will work \u201cas it's\u201d in 95% of cases. But sometimes Apache is not configured to handle this : make sure that the VirtualHost or Directory configured for your website has the <code>AllowOverride All</code> instruction, otherwise .htaccess files will not be taken into account.</p>"},{"location":"knowledge-base/pydio-security-model/#iis-webconfig","title":"IIS: web.config","text":"<p>The .htaccess are not understood by IIS. You have to use the equivalent using Request Filtering to prevent access to the described folders.</p>"},{"location":"knowledge-base/pydio-security-model/#use-https","title":"Use HTTPS!","text":"<p>As recommanded in the first page warning when you install the software, the basic security mesure when you \u201chttp-ize\u201d your information is to always use an SSL-encrypted connexion! Buying a certificate for your domain is not very hard, and will make sure that all communications between the webapp or the mobile clients and the server are encrypted. This is a norm that should be respected everywhere, for example if you're connecting to a public Wi-Fi, it is REALLY EASY to intercept sensitive informations, such as users credentials or documents contents when you're downloading them.</p>"},{"location":"knowledge-base/pydio-with-security-enhanced-linux-selinux/","title":"Pydio with Security-Enhanced Linux (SELinux)","text":"<p>SELinux is a linux kernel module security that provides the mechanism for enforcing the security in access control management of the system. As we can see, linux has applied Discret Access Control (DAC) model since it was in conception form. In DAC, each object (file, folder \u2026) has attached attribuites to indicate the ownership and permissions. SELinux, howerver, can provide an other method which is more powerful and flexible in controlling access to system resource. SELinux base on several Mandatory Access Control (MAC) method such as: Type-Domain, Multi-levels Multi-Categories, RBAC. And the combination of such methods forme the context in SELinux, which can make a lot of trouble and difficulties to typical system administrators.</p> <p>For further information: selinux</p> <p>To configure SELinux, we firstly and pricipally define the domains and the policy, then label objects (files, folders, devices, process \u2026) to the type which is coressponded to domain name.</p> <p>In this article, we adopt to how to configure SELinux (set selinux context) for pydio under the control of selinux. In Targeted Policy in CentOS, all domain and policy have already been defined and we just label our objects (files, folders, processes) to suitable type.</p> <p>For further information: Security-Enhanced_Linux</p>"},{"location":"knowledge-base/pydio-with-security-enhanced-linux-selinux/#configuration-of-selinux-for-pydio","title":"Configuration of SELinux for Pydio","text":"<p>Prerequisites: OS: CentOS 7 Policy: targeted version 28 Mode: enforcing Package required: policycoreutils-python</p> <p>After installation pydio by using rpm, Pydio will be located in several repositories:</p> <ul> <li>/var/cache/pydio/ :for php cache</li> <li>/var/lib/pydio/ :for users\u2019 files, data upload ..</li> <li>/etc/pydio :for configurations</li> <li>/usr/share/pydio :php files</li> </ul> <p>To ensure that pydio works normally under the controls of SELinux, the following configuration should be labeled with appropriate type:</p> <pre><code># relabel whole system\ntouch /.autorelabel\nreboot\n\n# label folder /var/cache/pydio (and its sub-folder) with a TYPE: httpd_cache_t\n# command: semanage fcontext change the context of object (file/folder) and all setting can resist after next relabel\n# you can use chcon (change context) for a session\nsemanage fcontext -a -t httpd_cache_t \"/var/cache/pydio(/.*)?\"\n\n# httpd_sys_rw_content_t: read/write content\nsemanage fcontext -a -t httpd_sys_rw_content_t \"/var/lib/pydio(/.*)?\"\n\n# httpd_sys_content_t: read only content\nsemanage fcontext -a -t httpd_sys_content_t \"/etc/pydio(/.*)?\"\n\n# httpd_sys_script_exec_t: script \nsemanage fcontext -a -t httpd_sys_script_exec_t \"/usr/share/pydio(/.*)?\"\n\n# Active the change on objects destination\nrestorecon -Rv /var/lib/pydio\nrestorecon -Rv /etc/pydio\nrestorecon -Rv /usr/share/pydio\nrestorecon -Rv /var/cache/pydio\n</code></pre>"},{"location":"knowledge-base/pydio-with-security-enhanced-linux-selinux/#sebool-for-httpd","title":"sebool for httpd:","text":"<p>SELinux boolean is a solution that provides a way to change the security policy without re-compile whole security policy. Depend on your requirements, variables of boolean shoule be turn on or off. Parametre -P means permenant.</p> <pre><code># turn httpd_unified off. httpd_unified enable httpd_t read/write on httpd_sys_xxx type. It means that there is no difference between httpd_sys_script_exec_t and with http_sys_content_t. Of course, for more security we turn it off and regroupe pydio data to appropriate groups which were labeled in previous step.\nsetsebool -P httpd_unified off\n\n# If you use ssl, and apache will prompt you to input password for certificate/key. Otherwise, turn it off.\n# Normally httpd do not need to communicate with terminal device, but in some case such as input password to read a key file and certification, user must type password from keyboard.\nsetsebool -P httpd_tty_comm on\n\n# Depend on you use sendmail service or not. In Pydio, we need sendmail function if we active the alert function. \n# Note: In case of SELinux is disable, this boolean also must be turned on for activation sendmail function (I don't understand why)\nsetsebool -P httpd_can_sendmail off\n\n# for execution php script\nsetsebool -P httpd_enable_cgi on  \nsetsebool -P httpd_builtin_scripting on\n\n# in case of using database on other machine\nsetsebool -P httpd_can_network_connect_db on\n\n# in case of using NFS service for file sharing\nsetsebool -P httpd_use_nfs on\n\n#(or setsebool -P httpd_use_cifs on)\n</code></pre>"},{"location":"knowledge-base/pydio-with-security-enhanced-linux-selinux/#permission-for-other-repositories-pydio-users-data-in-the-system","title":"Permission for other repositories (pydio users\u2019 data) in the system","text":"<pre><code># example path: /path1/path2/pydiodata\n# DAC permission\n chown -R apache:apache /path1/path2/pydiodata\n chmod -R 0755 /path1/path2/pydiodata\n\n# SELinux permission\n semanage fcontext -a -t httpd_sys_rw_content_t \"/path1/path2/pydiodata(/.*)?\" \n restorecon -Rv  /path1/path2/pydiodata\n</code></pre>"},{"location":"knowledge-base/pydio-with-security-enhanced-linux-selinux/#specific-permision-for-booster","title":"Specific permision for booster.","text":"<p>When you install/update pydio booster, executable file will be downloaded and saved in AJXP_DATA_PATH/plugins/helper.booster/pydio (or /var/lib/pydio/plugins/helper.booster/pydio).</p> <p>Turn on se bool</p> <pre><code>setsebool -P httpd_ssi_exec 1\n</code></pre> <p>Set context for pydio booster file</p> <pre><code>semanage fcontext -a -t httpd_sys_script_exec_t /var/lib/pydio/plugins/helper.booster/pydio\nrestorecon /var/lib/pydio/plugins/helper.booster/pydio\n</code></pre>"},{"location":"knowledge-base/pydio-with-security-enhanced-linux-selinux/#install-selinux-module-to-allow-httpd-open-service-on-unreserved-port","title":"Install selinux module to allow httpd open service on unreserved port.","text":"<p>Create file enablePydioBooster.te with contents:</p> <pre><code>module enablePydioBooster 1.0;\n\nrequire {\n    type sysctl_net_t;\n    type httpd_sys_script_t;\n    type unreserved_port_t;\n    class tcp_socket name_bind;\n    class dir search;\n    class file { read open };\n}\n\nallow httpd_sys_script_t sysctl_net_t:dir search;\nallow httpd_sys_script_t sysctl_net_t:file { read open };\n\nallow httpd_sys_script_t unreserved_port_t:tcp_socket name_bind;\n</code></pre> <p>Check syntax </p> <pre><code>checkmodule -M -m -o enablePydioBooster.mod enablePydioBooster.te\n</code></pre> <p>Compile this file</p> <pre><code>semodule_package -m enablePydioBooster.mod -o enablePydioBooster.pp\n</code></pre> <p>Import new module to SELinux</p> <pre><code>semodule -i enablePydioBooster.pp\n</code></pre> <p>Add module to SELinux \"Targeted\" policy and automatically load it on future boots</p> <pre><code>semodule -s targeted -i enablePydioBooster.pp\n</code></pre> <p>Note: To remove, use <code>semodule -r enablePydioBooster</code></p>"},{"location":"knowledge-base/secure-install-using-ssl-with-pydio/","title":"Secure install using SSL with Pydio","text":""},{"location":"knowledge-base/secure-install-using-ssl-with-pydio/#installing-ssl-security-on-your-webserver-for-pydio","title":"Installing SSL Security on your webserver for Pydio","text":""},{"location":"knowledge-base/secure-install-using-ssl-with-pydio/#1-lets-encrypt","title":"1. Lets encrypt","text":"<p>Right now lets encrypt is one of the best ways to have a SSL certificate as Let\u2019s Encrypt is a free and open certificate authority run for the public\u2019s benefit. It is a service provided by the Internet Security Research Group (ISRG) and by that you can use it to secure your Pydio.</p> <p>To set it up it use the following guides as a base and adapt it with your configuration (such as virutalhosts ...) : </p> <ul> <li>Apache Lets encrypt</li> <li> <p>Nginx Lets encrypt</p> </li> <li> <p>Apache/Nginx Lets encrypt</p> </li> </ul> <p>It should be really easy if you follow the steps.</p>"},{"location":"knowledge-base/secure-install-using-ssl-with-pydio/#2-self-created-certificate","title":"2. Self Created certificate","text":"<p>For this example we will see how to use a Self create certificate to use HTTPS protocol.</p> <p>In this guide the example will be realized using our self created certificate but if you buy one or use lets encrypt it should be pretty much the same.</p> <p>Then lets begin : </p> <p>To create your self certificate use this command : <code>sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/apache-selfsigned.key -out /etc/ssl/certs/apache-selfsigned.crt</code>.</p> <p>When you put this command you will have prompts asking you for informations pretty much all of them are optionnal but there's one that you mush fill, Common Name (e.g. server FQDN or YOUR name) []: and then put your IP Address or Domain.</p> <p>You can also use a Diffie-Hellman group to secure it even more, to do so use this command <code>sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048</code>.</p> <p>After that you will have to configure Apache to use SSL. Create it using <code>sudo nano /etc/apache2/conf-available/ssl-params.conf</code></p> <pre><code># from https://cipherli.st/\n# and https://raymii.org/s/tutorials/Strong_SSL_Security_On_Apache2.html\n\nSSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\nSSLProtocol All -SSLv2 -SSLv3\nSSLHonorCipherOrder On\n# Disable preloading HSTS for now.  You can use the commented out header line that includes\n# the \"preload\" directive if you understand the implications.\n#Header always set Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\"\nHeader always set Strict-Transport-Security \"max-age=63072000; includeSubdomains\"\nHeader always set X-Frame-Options DENY\nHeader always set X-Content-Type-Options nosniff\n# Requires Apache &gt;= 2.4\nSSLCompression off \nSSLSessionTickets Off\nSSLUseStapling on \nSSLStaplingCache \"shmcb:logs/stapling-cache(150000)\"\n\nSSLOpenSSLConfCmd DHParameters \"/etc/ssl/certs/dhparam.pem\"\n</code></pre> <p>Set the SSLOpenSSLConfCmd DHParameters directive to point to the Diffie-Hellman file.</p> <p>Now enable this file on apache using <code>sudo a2enconf ssl-params</code>.</p> <p>Next we need to modify your Pydio's conf file located in sites-available.</p> <p>Your file should look like this. </p> <p>This is a basic configuration.</p> <p><pre><code>&lt;IfModule mod_ssl.c&gt;\n        &lt;VirtualHost _default_:443&gt;\n                ServerAdmin webmaster@localhost\n                ServerName &lt;YourServerName&gt;\n                DocumentRoot /var/www/&lt;YourPydioROOT&gt;\n\n                ErrorLog ${APACHE_LOG_DIR}/error.log\n                CustomLog ${APACHE_LOG_DIR}/access.log combined\n                SSLEngine on\n                SSLCertificateFile /etc/apache2/ssl/apache.crt\n                SSLCertificateKeyFile /etc/apache2/ssl/apache.keyy\n\n                &lt;Directory /var/www/YourPydioROOT&gt;\n                    Allowoverride ALL\n                    Require all granted\n                &lt;/Directory&gt;    \n\n\n                &lt;FilesMatch \"\\.(cgi|shtml|phtml|php)$\"&gt;\n                                SSLOptions +StdEnvVars\n\n                &lt;/FilesMatch&gt;\n                &lt;Directory /usr/lib/cgi-bin&gt;\n                                SSLOptions +StdEnvVars\n                &lt;/Directory&gt;\n\n                # BrowserMatch \"MSIE [2-6]\" \\\n                #               nokeepalive ssl-unclean-shutdown \\\n                #               downgrade-1.0 force-response-1.0\n\n        &lt;/VirtualHost&gt;\n&lt;/IfModule&gt;\n</code></pre> after that enable your conf file using <code>sudo a2ensite &lt;Pydio_Conf_File&gt;</code>.</p> <p>If you want to test your Syntax on apache you can do it by using the following command :  <code>sudo apache2ctl configtest</code></p> <p>Now you have to enable the headers &amp; ssl mod in apache using : - <code>sudo a2enmod ssl</code> - <code>sudo a2enmod headers</code></p> <p>After all of that just restart apache <code>sudo systemctl apache2 restart</code>.</p> <p>Now you can access your Pydio through HTTPS protocol like the following, <code>https://YourPydio/</code>it can be an ip address or domain name of course.</p> <p>You can also use HTTP, if you want to only be able to use HTTPS you have to create a redirection. To do so first add this line to your virtualhost/pydio_conf_file : <code>Redirect permanent \"/\" \"https://your_domain_or_IP/\"</code> dont forget to check the syntax using the command above.</p> <p>Note : if you're using a firewall do not forget to allow access to apache full.</p> <p>For this example the certificate was self made so your browser doesn't trust it because it wasnt made by the trusted certificate authorities so just validate it yourself on your browser when you will be prompted.</p> <p>You can use this as a base to how to put SSL for Pydio.</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/","title":"Deploying Pydio in AWS with GlusterFS","text":""},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#introduction","title":"Introduction","text":"<p>Deploying Pydio in a highly-demanding environment (lots of users, tons of documents) to achieve a dropbox-like server at scale requires a solid and elastic architecture.</p> <p>As a distributed file-system and software-defined storage, GlusterFS is a low-cost way of providing robust storage architecture on standard hardware. On its side, having kept the FileSystem driver at its core since the beginnings of the project, Pydio is a perfect match to be deployed on top of Gluster, to provide user-friendly features and enterprise-grade security.</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#architecture","title":"Architecture","text":"<p>The principle here is to provide High Availability and Scalability combining GlusterFS (for the storage part) and Pydio (for the access part) through a load-balanced cluster of nodes.</p> <p>We choose here to install Pydio ( = compute ) and the Gluster bricks ( = storage) on the same instances, but every configuration can be imagined : N dedicated nodes for storage, and a subset of them running Pydio, or none of them running Pydio and K nodes of compute, etc.</p> <p>Also, we choose to set up two Gluster volumes (each of them assembling 2p bricks), for an easier maintenance: one will contain some Pydio shared configurations, allowing the startup of a new Pydio node without hassle, and one will contain the actual users data (files). On EC2, we will use EBS volumes as primary bricks for the data gluster volume, and instances available disk space for the configs gluster bricks. Finally, a DB must be set up to receive all the annex Pydio data (namely users and ACLs, event logs, etc). This DB can be running on another instance, or eventually installed on one of the nodes. It should be replicated and backed-up for a better failover scenario.</p> <p>The following schema shows an overview of the targeted architecture.</p> <p></p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#launch-instances","title":"Launch Instances","text":"<p>Create two (or four) EC2 instances, attaching to each an EBS of X Gb depending on the size you require. We chose Ubuntu 12.04 as the OS. Make sure to use a quite open security group, we\u2019ll restrict permissions later. Instances will start with both PRIVATE and PUBLIC ips/dns. Update apt package lists with sudo apt-get update</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#glusterfs-setup","title":"GlusterFS Setup","text":""},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#prepare-gluster-bricks","title":"Prepare Gluster bricks","text":"<p>We\u2019ll use one for the actual data, and one for Pydio configurations data</p> <p><code>$ sudo apt-get install glusterfs-server xfsprogs</code></p> <p><code>$ sudo mkfs.xfs /dev/xvdb $ sudo mkdir /mnt/ebs</code></p> <p><code>$ sudo mount /dev/xvdb /mnt/ebs</code></p> <p>And add the line to /etc/fstab to automount at startup</p> <p><code>/dev/xvdb       /mnt/ebs        xfs defaults    0 0</code></p> <p>Let\u2019s also create a dedicated folder for the configs volume, on both nodes</p> <p><code>$ sudo mkdir /var/confbrick</code></p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#create-and-start-the-volumes","title":"Create and start the volumes","text":"<p>Recognize nodes each other</p> <p>On node 1</p> <p><code>$ sudo gluster peer probe PRIVATE2</code></p> <p>On node 2</p> <p><code>$ sudo gluster peer probe PRIVATE1</code></p> <p><code>$ sudo gluster volume create pydio-data replica 2 transport tcp PRIVATE1:/mnt/ebs PRIVATE2:/mnt/ebs</code></p> <p><code>$ sudo gluster volume create pydio-config replica 2 transport tcp PRIVATE1:/var/confbrick PRIVATE2:/var/confbrick</code></p> <p>sudo gluster volume start pydio-data</p> <p>sudo gluster volume start pydio-config</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#mount-the-volumes-on-both-nodes","title":"Mount the volumes on both nodes","text":"<p>If not already installed,</p> <p><code>$ sudo apt-get install glusterfs-client</code></p> <p>Create folders /mnt/pydio-config and /mnt/pydio-data</p> <p>Edit /etc/fstab again, add in each node the following lines</p> <p><code>PRIVATE1:/pydio-data /mnt/pydio-data glusterfs defaults,_netdev 0 0</code></p> <p><code>PRIVATE1:/pydio-config /mnt/pydio-config glusterfs defaults,_netdev 0 0</code></p> <p>Then remount everything <code>$ sudo mount -a</code></p> <p>Verify everything is mounted :  <code>$ df -h</code></p> <pre><code>ubuntu@ip-10-62-94-160:/mnt/ebs$ df -h\nFilesystem                                                Size  Used Avail Use% Mounted on\n/dev/xvda1                                                7.9G  939M  6.6G  13% /\nudev                                                      1.9G   12K  1.9G   1% /dev\ntmpfs                                                     751M  168K  750M   1% /run\nnone                                                      5.0M     0  5.0M   0% /run/lock\nnone                                                      1.9G     0  1.9G   0% /run/shm\n/dev/xvdb                                                 10G   33M   10G   1% /mnt/ebs\nPRIVATE1:/pydio-data                                      10G   33M   10G   1% /mnt/pydio-data\nPRIVATE1:/pydio-config                                    7.9G  939M  6.6G  13% /mnt/pydio-config\nMake sure the webserver will be able to use these two folders\n</code></pre> <p><code>$ sudo chown -R www-data: /mnt/pydio-data</code></p> <p><code>$ sudo chown -R www-data: /mnt/pydio-config</code></p> <p>Now touch a file on one node and verify it\u2019s on the other side.</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#set-up-db","title":"Set up DB","text":"<p>For example on Node 1</p> <p><code>sudo apt-get install mysql-server</code></p> <p>Set up a root password, and allow MySQL to listen to external connexions: comment out following line in /etc/myslq/my.cnf</p> <pre><code>#bind-address           = 127.0.0.1\n</code></pre> <p>Using the EC2 PUBLIC address in the Pydio Config</p> <p>Create a database <code>mysql&gt; create database pydio;</code> <code>mysql&gt; grant all privileges on pydio.* to 'pydio'@'%' with grant option;</code></p> <p>(Make sure to add a password, or update password at the end, otherwise it creates users with empt password)</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#deploy-pydio","title":"Deploy pydio","text":""},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#first-node","title":"First Node","text":"<p>Get the script from https://raw.github.com/pydio/pydio-core/master/dist/scripts/glusterfs/pydio-gluster.sh and run it as root.</p> <p><code>$ wget https://raw.github.com/pydio/pydio-core/master/dist/scripts/glusterfs/pydio-gluster.sh</code> <code>$ chmod u+x pydio-gluster.sh</code> <code>$ ./pydio-gluster.sh</code></p> <p>Once finished, start or restart apache <code>$ apachectl start</code> Go to the public IP of the node through a web-browser http://PUBLIC_IP1/pydio/, and follow the standard installation process. Setup admin login and global options, and for the Configurations Storage, choose Database  &gt; Mysql , and use the public IP of the DB node as server host.</p> <p></p> <p>Then save an connect as admin, switch to the \u201cSettings\u201d workspace, and do some customization as you like in the configuration. You can activate some additional plugins, customize logo and application title, etc. The interesting part of doing that now is that any changes will be automatically reported to the other nodes you switch on.</p> <p></p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#second-node","title":"Second Node","text":"<p>As they will share their base configuration through the gluster pydio-config volume, the next nodes will directly inherit from the first node configs. So to add fire a new node, all you will have to do will be the script part:</p> <p><code>$ wget https://raw.github.com/pydio/pydio-core/master/dist/scripts/glusterfs/pydio-gluster.sh</code> <code>$ chmod u+x pydio-gluster.sh</code> <code>$ ./pydio-gluster.sh</code></p> <p>Then verify that pydio is up and running, and that you can log in with the same credentials, at http://PUBLIC_IP2/pydio/</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#load-balancer","title":"Load Balancer","text":""},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#aws-loadbalancer","title":"AWS LoadBalancer","text":"<p>We could use a custome compute node equiped with HAProxy or some similar software, but as our tutorial is running on AWS, we will use the available service to that: LoadBalancer. In your AWS console, create a LoadBalancer, forwarding port 80 to instances port 80.</p> <p></p> <p>To configure how healthcheck will be performed (how does the LB check that instances are alive), make sure to change the name of the file checked to check.txt. It is important because thanks to our install scripts, the nodes Apache servers are configured to skip the log of calls to this file, to avoid filling the logs with useless data (happening every 5s).</p> <p>NOTE If you have an SSL certificate, which is definitely a good security rule, you will install it on this LoadBalancer, and redirect port 443 to 80: internal communications do not need to be encrypted.</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#session-stickyness","title":"Session Stickyness","text":"<p>Once edited and created, edit the \u201cStickyness\u201d parameter of the redirection rules and choose \u201cEnable Application Generated Cookie Stickyness\u201d, using \u201cPydio\u201d as cookie name. This is important, as although clients will be randonly redirected to instances on first connexion, once a session is established, it will always stay on a given instance.</p> <p></p> <p>NOTE Session stickyness avoid us to set up a session-sharing mechanism between nodes, but this could be done for example adding a memcache server.</p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#outside-world-address","title":"Outside world address","text":"<p>Now that our various nodes will be accessed through a proxy and not through their \u201cnatural\u201d public IP, we need to inform Pydio of that. This is necessary to generate correct sharing URLs, or sending emails pointing to the correct URL. Without that, Pydio would try to auto-detect the IP, and would probably end up displaying the PRIVATE IP of the current working node.</p> <p>Login as admin to Pydio, and go the Settings &gt; Global Configurations &gt; Pydio Main Options. Here, update the fields Server URL and Download URL with the real addresses, and save. Go to a file workspace and try to share a file or a folder, and verify the link is correct and working.</p> <p></p>"},{"location":"knowledge-base/deploying-pydio-in-aws-with-glusterfs/#conclusion-adding-new-nodes-on-demand","title":"Conclusion: adding new nodes on-demand","text":"<p>Well, that\u2019s pretty much. We could refine this architecture on many points, but basically you\u2019re good to go.</p> <p>So what do you do to add a new node? Basically you\u2019ll have to</p> <p>[if you need more storage]</p> <ol> <li>Fire up a new instance with the ubuntu OS</li> <li>Configure Gluster to add it as a new brick to the volume</li> </ol> <p>[if you need more compute]</p> <ol> <li>Fire up a new instance with the ubuntu OS</li> <li>Configure the gluster client to mount the volumes,</li> <li>Run the Pydio script to deploy and load configs</li> <li>Add this node to the LoadBalancer instances list.</li> </ol> <p>Wishing you a happy scaling!</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/","title":"Example: Installing Pydio on Windows Server 2012 R2 / IIS 8.5","text":"<p>Author Allan Dynes (Allan @ AllanDynes.com) This guide is assuming a vanilla install of Server 2012 R2 and lists all prereqs to get Pydio up and running with IIS 8.5 / Server 2012 R2.   I have found that none of the current guides cover everything 100% so through lots of testing and looking at all the other guides I wrote this one.  It\u2019s making a couple assumptions which I think make sense for the average Windows based server:</p> <ul> <li>You are starting with a fresh Server 2012 R2 install.  It is setup how you want it setup (named, domain joined, etc) and all windows updates are done.</li> <li>MySQL will be used for the database locally.</li> <li>LDAP/AD authorization will be used for all users.</li> </ul>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#adding-the-server-roles","title":"Adding the server roles","text":"<p>We will need to install some roles and features for Pydio and PHP to work properly and also some pre-reqs for additional software we will be installing later.  Start up the Server Manager if it didn\u2019t open on its own at login and click Manage -&gt; Add Roles and Features.</p> <ul> <li>At the Before You Begin screen click Next</li> <li>Leave the default of Role-based or feature-based installation and click Next</li> <li>The local server should be selected be default.  Click Next</li> <li>In the list select Web Server (IIS)<ul> <li>For the Add features required box that pops up click Add Features then Next</li> </ul> </li> <li>At the Select features screen check off .Net Framework 3.5 Features (required by the PHP manager later)  and Next</li> <li>At the Web Server Role (IIS) screen click Next</li> <li>At the Select role services screen leave all the defaults checked and then expand Application Development and check \u201cCGI\u201d then Next</li> <li>At the Confirm installation selections you will most likely get a warning about specifying an alternative source to download the .Net 3.5 files from.  Click Specify an alternative source path at the bottom and enter in the path to these files.  If you are using a Server 2012 DVD it would be D:\\Sources\\SxS\\ where D: is your DVD drive.  Once entered click OK then Install.</li> <li>Once installed click Close. Next check Windows Updates as there will be updates to the .Net 3.5 framework that was just installed.  Install all updates then reboot before the next step.</li> </ul>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#installing-required-software","title":"Installing required software","text":"<p>You can install some of these through the built in Microsoft Web Platform Installer 5.0 (Web PI) but after doing so many times I have found it easier to download and manually install the files I need.  The Web PI also seems to have some outdated files and I rather have the most up to date ones as possible.</p> <p>First download PHP 5.6:  http://windows.php.net/download/ . You want the one labeled \u201cVC11 Non Thread Safe x86\u201d which should be the top download in the list.  Extract the zip file to C:\\Program Files (x86)\\PHP.</p> <p>Next download and install the WinCache extension: http://sourceforge.net/projects/wincache/files/wincache-1.3.7/wincache-1.3.7.4-5.6-nts-vc11-x86.exe/download and run that.  It will extract some files to the directory of your choosing.  Copy the file php_wincache.dll to the C:\\Program Files (x86)\\PHP\\ext directory.  This will help speed up PHP on your Windows server dramatically.</p> <p>PHP Manager is next so download the x64 version: https://phpmanager.codeplex.com/releases/view/69115.   It still lists as for IIS 7 but there have been no changes and works fine on IIS8/8.5.</p> <p>Download MySQL here: https://dev.mysql.com/downloads/mysql/5.5.html  Grab the latest x64 version in the series for Windows and install.  A typical installation should be fine.  Once it\u2019s done leave the checkmark to configure the instance.  Choose a Standard Configuration and leave all the defaults.  Enter in a root password and write it down as you\u2019ll need it later to create your database.</p> <p>You will need the Microsoft URL Rewrite 2.0 module for public links to redirect correctly.  Get that here: http://go.microsoft.com/fwlink/?LinkID=615137 and install it.</p> <p>Lastly PHP requires the Microsoft Visual C++ 2012 Redistributable.  Without it you\u2019ll throw Internal Server 500 errors all day trying to run PHP.  Download the x86 version to match PHP: http://www.microsoft.com/en-us/download/details.aspx?id=30679 and install it.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#download-pydio","title":"Download Pydio","text":"<p>Download the latest version of Pydio.  Unzip the zip file to C:\\inetpub\\wwwroot\\pydio or whatever name you choose.  For my server I called the folder \u201ccloud.mydomain.com\u201d which I will be using throughout these instructions.  Now I have found that public links do not work because of a later requests filtering rule on the data directory.  For this reason I MOVE the public directory one directory higher off the root as such: </p> <p>Once the public folder is moved up a directory browse into it and delete the index.htm.  We\u2019re going to add a handler later to redirect people trying to browse the public folder over to our custom 404 error page.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#configuring-php","title":"Configuring PHP","text":"<p>There are some settings to change in PHP to make Pydio happy.  Startup Internet Information Services (IIS) Manager then click on your server in the tree on the left.  You will probably get a prompt about the Microsoft Web Platform.  Click the \u201cDo not show this message\u201d box and then No.  Double click the PHP Manager and you should have a yellow warning that PHP is not enabled.  Click Register new PHP version: </p> <p>Click the browse button (three dots) and select C:\\Program Files (x86)\\PHP\\php-cgi.exe then OK.  Now click the Set Runtime Limits link.  Here is one thing that will limit your ability to upload large files.  Personally I have my \u201cMaximum POST size\u201d and \u201cUpload Maximum File Size\u201d both set to 512M, my \u201cMaximum Input Time\u201d set to 300, and my \u201cMemory Limit\u201d set to 512M.  Set as appropriate for your environment then click the Apply button in the top right then Back to main page.</p> <p>Let\u2019s turn on some extensions.  Click \u201cEnable or disable an extension\u201d then in the Disabled list find php_wincache.dll and click Enable in the top right.  Next find php_ldap.dll which we will need for LDAP/AD authentication and enable that.  Also if you will be using the email function find php_snmp.dll and enable that too and php_exif.dll if you plan on handling images (probably). Click Back to main page.</p> <p>I have found that PHP does not have access to the default temp directory on a 2012 R2 server so we will switch this to another directory and give Pydio write access to it.  While still in the PHP Manager click \u201cManage all settings\u201d then find \u201cupload_tmp_dir\u201d in the list.  Change this value to \u201cC:\\inetpub\\temp\u201d.  Then find \u201csession.save_path\u201d and change that to \u201cC:\\inetpub\\temp\\sessions\u201d.</p> <p>Lastly is output buffering which is recommended to be turned off.  Look for \u201coutput_buffering\u201d and change it from the default of 4096 to \u201cOff\u201d.  While you\u2019re in here if you will be using the email functions of PHP look for SMTP and change that to your server and smtp_port if you use something other than the default of port 25.</p> <p>Once all these changes are done PHP should be configured correctly for Pydio</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#creating-the-application-pool","title":"Creating the Application Pool","text":"<p>You should still be in the IIS Manager.  On top left menu select \u201cApplication Pools\u201d then right click it and select \u201cAdd Application Pool\u2026\u201d.  For the name enter pydio and change the .Net CLR version to \u201cNo Managed Code\u201d then click OK.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#creating-the-site","title":"Creating the Site","text":"<p>On the left side highlight \u201cSites\u201d then right click it and select \u201cAdd Website\u2026\u201d.  Enter a name for your site, again I\u2019ll be using cloud.mydomain.com to match my directory name.  Click the \u201cSelect\u2026\u201d button on the right and select the \u201cpydio\u201d application pool you created in the last step then OK..  Click the browse button for the physical path (three dots) and select your directory under C:\\inetpub\\wwwroot(pydio directory) and then OK.  Under the binding enter the host name that will be used.  Again for mine I am entering cloud.mydomain.com.  Click OK.</p> <p>Once created expand out \u201cSites\u201d and select it.  Double click the \u201cAuthentication\u201d button then right click \u201cAnonymous Authentication\u201d and select \u201cEdit\u2026\u201d.  Check off \u201cApplication pool identity\u201d and click OK.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#setup-folder-permissions","title":"Setup Folder Permissions","text":"<p>Time to set some permissions for Pydio.  Navigate to your C:\\inetpub folder.  First right click the temp directory and go to Properties.  Click the Security tab then click Edit.  Click Add then under Locations\u2026 make sure the server is selected at the top.  In the object names field enter \u201ciis apppool\\pydio\u201d then Check Names.  It should resolve to just \u201cpydio\u201d.  Click OK then give this user Modify writes to the temp folder and click OK twice.  Now navigate into the temp folder and add a new folder called \u201csessions\u201d.  That should take care of our temp file locations.</p> <p>Go up a directory and then navigate to your wwwroot directory which should be c:\\inetpub\\wwwroot.  From here right click your Pydio folder and select Properties then click the Security tab.  Click the Advanced button at the bottom then Disable Inheritance.  Select to Convert inherited permissions into explicit permissions on this object then check the box marked \u201cReplace all child permission\u2026\u201d then OK.  You will get a warning.  Click YES.  Click the Edit button back on the Security tab, find the \u201cIIS_IUSRS\u201d group, and Remove.   Now click Add and add the pydio application identity (iis apppool\\pydio) as you did above for the temp directory.  Leave the default rights of read and no write access then click OK twice.</p> <p>Now we have to give the pydio application pool identity write access to the data and public directories.  Go into pydio folder, right click the data directory, and edit your pydio identity to have Modify rights by clicking Edit then adding the modify right for the pydio user then do the same for the public folder.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#add-our-webconfig-files","title":"Add our Web.Config Files","text":"<p>For the data and public folders we need to create a web.config file to both protect our data and also make our rewrite rules work.  By default you cannot see file extensions so in Explorer click the View menu then check off File name extensions.  Create a new web.config file for each location and in the first notice the setting called maxAllaowedContentLength in the root web.config file.  This defaults to 30M through the GUI and in my example its set for 512M.  This will also prevent uploads larger then this value so adjust accordingly:</p> <p>C:\\inetpub\\wwwroot\\pydio\\web.config</p> <pre><code>&lt;?xml version=\u201d1.0\u2033 encoding=\u201dUTF-8\u2033?&gt;\n\n&lt;configuration&gt;\n\n&lt;system.webServer&gt;\n\n&lt;security&gt;\n\n&lt;requestFiltering&gt;\n\n&lt;hiddenSegments&gt;\n\n&lt;add segment=\u201ddata\u201d /&gt;\n\n&lt;/hiddenSegments&gt;\n\n&lt;requestLimits maxAllowedContentLength=\u201d512000000\u2033 /&gt;\n\n&lt;/requestFiltering&gt;\n\n&lt;/security&gt;\n\n&lt;rewrite&gt;\n\n&lt;rules&gt;\n\n&lt;rule name=\u201dPydio-Rule-1\u2033 stopProcessing=\u201dtrue\u201d&gt;\n\n&lt;match url=\u201d^shares\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;conditions logicalGrouping=\u201dMatchAll\u201d&gt;\n\n&lt;add input=\u201d{REQUEST_FILENAME}\u201d matchType=\u201dIsFile\u201d ignoreCase=\u201dfalse\u201d negate=\u201dtrue\u201d /&gt;\n\n&lt;add input=\u201d{REQUEST_FILENAME}\u201d matchType=\u201dIsDirectory\u201d ignoreCase=\u201dfalse\u201d negate=\u201dtrue\u201d /&gt;\n\n&lt;/conditions&gt;\n\n&lt;action type=\u201dRewrite\u201d url=\u201d./dav.php\u201d /&gt;\n\n&lt;/rule&gt;\n\n&lt;rule name=\u201dPydio-Rule-2\u2033 stopProcessing=\u201dtrue\u201d&gt;\n\n&lt;match url=\u201d^api\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;action type=\u201dRewrite\u201d url=\u201d./rest.php\u201d /&gt;\n\n&lt;/rule&gt;\n\n&lt;rule name=\u201dPydio-Rule-3\u2033 stopProcessing=\u201dtrue\u201d&gt;\n\n&lt;match url=\u201d^user\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;action type=\u201dRewrite\u201d url=\u201d./index.php?get_action=user_access_point\u201d appendQueryString=\u201dfalse\u201d /&gt;\n\n&lt;/rule&gt;\n\n&lt;rule name=\u201dPydio-Rule-4\u2033 stopProcessing=\u201dtrue\u201d&gt;\n\n&lt;match url=\u201d(.*)\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;conditions logicalGrouping=\u201dMatchAll\u201d&gt;\n\n&lt;add input=\u201d{URL}\u201d pattern=\u201d^/pydio6/index\u201d ignoreCase=\u201dfalse\u201d negate=\u201dtrue\u201d /&gt;\n\n&lt;add input=\u201d{URL}\u201d pattern=\u201d^/pydio6/plugins\u201d ignoreCase=\u201dfalse\u201d negate=\u201dtrue\u201d /&gt;\n\n&lt;add input=\u201d{URL}\u201d pattern=\u201d^/pydio6/dashboard|^/pydio6/welcome|^/pydio6/settings|^/pydio6/ws-\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;/conditions&gt;\n\n&lt;action type=\u201dRewrite\u201d url=\u201dindex.php\u201d /&gt;\n\n&lt;/rule&gt;\n\n&lt;/rules&gt;\n\n&lt;/rewrite&gt;\n\n&lt;/system.webServer&gt;\n\n&lt;/configuration&gt;\n</code></pre> <p>C:\\inetpub\\wwwroot\\pydio\\public\\web.config</p> <pre><code>&lt;?xml version=\u201d1.0\u2033 encoding=\u201dUTF-8\u2033?&gt;\n\n&lt;configuration&gt;\n\n&lt;system.webServer&gt;\n\n&lt;rewrite&gt;\n\n&lt;rules&gt;\n\n&lt;rule name=\u201dPydio-Public-Folder-Rule-1\u2033&gt;\n\n&lt;match url=\u201d^([a-zA-Z0-9_-]+)\\.php$\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;conditions logicalGrouping=\u201dMatchAll\u201d&gt;\n\n&lt;add input=\u201d{REQUEST_FILENAME}\u201d matchType=\u201dIsFile\u201d ignoreCase=\u201dfalse\u201d negate=\u201dtrue\u201d /&gt;\n\n&lt;add input=\u201d{REQUEST_FILENAME}\u201d matchType=\u201dIsDirectory\u201d ignoreCase=\u201dfalse\u201d negate=\u201dtrue\u201d /&gt;\n\n&lt;/conditions&gt;\n\n&lt;action type=\u201dRewrite\u201d url=\u201dshare.php?hash={R:1}\u201d appendQueryString=\u201dtrue\u201d /&gt;\n\n&lt;/rule&gt;\n\n&lt;rule name=\u201dPydio-Public-Folder-Rule-2\u2033&gt;\n\n&lt;match url=\u201d^([a-zA-Z0-9_-]+)\u2013([a-z]+)$\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;action type=\u201dRewrite\u201d url=\u201dshare.php?hash={R:1}&amp;amp;lang={R:2}\u201d appendQueryString=\u201dtrue\u201d /&gt;\n\n&lt;/rule&gt;\n\n&lt;rule name=\u201dPydio-Public-Folder-Rule-3\u2033&gt;\n\n&lt;match url=\u201d^([a-zA-Z0-9_-]+)$\u201d ignoreCase=\u201dfalse\u201d /&gt;\n\n&lt;action type=\u201dRewrite\u201d url=\u201dshare.php?hash={R:1}\u201d appendQueryString=\u201dtrue\u201d /&gt;\n\n&lt;/rule&gt;\n\n&lt;/rules&gt;\n\n&lt;/rewrite&gt;\n\n&lt;httpErrors&gt;\n\n&lt;remove statusCode=\u201d404\u2033 subStatusCode=\u201d-1\u2033 /&gt;\n\n&lt;error statusCode=\u201d404\u2033 prefixLanguageFilePath=\u201d\u201d path=\u201d/public/404.html\u201d responseMode=\u201dExecuteURL\u201d /&gt;\n\n&lt;remove statusCode=\u201d403\u2033 subStatusCode=\u201d-1\u2033 /&gt;\n\n&lt;error statusCode=\u201d403\u2033 prefixLanguageFilePath=\u201d\u201d path=\u201d/public/404.html\u201d responseMode=\u201dExecuteURL\u201d /&gt;\n\n&lt;/httpErrors&gt;\n\n&lt;/system.webServer&gt;\n\n&lt;/configuration&gt;\n</code></pre> <p>Create the pydio database in MySQL Start up the MySQL command line. Enter in the root password you wrote down earlier and then at the command prompt enter the following to create a database named pydio with a user (pydiouser) and password (mypydiopw) that has access to this database:</p> <pre><code>CREATE DATABASE pydio;\nCREATE USER \"pydiouser\"@\"localhost\" IDENTIFIED BY \"mypydiopw\";\nGRANT ALL PRIVILEGES ON pydio.* TO \"pydiouser\"@\"localhost\";\n</code></pre> <p>Type exit to close the command prompt.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#start-the-pydio-install-wizard-and-finish-the-install","title":"Start the Pydio Install Wizard and finish the install","text":"<p>All our setup should be done.  Browse to your pydio installation using the full URL, in my example its http://cloud.mydomain.com/.  You will be presented with a check of the requirements for installation of pydio which should have no errors after following the steps above although you might have a couple warnings for PHP command line and SSL.  If you have any red errors then something is wrong and they need to be fixed before continuing, make sure you followed all the steps above correctly.</p> <p>Click the link that says \u201cclick here to continue to Pydio\u201d to start the wizard.  At the first screen pick your language and then \u201cStart Wizard\u201d. For admin access enter an admin login, display name, and password.  This will only be used for the initial setup as we will be switching to LDAP/AD for future access.</p> <p>For your global options you may want to change the application title, I changed mine to \u201cMyDomain Cloud Storage\u201d and same with the welcome message.  Also enable emailing if you plan on having that functionality and select \u201cMail\u201d for the PHP Mailer.  Put in your own email for the administrators email or an account you have access to.</p> <p>For configurations storage we will be using MySQL.  Click on \u201cDatabase\u201d in the drop down for storage type then for the host change it from localhost to 127.0.01.  For the database name, user, and password use the information in the step above (pydio, pydiouser, and mypydiopw).  For Use MySQLi check Yes.</p> <p>Click the Install Pydio Now button to apply all these settings.  It should come back letting you know it cannot write to the .htaccess file.  Copy the contents as it instructs you to do and manually paste it into C:\\inetpub\\wwwroot\\pydio.htaccess then refresh the page.</p> <p>You should get a login page.  Login as the administrator that you just defined.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#setting-up-ldap-access","title":"Setting up LDAP access","text":"<p>In my scenario I will be setting up LDAP access for my users.  I don\u2019t want ANY local users.  In fact after this step and a reboot of the server the default admin login will no longer work.  After this we will lock down some of the interface so users can\u2019t change their account (the info will come from Active Directory\u2026we don\u2019t want them to change anything).</p> <p>You should be logged in as the administrator.  Click the admin drop down in the top right then Settings.  Click Application Parameters then Application Core.  Double click Authentication and change as follows:</p> <p>Secure Login Form: I recommend switching this to Yes</p> <p>Main Instance (I\u2019m only listing one that I am changing.  Use defaults for the rest)</p> <ul> <li>Instance Type: LDAP/AD Directory</li> <li>LDAP URL: enter your primary domain controllers FQDN such as  DC.mydomain.com</li> <li>Protocol: leave on standard unless you are using LDAPS</li> <li>LDAP Port:  389 for standard.  636 for LDAPS</li> <li>LDAP Bind Username:  This is the full path to your user.  If you create a service user called \u201cLDAP Lookup\u201d in a OU called \u201cService Accounts\u201d for your domain \u201cmycompany.com\u201d it will look something like  \u201cCN=LDAP Lookup,OU=Service Accounts,DC=mycompany,DC=com\u201d</li> <li>LDAP Bind Password: The login password for the above user</li> <li>People DN: The OU to search for users such as \u201cOU=Users,DC=mycompany,DC=com\u201d</li> <li>LDAP Filter: Filter to use against your users.  You can use the default or use mine, it works well to pull all users that have an email address assigned so it filters out most of my service accounts:  \u201c(&amp;(|(objectClass=person))(mail=*))\u201d</li> <li>User Attribute: The attribute that the users will use to login.  I default to sAMAccountname, you might use mail.</li> <li>LDAP Attribute: I recommend adding two. One that will map your users real name to the user display name and one to map their email address.<ul> <li>LDAP Attribute: displayName  / Mapping Type: Plugin Parameter / Plugin Parameter: core.conf/USER_DISPLAY_NAME</li> <li>LDAP Attribute: mail / Mapping Type: Plugin Parameter / Plugin Parameter:  core.conf/email</li> </ul> </li> </ul> <p>Hit Save then scroll back down to \u201cTest User\u201d, enter a known user ID or email if that\u2019s what you chose for user attribute, and click \u201cTry to connect to LDAP\u201d.  It should be successful.  If not figure out what is wrong in your LDAP/AD config before proceeding.</p> <p>We cannot publicly share files until a secondary form of authentication is setup.  Scroll to the bottom of the Authentication screen and under \u201cSecondary Instance Mode\u201d pick Master/Slave.  Under \u201cUser Listing\u201d switch to Master Only then for \u201cInstance Type\u201d select DB authentication storage then Save.</p> <p>VERY IMPORTANT: Since I am only using LDAP/AD authentication at this point and the secondary is only for the public links to work the default admin login will not work once you log out and your session is destroyed.  This is how I want my setup as I rather control all users through AD and not have a second set of users in Pydio.  So the next thing to do is assign one of your AD users an administrator so you can get back in after you log out of the default admin account.</p> <p>Click \u201cWorkspaces &amp; Users\u201d on the left then \u201cUsers and Groups\u201d and you should have your user list.  Select one of your users in the list and then click Edit.  Under \u201cSpecial Profile\u201d select \u201cAdministrator\u201d then Save.  Open a different browser on your system or connect from another system, navigate to the site, and verify your AD user can login and has administrative rights with a \u201cMy Settings\u201d option.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#setup-our-default-role-to-lock-down-the-user","title":"Setup our default Role to lock down the user","text":"<p>Now to setup the default role and lock out some stuff I don\u2019t want my users getting into.  On the left click \u201cWorkspaces &amp; Users\u201d then \u201cRoles\u201d.  Double click the \u201cRoot Role\u201d.  Enter in a country, language, and default repository.  I personally have users default to their My Files.  Click on the ACL and for my users I deny the default Common Files (I\u2019ll create my own later) along with My Account.  I leave My Files and Home as read write.  Click the Actions tab.  Now to lock the user out of the My Account screen since all our info is coming from AD.  Select Conf.sql \u2013 switch_to_user_dashboard (My Account) \u2013 All Workspaces and Add Action.  Click Save and the \u201cMy Account\u201d option should not be there when a user logs in.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#change-the-public-share-location-and-links","title":"Change the public share location and links","text":"<p>Because we are using a non-standard public file location we need to tell Pydio where that now is.  While in Settings navigate to Application Parameters -&gt; Application Core -&gt; Pydio Main Options.  Change your download folder to remove the data subdirectory as such:</p> <p>AJXP_INSTALL_PATH/public</p> <p>Also hard code the public link in to your URL with the public subdirectory afterward:</p> <p>http://cloud.mydomain.com/public</p> <p>Personally while I\u2019m in here I also disable Zip Creation because I don\u2019t want people downloading massive amounts of files as a zip.  Click Save when down.</p>"},{"location":"knowledge-base/example-installing-pydio-on-windows-server-2012-r2-iis-8-5/#testing","title":"Testing","text":"<p>Login as a non-administrator AD account and you should find your correct AD name pops up in the top right and there is no My Account option.  Upload a file to your My Files workspace and then share it out.  It should generate an \u201chttp://cloud.mydomain.com/public/7adbe5\u201d link which if you paste into a different browser or another system should redirect to the file.  Click the Invite button and type in your email address and send.  Test the link in your email also.</p> <p>Some extra customizations</p> <p>I have a lot of customizations that work for me but might not for you.  If you are happy with your Pydio install and want to play then you should stop here.  However I have found for a business certain things don\u2019t make sense to allow and have disabled them.  Here are some of them and how to disable.</p> <p>Under \u201cWorkspaces &amp; Users\u201d -&gt; \u201cRoles\u201d -&gt; \u201cRoot Role\u201d -&gt; Actions list:</p> <p>No downloading files chunked: access.fs \u2013 download_chunk \u2013 All Workspaces</p> <p>No copying files: access.fs \u2013 copy \u2013 All Workspaces</p> <p>No moving files: access.fs \u2013 move \u2013 All Workspaces</p> <p>I also have some workspaces where I want people to be able to share files but NOT folders or multiple files at once.  These are company-wide shared workspaces with everyone having read access so I lock out minisites for those:</p> <p>Company \u201cshared\u201d folders: action.share \u2013 share-folder-minisite-public \u2013 (Shared Workspaces)</p> <p>Company \u201cshared\u201d folders : action.share \u2013 share-selection-minisite \u2013  (Shared Workspaces)</p> <p>Personally I want my users to be able to share out mini sites for their own files and allow customers and vendors upload rights but I don\u2019t want them to create new workspaces.  I change that under \u201cApplication Parameters\u201d -&gt; \u201cFeature plugins\u201d -&gt; \u201cAction plugins\u201d -&gt; \u201cSharing Features\u201d</p> <p>Folder Sharing -&gt; Enable Folder Sharing -&gt; Change to Minisites Only</p> <p>At the same time I don\u2019t want shared links sitting out there forever:</p> <p>Link Generation -&gt; Maximum File Expiration Limit -&gt; xx days (I set for 90).</p> <p>Lastly I do not want my users to have a recycle bin in their \u201cMy Files\u201d.  That\u2019s removed by editing the \u201cbootstrap_repositories.php\u201d file under the conf subdirectory and changing the \u201cRECYCLE_BIN\u201d setting from \u2018recycle_bin\u2019 to an empty string ( \u2018\u2019 ).</p> <p>After all these customizations the site works how I need it to.  Modify for your own use and play with it.  Remember that some of these changes need the plugin cache cleared before they take effect or reboot the server which also seems to do the trick.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/","title":"Http-ize your regular Windows file server with Pydio","text":"<p>Author Koen Noens</p> <p>Take a regular Windows file server (or any NAS that understands SMB or CIFS). Deploy Pydio. Map your Pydio workspaces to folders and shares on your Windows file server, and let Pydio retrieve user accounts and groups from your Active Directory. Wat you get is that all those files are now instantly available to users with nothing but a web browser and an internet connection, from a laptop, a tablet, or a smartphone. With all your original NTFS Security Access Control Lists still in effect. That\u2019s what \u201cPut your data in orbit\u2019 means to me.</p> <p>In this mini-howto, I\u2019ll explain you how it\u2019s done.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#introduction-and-context","title":"Introduction and Context","text":"<p>If you have an ICT infrastructure dat dates back to the nineties or the beginning of this century, you probaly have tons of data (user files such as office or pdf documnts, spreadsheets, \u2026 ) on Windows file servers or a NAS that uses a Windows file sharing protocol (SMB, CIFS), with security based on NTFS ACL and Active Direcory user accounts.</p> <p>As long as all your clients were Windws PC\u2019s sitting on the corporate network, this was fine. But now your users are becoming mobile, and you\u2019re looking for ways to make those files available to tablets or non-Windows laptops, maybe over the internet, and so on. A web based solution would cover most of that, but you don\u2019t want to mirror all those files, and you definitely don\u2019t want to duplicate the user authentication and authorisation effort.</p> <p>That\u2019s what Pydio can do for you : leverage your existing infrastructure to respond to these new uses cases.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#setting-it-up","title":"Setting it up","text":"<p>Installing Pydio is a breeze, and I won\u2019t go in the details here. Obviously, you do not install Pydio on your Windows file servers. You can run Pydio on a standard LAMP server and technically it will behave as a (CIFS, SMB) client to your file servers.</p> <p>You may have some network design considerations to think about : if you want to make your Windows/CIFS storage available over the internet (for \u2018road warriors\u2019, teleworkers and such) you might want to put a Pydio server in your DMZ, and/or behind a reverse proxy. It\u2019s beyond the scope of this howto to go into that. But it is entirely possible, and Pydio will work flawlessly behind a standard HTTP(S) server such as Apache with its standard proxy modules.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#set-up-ldapad-authentication","title":"Set up LDAP/AD Authentication","text":"<p>If you are already using Active Directory Services, your files will most likely have NTFS security (or share permissions) using AD accounts. So you\u2019ll have to set up Pydio to use LDAP/AD authentication as well for Pydio to authenticate your users against the AD. We will also set up Pydio to access the storage back-end (your Windows file servers) using the account of the logged-on user \u2013 that\u2019s how your existing file and directory NTFS ACL\u2019s will remain in effect while the files are being accessed through Pydio.</p> <p>refer to LDAP/AD authentication in the Administrator Guide and the howto on Groups and Roles with LDAP/AD integration (Authentication an User Management Sections of the Knowledge Base) for how to set up LDAP/AD Authentication.</p> <p>When configuring LDAP/AD, note that you can map AD group membership to Pydio \u201cRoles\u201d. Do that; you will need those roles later on, but we\u2019ll come back to that.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#storage-connectors","title":"Storage connectors","text":"<p>There\u2019s a new meta connector but I haven\u2019t used it yet. In this how-to, we explain the use of the \u201cSMB\u201d or \u201cSamba\u201d connector.</p> <p>Setting it up is fairly straightforward : in \u201cSettings\u201d -&gt; \u201cWorkspaces and Users\u201d :</p> <ul> <li>click Workspaces  -&gt; New workspace<ul> <li>Wokspace label = Name for the workspace, as seen by the user.</li> <li>Access driver = \u201cSamba\u201d</li> <li>Server = server IP or hostname (you don\u2019t need to preceed it with \"\\ \\\")</li> <li>Uri = path to the share \u2013 not including the server hostname. e.g. if you want to map to a share <code>\\\\fileserver\\share\\subdir</code>, you enter  <code>/share/subdir</code>. note the direction of the slashes</li> <li>Domain : default domain to use with session credentials. This is your AD Domain Name in <code>domain.tld</code> notation. Setting this will allow your users to log on with a short logon name (such as \u2018pd\u2019 in stead of \u2018pd@domain.tld\u2019 or \u2018DOMAIN\\pd\u2019)</li> <li>User Credentials  : leave blank  \u2013 you do not want all connections to this share to happen under the same generic account \u2013 you want Pydio to use the logged-on user\u2019s credentials. Use Session Credentials : YES</li> <li>Default Rights : you probably want \u201cRead and Write\u201d here</li> </ul> </li> <li>Save</li> </ul> <p>That\u2019s all for creating a workspace. You\u2019ll still have to set Security on it. To set security, go to \u201cRoles\u201d -&gt; select the role that you want to set permissions for -&gt; go to the tab \u2018ACL\u2019 -&gt; check the applicable checkboxes. To set security for individual users, go to \u201cUsers and Groups\u201d, select the applicable user -&gt; go to tab \u2018ACL\u2019, etc.</p> <p>This will work the way a Windows administrator expects : Pydio ACL in combination with NTFS security of the underlying file server works the same way \u201cshare permissions\u201d in Windows do : the Pydio ACL can not give more rights than the user already has (in NTFS ACL), but it can limit them further.</p> <p>A simple approach to handle this would be to give reasonably wide rights in Pydio, while counting on the NTFS ACL of the underlying storage to limit it firther as needed. You can also make Pydio ACLs that are a close reproduction of the NTFS ACL. Or you can use Pudio ACL to impose further limits on top of your NTFS ACL, eg if you want to limit web access to a subset of the users that already have regular (windows file sharing) access.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#groups-and-roles","title":"Groups And Roles","text":"<p>Use Pydio\u2019s roles to manage the security on your workspaces.</p> <p>On your Windows file server, you probably are using Security Groups to manage Access Controll on folders or shares. The Pydio feature that maps most closely to AD Security groups are Roles. In the AD/LDAP Authentication Plugin configuration, you can map AD groups to Pydio Roles and use those to manage the security of workspaces (that map to shares and their subdirectories). This may sound bit confusing, but if you give it a try you\u2019ll find it all comes together quite nicely.</p> <p>When you map AD Security Groups to Pydio \u2018Roles\u2019, you also get AD \u201cnested\u201d groups (groups that have other groups as member) represented in Pydio, and Pydio will deduce group membership and the corresponding permissions, so your NTFS ACL that use groups (even nested groups) will still work.</p> <p>As explained earlier : to set security in Pydio, go to \u201cRoles\u201d -&gt; select the role that you want to set permissions for -&gt; go to the tab \u2018ACL\u2019 -&gt; check the applicable checkboxes.</p> <p>Note that Pydio Groups do not map very well to AD Security Groups. Use Roles instead.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#access-based-enumeration","title":"Access Based Enumeration","text":"<p>Your Windows Access Based Enumeration still works in Pydio. I\u2019m assuming this is because the smbclient (the program Pydio uses to implement its SMB connector) honors the ABE, so Pydio will only show the directories the logged-on user has access to, even if the workspace contains more than that. Jut like ABE on a Windows PC. This is very convenient if your working with top level shares (and thus larger Pydio workspaces) and rely on ABE and ACL to present subdirectories to the users ; on Pydio, your users will see only what they normally see in Windows Explorer.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#this-is-mechanism-not-policy","title":"This is mechanism, not policy","text":"<p>LDAP/AD authentication and remote storage connectors (in this case : SMB) are mere mechanisms that, combined, form a web layer over a regular file server. But of course you can use them any other way you like. You don\u2019t have to do it this way.</p> <p>One of the things you\u2019ll want to think about is what workspaces you\u2019ll create, and to which parts of your Windows shares they will be mapped. It\u2019s probably best you simply try to set up one, two or tree workspaces, mapped to different shares or subdirectores of shares, to see how that works and then decide what works for you.</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#using-templates","title":"Using templates","text":"<p>If you have to do a lot of these \u201cworkspace mapped to file server\u201d, you can create a storage template that includes the common settings (such as NAS server name, domain name, user credential settings, and miscellaneous defaults. To create a new workspace from a template, you then do as above but set <code>access driver: name_of_template</code>. The pre-set configuration of the template will apply, and you only have to set a few extra values (such as workspace name + corresponding URI path).</p>"},{"location":"knowledge-base/http-ize-your-regular-windows-file-server-with-pydio/#work-offline-or-with-tablets","title":"Work Offline or with tablets","text":"<p>You can also extend your solution with other features of Pydio. One is the the local synchronization client, which lets you keep aan ofline mirror of a workspace, eg on a laptop. (At the time of writing, the offline sync client is still in beta). If you plan to use offline synchronization or personal workspaces, this may affect how you map those workspaces to the back-end.</p> <p>For use on tablets, you can either use a regular browser, or use the Pydio App (on Android and iPad).</p>"},{"location":"knowledge-base/installing-on-debian-nginx/","title":"Installing on Debian+Nginx","text":"<p>Last Update Updated on Dec. 8 2016 for Pydio 7</p> <p>Following are the instructions for installing Pydio with Nginx on Debian Jessie.</p> <p>Assumptions</p> <p>You already have Debian 8.0 (Jessie) running with minimal stuff installed (no LAMP or existing web server stack).  If php5 is already installed, make sure to remove it before installing php7.0 (or replace the instructions to use php5, must be &gt; 5.6).</p>"},{"location":"knowledge-base/installing-on-debian-nginx/#install-packages","title":"Install Packages","text":"<p>First we need to authenticate the nginx repository signature, we add the key used to sign the nginx packages and repository to the apt program keyring. Download this key and add it to the apt program keyring with the following command:</p> <pre><code>wget -O- http://nginx.org/keys/nginx_signing.key | apt-key add -\nwget -O- https://www.dotdeb.org/dotdeb.gpg | apt-key add -\n</code></pre> <p>Then you can add at the end of /etc/apt/sources.list file:</p> <pre><code>echo deb http://nginx.org/packages/debian/ jessie nginx &gt; /etc/apt/sources.list.d/nginx.list\necho deb-src http://nginx.org/packages/debian/ jessie nginx &gt;&gt; /etc/apt/sources.list.d/nginx.list\n</code></pre> <p>And </p> <pre><code>echo \"deb http://packages.dotdeb.org jessie all\" &gt; /etc/apt/sources.list.d/dotdeb.list\n</code></pre>"},{"location":"knowledge-base/installing-on-debian-nginx/#installing-nginx-php7-fpm-and-mysql-server","title":"Installing Nginx, PHP7-fpm and MySQL Server","text":"<p>So after that, you can install the prerequisites;</p> <pre><code>apt-get update\napt install nginx mysql-server php7.0 php7.0-fpm php7.0-mysql php7.0-curl php7.0-json php7.0-gd php7.0-intl php7.0-mbstring php7.0-xml php7.0-zip php7.0-exif php7.0-apcu\n</code></pre> <p>Once the prerequisites are installed, create the www directory and set ownership;</p> <pre><code>chown -R www-data:www-data /var/www\n</code></pre> <p>We need to configure php to support larger file uploads so edit the php.ini file;</p> <pre><code>vim /etc/php/7/fpm/php.ini\n</code></pre> <p>Edit the following values to your liking;</p> <pre><code>file_uploads = On\npost_max_size = 20G\nupload_max_filesize = 20G\nmax_file_uploads = 20000\noutput_buffering = Off\n</code></pre> <p>Then restart php fpm service</p> <pre><code>/etc/initp.d/php7.0-fpm restart\n</code></pre>"},{"location":"knowledge-base/installing-on-debian-nginx/#configure-virtualhost","title":"Configure VirtualHost","text":"<p>Now we need to configure Nginx to setup our Pydio web site (use your own domain name below);</p> <pre><code>vim /etc/nginx/sites-available/pydio.conf\n</code></pre> <p>As we are security concerned, everything hitting the port 80 is redirected to port 443 over HTTPS. Pydio installation folder is assumed to be /var/www/pydio.</p> <pre><code>server {\n    listen 80;\n    ### Change the following line to match your website name\n    server_name YOUR_SERVER_NAME;\n    rewrite ^ https://$server_name$request_uri? permanent;\n}\n\nserver {\n    listen 443 ssl;\n    ### Change the following line to match your website name\n    server_name YOUR_SERVER_NAME;\n    root /var/www/pydio;\n    index index.php;\n\n    ### If you changed the maximum upload size in PHP.ini, also change it below\n    client_max_body_size 20G;\n\n    # Prevent Clickjacking\n    add_header X-Frame-Options \"SAMEORIGIN\";\n\n    # SSL Settings\n    ### If you are using different names for your SSL certificate and key, change them below:\n    ssl on;\n    ssl_certificate /etc/nginx/ssl/nginx.crt;\n    ssl_certificate_key /etc/nginx/ssl/nginx.key;\n\n    # This settings are destined to limit the supported crypto suites, this is optional and may restrict the availability of your website.\n    #ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';\n    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n\n    add_header Strict-Transport-Security \"max-age=16070400; includeSubdomains\";\n\n    keepalive_requests    10;\n    keepalive_timeout     60 60;\n    access_log /var/log/nginx/access_pydio7.log;\n    error_log /var/log/nginx/error_pydio7.log;\n\n    client_body_buffer_size 128k;\n    # All non existing files are redirected to index.php\n    if (!-e $request_filename){\n        # For old links generated from Pydio 6\n        rewrite ^/data/public/([a-zA-Z0-9_-]+)$ /public/$1? permanent;\n        rewrite ^(.*)$ /index.php last;\n    }\n\n    # Manually deny some paths to ensure Pydio security\n    location ~* ^/(?:\\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {\n            deny all;\n    }\n\n    # Forward PHP so that it can be executed\n    location ~ \\.php$ {\n\n            fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;\n            fastcgi_param  SERVER_SOFTWARE    nginx;\n            fastcgi_param  QUERY_STRING       $query_string;\n            fastcgi_param  REQUEST_METHOD     $request_method;\n            fastcgi_param  CONTENT_TYPE       $content_type;\n            fastcgi_param  CONTENT_LENGTH     $content_length;\n            fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;\n            fastcgi_param  SCRIPT_NAME        $fastcgi_script_name;\n            fastcgi_param  REQUEST_URI        $request_uri;\n            fastcgi_param  DOCUMENT_URI       $document_uri;\n            fastcgi_param  DOCUMENT_ROOT      $document_root;\n            fastcgi_param  SERVER_PROTOCOL    $server_protocol;\n            fastcgi_param  REMOTE_ADDR        $remote_addr;\n            fastcgi_param  REMOTE_PORT        $remote_port;\n            fastcgi_param  SERVER_ADDR        $server_addr;\n            fastcgi_param  SERVER_PORT        $server_port;\n            fastcgi_param  SERVER_NAME        $server_name;\n\n            try_files $uri =404;\n            fastcgi_pass unix:/run/php/php7.0-fpm.sock ;\n    }\n\n    # Enables Caching\n    location ~* \\.(ico|css|js)$ {\n        expires 7d;\n        add_header Pragma public;\n        add_header Cache-Control \"public, must-revalidate, proxy-revalidate\";\n    }\n}\n</code></pre>"},{"location":"knowledge-base/installing-on-debian-nginx/#create-database","title":"Create database","text":"<p>Log in to mysql server and create a database. You must have set a password for root user during MySQL installation:</p> <pre><code>mysql -u root -p\ncreate database pydio;\n</code></pre> <p>For better security, please make sure to create a dedicated mysql user for the application, and grant privileges to this DB. For now we assume you use root user to configure pydio.</p>"},{"location":"knowledge-base/installing-on-debian-nginx/#install-pydio","title":"Install Pydio","text":"<p>We can enable the site by deleting the default Nginx site and linking to the new site;</p> <pre><code>cd /etc/nginx/sites-enabled\nrm default\nln -s ../sites-available/pydio.conf\n</code></pre> <p>Time to get the Pydio code. Download the latest version and save it to your /var/www directory. Extract the downloaded file to the root of the www directory;</p> <pre><code>cd /var/www\ntar -xzf &lt;gz file name here&gt;\nls -l\nmv &lt;extracted directory name&gt; pydio\nrm -R /var/www/&lt;gz file name here&gt;\nchown -R www-data:www-data /var/www/pydio\n</code></pre> <p>Now open a browser and hit your IP address or DNS name.   The first time you access Pydio you will see a diagnostics page that will look like this.</p> <p></p> <p>You will need to fix any issues discovered by the Diagnostics program before continuing. You will notice the warning about SSL Encryption.   I am accessing my server using Pound as a reverse proxy to encrypt the pages using SSL.</p> <p>Once you have fixed any errors reported by the Diagnostics page click on the link under the title to continue to the Pydio installation wizard. Use the MySQL credentials and 'pydio' database you just created, and make sure to use the correct URL for the server (like https://your_server_name/), otherwise you may have issues loading public links.</p> <p>That\u2019s it. Pydio is now installed and waiting for you to configure workspaces and other customizations. </p>"},{"location":"knowledge-base/installing-on-debian-nginx/#ps-pydio-6-nginx-configuration","title":"PS: Pydio 6 Nginx Configuration","text":"<p>This is the old config.</p> <pre><code>server {\n        server_name www.example.com;\n        listen 80;\n        rewrite ^ https://$server_name$request_uri? permanent;\n}\nserver {\n        server_name www.example.com;\n        root /var/www/&lt;extracted directory name&gt;;\n        index index.php;\n        listen 443 ssl;\n        keepalive_requests    10;\n        keepalive_timeout     60 60;\n        access_log /var/log/nginx/access_pydio6_log;\n        error_log /var/log/nginx/error_pydio6_log;\n\n        client_max_body_size 15M;\n        client_body_buffer_size 128k;\n\n        rewrite ^/dashboard|^/settings|^/welcome|^/ws- /index.php last;\n        if ( !-e $request_filename ) {\n                # WebDAV Rewrites\n                rewrite ^/shares /dav.php last;\n                # Sync client\n                rewrite ^/api /rest.php last;\n                # External users\n                rewrite ^/user ./index.php?get_action=user_access_point last;\n                # Public shares\n                rewrite ^/data/public/([a-zA-Z0-9_-]+)\\.php$ /data/public/share.php?hash=$1?;\n        }\n        rewrite ^/data/public/([a-zA-Z0-9_-]+)--([a-z]+)$ /data/public/share.php?hash=$1&amp;lang=$2?;\n        rewrite ^/data/public/([a-zA-Z0-9_-]+)$ /data/public/share.php?hash=$1?;\n\n        # Prevent Clickjacking\n        add_header X-Frame-Options \"SAMEORIGIN\";\n\n        # Only allow these request methods and do not accept DELETE, SEARCH and other methods\n        if ( $request_method !~ ^(GET|HEAD|POST|PROPFIND|OPTIONS)$ ) {\n                return 444;\n        }\n\n        location ~* ^/(?:\\.|conf|data/(?:files|personal|logs|plugins|tmp|cache)|plugins/editor.zoho/agent/files) {\n                deny all;\n        }\n        # Enables PHP\n        location ~ \\.php$ {\n                # for ^/(index|plugins) request_uri should be changed\n                set $request_url $request_uri;\n                if ( $uri ~ ^/(index|plugins) ) {\n                        set $request_url /;\n                }\n                include fastcgi.conf;\n                fastcgi_param  REQUEST_URI $request_url;\n                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n                try_files $uri =404;\n                fastcgi_pass unix:/run/php/php7.0-fpm.sock ;\n        }\n\n       # Enables Caching\n        location ~* \\.(ico|css|js)$ {\n                 expires 7d;\n                add_header Pragma public;\n                add_header Cache-Control \"public, must-revalidate, proxy-revalidate\";\n        }\n}\n</code></pre>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/","title":"Installing on a Linux Distribution NGINX","text":""},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#installing-linux-nginx-and-pydio","title":"INSTALLING LINUX + NGINX AND PYDIO","text":"<p>After a fresh install of a Linux distribution we will see all the steps that will help you run Pydio on a LINUX/Nginx environnement. All the command lines where used on Ubuntu but you have the same thing pretty much on every Linux Distriution so dont forget to adapt it to your configuration if required</p> <p>I advise you to read everything even if you are not using the same configuration, it can help you figure out issues with your installation.</p>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#configuration-before-installing","title":"CONFIGURATION BEFORE INSTALLING","text":"<ul> <li>PHP : check with this command line if you have any php installed <code>php -v</code>if it shows you a line with a php version and that php version is not php-7.0 or above, what you can do is remove php using <code>apt remove php* &amp; apt purge php*</code> after that use <code>apt autoremove</code>. Now if you re-use <code>php -v</code>it should show you no version of PHP.</li> <li>Apache2 : as usual use <code>apache2 -v</code> if it shows you any version of apache use <code>apt remove apache* &amp; apt purge apache*</code> and then <code>apt autoremove</code>, now re-check it using <code>apache2 -v</code>.</li> </ul> <p>Dont forget to use SUDO if you're not on root user.</p>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#installation","title":"INSTALLATION","text":""},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#1-main-packages","title":"1. Main Packages","text":"<ul> <li>PHP : to install PHP use <code>apt install php-7.0</code>.</li> <li>NGINX : to install Nginx use <code>apt install nginx</code>.</li> <li>Mysql : you can install MariaDB using <code>apt install mariadb-server</code>.</li> </ul>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#2-additional-packages-required","title":"2. Additional Packages (Required)","text":"<ul> <li>PHP-Mysql : PHP-Mysql allows php to execute sql, to install this one use <code>apt install php-mysql</code>.</li> <li>PHP-FPM : PHP-FPM is needed when you're using NginX because it doesn't contain native PHP Processing, to install PHP-FPM <code>apt install php-fpm</code>. After that open this file with any text editor <code>/etc/php/7.0/fpm/php.ini</code>and uncomment this line <code>cgi.fix_pathinfo=0</code>.</li> </ul> <p>For this Part you should go below to Virtual Hosts if you have no idea about how it works Don't forget to configure Nginx so that he can use PHP, to do so you need to add the following line :</p> <p>Open with a text editor your Pydio's sites-available conf file located in <code>/etc/nginx/sites-available/</code> then, You can either uncomment the lines if they are in the file (should be if you used the default one as a template) that will be marked : <pre><code>    location ~ \\.php$ {\n    #   include snippets/fastcgi-php.conf;                                  THERE'S THIS ONE to uncomment\n    #\n    #   # With php7.0-cgi alone:\n    #   fastcgi_pass 127.0.0.1:9000;\n    #   # With php7.0-fpm:\n        fastcgi_pass unix:/run/php/php7.0-fpm.sock;                         THIS ONE to UNCOMMENT\n        try_files $uri =404;                                                THIS ONE to UNCOMMENT   \n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;   THIS ONE to UNCOMMENT\n        include fastcgi_params;                                             THIS ONE \n    }\n\n    # deny access to .htaccess files, if Apache's document root\n    # concurs with nginx's one\n    #\n    #location ~ /\\.ht {                                                     YOU CAN ALSO UNCOMMENT THIS ONE\n    #   deny all;                                                           and THIS ONE \n    #}                                                                      and THIS ONE\n}\n</code></pre></p> <p>Otherwise you can add them as the following : <pre><code>location ~ \\.php$ {\n        include snippets/fastcgi-php.conf;\n        fastcgi_pass unix:/var/run/pydio-fpm.sock; (it's your php socket the name can be different)\n    }\n\n    location ~ /\\.ht {\n        deny all;\n    }\n</code></pre></p> <p>You can use <code>nginx -t</code>to look if the syntax is correct.</p> <p>You can also configure PHP to support larger files edit with a text editor <code>/etc/php.7.0/fpm/php.ini</code> <pre><code>file_uploads = On\npost_max_size = 20G\nupload_max_filesize = 20G\nmax_file_uploads = 20000\noutput_buffering = Off\n</code></pre> and edit those values to what suits ur usage.  </p> <p>Those Additonal Packages are required to have a working server, but if you know other alternatives you can use them.</p>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#3-install-pydio","title":"3. Install Pydio","text":"<p>Dont forget to create a Database for Pydio <code>mysql -uroot -p</code> and when you're logged in use <code>CREATE DATABASE &lt;databasename&gt;;</code>. Give it privileges with <code>GRANT ALL PRIVILEGES ON &lt;databasename&gt;.* TO &lt;username&gt;@&lt;server&gt; IDENTIFIED BY '&lt;password&gt;' ;</code>.</p> <p>Then to install Pydio you have multiple ways check them right HERE.</p>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#4-virtual-hosts-nginx","title":"4. Virtual Hosts Nginx","text":"<p>This part is important if you're going to use Virutal Hosts.</p> <p>First you need to give the rights to your Pydio <code>sudo chown -R $USER:$USER /var/www/YourPydio</code> it can also be <code>www-data:www-data</code>, then <code>sudo chmod -R 755 /var/www</code>.</p> <p>Now you have to create your config file, you can copy the default one to use it as a template  <code>cp /etc/nginx/sites-available/default /etc/nginx/sites-available/YourPydio</code>.</p> <p>now open this file with any text editor <code>/etc/nginx/sites-available/YourPydio</code> and change the following lines : <pre><code>server {\n        listen 80 default_server; (remove 'default_server' because you're going to have multiple ones)\n        listen [::]:80 default_server;(same as ABOVE)\n\n        root /var/www/html; (change it to your Pydio's webserver location webroot /pydio/core/src/core )\n\n        index index.html index.htm index.nginx-debian.html; (add index.php allowing the index to also be a php page)\n\n        server_name _; (you can give it a server name such as example.com www.example.com (you can put both entries))\n\n        location / {\n                try_files $uri $uri/ =404;\n        }\n\nIMPORTANT DONT FORGET TO ADD YOUR PHP SOCKET \nlocation ~ \\.php$ {\n        include snippets/fastcgi-php.conf;\n        fastcgi_pass unix:/var/run/pydio-fpm.sock; (it's your php socket the name can be different)\n    }\n\n    location ~ /\\.ht {\n        deny all;\n    }\n}\n</code></pre> Now create a link to sites-enabled : <code>sudo ln -s /etc/nginx/sites-available/YourPydio /etc/nginx/sites-enabled/</code>  Use <code>nginx -t</code>to verify syntax errors.</p> <p>What he have here is just an example you're free to modify it as you want</p>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#5-security","title":"5. Security","text":"<p>For security you have a lot of choices so identify your needs and refer to guides that can give you details about it, with Pydio you already have security but you can add a lair to your WebServer, \"better be safe than sorry\". You can add SSL and such.</p>"},{"location":"knowledge-base/installing-on-a-linux-distribution-nginx/#if-youre-having-an-issue","title":"IF YOU'RE HAVING AN ISSUE","text":"<p>If there's something that wasn't clear or that you may have missed you can check guides such as :</p> <ul> <li>Virtual Hosts</li> <li>LEMP Stack DEBIAN 8</li> <li>Nginx/Linux</li> </ul> <p>Or visit our Forum and look for a similar issue if you dont find one you can leave a post and we will gladly answer.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/","title":"Red Hat Storage Deployment","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#introduction","title":"Introduction","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#red-hat-storage-server","title":"Red Hat Storage Server","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#smarter-enterprise-storage","title":"Smarter enterprise storage","text":"<p>Deploying scalable, flexible enterprise storage shouldn\u2019t lock you in to high-cost proprietary solutions. Red Hat\u00ae Storage Server helps your enterprise manage the explosion of big, semi-structured, and unstructured data growth while maintaining the storage performance, capacity, and availability you need to meet your most demanding enterprise storage requirements.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#lower-costs","title":"Lower costs","text":"<p>Red Hat\u2019s open software solution for scale-out network-attached storage (NAS) lets you manage exponential data growth at a fraction of the cost of other storage solutions.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#easily-access-information","title":"Easily access information","text":"<p>Whether deployed on-premise, or in a private, public, or hybrid cloud environment, Red Hat Storage makes it easier to access information, brings freedom of choice, and brings the power of community-driven innovation to your enterprise.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#storage-problemssolved","title":"Storage problems\u2014solved","text":"<p>Red Hat Storage Server solves enterprise storage requirements, including:</p> <ul> <li>Enterprise-wide file sharing with a single access point across data storage locations.</li> <li>Nearline storage for infrequently accessed data that needs to be online.</li> <li>Rich media (audio and video) content distribution with petabyte-scale storage and high-read performance requirements.</li> <li>High-performance storage for bandwidth-intensive applications like weather prediction and oil and gas exploration.</li> <li>Centralized Storage-as-a-Service to enterprise applications.</li> <li>Backup target and archive for on-site or off-site data protection.</li> </ul> <p></p>"},{"location":"knowledge-base/red-hat-storage-deployment/#pydio-and-red-hat-storage","title":"Pydio and Red Hat Storage","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#solution-overview","title":"Solution overview","text":"<p>Pydio is an open-source alternative to Dropbox and Box.net, providing accesss to any filesystem through a neat webapp, dedicated iOS and Android native applications, as well as WebDAV. This document will describe how to deploy it efficiently in an Red Hat Storage environment, assuming you have the following set up :</p> <ul> <li>One RHServer node for LoadBalancer proxy (using HAProxy software).</li> <li>N RHServer node accessing the distributed replicated gluster volume.</li> <li>Optionaly, and AD or LDAP directory to provide users (Pydio has its own user system otherwise).</li> </ul> <p>The idea of this setup is to actually use the gluster nodes to act as HTTP servers, in an High Availability fashion : clients will access through the proxy to either node (based on a round-robin balance), and if one node dies it will be automatically ignored. Adding a node should be a matter of minutes, mounting the gluster volume, running the Pydio install script, and telling the proxy of this new node.</p> <p>NOTE : During the Pydio installation scripts, except it is already checked, you will be asked to enable the \u201cRHServer EUS Optional Server\u201d channel subscription, by providing your RHN login and password. Please make sure you have them available before running the script.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#architecture-diagram","title":"Architecture Diagram","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#pre-requisite-create-the-two-gluster-volumes","title":"Pre-requisite : create the two gluster volumes","text":"<p>This installation will rely on two different gluster volumes</p> <ul> <li>/mnt/samba/ajxp-data/ Will contain all the actual data of the users. Metadata will be stored in the file system extended attributes.</li> <li>/mnt/samba/ajxp-config/ Will contain all ajaxplorer specific configurations and internal data.</li> </ul>"},{"location":"knowledge-base/red-hat-storage-deployment/#ajaxplorer-setup","title":"Ajaxplorer Setup","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#download-the-deployment-scripts","title":"Download the deployment scripts","text":"<p>Download the following scripts on your gluster nodes :</p> <p><code>wget https://raw.github.com/ajaxplorer/ajaxplorer-core/master/dist/scripts/rhs/rhs-ajaxplorer.sh</code></p> <p><code>chmod 755 rhs-ajaxplorer.sh</code></p>"},{"location":"knowledge-base/red-hat-storage-deployment/#running-pydio-script-on-a-first-gluster-node","title":"Running Pydio script on a first gluster node","text":"<p>The provided rhs-ajaxplorer.sh script will deploy Pydio and all necessary dependancies automatically on a gluster node.</p> <p><code>./rhs-ajaxplorer.sh</code></p> <p>It will detect if this is the very first node to be installed, and in that case will ask you to run the Pydio graphical installation, by accessing this first node through a web-browser, at url http://first_node_IP/ajaxplorer/</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#pydio-configuration","title":"Pydio configuration","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#standard-set-up","title":"Standard set-up","text":"<p>When deploying this very first Pydio node, you will have to go through the standard Pydio installation wizard to setup the basic configs.</p> <ul> <li>Choose an administrator user name and password</li> <li>Skip Emails configuration for the moment</li> <li>Setup the \u201cConfigurations Storage\u201d : this defines how Pydio handles its own internal configurations. As a start, we suggest using an Sqlite3-based backend, although a MySQL DB would be recommanded for scalability purpose. The SQlite file will be stored on the gluster config volume, and will be shared amongs all Pydio nodes.</li> </ul> <p>Execute installation and login, you\u2019re in! If you go to the Settings panel (in the admin user menu), you will here be able to switch the Authentication mechanism to LDAP or AD if necessary. Please refer to the admin guide before touching this, you could end up being logged out of the system!</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#solution-specific-configurations","title":"Solution specific configurations","text":"<p>Some Pydio features will generate http links used by the users, and generally, Pydio can safely detect the link \u201cbase\u201d using the current server IP. In the architecture presented in this document, the software may end up building links using the Pydio instance server IP, i.e. the internal LAN IP, not the public IP. For this reason, you must update a couple of Pydio parameter using the HAProxy node public IP, the one that will be the unique entry point to the system by the clients.</p> <p>Let\u2019s say the public IP of haproxy is HA_IP, here are some options to set inside Pydio Main Options</p> <ul> <li>Main Options &gt; Server URL : http://HA_IP/ajaxplorer</li> <li>Sharing &gt; Download URL : http://HA_IP/ajaxplorer_public (there is a virtual host)</li> <li>WebDAV Server &gt; Shares Host : http://HA_IP</li> <li>WebDAV Server &gt; Shares URI : /ajaxplorer/shares/</li> </ul> <p>As your editing this parameters,  make sure the following are checked as well:</p> <ul> <li>WebDAV Server &gt; Enable WebDAV : Yes</li> <li>Command line &gt; Command-line Active : Yes</li> </ul>"},{"location":"knowledge-base/red-hat-storage-deployment/#next-nodes-deployment","title":"Next nodes deployment","text":"<p>Once you\u2019re setup with your configuration on the first Pydio instance, you will be able to run the script on the other nodes, and configurations will be automatically imported from the \u201cmaster\u201d. At the end of the installation, you should be notified that Pydio configurations were correctly detected on the gluster volume, and check that everything is indded running as expected by accessing the new node web server : http://new_node_IP/ajaxplorer/</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#installing-the-load-balancer","title":"Installing the Load Balancer","text":"<p>On the Proxy node, simply download and execute the rhs-haproxy.sh script:</p> <p><code>wget https://raw.github.com/ajaxplorer/ajaxplorer-core/master/dist/scripts/rhs/rhs-haproxy.sh</code></p> <p><code>chmod 755 rhs-haproxy.sh</code></p> <p><code>./rhs-haproxy.sh</code></p> <p>Open the /etc/haproxy/haproxy.cfg At the very end of the file, you will see the backend definition : to what IP am I listening (this will be your outside world IP), and what are the available nodes. Please modify this accordingly. Also, make sure to change the root:haproxy credential to access the haproxy statistics through the browser.</p> <p>listen http_proxy 192.168.1.21:80       mode http       # This will enable the statistic interfaces       # Accessible at proxy_url/haproxy?stats       stats enable       #       # Modify here the statistics user credential to use a secret key!       #       stats auth root:haproxy       # Round-Robin &amp; Session Stick on Pydio       balance roundrobin # Load Balancing algorithm       appsession AjaXplorer len 64 timeout 3h request-learn       option forwardfor # This sets X-Forwarded-For       # Check the health of each server       option httpchk HEAD /ajaxplorer/check.txt HTTP/1.0</p> <pre><code>  #\n  # And modify here your nodes IPs\n  #\n  server ajxpnode1 192.168.1.10:80 weight 1 maxconn 512 check\n  server ajxpnode2 192.168.1.11:80 weight 1 maxconn 512 check\n  server ajxpnode3 192.168.1.12:80 weight 1 maxconn 512 check\n  server ajxpnode4 192.168.1.13:80 weight 1 maxconn 512 check\n  # ADD OTHER NODES HERE\n</code></pre> <p>Once you are done, restart HAProxy using</p> <p><code>/etc/init.d/haproxy restart</code></p>"},{"location":"knowledge-base/red-hat-storage-deployment/#using-pydio-apps-rest-cli","title":"Using Pydio: apps, REST, CLI","text":""},{"location":"knowledge-base/red-hat-storage-deployment/#standard-access","title":"Standard Access","text":"<p>At this step of the tutorial, you should be able to access the external IP http://external_IP/ajaxplorer/ and this will round robin the load on the various nodes.</p> <p></p> <p>This URL is the unique entry point, used by all standard Pydio \u201cclients\u201d : this webapp, but also the iOS and Android applications. In these apps, at first connexion, you are prompted for some connexion information. Fill them using http://HA_IP/ajaxplorer/ as the server URL, and your login / password as credentials.</p> <p></p> <p>Note that you will also be able to access the HAProxy statistics by opening the following URL : http://external_IP/haproxy?stats and providing the credentials you have modified in the configuration file.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#webdav-drive-mounting-rest-access","title":"WebDAV: drive mounting, REST-access","text":"<p>WebDAV is by default activated only on a per user basis. In the previous sections, you were instructed to make it available application-wide, in the Settings Panel. Now as a standard user (or admin), you should be able to see in the user top-right menu a \u201cWebDAV Preferences\u201d item. Use it to activate this feature for the given user.</p> <p>It will display an URL that is differing from the Webapp access point. This is a dedicated URL you will use to mount your authorized workspaces as a \u201cNetwork Drive\u201d inside your OS explore (Windows Explorer, Mac OS Finder, Linux DavFS client). This can be quite handy, although not so performant for some of these clients implementations (typically Mac Finder is known to be a poor implementation). You can find below a sample screenshot of the Windows 7 \u201cMap Network Drive\u201d feature.</p> <p> </p> <p>One interesting thing of giving WebDAV access out of the box is that you can now use this API as a RESTful access point to GET / PUT a file inside / from a workspace. Using cURL, here are some sample command lines :</p> <p>GET the file contract.pdf from Workspace \u201cMy Files\u201d, as user USER, located inside folder /Folder1/subFolder2\u2033 <code>curl --user USER:PASSWORD --remote-name http://HA_IP/ajaxplorer/shares/my-files/Folder1/subFolder2/contract.pdf</code> PUT the file contract2.pdf at the same location, given the file is located in the directory from which you execute the cURL command <code>curl --user USER:PASSWORD --upload-file contract2.pdf http://HA_IP/ajaxplorer/shares/my-files/Folder1/subFolder2/contract2.pdf</code></p>"},{"location":"knowledge-base/red-hat-storage-deployment/#accessing-the-framework-via-php-cli","title":"Accessing the framework via PHP CLI","text":"<p>It\u2019s possible to launch the whole framework and execute any actions via the command line.  Typically, System Administrators will use the admin API to automatize provisionning directly, without going through HTTP : create users, roles, assign access rights, etc.</p> <p>It is also used internally to make tasks triggered from the GUI \u201casynchronous\u201d : they are started on the server and do not need to keep a window open. For example, Lucene Indexation is started that way. One can also launch some administrative tasks from outside the web, e.g. via a CRON job..</p> <p>If you want to use the command line, placed at the root of the installation, you will first have to find the correct action to trigger, by browsing the \u201cDeveloper Resources\u201d &gt; \u201cActions API\u201d available directly inside the Settings panel.</p> <p></p> <p>Then , if you want for example to trigger the action \u201ccreate_group\u201d with parameters id \u201csales\u201d and label \u201cCommercial\u201d, you\u2019ll have to call the following command: <code>php cmd.php -u=user -p=password -a=create_group -r=repository_id --group_path=/sales --groupLabel=Commercial</code> Note the difference between simple-dash parameters and double-dash parameters : the first ones are always necessary, whereas the latter ones will depend on the triggered action.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#going-further-with-ha","title":"Going further with HA","text":"<p>This setup should easily demonstrate the horizontal scalability of such an RHS+Pydio configuration. However, if you intend to deploy in a highly demanding production environnment, you should consider the following suggestions.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#doubling-the-haproxy-node","title":"Doubling the HAProxy Node","text":"<p>This is a fairly simple setup for demonstrating LoadBalancing and node failing automatic detection. To provide the best High Availability configuration, you should actually double the LoadBalancer nodes, using HAProxy and Heartbeat to make sure that if one of them fall down, a slave can take the relay.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#setting-up-a-mutual-db","title":"Setting up a mutual DB","text":"<p>Although the key to the data high availabilty relies on the data being stored on the filesystem, some side-features of Pydio are now requiring a database setup. In this tutorial, we covered the case using a Sqlite3 database shared through the Gluster volume, which would not scale well. You should instead consider dedicating a MySQL database to replace this, eventually using solutions like Percona DB to manage the DB replication and HA.</p>"},{"location":"knowledge-base/red-hat-storage-deployment/#share-the-php-sessions","title":"Share the PHP Sessions","text":"<p>The Proxy setup is set so that once a client is connected to a given Pydio node, the session is \u201csticky\u201d and HAProxy will always redirect this client to this node. If the node falls down, the client will have to start a new session. Avoiding this can be done by sharing the session amongst all Pydio node, using for example a dedicated Memcache server accessed by all nodes.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/","title":"Troubleshooting WebDAV server","text":"<p>Web Distributed Authoring and Versioning (WebDAV) is an extension of the Hypertext Transfer Protocol (HTTP) that facilitates collaboration between users in editing and managing documents and files stored on World Wide Web servers. A working group of the Internet Engineering Task Force (IETF) defined WebDAV in RFC 4918. The WebDAV protocol makes the Web a readable and writable medium. It provides a framework for users to create, change and move documents on a server; typically a web server or web share.</p> <p>The interest of this protocol is that nowadays, most Operating System implement its support by default, and provide the ability to \u201cmount a network drive\u201d mapping to a remote WebDAV server. But still, as each OS has its own implementation of a WebDAV client to do this, it can be quite cumbersome to setup on both server and client sides.</p> <p>We assume that you have already read the WebDAV Activation Guide in the Admin Guide.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#testing-the-server-ability","title":"Testing the server ability","text":""},{"location":"knowledge-base/troubleshooting-webdav-server/#check-requirements","title":"Check requirements","text":"<p>One important thing to understand is that Pydio does not use WebDAV protocol internally (for its web-based client or mobile application). Thus it\u2019s an optional feature you have to activate in the configuration, and everything can be running file in Pydio, that does not mean your WebDAV is up and running.</p> <p>Since version 5.0.0, we are now using the well-known SabreDAV component as a the WebDAV file server in Pydio. This adds a dependency to the php_mbstring extension, and also that you have some kind of Rewrite Engine activated in your web server. Apache would for example require mod_rewrite to be loaded.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#check-htaccess","title":"Check .htaccess","text":"<p>As described in the Administration Guide, you must manually edit the .htaccess file (or equivalent for other webservers than Apache) to make sure the RewriteBase is the right one: if your installation if for example located at http://mydomain.tld/my/files/, you will have to make sure the RewriteBase is /my/files.</p> <p>Also, the Authorization Header can in some server setup create problems. Try commenting/uncommenting the last two lines of the .htaccess to forward the header.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#check-the-server-is-actually-activated","title":"Check the server is actually activated","text":"<p>Check both the global configurations (Pydio Main Options), and that the user with which you are trying to access has indeed activated her account, and set up a password if necessary.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#use-the-browser-access-to-test","title":"Use the \u201cBrowser Access\u201d to test","text":"<p>One of the most reliable testing client would be accessing the webDAV shares through the browser. You have to enable this feature in Pydio Main Options, and then access your shares directly at http://mydomain.tld/my/files/shares/ . You will be prompted for an HTTP-Authorization, and you must be able to list folders and files here.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#fixing-clients-issues-mostly-on-windows","title":"Fixing clients issues (mostly on Windows)","text":""},{"location":"knowledge-base/troubleshooting-webdav-server/#windows-7","title":"Windows 7","text":""},{"location":"knowledge-base/troubleshooting-webdav-server/#slow-performances","title":"Slow Performances","text":"<p>One fix that works for me is to make sure that the proxy settings in IE are disabled.  For some reason, at times, the settings \u201cAutomatically Detect Settings\u201d In the connection tab reset itself. If it is disabled it works great.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#no-connexion-at-all-on-https","title":"No Connexion at all on HTTPS","text":"<p>If your SSL Certificate is self-signed, you will have to manually add it to the OS authorized certificates. To do this, access to the server first through your a browser, and there, do the necessary manipulation to tell IE to always trust this certificate.</p> <p>Then make sure to your the standard \u201cMap Network Drive\u201d dialog, instead of \u201cConnect to an http server\u2026\u201d.</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#mac-os-finder","title":"Mac OS Finder","text":"<p>Mac OSX Finder is using a specific Transfer-Encoding header for PUT requests (uploading files), which seem to be very poorly supported by servers, thus breaking the files uploads (file appear but is zero-byte sized).</p>"},{"location":"knowledge-base/troubleshooting-webdav-server/#basic-auth-only-clients","title":"Basic-auth only clients","text":"<p>In some cases, you may be using a WebDAV client (typically a programming SDK) that is not able to handle Digest-HTTP Authentication, and only Basic-HTTP. In that case, you can enable Basic in the Pydio configs.</p>"}]}