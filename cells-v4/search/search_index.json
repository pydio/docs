{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index/","title":"Documentation","text":"<p>You'll find all the documentation you need to deploy, configure, and enhance your Cells install right here.</p> <ul> <li> <p>Administration Guides</p> <p>Getting started with Cells: installation instructions, concepts and most used features.</p> <p>Follow the guide ...</p> </li> <li> <p>Knowledge Base</p> <p>One-pager articles on a wide-range of subjects (OS-Specific topics , security advices, running as a service...)</p> <p>Browse KB ...</p> </li> <li> <p>API References</p> <p>Pydio Cells APIs allow you to easily interact with the software for provisioning users, managing files, etc.</p> <p>API DOCS...</p> </li> <li> <p>Cells Flows Documentation</p> <p>Cells Flows is a powerful drag-and-drop tool that allows you to easily automate tasks in Pydio Cells. This documentation provides you in-depth explanation of how to use it and detailed reference of resources bundled into the product.</p> <p>CellsFlows</p> </li> </ul>"},{"location":"admin-guide/index/","title":"Admin Guide","text":"<p>Documentation for administrators</p>"},{"location":"admin-guide/quick-start/index/","title":"Quick Start","text":"<p>This section provides a full-spectrum overview of Cells installation, configuration and usage.</p> <ul> <li>Requirements</li> <li>Cells Installation</li> <li>Quick Admin Tour</li> <li>Sharing Features</li> <li>Add Collaboration Tools</li> <li>Connect Desktop Sync</li> <li>Mobile Apps</li> <li>Glossary</li> </ul>"},{"location":"admin-guide/quick-start/requirements/","title":"Requirements","text":"<p>Cells ships as a set of precompiled static binaries, one for each operating system. The only required dependency is a MySQL database.</p>"},{"location":"admin-guide/quick-start/requirements/#hardwareos","title":"Hardware/OS","text":"<ul> <li>CPU: AMD 64 bits, ARM 32 or 64 bits. 2 core or more are recommended.</li> <li>RAM: 4GB RAM</li> <li>Disk: SSD is highly recommended for storage.</li> <li>Supported OS:</li> <li>Debian Like: Debian 12 (Bookworm), Debian 11 (Bullseye), 10 (Buster); Raspbian 10, 11 or 12; Ubuntu 22.04 (Jammy Jellyfish), 20.04 (Focal Fossa), 18.04 (Bionic Beaver)</li> <li>RHEL: RHEL 7, 8 or 9, RockyLinux 8 or 9, CentOS 7</li> <li>MacOSX: from 10.13</li> <li>Windows: 10 or 11 (Cells Home only)</li> </ul> <p>Important Settings</p> <ul> <li>Dedicated OS user: never run Cells as \"root\" user!</li> <li>Ulimit: the number of allowed open files must be greater than 2048. For production use, a minimum of 8192 is recommended (see <code>ulimit -n</code>).</li> </ul>"},{"location":"admin-guide/quick-start/requirements/#mysqlmaria-db-versions","title":"MySQL/Maria DB versions","text":"<p>Supported server versions:</p> <ul> <li>MariaDB version 10.3 and above</li> <li>MySQL version 5.7 and above (except 8.0.22 that has a bug preventing cells to run correctly)</li> </ul> <p>Creating a database and a privileged user</p> <pre><code>CREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;your-password-here&gt;';\nCREATE DATABASE cells DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre> <p>Important Settings </p> <p>Always ensure that the database is created with character set and collation set to UTF8.</p> <p>Make sure not to leave the <code>max_connections</code> to its default value (151) for production we advise at least <code>500</code>, for a better understanding see MySQL manual.</p> <p>This can generally be done with a similar instruction :  <pre><code>mysql -u root\nSET GLOBAL max_connections = 1000;\nSHOW VARIABLES LIKE \"max_connections\";\n\nSET GLOBAL max_prepared_stmt_count = 131056;\nSHOW VARIABLES LIKE \"max_prepared_stmt_count\";\n</code></pre></p>"},{"location":"admin-guide/quick-start/requirements/#optional-mongo-db","title":"[Optional] Mongo DB","text":"<p>Depending on your target deployment size, you may switch directly from the default on-file storage used by specific services (search engine, activity feeds, logs, amongst others) to a Mongo DB document store. </p> <p>This is a good idea if  </p> <ul> <li>You foresee a high load on the platform: number of users and/or a high number of files managed every day.   </li> <li>You plan to deploy Cells in a distributed environment (cluster) to provide high availability or horizontal scaling.  </li> </ul> <p>If you do not have a Mongo DB available yet, you can add it later as Cells provides the tools to migrate from on-file storage to Mongo. Otherwise, prepare Mongo connection information such as : </p> Parameter Description Defaults Host/Port Address of the server hosting the Mongo DB localhost:27017 Credentials Optional credentials to connect, along with an authentication DB name [none] Database Name Name of the mongo database cells Connection String Parameters Additional connection parameters passed via Mongo connection string query parameters maxPoolSize=20&amp;w=majority <p>Supported Mongo Versions: MongoDB has currently been tested with v5, v6 and v7.</p> <p>Learn more about the reasons to provide a MongoDB here.</p>"},{"location":"admin-guide/quick-start/requirements/#network-requirements","title":"Network requirements","text":""},{"location":"admin-guide/quick-start/requirements/#gateway","title":"Gateway","text":"<p>Cells provides its own webserver as a unified Gateway to public-facing services. As such, unlike old versions of Pydio, you do not need Apache or equivalent.</p> <p>The Gateway will \"bind\" to a TCP Port like a standard web server. The port number used is defined in the ./cells configure sites command, or directly as a parameter of the start command in the command line interface.</p> <p>This is the port that needs to be opened in your firewall to make Cells accessible outside the server.</p> Port Default CLI Flag Gateway 8080 --bind"},{"location":"admin-guide/quick-start/requirements/#services","title":"Services","text":"<p>Cells uses TCP/IP connections to communicate between services. The following are using pre-defined ports, that can be overridden in all commands that refer to services in the command line interface (eg start, admin, ...).</p> Port Default CLI Flag Discovery Services 8030 --grpc_discovery_port gRPC Server Port 8031 --grpc_port"},{"location":"admin-guide/quick-start/requirements/#other-requirements","title":"Other requirements","text":"<p>The date &amp; time on the server must be correct, otherwise you will have authentication problems; e.g: <code>403</code> access forbidden errors when trying to upload.</p> <p>If you plan to use one of the clients (e.g.: Cells Sync, the mobile apps, Cells clients), you must also at least define the public external URL. Otherwise, Cells cannot complete the OAuth credential flow.</p>"},{"location":"admin-guide/quick-start/quick-admin-tour/","title":"Quick Admin Tour","text":"<p>Now that your Cells is up-and-running, you are in control of your data! This section gives a short overview of user management and access control, along with the basics of the sharing features.</p>"},{"location":"admin-guide/quick-start/quick-admin-tour/#users-workspaces-acls","title":"Users, Workspaces, ACLs","text":"<p>Connect to Cells as an administrator and go to <code>Cells Console &gt; People</code> menu.</p> <p></p> <p></p> <p>Here, you can create users and organize them into groups. By default, your data is organized in two Workspaces:  - \"Personal\" is a dedicated \"home folder\": each user will only see their own data inside this Personal workspace. - \"Common Files\" is a shared folder where everyone can work on the same files.</p> <p>Workspaces can be seen as top folders used as basic unit for managing \"who can access what\". To have a better understanding, load your own admin user accesses: in the workspace tab, you see that you have Read/Write permissions on the two default workspaces.</p> <p></p> <p>If you remove the access to Common Files and go back to the home page, you see straight away that you only have the \"Personal\" workspace in the left-hand column.</p> <p>You can manage these accesses at a fine-grained level (user per user), or a higher level (per group or per role). Actual accesses are computed for each user depending on their roles, groups and personal ACLs.</p>"},{"location":"admin-guide/quick-start/quick-admin-tour/#workspaces-and-data-source","title":"Workspaces and Data Source","text":"<p>Now that you understand how to manage access to the data, you may wish to create your own workspace, e.g. mount an existing folder on your machine to browse inside Cells. If you go to <code>Cells Console &gt; Workspaces</code> and edit the Common Files workspace, you can see that the Data Access section points to an internal path <code>pydiods1/</code>.</p> <p></p> <p>This is referring to a \"Data Source\" named pydiods1. Now go to <code>Cells Console &gt; Storage</code>, where you will find this datasource and its real path on the file system.</p> <p>If you wish to mount an existing folder, e.g. <code>/var/data/mydata</code>, create a new data source and pick the desired location.</p> <p></p> <p>After you save the datasource, corresponding services start in background, including an indexation of your already existing data. Go back to the <code>Cells Console &gt; Workspaces</code> menu and create a \"My Data\" workspace pointing toward this new datasource root. Set default permissions for this workspace (Read and Write for instance), which is equivalent to assigning the Read/Write ACL to all users and save.</p> <p></p> <p>Go back to the home page. You can now see the workspace and browse the data it contains!</p> <p></p> <p>As you may now understand, you could also edit the \"Common Files\" workspace to point to this new datasource instead of the default one, or even add a second path to this workspace to aggregate data from various locations into one workspace. While datasources can be seen as mount points to actual folders on your file system, creating an internal tree of all data, workspaces are virtual views that expose data from anywhere in that tree and are used to grant permissions.</p> <p>A final note: as seen above, a datasource can expose a part of your local file system, but it can also point toward other remote object storage, like AWS S3 for instance.</p> <p>See Also</p> <ul> <li>Datasources Overview to learn more about Datasources.</li> </ul>"},{"location":"admin-guide/quick-start/sharing-features/","title":"Sharing Features","text":"<p>Pydio Cells delivers file sharing and collaboration in a way that is familiar, comfortable and intuitive for users of modern collaborative apps. It lets users decide how to share files and information, based on knowledge of their own teams, workflows and working patterns. This end-user freedom also takes the responsibility of creating effective workspaces away from overburdened administrators.</p>"},{"location":"admin-guide/quick-start/sharing-features/#sharing-with-public-links","title":"Sharing with Public links","text":"<p>You can share files or folders using a public link. To create a public link, choose the folder/file that you want to share and right click on it: a menu appears. Click on Share, it opens a configuration popup:</p> <p></p> <p>Click on Enable Public Links to generate a unique URL providing public access to this resource.</p> <p></p> <p>Note: The generated link URL is computed from your current web access. If you are using multiple URLs to access to Cells, you can force Cells to use only one of them for all public links. Go to Cells Console &gt; Main Settings panel and also refer to Configure Cells URL in this documentation.</p> <p>Once a link is enabled, you can fine-tuned and restrict its accesses with various configurations described below</p>"},{"location":"admin-guide/quick-start/sharing-features/#permissions","title":"Permissions","text":"<p>Set up basic read/write/preview permissions for this link. Options here may depend on the shared resource type (file or folder) and the additional restrictions set. </p> <ul> <li>For a folder, you can pick from \"preview\" (show files previews), \"read\" (open/download files) and \"upload\" (let people upload additional contents to the folder. Worth noting, you can share a folder with only the \"upload\" option set, providing a blind dropping box to collect files from external users.</li> <li>For a file, you can pick from \"preview\" (show preview), \"read\" (open/download file) or \"edit\" if the file type provides a supported editor inside Pydio Cells interface.</li> </ul>"},{"location":"admin-guide/quick-start/sharing-features/#labels-and-display-options","title":"Labels and Display Options","text":"<ul> <li>Link Label: the label of your link; you have a menu displaying all your public links. It is easier to recognize them with a label)</li> <li>Link Description: filled by default with the creation date, this is displayed in the various public layouts seen by the end-user that clicks on the link. You can change this to provide a more adequate description of the content.</li> <li>Layout: customize data presentation with specific templates. For example, if you are sharing a folder filled with images, use the Gallery template to directly display images as a mosaic. </li> </ul>"},{"location":"admin-guide/quick-start/sharing-features/#access-restrictions","title":"Access restrictions","text":"<p>This section provides additional restrictions capabilities for accessing this link : </p> <ul> <li>Password will prompt user for a password before accessing the link</li> <li>Expiration Date will automatically disable the link after a certain period of time</li> <li>Maximum Downloads (only for files with \"download\" permission) will automatically disable the link after the file has been downloaded a given number of times.</li> </ul>"},{"location":"admin-guide/quick-start/sharing-features/#advanced-visibility","title":"Advanced Visibility","text":"<p>This advanced feature is less used but can be handy: by default, a link created on a file or folder is \"owned\" by the current user. Other users who access the same workspace cannot see this link, nor edit its characteristics. This settings allows you to \"hand over\" the link management to another user, or for example to let a whole group of people use this link and edit its properties. </p> <p>Beware of not confusing the link permissions/accesses (what can a public user see at this link) and the visilibity (which internal user is allowed to edit this link properties). This \"visibility\" concept can be found elsewhere in the application, regarding shared users managements, Cells management, etc.</p>"},{"location":"admin-guide/quick-start/sharing-features/#sharing-with-other-users-using-cells","title":"Sharing with other users using Cells","text":"<p>The Cells concept will be familiar to modern workers used to collaborating on \"channels\" within popular group-chat applications. Cells can be shared internally or externally to the organization, with users able to add new individuals and groups to the Cell. In-app, instant messaging within each Cell, provides a focused channel for group communication around the theme.</p> <p>End-users can create their own, flexible Cells: combining files and folders from any location, or picking users from their address book.</p>"},{"location":"admin-guide/quick-start/sharing-features/#cells-restrictions-auto-expiration","title":"Cells Restrictions: auto-expiration","text":"<p>Starting with version 4.2, it is possible to set an expiration date to a Cell. At that time, Cells permissions will be automatically disabled, except for the Cell owner that can still manage it. This expiration can be set directly when creating Cell from scratch (see below), or simply edited under the Label tab if Cell is created from an existing folder or from within the Address Book.</p> <p></p> <p>Note that currently, the permissions being fully disabled means that if one wants to re-activate the Cells, she has to manually re-assign all rights to each participant.</p>"},{"location":"admin-guide/quick-start/sharing-features/#creating-cells-from-foldersfiles","title":"Creating Cells from folders/files","text":"<p>When using the Share action (either in right-click menu or in the information column), one can directly add a folder or a file to an existing cell, or create a new cell with the current folder.</p> <p></p>"},{"location":"admin-guide/quick-start/sharing-features/#creating-cells-from-scratch","title":"Creating Cells from scratch","text":"<p>When using the \"Create Cell\" button from the left-hand panel, the following menu is displayed:</p> <p></p> <ul> <li>Title: the name for the cell.</li> <li>Description: add a short description of your cell to inform users about the topic.</li> <li>Expiration Date: optionaly set a date in the future where Cells permissions will be de-activated.</li> </ul> <p></p> <ul> <li>Choose who you will share data with: Pick a single or multiple groups/users that will have access to this cell. You can also choose how they can interact within it.</li> </ul> <p></p> <ul> <li>Add an existing Folder: Pick an existing folder from any of your current workspaces, to feed the Cell with data. You can also leave the cell empty and a dedicated folder will be created on the underlying storage.</li> </ul> <p>Click on Create Cell Now! to finish the process.</p>"},{"location":"admin-guide/quick-start/sharing-features/#creating-cells-from-address-book","title":"Creating Cells from Address Book","text":"<p>When browsing the Address Book in the right-hand column, clicking on the vertical dots for a user opens, providing following options:</p> <ul> <li>Create a cell with this user</li> <li>Add user to current Cell: if you are currently inside a Cell</li> <li>Remove from current Cell: if the user is part of the current Cell and you have the right to edit this Cell.</li> </ul>"},{"location":"admin-guide/quick-start/connect-desktop-sync/","title":"Connect Desktop Sync","text":"<p>Providing CellsSync to your users can be an efficient way to help them keep their files offline on their desktop computer.  However, please be aware of the following:  </p> <ul> <li>When the sync client has many users connected to the same folder, some conflicts might arise. The users may then have to solve the conflicts manually. We recommend allowing users to sync only their <code>Personal</code> workspace as a starting point.</li> <li>CellsSync is still in testing phase. We are getting a lot of positive feedback but it may not yet be 100% bullet-proof! Make sure to always backup your data on a regular basis.</li> </ul>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#server-pre-requisites","title":"Server Pre-requisites","text":"<p>Please be aware that many users syncing high amount of files can severely load the server, your installation must be prepared for that! Also, if you are behind a reverse proxy, you may check the dedicated section to learn more about gRPC handling through reverse proxies.</p> <p>For Cells Enterprise, Sync is enabled by an administrator on a per-workspace basis. By default, only <code>Personal</code> workspace is sync-enabled. If you wish to enable other workspaces, you have to switch the <code>Allow Desktop Sync</code> flag in each of them.</p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#installing-cellssync","title":"Installing CellsSync","text":""},{"location":"admin-guide/quick-start/connect-desktop-sync/#windows","title":"Windows","text":"<p>Download the CellsSync MSI and execute it on your computer. It installs CellsSync as a windows application. For the time being, the local service is not automatically restarted at reboot.</p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#macosx","title":"MacOSX","text":"<p>Download the CellsSync DMG and execute it. Drag and drop CellsSync in the Applications folder, then launch it. The very first launch will alert about the file coming from the internet, in some cases you may have to launch it again after approving this alert.</p> <p>Depending on your security config, MacOS might require additional permissions; System Preferences &gt; Security &amp; Privacy &gt; Files and Folders and allow access.</p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#linux","title":"Linux","text":"<p>There is currently no installer for Linux, just download the CellsSync Binary and run it with <code>./cells-sync start</code> command.</p> <p>Depending on distributions, the UX components might require additional packages, such as <code>sudo apt install libappindicator3-1</code>.</p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#configuring-cellssync","title":"Configuring CellsSync","text":"<p>In order to be able to synchronize data, you must configure the connection from your CellsSync Client to your Cells server with a valid account. Let's create a task to synchronize your personal-files space on your server to a local folder of your choice.</p> <ul> <li>Go to the menu Tasks &gt; Create Task.</li> <li>Choose <code>new server</code> : type the URL of your Pydio Cells, for instance <code>https://cells.example.com</code></li> <li>A new tab in your default browser (as defined in your OS) opens and invites you to provide your credentials</li> <li>Once logged, you are redirected back to your CellsSync Client. The server is now available in the Cells Account selector.</li> <li>Select the server and choose a path on the <code>path</code> field on its right.</li> <li>In our current example, we choose Personal Files and then click on Select.</li> <li>In Your Computer section, select the local path where you want the data to be stored.</li> <li>Click Save: the task is created and starts synchronizing you data.</li> </ul> <p></p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#server-compatibility-cells-v4-vs-older-versions","title":"Server compatibility : Cells v4 vs. older versions","text":"<p>Starting with v4, a new hashing mechanism has been introduced to compute files signature in a storage-independant way. This signature or \"hash\" is used for fast comparison between two files version: if they are the same, the file did not change. </p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#datasource-hashing-version","title":"Datasource Hashing Version","text":"<p>Cells v3 and before were previously relying on the storage eTag feature, and the Sync client would on its side compute a hash in the same format (md5). We now use an internal hashing mechanism, which brings consistency accross all storages, all upload methods (direct PUT or multipart), and datasource encryption status. </p> <p>If you are upgrading from Cells v3 to v4, file hashes in all datasources will not be automatically recomputed, as it is a I/O and CPU intensive operation: you may want to schedule it when it suits you best. </p> <p>To trigger this operation, please use the following command (more info here) </p> <pre><code>$ cells admin datasource rehash -u admin --datasource {YOUR_DATASOURCE_NAME}\n</code></pre> <p>This will:</p> <ul> <li>List all files in datasource and recompute their hash</li> <li>Update datasource configuration with a specific \"hashing_version=v4\" attribute</li> <li>If datasource is structured, update the \"resync\" job to always rehash new files after synchronization. </li> </ul> <p>Once the job is finished (see in the Scheduler or Cells Flows), restart the server.</p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#compatibility-matrix","title":"Compatibility Matrix","text":"<p>On your desktop, if you update from 0.9.2 or below, CellsSync will automatically recompute all hashes on the local filesystem and trigger a full resynchronization. From there, the matrix below shows how a given datasource will be compatible with a given version of CellsSync.</p> Cells Server + Datasource Status Cells Sync &lt;= 0.9.2 Cells Sync &gt;= 0.9.3 Cells v3 or older OK FAIL v3 upgraded to v4 w/o rehash OK (needs re-auth) FAIL v3 upgraded to v4 w/ rehash FAIL OK Cells v4 new installation FAIL OK <p>So if you do not plan to update your server to v4, do not upgrade Cells Sync after 0.9.2 (you can reinstall older version if you updated by mistake)!</p>"},{"location":"admin-guide/quick-start/connect-desktop-sync/#troubleshooting","title":"Troubleshooting","text":"<p>If you encounter errors such as:</p> <ul> <li><code>/oidc/.well-known 404</code> this error might indicate that the <code>EXTERNAL_URL</code> on Cells was not set, please refer to the following article on how to configure this paremeter.</li> <li><code>transport is closing</code> or <code>server closed the stream without sending trailers</code>: This might be related to the reverse-proxy grpc configuration. see knowledge base</li> </ul>"},{"location":"admin-guide/quick-start/mobile-apps/","title":"Mobile Apps","text":"<p>This post provides you with the updated links to the Mobile Applications, the Cells mobile app allows you to browse and upload data to your Cells Instance.</p>"},{"location":"admin-guide/quick-start/mobile-apps/#cells-on-ios","title":"Cells on IOS","text":"<p>Download the application on the App Store.</p> <p> </p>"},{"location":"admin-guide/quick-start/mobile-apps/#cells-on-android","title":"Cells on Android","text":"<p>Our app is now available on Google Play.</p> <p> </p>"},{"location":"admin-guide/quick-start/glossary/","title":"Glossary","text":"<p>This section provides definitions for commonly used terms of this documentation.</p> Term Definition cells Static binary, compiled for each platform. <code>cells</code> contains all microservices necessary to launch the server platform, as well as a couple of command-line tools to communicate with a running Cells instance. cells-enterprise Static binary containing <code>cells</code> and additional microservices for implementing Cells Connect and Cells Enterprise features. Requires a valid license key to run. cells-sync Desktop synchronization client. <code>cells-sync</code> communicates with a running Cells server. cells-client Command line client that provides tools to communicate with a running Cells server via its REST API. FQDN Fully Qualified Domain Name, e.g. files.example.com Gateway Receives all incoming HTTP/TCP connections to Cells and acts as a load balancer / proxy / routing service to the multiple microservices of the Cells environment. Microservice Independant brick that exposes a set of internal APIs inside Cells. For example, there are microservices for managing users, workspaces, logs, etc. Site Configuration item describing an entrypoint to the Gateway. Binding Address [ip:port] declared by a Site to bind to a given port of a network interface. Can be a URL in case of a Let's Encrypt setup External URL Users access this URL to connect to Cells. It can be exposed by a third-party Reverse Proxy. It must be fully defined, such as http[s]://&lt;ip|domain&gt;[:port] . Datasource Cells access to a physical storage, can be seen as a \"mount point\" to either a local filesystem, a S3-compatible storage, etc. Cells indexes all content detected in all datasources. Workspace Virtual access to any file/folder indexed in any datasource. Workspaces are managed by Administrators. Cell Virtual access granted by users to others on the files they are allowed to see. Cells inherit their parent Workspace security rules, and can be seen as \"sandboxed\" user-managed workspaces. Role-Based ACL Permissions inheritance system based on roles and groups Rule-Based ACL Permissions inheritance system based on Security Policies Role Set of permissions that can be applied to any user. Group Group of users, coming with their own set of permissions. Users can only belong to one group and inherit their parent groups permissions. Security Policy Condition-based rules dynamically computed to filter listings and accesses. Matched against the user/query/metadata context. Versioning Policy Admin-defined rules for keeping/removing/pruning files versions in each datasource."},{"location":"admin-guide/quick-start/cells-installation/index/","title":"Index","text":""},{"location":"admin-guide/quick-start/cells-installation/index/#select-your-installation-type","title":"Select your installation type","text":"<p>Get started quickly with Cells static binaries, or pick an image for your cloud environment. </p> Binaries Docker OVF VMWare Amazon AMI Kubernetes"},{"location":"admin-guide/quick-start/cells-installation/index/#advanced-step-by-step-guides","title":"Advanced step-by-step guides","text":"<p>These tutorials provide advanced step-by-step guides for bare installation on your OS/Cloud of choice, from RaspberryPi to Kubernetes Cluster!</p> Raspberry Pi RHEL Distros Debian/Ubuntu Mac OSX Windows"},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/","title":"Install Static Binaries","text":"<p>These instructions will get you started quickly with Cells binaries. Apply commands similary on either <code>cells</code> of <code>cells-enterprise</code> binary.</p> <ol> <li><p>Get your database access information (see Requirements). Login as non-root user.</p></li> <li><p>Download the binary for your server architecture. Make it executable: <code>$ chmod +x ./cells</code></p></li> <li><p>Configure Cells using web or command line installer (see below): <code>$ ./cells configure</code></p></li> <li><p>Start Cells. Web installer restarts automatically, otherwise use: <code>$ ./cells start</code></p></li> <li><p>Open your web browser at https://localhost:8080  (or https://[server ip or domain]:8080).</p></li> </ol>"},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#installation-modes","title":"Installation modes","text":""},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#web-installer","title":"Web Installer","text":"<p>If your machine is local or web accessible, a temporary web server will start on TCP port [:8080], providing a wizard for configuring basic settings.</p> <p></p> <p>After it completes, the server restarts automatically and you are good to go.</p>"},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#command-line-installer","title":"Command line Installer","text":"<p>If you would rather use a shell, you can perform the same steps using command-line (cli) prompts.</p> <p></p>"},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#installation-troubleshooting","title":"Installation Troubleshooting","text":""},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#cannot-access-to-web-interface","title":"Cannot access to web interface","text":"<p>Make sure the Cells binding port is properly open for TCP connections in your firewall or equivalent (e.g. Security Group in Amazon AWS). Default port is 8080 (or another available http-alt port like 8008, 8081, ...).</p> <p>Check the logs to verify which port to open:</p> <pre><code>2021-01-27T11:17:00.248+0100    INFO    Activating privacy features... done.\n2021-01-27T11:17:00.278+0100    INFO    https://0.0.0.0:8080\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#sql-errors","title":"SQL Errors","text":"<p>After start, you see a bunch of errors starting with: <code>ERROR   pydio.grpc.meta   Failed to init DB provider   {\"error\": \"Error 1071: Specified key was too long; max key length is 767 bytes handling data_meta_0.1.sql\"}</code>.</p> <p>You might have an unsupported version of the mysql server: you should use MySQL server version 5.7 or higher or MariaDB version 10.3 or higher.</p>"},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#glibc-linux","title":"GLIBC [Linux]","text":"<p>You see this error: <code>/lib/x86_64-linux-gnu/libc.so.6: version 'GLIBC_2.14' not found</code></p> <p>The version of libc6 is outdated. Run these commands to upgrade it.</p> <pre><code>sudo apt-get update\nsudo apt-get install libc6\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/install-static-binaries/#selinux-centos","title":"SELinux [CentOS]","text":"<p>The main application page in your browser displays the following error: <code>Access denied.</code></p> <p>Ensure you have modified SELinux to be disabled or running in permissive mode. To temporary disable SELinux: <code>sudo setenforce 0</code>.</p> <p>You can also permanently disable SELinux in <code>/etc/selinux/config</code>.</p>"},{"location":"admin-guide/quick-start/cells-installation/docker/","title":"Docker","text":"<p>The Pydio Cells image is a container designed to be used in a Docker environment. It only contains what is strictly necessary to run your server.</p>"},{"location":"admin-guide/quick-start/cells-installation/docker/#run-as-stand-alone-container","title":"Run as stand-alone container","text":"<p>Pydio Cells needs a MySQL/MariaDB Database with a privileged user.</p> <p>Launch a test instance with:</p> <pre><code>docker run -d --network=host pydio/cells\n</code></pre> <p>Enter your database credentials to finalise the configuration at https://localhost:8080 and you are good to go.</p> <p>If your server has a public IP address and no restriction on the chosen port (firewall...), your instance is also directly exposed at <code>https://&lt;YOUR-SERVER-IP-ADDRESS&gt;:8080</code>.</p> <p>Before you go live, you probably want to configure persistent data in a docker volume. Assuming you also have a registered domain name (FQDN) for your server, you could go with:</p> <pre><code>FQDN=&lt;Put Your FQDN here&gt;\ndocker run -d  -v /home/user/cells_dir:/var/cells -e CELLS_SITE_BIND=:443 -e CELLS_SITE_EXTERNAL=https://$FQDN --network=host pydio/cells\n</code></pre> <p>Where:</p> <ul> <li><code>-d</code>: run in the background</li> <li><code>-v /home/user/cells_dir:/var/cells</code>: mount a local folder as Cells working directory</li> <li><code>-e CELLS_SITE_BIND=:443</code>: use standard reserved port for HTTPS (must be unused, typically by a webserver)</li> <li><code>-e CELLS_SITE_EXTERNAL=https://$FQDN</code>: (optional) explicitely declare your domain</li> <li><code>--network=host</code>: directly use the host network, to easily connect to the DB</li> </ul> <p>WARNING: CELLS_SITE_BIND, CELLS_SITE_EXTERNAL may override the site configuration in pydio.json. If you have custom site configurations, don't forget to remove these Env from docker file.</p>"},{"location":"admin-guide/quick-start/cells-installation/docker/#run-with-docker-compose","title":"Run with Docker Compose","text":"<p>Below is a vanilla configuration to run Pydio Cells with <code>docker compose</code>:</p> <pre><code>version: '3.7'\nservices:\n\n  cells:\n    image: pydio/cells:latest\n    restart: unless-stopped\n    ports: [\"8080:8080\"]\n    volumes:\n      - cellsdir:/var/cells\n      - data:/var/cells/data\n\n  mysql:\n    image: mysql:8\n    restart: unless-stopped\n    environment:\n      MYSQL_ROOT_PASSWORD: P@ssw0rd\n      MYSQL_DATABASE: cells\n      MYSQL_USER: pydio\n      MYSQL_PASSWORD: P@ssw0rd\n    command: [mysqld, --character-set-server=utf8mb4, --collation-server=utf8mb4_unicode_ci]\n    volumes:\n      - mysqldir:/var/lib/mysql\n\nvolumes:\n    data: {}\n    cellsdir: {}\n    mysqldir: {}\n</code></pre> <p>Note: with this configuration file, in the web installer, use:</p> <ul> <li>Host Name: mysql</li> <li>DB User: pydio</li> <li>DB Password: P@ssw0rd</li> </ul> <p>and let the other parameters unchanged to configure the DB connection. </p>"},{"location":"admin-guide/quick-start/cells-installation/docker/#go-further","title":"Go further","text":""},{"location":"admin-guide/quick-start/cells-installation/docker/#upgrade-cells","title":"Upgrade Cells","text":"<p>Use <code>docker pull</code> command to get latest version of Cells then start a new container from updated image.</p> <p>WARNING: You may upgrade cells from admin console. However the updater replaces the binary in the container. There is a risk of falling back to earlier version if the container is dropped.</p>"},{"location":"admin-guide/quick-start/cells-installation/docker/#commands","title":"Commands","text":"<p>The default commands when <code>running</code> the image are:</p> <ul> <li><code>cells configure</code> if no installation is found</li> <li><code>cells start</code> otherwise</li> </ul> <p>If you specify a command, it willd be executed instead, e.g:</p> <pre><code>docker run pydio/cells cells version\n# or to log in a running container with id 5fe... \ndocker exec 5fe /bin/sh\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/docker/#data-layout","title":"Data layout","text":"<p>Below is a list of important files and data present in the volume:</p> <ul> <li><code>/var/cells</code>: main working dir</li> <li><code>/var/cells/pydio.json</code>: main configuration file</li> <li><code>/var/cells/data</code>: data</li> <li><code>/var/cells/logs</code>: logs</li> <li><code>/var/cells/certs</code>: certificate management</li> <li><code>/var/cells/services</code>: services information</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/docker/#environment-variables","title":"Environment variables","text":"<p>As previously seen, when launching the image, the <code>start</code> (or <code>configure</code> on 1st launch) command is called: it means that all flags are settable with their associated ENV var, using upper case and CELLS_ prefix.</p> <p>Below is an extract of relevant ENV variables that you can pass to the container.</p> Name Value Default CELLS_SITE_BIND host:port 0.0.0.0:8080 CELLS_SITE_EXTERNAL http(s)://url-to-access (none) CELLS_SITE_NO_TLS 1 = noTLS, 0 = TLS 0 CELLS_WORKING_DIR path in the container /var/cells CELLS_LOG a valid log level info"},{"location":"admin-guide/quick-start/cells-installation/docker/#more-examples","title":"More examples","text":"<p>We gather some relevant sample configuration in our main code base. Find the example that suits you and fine tune your setup.</p>"},{"location":"admin-guide/quick-start/cells-installation/docker/#cells-sync","title":"Cells Sync","text":"<p>The Cells Sync Desktop Application might require an additional port, for example if you run behind a reverse proxy that performs TLS termination. In such case:</p> <ul> <li>First read this, Setup Cells Server for Cells Sync</li> <li>Make sure to start a container with this env set <code>CELLS_GRPC_EXTERNAL</code></li> <li>Expose the port that you previously set with <code>CELLS_GRPC_EXTERNAL</code></li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/docker/#example","title":"Example","text":"<p>Assuming that port 33060 is the port chosen for gRPC, the command should have those two additional parameters,</p> <ul> <li><code>-e CELLS_GRPC_EXTERNAL=33060</code> (sets the env variable)</li> <li><code>-p 33060:33060</code> (exposes the port)</li> </ul> <p>The entire command should look like this:</p> <pre><code>docker run -d -e CELLS_SITE_EXTERNAL=192.168.0.172:8080 -e CELLS_SITE_BIND=192.168.0.172:8080 -e CELLS_GRPC_EXTERNAL=33060 -p 33060:33060 -p 8080:8080 pydio/cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/","title":"Open Virtual Format","text":"<p>The Cells Enterprise Appliance package follows the OVF standard.</p> <p>It is an up-to-date, ready to use out of the box, Rocky Linux 8 image preconfigured with MariaDB and Cells Enterprise distribution.  </p> <p>Download the latest OVF image. An md5 file is also available on the same location for integrity verification.</p>"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#minimal-vm-requirements","title":"Minimal VM Requirements","text":"<ul> <li>RAM : 4G</li> <li>CPU : 2 vCores</li> <li>CPU support: VT-x/AMD-V</li> <li>NICs: bridged adaptor</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#setup-in-oracle-virtualbox","title":"Setup in Oracle VirtualBox","text":"<p>We detail here the steps to launch the Pydio Cells appliance with Oracle VirtualBox. The process is very similar to other hypervisors.</p> <ul> <li>Import the image into VirtualBox</li> <li>Configure the virtual network interface:</li> <li>Go to <code>Your Image &gt;&gt; Settings &gt;&gt; Network</code>, adapter 1 is already bound to a bridged adapter</li> <li>Choose the correct name for the adapter you want to use</li> <li>Click <code>OK</code>.</li> <li>Start the virtual machine</li> </ul> <p>Warning: even if the correct Name is already shown, click on it and validate, or you won't be able to start the VM (it is a known issue with the VirtualBox UI that is still there in 6.0.14).</p>"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#configure","title":"Configure","text":"<p>We display the URL address of the installer when you start your VM. Check the console in the VirtualBox GUI.</p> <p>A self-signed certificate is used by default, you have to explicitly accept it in your browser.</p> <p>Follow the steps below:</p> <ul> <li>Accept EULA</li> <li>Enter your license key</li> <li>Accept default DB configuration (except if you do not want to use the embedded DB)</li> <li>Choose a password for the admin user</li> <li>Launch installation. It can take up to a minute to reach the end.</li> </ul> <p>The installer service is disabled once the configuration terminates successfully.</p> <p>At this step, you can login with the credentials you have defined and check everything is up and running.</p>"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#configuration-details","title":"Configuration Details","text":""},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#predefined-user-accounts","title":"Predefined user accounts","text":"<p>If you need to log into the system, the <code>ssh</code> service is enabled on port <code>22</code> and following users have been created:</p> System users Password Comments root cells - sysadmin cells Has sudo rights without password pydio cells Limited user that runs the app <p>To connect to the default cells database in MariaDB, you have these users:</p> MySQL users password root cells pydio@localhost cells"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#file-layout","title":"File Layout","text":"<ul> <li><code>/var/cells</code>: Pydio Cells working directory. It contains business and technical data.</li> <li><code>/opt/pydio</code>: binaries and additional libraries required to run Cells.</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#systemd-service","title":"Systemd service","text":"<p>cells service is running under pydio user. The service is enabled: it will automatically restart upon reboot.</p> <p>Useful <code>systemd</code> commands, as <code>sysadmin</code> user:</p> <pre><code># Manually restart the service\nsudo systemctl restart cells\n# See Pydio Cells logs\nsudo journalctl -f -u cells -S -1h\n# start/stop the database (MariaDB)\nsudo systemctl start mariadb\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/open-virtual-format/#firewalld-service","title":"Firewalld service","text":"<p>Firewalld service is active and opens three ports:</p> <ul> <li>80: cells-enterprise</li> <li>443: cells-enterprise</li> <li>22: ssh</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/vmware/","title":"VMWare","text":"<p>The Pydio Cells image for VMWare is based on Rocky Linux 9. It has been enriched with necessary third party software and pre-configured to provide an easy to run instance of the Cells server out of the box. It is known to run in VSphere ecosystems and in standalone ESXi hosts.</p> <p>Download the latest VMWare image. An MD5 file is also available at the same location for integrity verification.</p>"},{"location":"admin-guide/quick-start/cells-installation/vmware/#minimal-vm-requirements","title":"Minimal VM Requirements","text":"<ul> <li>RAM : 4G</li> <li>CPU : 2 vCores</li> <li>CPU support: VT-x/AMD-V</li> <li>NICs: bridged adaptor</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/vmware/#setup-a-vm","title":"Setup a VM","text":"<p>In this guide, we use the simple standalone ESXi web interface to launch a new virtual machine:</p> <ul> <li>Log in your web interface</li> <li>Go to the <code>Virtual Machines</code> section</li> <li>Click on Create/Register VM</li> </ul> <p>A creation wizard pops up.</p> <ul> <li>In <code>Select creation type</code>, choose <code>Deploy a virtual machine from an OVF or OVA file</code></li> <li>In second page, choose a name and upload both the <code>*.ovf</code> and the  <code>*-disk1.vmdk</code> files</li> <li>Choose correct network and disk provisioning</li> <li>Click on <code>Finish</code> and wait until creation is complete</li> <li>Start the virtual machine</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/vmware/#configure","title":"Configure","text":"<p>We display the URL address of the installer when you start your VM. Check the console in the VirtualBox GUI.</p> <p>A self-signed certificate is used by default, you have to explicitelly accept it in your browser.</p> <p>Follow the steps of the wizard to finalize your setup. All parameters are set by default except the main administrator password. When it's done, the installer saves everything, starts the <code>cells</code> service and exits. It can take up to a minute.</p> <p>At this step, you can log in the app with the credentials you have just defined and check everything is up and running.</p>"},{"location":"admin-guide/quick-start/cells-installation/vmware/#configuration-details","title":"Configuration Details","text":""},{"location":"admin-guide/quick-start/cells-installation/vmware/#predefined-user-accounts","title":"Predefined user accounts","text":"<p>If you need to log into the system, the <code>ssh</code> service is enabled on port <code>22</code> and following users have been created:</p> System users Password Comments root cells - sysadmin cells Has sudo rights without password pydio cells Limited user that runs the app <p>To connect to the default cells database in MariaDB, you have these users:</p> MySQL users password root cells pydio@localhost cells"},{"location":"admin-guide/quick-start/cells-installation/vmware/#file-layout","title":"File Layout","text":"<ul> <li><code>/var/cells</code>: Pydio Cells working directory. It contains business and technical data.</li> <li><code>/opt/pydio</code>: binaries and additional libraries required to run Cells.</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/vmware/#systemd-service","title":"Systemd service","text":"<p>cells service is running under pydio user. The service is enabled: it will automatically restart upon reboot.</p> <p>Useful <code>systemd</code> commands, as <code>sysadmin</code> user:</p> <pre><code># Manually restart the service\nsudo systemctl restart cells\n# See Pydio Cells logs\nsudo journalctl -f -u cells -S -1h\n# start/stop the database (MariaDB)\nsudo systemctl start mariadb\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/vmware/#firewalld-service","title":"Firewalld service","text":"<p>We recommand to use the provided appliance in your private network, behind enterprise grade firewall and reverse proxy. Thus, the firewall service in Cells appliance is disabled and stopped by default.</p>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/","title":"Amazon AMI","text":"<p>We expose below the specificities of the AMI custom setup. For further details, please refer to the other sections of this administration guide.</p>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/#cells-ent-ami-on-aws-marketplace","title":"Cells Ent AMI on AWS Marketplace","text":"<p>You can find a ready-to-use Amazon Machine Image (AMI) for Cells Enterprise Distribution on the Amazon Web Services Marketplace.</p> <p>This appliance is based on Amazon Linux 2023 (AL2023) OS and has been enriched with necessary third parties and configuration to provide an easy to run instance of the Cells server out of the box.</p>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/#quick-start","title":"Quick Start","text":"<p>If you want to give a first quick glance at Cells with no hassle, just launch the AMI on a <code>t2-medium</code> EC2 instance, with no user data and no extra mounted volume.</p> <p>Define some security groups so that the instance:</p> <ul> <li>Can reach the internet (to download updates)</li> <li>Can be reached on port 443</li> <li>Can be reached via SSH</li> </ul> <p>Note: your instance must at least have one network interface that is on a private network, with an IP address that is in a well-known private range (e.g 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 for IPv4). It is the case by default on most regions.</p> <p>You will have a ready to install instance at <code>https://&lt;ec2-public-IP&gt;</code> after a couple of minutes.</p> <p>You can quickly finalise the installation by:</p> <ul> <li>Accepting EULA</li> <li>Pasting your licence key</li> <li>Use embedded local db that is already configured</li> <li>Define an admin and leave advanced parameters untouched.</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/#users","title":"Users","text":"<p>The Pydio Cells AMI comes with 3 default users:</p> <ul> <li>ec2-user: the default Amazon user that is to be used to connect using the key pair you define when launching a new instance. She has sudo rights without password for all commands.</li> <li>pydio: the user that launches the Cells server. She has no sudo rights and no pre-defined password. You should use this user when you locally use the <code>cells</code> command line interface.</li> <li>root: the root user. You normally do not have to log as this user.</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/#services","title":"Services","text":"<ul> <li>install-cells.service: enabled when you instantiate a new Cells Enterprise AMI, this service launches the installation process. After successful configuration of your instance, it starts and enables the Cells service. It then disables itself before exiting.</li> <li>cells.service: runs the cells server as a systemd daemon. The <code>install-cells.service</code> enables and starts this service when finalising the install.</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/#tree-structure","title":"Tree structure","text":"<p>They are 2 main paths that are used by Cells:</p> <ul> <li><code>/opt/pydio</code>:</li> <li><code>/opt/pydio/bin</code>: Pydio Cells binary</li> <li><code>/opt/pydio/conf</code>: Installation configuration files</li> <li><code>/var/cells</code>: The application working directory with: runtime configuration, logs, technical persistence and, by default, your data.  </li> </ul> <p>If you provide an additional EBS volume when you launch the AMI (see installation instructions), it is automatically mounted at this location before install.</p>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/#database","title":"Database","text":"<p>A MySQL DB is the only hard requirement to run a Pydio Cells instance. As a convenience, the Pydio Cells AMI embbed an installed and configured MariaDB 10.5 server that is provided by the Amazon Linux repositories.</p> <p>There are 2 users <code>root</code> and <code>pydio</code>, all other configurations follow the <code>mysql_secure_installation</code> best practices. There is one default <code>cells</code> DB, on which the <code>pydio</code> user has all privileges.</p> <p>You might use this database during your test phase. Before going live, it is recommanded to either:</p> <ul> <li>Rather use an RDS instance</li> <li>Change the passwords for both users</li> </ul> <p>Hint: default mysql password for pydio user is <code>cells</code>, root user has no password</p>"},{"location":"admin-guide/quick-start/cells-installation/amazon-ami/#network-configuration","title":"Network configuration","text":"<p>By default, the application is installed using the \"self-signed certificate\" mode.</p> <p>It is recommended to run the Cells server behind a reverse proxy that exposes a valid TLS certificate when in production.</p> <p>If you do not provide a valid registered FQDN via \"user data\" upon launch, it is then configured using the Amazon automatically provided public IP address and the frontend is publicly available at <code>https://&lt;your-instance-public-ip-address&gt;</code>.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/","title":"Advanced setups","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#advanced-step-by-step-guides","title":"Advanced step-by-step guides","text":"<p>These tutorials provide advanced step-by-step guides for bare installation on your OS/Cloud of choice, from RaspberryPi to Kubernetes Cluster!</p> <p>This guide explains how to install and configure Cells on a Raspberry Pi system.</p> <p>Use case</p> <p>Deploy a self-contained Pydio Cells instance on your local home network with a simple Raspberry Pi.</p> <p>Requirements</p> <ul> <li>Although we tested and could start Cells on a Rasberry Pi 3B with only 1GB of RAM, we suggest to use a version 4B with at least 4 GB RAM.</li> <li>Storage: 32 SD card</li> <li>Operating System:</li> <li>Raspbian (Bullseye, Buster or Stretch), the official Raspberry Pi desktop OS (which a Raspbian repackaged the Raspberry Pi team) also works out of the box.  </li> <li>An admin user with sudo rights that can connect to the server via SSH</li> <li>Networking: TODO.</li> </ul> <p>This guide explains how to configure Cells on a Red-Hat-Enterprise-Linux-like system. It contains strongly opinionated choices and best practices. It guides you through the steps required for a production-ready and reasonnably secured server. For a simple test on a RHEL-like server, you can skim through our quick start page instead.</p> <p>Usecase</p> <p>Deploy a self-contained Pydio Cells instance on a web-facing RHEL-like Linux server, exposed at <code>https://&lt;your-fqdn&gt;</code> using a Let's Encrypt certificate.</p> <p>Requirements</p> <ul> <li>CPU/Memory: 4GB RAM, 2 CPU</li> <li>Storage: 100GB SSD hard drive</li> <li>Operating System:</li> <li>RHEL 7, 8 or 9, Rocky Linux 8 or 9, CentOS and Scientific Linux 7.  </li> <li>An admin user with sudo rights that can connect to the server via SSH</li> <li>Note: The present guide uses a Rocky Linux 9 server. You might have to adapt some commands if you use a different version or flavour.</li> <li>Networking:</li> <li>One Network Interface Controller connected to the internet</li> <li>A registered domain that points toward the public IP of your server: if you already know your IP address, it is a good idea to already add a <code>A Record</code> in your provider DNS so that the record has been already propagated when we need it.</li> </ul> <p>This guide explains how to install and configure Cells on an Debian-like system. It contains strongly opinionated choices and best practices. It explains the steps required for a production-ready and reasonnably secured server. For a simple test, you should rather visit our quick start page.</p> <p>Use case</p> <p>Deploy a self-contained Pydio Cells instance on a web-facing Debian 12 server, exposed at <code>https://&lt;your-fqdn&gt;</code> using a Let's Encrypt certificate.</p> <p>Requirements</p> <ul> <li>CPU/Memory: 4GB RAM, 2 CPU</li> <li>Storage: 100GB SSD hard drive</li> <li>Operating System:</li> <li>Debian (10, 11, 12), Ubuntu LTS (18, 20, 22)</li> <li>An admin user with sudo rights that can connect to the server via SSH</li> <li>Note: The present guide uses a Debian 11 (Bullseye) server. You might have to adapt some commands if you use a different version or flavour.</li> <li>Networking:</li> <li>One Network Interface Controller connected to the internet</li> <li>A registered domain that points toward the public IP of your server: if you already know your IP address, it is a good idea to already add a <code>A Record</code> in your provider DNS so that the record has been already propagated when we need it.</li> </ul> <p>This guide explains how to install and configure Pydio Cells on macOS.</p> <p>Cells comes as a self-contained binary that can be directly run. The only hard requirement is a recent MySQL server. You can use either MySQL (5.7 or 8) or MariaDB 10.3+, both are available in Homebrew.</p> <p><code>brew install mysql</code> or <code>brew install mariadb</code></p> <p>This guide shows how to install and run Pydio Cells on Windows 10.</p> <p>The binary also work on other version of Windows Desktop (8, 11) and of the Windows Server. Yet, please note that due to the majority of UNIX-like boxes in the enterprise server world and also the lack of feedback from the community, the Windows version of our application might still have unknown glitches and is not officially suported.</p> <p>Please feel free to join our community to improve this. </p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#installation","title":"Installation","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#dedicated-user-and-file-system-layout","title":"Dedicated user and file system layout","text":"<p>We recommend to run Pydio Cells with a dedicated <code>pydio</code> user with no sudo permission:</p> <pre><code># Create pydio user with a home directory\nsudo useradd -m -s /bin/bash pydio\n\n# Create necessary folders\nsudo mkdir -p /opt/pydio/bin /var/cells/certs\nsudo chown -R pydio: /opt/pydio /var/cells\n\n# Add system-wide ENV var\nsudo tee -a /etc/profile.d/cells-env.sh &lt;&lt; EOF\nexport CELLS_WORKING_DIR=/var/cells\nEOF\nsudo chmod 0755 /etc/profile.d/cells-env.sh\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification","title":"Verification","text":"<p>Login as user <code>pydio</code> and make sure that the environment variables are correctly set:</p> <pre><code>user@raspberrypi:~$ sudo su - pydio \npydio@raspberrypi:~$ echo $CELLS_WORKING_DIR\n/var/cells\npydio@raspberrypi:~$ exit\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#database","title":"Database","text":"<p>We use the default mariadb-server package shipped with Bullseye, it installs the 10.5 version with no hassle:</p> <pre><code>sudo apt install mariadb-server\n# You should run the script to secure your install\nsudo mysql_secure_installation\n\n# Open MySQL CLI to create your database and a dedicated user\nsudo mysql -u root -p\n</code></pre> <p>Start a MySQL prompt and create the database and the dedicated <code>pydio</code> user.</p> <pre><code>CREATE DATABASE cells;\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;PUT YOUR PASSWORD HERE&gt;';\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\nexit\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_1","title":"Verification","text":"<p>Check the service is running and that the user <code>pydio</code> is correctly created:</p> <pre><code>sudo systemctl status mariadb\nmysql -u pydio -p\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#retrieve-binary","title":"Retrieve binary","text":"<p>Note: we only started shipping the necessary ARM build for Cells at v4.</p> <pre><code># As pydio user\nsudo su - pydio \n\n# Download correct binary\ndistribId=cells \n# or for Cells Enterprise\n# distribId=cells-enterprise \nwget -O /opt/pydio/bin/cells https://download.pydio.com/latest/${distribId}/release/{latest}/linux-arm/${distribId}\n\n# Make it executable\nchmod a+x /opt/pydio/bin/cells\nexit\n\n# As sysadmin user \n# Add permissions to bind to default HTTP ports\nsudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n\n# Declare the cells commands system wide\nsudo ln -s /opt/pydio/bin/cells /usr/local/bin/cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_2","title":"Verification","text":"<p>Call the command <code>version</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells version\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#configuration","title":"Configuration","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#configure-the-server","title":"Configure the server","text":"<p>Call the command <code>configure</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells configure\n</code></pre> <p>If you choose <code>Browser install</code> at the first prompt, you can access the configuration wizard at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code> after accepting the self-signed certificate. (Ensure the port <code>8080</code> is free and not blocked by a firewall).</p> <p>You can alternatively finalise the configuration from the command line by answering a few questions.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_3","title":"Verification","text":"<p>If you used the browser install, you can login in the web browser as user <code>admin</code>.</p> <p>If you have done the CLI install, you first need to start the server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect and login at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code></p> <p>Note: At this stage, we start the server in foreground mode. In such case, it is important that you always stop the server using the <code>CTRL + C</code> shortcut before calling the <code>start</code> command again.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#finalisation","title":"Finalisation","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#run-your-server-as-a-service-with-systemd","title":"Run your server as a service with systemd","text":"<p>Create a configuration file <code>sudo vi /etc/systemd/system/cells.service</code> with the following:</p> <pre><code>[Unit]\nDescription=Pydio Cells\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nPermissionsStartOnly=true\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\nWorkingDirectory=/home/pydio\n\n# Add environment variables\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Reload systemd daemon, enable and start cells:</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable --now cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_4","title":"Verification","text":"<pre><code># you can check the system logs to insure everything seems OK\njournalctl -fu cells -S -1h\n</code></pre> <p>You are now good to go. Happy file sharing!</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#troubleshooting","title":"Troubleshooting","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#main-tips","title":"Main tips","text":"<p>With cells as a service, you can access the logs in different ways:</p> <pre><code># Pydio file logs\ntail -200f /var/cells/logs/pydio.log\n# Some of the microservices have their own log files, check:\nls -lsah /var/cells/logs/\n\n# Check systemd files\njournalctl -fu cells -S -1h\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#installation_1","title":"Installation","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#dedicated-user-and-file-system-layout_1","title":"Dedicated user and file system layout","text":"<p>We recommend to run Pydio Cells with a dedicated <code>pydio</code> user with no sudo permission.</p> <p>As admin user on your server:</p> <pre><code># Create pydio user with a home directory\nsudo useradd -m -s /bin/bash pydio\n\n# Create necessary folders\nsudo mkdir -p /opt/pydio/bin /var/cells/certs\nsudo chown -R pydio:pydio /opt/pydio /var/cells\n\n# Add system-wide ENV var\nsudo tee -a /etc/profile.d/cells-env.sh &lt;&lt; EOF\nexport CELLS_WORKING_DIR=/var/cells\nEOF\nsudo chmod 0755 /etc/profile.d/cells-env.sh\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_5","title":"Verification","text":"<p>Login as user <code>pydio</code> and make sure that the environment variables are correctly set:</p> <pre><code>sysadmin@server:~$ sudo su - pydio \npydio@server:~$ echo $CELLS_WORKING_DIR\n/var/cells\npydio@server:~$ exit\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#database_1","title":"Database","text":"<p>On Rocky Linux 9.2, default MariaDB package is 10.5 that works well for Cells. So simply do:</p> <pre><code>sudo yum install mariadb-server\nsudo systemctl enable --now mariadb\n\n# Run the script to secure your install\nsudo mysql_secure_installation\n\n# Open MySQL CLI to create your database and a dedicated user\nsudo mysql -u root -p\n</code></pre> <p>Start a MySQL prompt and create the database and the dedicated <code>pydio</code> user.</p> <pre><code>CREATE DATABASE cells;\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;PUT YOUR OWN PASSWORD HERE&gt;';\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\nexit\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_6","title":"Verification","text":"<p>Check the service is running and that the user <code>pydio</code> is correctly created:</p> <pre><code>sudo systemctl status mariadb\nmysql -u pydio -p\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#retrieve-binary_1","title":"Retrieve binary","text":"<pre><code># As pydio user\nsudo su - pydio \n\n# Download correct binary\ndistribId=cells \n# or for Cells Enterprise\n# distribId=cells-enterprise \nwget -O /opt/pydio/bin/cells -v https://download.pydio.com/latest/${distribId}/release/{latest}/linux-amd64/${distribId}\n\n# Make it executable\nchmod a+x /opt/pydio/bin/cells\nexit\n\n# As sysadmin user \n# Add permissions to bind to default HTTP ports\nsudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n\n# Declare the cells commands system wide\nsudo ln -s /opt/pydio/bin/cells /usr/local/bin/cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_7","title":"Verification","text":"<p>Call the command <code>version</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells version\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#configuration_1","title":"Configuration","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#configure-the-server_1","title":"Configure the server","text":"<p>Call the command <code>configure</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells configure\n</code></pre> <p>If you choose <code>Browser install</code> at the first prompt, you can access the configuration wizard at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code> after accepting the self-signed certificate. (Ensure the port <code>8080</code> is free and not blocked by a firewall).</p> <p>You can alternatively finalise the configuration from the command line by answering a few questions.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_8","title":"Verification","text":"<p>If you used the browser install, you can login in the web browser as user <code>admin</code></p> <p>First insure your firewall does not block the port 8080:</p> <pre><code>sudo firewall-cmd --add-port=8080/tcp\n</code></pre> <p>If you have done the CLI install, you first need to start the server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect and login at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code></p> <p>Note: At this stage, we start the server in foreground mode. It is important that you always stop the server using the <code>CTRL + C</code> shortcut before calling the <code>start</code> command again.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#declare-site-and-generate-lets-encrypt-certificate","title":"Declare site and generate Let's Encrypt Certificate","text":"<p>At this point, we assume that:</p> <ul> <li>your <code>A record</code> has been propagated: verify with <code>ping &lt;YOUR_FQDN&gt;</code> from your local workstation</li> <li>both port 80 and 443 are free and not blocked by any firewall <code>sudo netstat -tulpn</code></li> </ul> <p>Create a site:</p> <pre><code>sudo su - pydio \ncells configure sites\n</code></pre> <ul> <li>Choose \"Create a new site\"</li> <li>Choose <code>443</code> as the port to bind to</li> <li>Enter your FQDN as the address to bind to</li> <li>Choose \"Automagically generate certificate with Let's Encrypt\"</li> <li>Enter your Email, Accept Let's Encrypt EULA</li> <li>In a first pass, if you have a complicated network setup, you might want to choose to use the staging entrypoint for Let's Encrypt: it has much more generous limitations and let you try/error while fixing glitches in your network setup without getting black-listed. </li> <li>Redirect default <code>HTTP</code> port towards <code>HTTPS</code></li> <li>Double check and save.</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_9","title":"Verification","text":"<pre><code># Restart your server\nsudo su - pydio \ncells start\n</code></pre> <p>Connect to your web site at <code>https://&lt;YOUR_FQDN&gt;</code>. A valid certificate is now used.</p> <p>Stop your server once again before performing the finalisation steps.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#finalisation_1","title":"Finalisation","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#run-your-server-as-a-service-with-systemd_1","title":"Run your server as a service with systemd","text":"<p>Create a configuration file <code>sudo vi /etc/systemd/system/cells.service</code> with the following:</p> <pre><code>[Unit]\nDescription=Pydio Cells\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nPermissionsStartOnly=true\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\nWorkingDirectory=/home/pydio\n\n# Add environment variables\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Reload systemd daemon, enable and start cells:</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable --now cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_10","title":"Verification","text":"<pre><code># you can check the system logs to insure everything seems OK\nsudo journalctl -fu cells -S -1h\n</code></pre> <p>Connect to your certified web site at <code>https://&lt;YOUR_FQDN&gt;</code>.</p> <p>You are now good to go. Happy file sharing!</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#troubleshooting_1","title":"Troubleshooting","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#main-tips_1","title":"Main tips","text":"<p>With Cells running as a service, you can access the logs in different ways:</p> <pre><code># Pydio file logs\ntail -200f /var/cells/logs/pydio.log\n# Some of the microservices have their own log files, check:\nls -lsah /var/cells/logs/\n\n# Check systemd files\njournalctl -fu cells -S -1h\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#time-out-while-trying-to-reach-the-web-ui","title":"Time-out while trying to reach the web UI","text":"<p>If the server is started and you get timeout errors while trying to connect to the web UI, it is generally a sign that the connection to the declared port is blocked by a firewall. Check both on your OS and on the admin console of your machine provider. </p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#selinux-is-enforced","title":"SELinux is enforced","text":"<p>If, after a successful installation and when you try to navigate to the main application page with your browser, you land on a blank page with following message:</p> <p>Access denied.</p> <p>ensure you have modified SELinux to be in permissive mode.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#non-standard-db-install","title":"Non standard DB install","text":"<p>If the default MariaDB package shipped with your OS does not meet your needs, you can install a more recent version from official MariaDB repository. Typically to get version 10.4 on Centos7:</p> <pre><code># Add MariaDB 10.4 CentOS repository list\n# See http://downloads.mariadb.org/mariadb/repositories/\nsudo mkdir -p /etc/yum.repos.d\nsudo tee /etc/yum.repos.d/MariaDB.repo &lt;&lt; EOF\n[mariadb]\nname = MariaDB\nbaseurl = http://yum.mariadb.org/10.4/centos7-amd64\ngpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\ngpgcheck=1\nEOF\n\n# Install and start the server\nsudo yum install MariaDB-server\nsudo systemctl enable --now mariadb\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#installation_2","title":"Installation","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#dedicated-user-and-file-system-layout_2","title":"Dedicated user and file system layout","text":"<p>We recommend to run Pydio Cells with a dedicated <code>pydio</code> user with no sudo permission.</p> <p>As admin user on your server:</p> <pre><code># Create pydio user with a home directory\nsudo useradd -m -s /bin/bash pydio\n\n# Create necessary folders\nsudo mkdir -p /opt/pydio/bin /var/cells\nsudo chown -R pydio: /opt/pydio /var/cells\n\n# Add system-wide ENV var\nsudo tee -a /etc/profile.d/cells-env.sh &lt;&lt; EOF\nexport CELLS_WORKING_DIR=/var/cells\nEOF\nsudo chmod 0755 /etc/profile.d/cells-env.sh\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_11","title":"Verification","text":"<p>Login as user <code>pydio</code> and make sure that the environment variables are correctly set:</p> <pre><code>sysadmin@server:~$ sudo su - pydio \npydio@server:~$ echo $CELLS_WORKING_DIR\n/var/cells\npydio@server:~$ exit\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#database_2","title":"Database","text":"<p>We use the default MariaDB package shipped with Debian Bullseye:</p> <pre><code># Install the server from the default repository\nsudo apt install mariadb-server\n# Run the script to secure your install\nsudo mysql_secure_installation\n\n# Open MySQL CLI to create your database and a dedicated user\nmysql -u root -p\n</code></pre> <p>Start a MySQL prompt and create the database and the dedicated <code>pydio</code> user.</p> <pre><code>CREATE DATABASE cells;\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;PUT YOUR PASSWORD HERE&gt;';\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre> <p>Note: default limits on MariaDB are quite low after install. If your target instance is not small, you probably should adapt them for Cells to run smoothly:</p> <pre><code>SET GLOBAL max_connections = 1000;\nSHOW VARIABLES LIKE \"max_connections\";\nSET GLOBAL max_prepared_stmt_count = 131056;\nSHOW VARIABLES LIKE \"max_prepared_stmt_count\";\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_12","title":"Verification","text":"<p>Check the service is running and that the user <code>pydio</code> is correctly created:</p> <pre><code>sudo systemctl status mariadb\nmysql -u pydio -p\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#retrieve-binary_2","title":"Retrieve binary","text":"<pre><code># As pydio user\nsudo su - pydio \n\n# Download correct binary\ndistribId=cells \n# or for Cells Enterprise\n# distribId=cells-enterprise \nwget -O /opt/pydio/bin/cells https://download.pydio.com/latest/${distribId}/release/{latest}/linux-amd64/${distribId}\n\n# Make it executable\nchmod a+x /opt/pydio/bin/cells\nexit\n\n# As sysadmin user \n# Add permissions to bind to default HTTP ports\nsudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n\n# Declare the cells commands system wide\nsudo ln -s /opt/pydio/bin/cells /usr/local/bin/cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_13","title":"Verification","text":"<p>Call the command <code>version</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells version\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#configuration_2","title":"Configuration","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#configure-the-server_2","title":"Configure the server","text":"<p>Call the command <code>configure</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells configure\n</code></pre> <p>If you choose <code>Browser install</code> at the first prompt, you can access the configuration wizard at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code> after accepting the self-signed certificate. (Ensure the port <code>8080</code> is free and not blocked by a firewall).</p> <p>You can alternatively finalise the configuration from the command line by answering a few questions.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_14","title":"Verification","text":"<p>If you used the browser install, you can login in the web browser as user <code>admin</code>.</p> <p>If you have done the CLI install, you first need to start the server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect and login at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code></p> <p>Note: At this stage, we start the server in foreground mode. In such case, it is important that you always stop the server using the <code>CTRL + C</code> shortcut before calling the <code>start</code> command again.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#declare-site-and-generate-lets-encrypt-certificate_1","title":"Declare site and generate Let's Encrypt Certificate","text":"<p>At this point, we assume that:</p> <ul> <li>your <code>A record</code> has been propagated: verify with <code>ping &lt;YOUR_FQDN&gt;</code> from your local workstation</li> <li>both port 80 and 443 are free and not blocked by any firewall <code>sudo netstat -tulpn</code></li> </ul> <p>Create a site:</p> <pre><code>sudo su - pydio \ncells configure sites\n</code></pre> <ul> <li>Choose \"Create a new site\"</li> <li>Choose <code>443</code> as the port to bind to</li> <li>Enter your FQDN as the address to bind to</li> <li>Choose \"Automagically generate certificate with Let's Encrypt\"</li> <li>Enter your Email, Accept Let's Encrypt EULA</li> <li>Redirect default <code>HTTP</code> port towards <code>HTTPS</code> </li> <li>Double check and save.</li> </ul> <p>Note: if you are not 100% sure of your network setup, we suggest that you first use the staging entry point for Let's Encrypt. You can then avoid being black-listed while fine-tuning and fixing any network issue you might still have at this point.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_15","title":"Verification","text":"<p>Restart your server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect to your web site at <code>https://&lt;YOUR_FQDN&gt;</code>. A valid certificate is now used.</p> <p>Stop your server once again before performing the finalisation steps.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#finalisation_2","title":"Finalisation","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#run-your-server-as-a-service-with-systemd_2","title":"Run your server as a service with systemd","text":"<p>Create a configuration file <code>sudo vi /etc/systemd/system/cells.service</code> with the following:</p> <pre><code>[Unit]\nDescription=Pydio Cells\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nPermissionsStartOnly=true\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\nWorkingDirectory=/home/pydio\n\n# Add environment variables\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Reload systemd daemon, enable and start cells:</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable --now cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#verification_16","title":"Verification","text":"<pre><code># you can check the system logs to insure everything seems OK\njournalctl -fu cells -S -1h\n</code></pre> <p>Connect to your certified web site at <code>https://&lt;YOUR_FQDN&gt;</code>.</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#add-a-firewall","title":"Add a firewall","text":"<p>In this tutorial, we use UncomplicatedFirewall (UFW).</p> <pre><code>sudo apt install ufw\nsudo ufw allow ssh\nsudo ufw allow http\nsudo ufw allow https\nsudo systemctl start ufw\nsudo systemctl status ufw\n</code></pre> <p>If you can still connect to your web GUI and open a ssh connection, even after reboot, you are now good to go. </p> <p>Thanks for using Pydio Cells and happy file sharing!</p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#troubleshooting_2","title":"Troubleshooting","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#main-tips_2","title":"Main tips","text":"<p>With cells as a service, you can access the logs in different ways:</p> <pre><code># Pydio file logs\ntail -200f /var/cells/logs/pydio.log\n# Some of the microservices have their own log files, check:\nls -lsah /var/cells/logs/\n\n# Check systemd files\njournalctl -fu cells -S -1h\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#installation_3","title":"Installation","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#pydio","title":"Pydio","text":"<p>Download the Pydio Cells binary on your server/machine with the following command:</p> <pre><code># You can use this url as-is: it will be resolved automatically to latest version\nwget https://download.pydio.com/latest/cells/release/{latest}/darwin-amd64/cells\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#port-80-443","title":"Port 80 &amp; 443","text":"<p>You can only use these ports if you are connected as an Admin User or root.</p> <p>By default, Apache is running on macOS, so you need to ensure that it - or any other webservers - is not bound to these ports.</p> <p>To stop the default Apache, you can use:</p> <p><code>sudo apachectl stop</code></p> <p>To prevent Apache from starting during launch, you may use:</p> <p><code>sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist</code></p>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#database-configuration","title":"Database configuration","text":"<p>In this section, we assume you have installed MySQL server. Adapt the following steps to your current setup.</p> <pre><code># Go to mysql mode\nsudo mysql -u root\n# Create new user and set password\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY 'your password goes here';\nCREATE DATABASE cells;\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#starting-with-pydio","title":"Starting with Pydio","text":"<p>First, give execution permission on the file for your user. For instance, you can use <code>chmod u+x &lt;binary&gt;</code>.</p> <p>Then run the installer with the following command:</p> <pre><code>cells configure\n</code></pre> <p>Once you have finished the configuration, you can start Cells with:</p> <pre><code>cells start\n</code></pre> <p>By default, the server is started with a self-signed certificate on port 8080: to access the webUI browse to <code>https://localhost:8080</code> and accept the certificate.</p> <p>To configure a different URL and/or port for Cells, run the following command.</p> <pre><code>cells configure sites\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#troubleshooting_3","title":"Troubleshooting","text":"<ul> <li>The database service might not be started, you can look at its status using : <code>brew services list</code> and then <code>brew services start mysql</code> if needed.</li> <li>You can look at the webserver's error file located in <code>/Users/&lt;Your User Name&gt;/Library/Application Support/Pydio/cells</code>.</li> </ul>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#install-cells-on-windows-10","title":"Install Cells on Windows 10","text":"<p>The only hard requirement is a recent MySQL database. If not yet present on your machine, you can refer to:  </p> <ul> <li>MySQL 8.0</li> <li>MariaDB 10.4</li> </ul> <p>You can then download the Pydio Cells executable from our download server.</p> <p>Open a powershell terminal then proceed to install with the following command:</p> <ul> <li><code>.\\cells.exe configure</code></li> </ul> <p>Note: on Powershell, with legacy version of Cells or Windows, if the arrows keys do not seem to work, you can try with H-J-K-L (J: Up, K: Down).</p> <p>Note: the legacy Windows Command Prompt, also known as CMD, which is the original shell for the Microsoft DOS operating system and has been the default until Windows 10 is known to have issues with the <code>Go</code> language command framework that we use to directly communicate with the server via terminal. On some version, it renders the Cells CLI completely unusable. TL;DR: use <code>powershell</code>.</p> <p>At first prompt, you can choose how you want to go on with the installation:</p> <ul> <li>Browser based: opens a tab in your local browser with an intuitive installer.</li> <li>command line interface: for advanced users, pretty straight forward.</li> </ul> <p>Once installed, you can find the application working folder with data, configurations and logs under %APPDATA%. For instance: <code>C:\\Users\\pydio\\AppData\\Roaming\\Pydio\\cells</code>.</p> <p>Note: you may have to explicitly allow displaying hidden files/folders in your settings to see this folder.</p> <p>You can now start Cells and access it at <code>https://localhost:8080</code> or <code>https://&lt;server ip or domain&gt;:8080</code></p> <pre><code>.\\cells.exe start\n</code></pre> <p>By default, Cells start on port 8080 with a self-signed certificate. To change this and use a different domain, port or protocol, run:</p> <pre><code>.\\cells.exe configure sites\n</code></pre>"},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#troubleshooting_4","title":"Troubleshooting","text":""},{"location":"admin-guide/quick-start/cells-installation/advanced-setups/#error-message-when-moving-files-license-binary","title":"Error message when moving files (license, binary...)","text":"<p>You might encounter this message in the logs after performing actions like updating the license or upgrading to the latest version of the server via the in-app process:</p> <pre><code>Update successfully applied but previous binary could not be moved to backup folder     {\"error\": \"remove C:\\\\&lt;path to you binary file&gt;\\\\cells-v3.0.9.exe: Access is denied.\"}\n</code></pre> <p>This is a known issue and non-blocking: the new file is correctly installed on its intended destination and the app will function normally.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/index/","title":"Add Collaboration Tools","text":"<p>Collaborating on Office Documents is a great addition to Content Collaboration Platform like Pydio Cells. We provide the following adapters for third-party services that will allow in-app collaborative edition of such documents :</p> <ul> <li>Collabora Online</li> <li>[Ent] Only Office</li> </ul>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/","title":"[Ent] Only Office","text":"<p>ONLYOFFICE is a multifunctional portal for business collaboration, document and project management. It allows you to organize business tasks and milestones, store and share your corporate or personal documents, use social networking tools such as blogs and forums, as well as communicate with your team members via corporate IM.</p> <p>It supports all type of formats such as DOC, DOCX, PPT, PPTX, XLS, XLS, ODF, ODS, ODP and also has the best support of Microsoft editors features like Word, Powerpoint, Excel and so on.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#install-and-enable-only-office-plugin-in-a-running-cells-enterprise-distribution-instance","title":"Install and enable Only Office Plugin in a running Cells Enterprise Distribution instance","text":""},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#get-your-onlyoffice-instance","title":"Get your ONLYOFFICE instance","text":"<p>You can download ONLYOFFICE directly from their offical website. To understand the differences between various editions and their respective features, please consult the comparison page.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#onlyoffice-docker-image","title":"ONLYOFFICE docker image","text":"<p>For a quick start, you can use the official ONLYOFFICE docker image: yet this image only offers the features of the community edition.</p> <p>Simply run:</p> <pre><code>docker run -i -t -d -p 9980:80 -e JWT_ENABLED=false --restart=always onlyoffice/documentserver\n</code></pre> <p>Note that to avoid collision with the main entry point of your Cells Server, we bind the container default port (80) to another free port. In this document, we use port 9980 as an example.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#enable-the-plugin","title":"Enable the plugin","text":"<p>To enable the plugin in the Cells Admin Console, go to <code>Application parameters &gt; Available Plugins &gt; Only Office</code>, then configure following parameters:</p> <ul> <li>Only office TLS: <code>false</code> in our simple example. Enable this and configure the service accordingly if you want to secure communication between ONLYOFFICE and Pydio.</li> <li>Only office Host: <code>&lt;host where ONLYOFFICE is running&gt;</code></li> <li>Only office Port: <code>&lt;ONLYOFFICE instance port&gt;</code>, we commonly use <code>9980</code></li> </ul> <p></p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#start-editing-documents","title":"Start editing documents","text":"<p>Now you can edit all of your docs, presentations and more easily: double-click on a supported file to open the ONLYOFFICE editor without leaving the Pydio Cells website.</p> <p></p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#troubleshooting","title":"Troubleshooting","text":""},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#logs","title":"Logs","text":"<p>ONLYOFFICE\u2019s container logs can be accessed with:</p> <pre><code>docker logs -f &lt;ONLYOFFICE container ID&gt;\n</code></pre>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#jwt-token-error","title":"JWT Token Error","text":"<p>After upgrading ONLYOFFICE to version &gt;= 7.2, you may encounter a problem with the security token: when trying to open a document, you see an error popup with a Json WebToken Error or similar. If you do not already pass the JWT_ENABLED=false environment variable at startup, you can disable this via the configuration file.</p> <ul> <li>Edit the ONLYOFFICE configuration file that can be found at:</li> </ul> <p><code>/etc/onlyoffice/documentserver/local.json</code></p> <ul> <li>Set all 3 values of token parameters to \"false\"</li> </ul> <pre><code>{\n  \"services\": {\n    \"CoAuthoring\": {      \n      \"token\": {\n        \"enable\": {\n          \"request\": {\n            \"inbox\": false,\n            \"outbox\": false\n          },\n          \"browser\": false\n        },\n</code></pre> <ul> <li>Restart the service. If you are using the ONLYOFFICE docker image, the easiest way is to restart the services while still inside the image:</li> </ul> <p><code>supervisorctl restart all</code></p> <p>Note: if you are in a private LAN with a host that has private IP you might fail to open documents in Cells and get this error:</p> <pre><code>Error: DNS lookup 10.X.X.X(family:4, host:files.example.com) is not allowed. Because, It is private IP address.\n</code></pre> <p>In such case, the workaround is to enable private IPs, add this to the service configuration:</p> <pre><code>  \"CoAuthoring\": {\n    \"request-filtering-agent\": {\n      \"allowPrivateIPAddress\": true,\n      \"allowMetaIPAddress\": true\n    },\n    ...\n  }\n</code></pre> <p>You can find more info on this in the ONLYOFFICE knowledge base.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/ent-only-office/#changes-seems-to-be-missed-after-save","title":"Changes seems to be missed after save","text":"<p>We have noticed that documents are only pushed back to Pydio Cells, when everybody closes the opened document. This can lead to nasty behaviour and data loss.</p> <p>You should configure your docker image manually to workaround this (for further details, please refer to the ONLYOFFICE online documentation) by performing the following:</p> <ul> <li>Ssh to the target server</li> </ul> <pre><code># Retrieve the id of the correct container\n$ docker ps\nCONTAINER ID....\nc263411ad1d0       onlyoffice/documentserver\n</code></pre> <ul> <li>Log into the container</li> </ul> <pre><code>docker exec -it c2 /bin/bash\n\n# edit local.json file\nnano /etc/onlyoffice/documentserver/local.json\n# add this under services/CoAuthoring \n    \"autoAssembly\": {\n        \"enable\": true,\n        \"interval\": \"5m\"\n     },\n\n# save, exit\n</code></pre> <ul> <li>Restart the container (or the ONLYOFFICE services while you are still inside the container see above) and you should be good to go.</li> </ul> <p>For the record, the begining of the configuration file should then look like this:</p> <pre><code>{\n \"services\": {\n   \"CoAuthoring\": {\n     \"autoAssembly\": {\n       \"enable\": true,\n       \"interval\": \"5m\"\n     },\n     \"sql\": {\n     ...\n</code></pre> <p>You can validate that your change has been successful by leaving a modified ONLYOFFICE document opened in a tab and check (even better with another user) that the modification date of the corresponding file changes.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/collabora-online/","title":"Collabora Online","text":"<p>Collabora Online is a powerful LibreOffice-based online office suite which supports all major document, spreadsheet and presentation file formats:\u200b DOC, DOCX, PPT, PPTX, XLS, XLS, ODF, ODS, ODP.</p> <p>It also supports shared editing, meaning that while one person edits a document, others see the changes in real time. Different people can make changes at any given time.</p> <p>This documentation describes how to deploy the Collabora CODE docker image (community edition). Please contact us if you want information about the professional edition.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/collabora-online/#install-collabora-online-development-environment","title":"Install Collabora Online Development Environment","text":"<p>On this page is a configuration example that meets the basic requirements for the plugin to work with Pydio Cells. If you want more detail about the different configurations Collabora offers, you can visit this link.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/collabora-online/#package-installation","title":"Package installation","text":"<p>You can install CODE on the same server as your Pydio or on another server, it's up to you. The process is quite simple and you can follow the CODE documentation. The commands will differ depending on your system but it should work at the end. Then you can use the instructions below to configure the plugin to match the location of your CODE instance (host, port, tls).</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/collabora-online/#code-docker-image","title":"CODE Docker image","text":"<p>Install Docker on a server.</p> <p><pre><code>docker pull collabora/code\ndocker run -t -d -p 9980:9980 -e \"extra_params=-o:tls.enable=false\" -e \"domain=&lt;your-dot-escaped-domain&gt;\" collabora/code\n</code></pre> for testing puposes tls is disabled, but we advise you to always have it on</p> env variable example value domain <code>my\\.cells\\.com</code> tls.enable <code>true</code> or <code>false</code> <p>You can find all of the information about the docker image, such as the env variables, etc... Docker CODE official documentation.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/collabora-online/#configure-pydio-plugin-to-connect-to-code","title":"Configure Pydio Plugin to connect to CODE","text":"<p>Go to <code>Cells Console &gt; Application Parameters &gt; All Plugins</code> and enable the Collabora Online plugin.</p> <p>Change the plugin parameters to:</p> <ul> <li>Libre office tls: <code>true</code> if you want secured communication between collabora and pydio or <code>false</code></li> <li>Libre office Host: <code>&lt;host where CODE is running&gt;</code></li> <li>Libre office Port: <code>&lt;CODE instance port&gt;</code> usually it is running on <code>9980</code></li> </ul> <p>Remember to save.</p>"},{"location":"admin-guide/quick-start/add-collaboration-tools/collabora-online/#test-and-start-editing-docs","title":"Test and start editing docs","text":"<p>Switch to a workspace and right-click to display a pop-up menu from which you can create a new document.</p> <p>Double-click on the new file to edit. You are now able to edit it directly in Pydio Cells using the Collabora online editor!</p> <p></p>"},{"location":"admin-guide/run-cells-in-production/index/","title":"Run Cells in Production","text":"<p>Once you are familiar with Cells basic deployments, you need to set up a proper environment for running in production : system service for automatic start, gathering logs and monitoring performances, setting up proper backup mechanisms, etc.</p> <ul> <li>Best practices</li> <li>Configuring Cells URLs</li> <li>Configuring Mongo Storage</li> <li>Configuring Email Delivery</li> <li>Upgrades</li> <li>Operational Maintenance</li> <li>Deploying Cells in a Distributed Environment</li> <li>Troubleshooting</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-mongo-storage/","title":"Configuring Mongo Storage","text":""},{"location":"admin-guide/run-cells-in-production/configuring-mongo-storage/#why-mongo","title":"Why Mongo?","text":"<p>For simple setups, Cells uses BoltDB and BleveSearch, pure GO key/value stores and indexers allowing Cells to provide full indexing functionality without external dependencies. By default, the search engine, activity stream or logs use these JSON document shops to provide rich, out-of-the-box functionality. </p> <p>But these stores are disk and memory intensive, and while they are suitable for small and medium-sized deployments, they can create bottlenecks for large deployments. MongoDB provides a feature-rich, scalable and indexed JSON document store, perfectly suited to store the same kind of data and to scale horizontally.</p> <p>A couple of notes: </p> <ul> <li>File-based storage is still a very good option for small/medium instances, avoiding the need to manage another dependency.</li> <li>You can migrate from one to another afterward (see below).</li> <li>Mongo does not replace MySQL storage, a MySQL/Maria DB is always required to run Cells.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-mongo-storage/#when-to-use","title":"When to use?","text":"<p>Depending on your target deployment size, you may switch from the default on-file storage used by specific services (search engine, activity feeds, logs, amongst others) to a Mongo DB document store.  So this is a good idea if:</p> <ul> <li>You foresee a high load on the platform:  number of users and/or a high number of files managed every day.</li> <li>You plan to deploy Cells in a distributed environment (cluster) to provide high availability or horizontal scaling.</li> </ul> <p>The following services can either use on-file storage (BoltDB or BleveSearch) or a Mongo storage: </p> Service Name Description pydio.grpc.versions documents revisions informations pydio.grpc.jobs scheduler flows definitions, statuses and logs pydio.grpc.chat chat rooms and chat messages pydio.grpc.docstore generic structured document store (JSON) pydio.grpc.log application logs pydio.grpc.mailer sent and pending emails pydio.grpc.search search engine pydio.grpc.activity all activity feeds [Ent] pydio.grpc.audit audit logs [Ent] pydio.grpc.reports audit reports [Ent] pydio.grpc.ipban ipban definitions and caches"},{"location":"admin-guide/run-cells-in-production/configuring-mongo-storage/#mongo-connection","title":"Mongo Connection","text":"<p>Mongo connection requires information as described below </p> Parameter Description Defaults Host/Port Address of the server hosting the Mongo DB localhost:27017 Credentials Optional credentials to connect, along with an authentication DB name [none] Database Name Name of the mongo database cells Connection String Parameters Additional connection parameters passed via Mongo connection string query parameters maxPoolSize=20&amp;w=majority"},{"location":"admin-guide/run-cells-in-production/configuring-mongo-storage/#pre-requisite","title":"Pre-Requisite","text":"<p>Depending on your server OS, refer to the corresponding page in the official documentation to install the application.</p> <p>WARNING: Starting from version 5, MongoDB has introduced specific processor requirements. These requirements may prevent the service from starting if the CPU is not supported. Typically, the systemctl service will refuse to start, displaying errors like:</p> <pre><code>mongod.service: Main process exited, code=killed, status=4/ILL\nmongod.service: Failed with result 'signal'.\n</code></pre> <p>Be sure to consult the official MongoDB documentation to ensure that your platform is fully supported. Additionally, if you are operating in a virtualized environment, make sure to select a virtual CPU that is compatible with MongoDB's requirements.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-mongo-storage/#configuring-mongo-at-startup","title":"Configuring Mongo at startup","text":"<p>The best option is to directly setup Mongo DB connection when running <code>./cells configure</code>. Both command-line and web installer prompt for an optional Mongo connection. In that case, Mongo will be directly used by all services supporting this storage from day one.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-mongo-storage/#migrating-existing-instance","title":"Migrating Existing Instance","text":"<p>If you are upgrading a pre-v4 instance or deliberately started with on-file databases, you may wish to switch to MongoDB afterward. Cells provides a command-line to achieve that. </p> <p>Make sure to shutdown Cells, then use the following command, with the user that runs the app :  <pre><code>cells admin config db add\n</code></pre></p> <ul> <li>Pick the \"NoSQL\" db type and fill the form with the Mongo DB connection information.</li> <li>Accept prompt for using this connection as default document DSN</li> <li>Accept prompt to perform data migration from existing bolt/bleve files to mongo.</li> </ul> <p>WARNING: Migrating data from Bleve to MongoDB is a time-consuming process. We strongly recommend conducting a trial run in a staging environment to gauge the duration of this migration. This will allow you to schedule an appropriate downtime period and inform your users accordingly. Please note that during the migration, the server will need to be offline if opting for the straightforward migration method. If you are a customer requiring assistance, please do not hesitate to contact our support team for guidance and support throughout the process.</p> <p>Now restart Cells. You should see \"Successfully pinged and connected to MongoDB\" in the logs. As search engine data are not migrated, you have to relaunch indexation on the pydio.grpc.search service using: </p> <pre><code>cells admin resync --service=pydio.grpc.search --path=/\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/configuring-email-delivery/","title":"Configuring Email Delivery","text":"<p>In this chapter, we have a look at the mailing system integrated to Pydio Cells and guide you through some sample configurations.</p> <p>Please note: when changing these configurations, the assiociated <code>pydio.grpc.mailer</code> service will be automatically restarted, so the changes may not be impacted until after 10 to 20 seconds. At restart time, service tries to dial a network connection to the specific mailing service, and if something goes wrong, the application will be aware that there is no valid mailer configured.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-email-delivery/#configure-mails","title":"Configure Mails","text":"<p>To configure the mailer, go to Application Parameters &gt; Mailers:</p> Field Description Default From Email address Put the email that you're going to use as sender address for notifications and as default (see below). From/Sender address and name to use Select how the address and display name is chosen. This setting controls how the envelope from address and the from mail and sender mail headers are set. <p>Depending on the engine you have chosen, you see one of the following form:</p>"},{"location":"admin-guide/run-cells-in-production/configuring-email-delivery/#1-disable-mailer","title":"1. Disable Mailer","text":"<p>The default value, no mailer is configured. Application will never try to send emails.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-email-delivery/#2-no-op-mailer","title":"2. No-Op Mailer","text":"<p>By selecting this mailer, emails will be created by the application but they will just be collected without further processing. This can be handy typically for staging servers where you want to act as if a mailer is enabled, but make sure that your users never receive actual emails. </p> <p>This mailer \"honeypot\" can either fully discard emails, or write them as text to a file for debugging purpose.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-email-delivery/#3-smtp-server","title":"3. SMTP Server","text":"Field Description Server Hostname the SMTP server's hostname, for example gmail's smtp is <code>smtp.gmail.com</code> Server Port The port of the SMTP server, for example gmail's default port is <code>587</code> Connection User The username of the address used to connect to this SMTP server, such as john.doe@gmail.com, john.doe@pydio.com Connection Password password of the user above Queue Type Right now do not modify this field."},{"location":"admin-guide/run-cells-in-production/configuring-email-delivery/#4-sendmail","title":"4. Sendmail","text":"<p>In order to use sendmail:</p> <ul> <li>Make sure that you have installed and configured it on your server</li> <li>The sendmail executable is set by default to <code>/usr/bin/sendmail</code>. Depending on your system and its version, you may have to adapt this executable. For security reasons, this cannot be done directly from the interface but must be manually edited inside the main configuration file. To achieve that, open <code>CELLS_WORKING_DIR/pydio.json</code> and look for the \"pydio.grpc.mailer\" section. </li> </ul> <pre><code> \"services\": {\n  //...\n  \"pydio.grpc.mailer\": {\n    \"queue\": {\n      \"@value\": \"boltdb\"\n    },\n    \"sender\": {\n      \"@value\": \"sendmail\",\n      \"executable\": \"/path/to/custom/sendmail\"  // Add this key directly in the file\n    }\n  },\n  //...\n}   \n</code></pre>"},{"location":"admin-guide/run-cells-in-production/configuring-email-delivery/#5-sendgrid","title":"5. Sendgrid","text":"<p>To use SendGrid API Service, you only have to:</p> <ul> <li>Retrieve your specific API key</li> <li>Put it in the corresponding field.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/","title":"Troubleshooting","text":"<p>You can find below a list of problems commonly encountered when installing and configuring Pydio Cells Server or Sync Client, together with strategies to diagnose and fix them.</p> <p>You can find more use cases and solution in our FAQ, our Knowledge Base and our forum.</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#cells-server","title":"Cells Server","text":""},{"location":"admin-guide/run-cells-in-production/troubleshooting/#unable-to-bind-port-443","title":"Unable to bind port 443","text":"<p>You have configured the Binding Address with port 443 and enabled redirection of port 80. You get an error page \"Unable to connect\" when you try to connect.</p> <p>Check the error log, if you see such an error:</p> <pre><code>2018-05-21T10:55:57.532+0200   ERROR   pydio.grpc.gateway.proxy   Could not run   {\"error\": \"listen tcp :443: bind: permission denied\"}\n</code></pre> <p>You probably did not give permission to the <code>cells</code> binary file to use reserved ports. To fix this:</p> <pre><code>sudo setcap 'cap_net_bind_service=+ep' /path/to/your/cells/binary\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#0000-address","title":"0.0.0.0 address","text":"<p>If you are behind a reverse proxy and get <code>404: this page is not served on this interface</code> when trying to access the web UI, you can try to use the <code>0.0.0.0</code> generic IP address in your Binding Address.</p> <p>This basically tells to the Cells Gateway of the application to accept all requests on this port.</p> <p>In contrary, if you give a specific valid IP or a domain name in the Binding Address, the Cells Gateway checks the \"HOST\" header of the incoming requests. If the header does not exactly matches with the DN or IP of the Binding Address, the server throw a 404 file not found error.</p> <p>Remember, when the Binding Address is <code>0.0.0.0:&lt;port&gt;</code> (the port is compulsory), and if you are not using a well-known port 80 or 443, you must also include the port in the external URL that must look like:  <code>&lt;scheme&gt;://&lt;IP or DN&gt;:&lt;port&gt;</code>, for instance <code>http://localhost:8080</code>, otherwise, you might stay stuck on a grey loading page.</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#hydra-error-after-install","title":"Hydra Error after install","text":"<p>On first start or just after the installation terminated, you get such an error:</p> <pre><code> [0002] Could not ensure that signing keys for \"hydra.openid.id-token\" exists. This can happen if you forget to run \"hydra migrate sql\", set the wrong \"secrets.system\" or forget to set \"secrets.system\" entirely.  error=\"cipher: message authentication failed\"\n</code></pre> <p>It usually means you have performed a new install on top of a former install without correctly cleaning (a.k.a dropping) the DB.</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#unable-to-log-in","title":"Unable to log in","text":"<p>After a re-install, when trying to login, you get a <code>could not load session store: securecookie: the value is not valid</code> error.</p> <p>This is bound to the part of the session mechanism that resides in the browser, on client side. To solve the issue, get rid of all cookie for this site and hard refresh the page.</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#i-locked-my-user","title":"I locked my user","text":"<p>You can unlock the admin or any user with the CLI (assuming that you have access on the server), run the following command <code>./cells admin user unlock -u &lt;username&gt;</code>.</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#i-forgot-the-password-of-a-user","title":"I forgot the password of a user","text":"<p>Once again with the CLI (assuming that you have access on the server), you can run <code>./cells admin user set-pwd -u &lt;username&gt; -p &lt;new password&gt;</code></p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#database-server-issue","title":"Database server issue","text":"<p>After start, the web page is unreachable and you see a bunch of errors starting with: <code>ERROR   pydio.grpc.meta   Failed to init DB provider   {\"error\": \"Error 1071: Specified key was too long; max key length is 767 bytes handling data_meta_0.1.sql\"}</code>.</p> <p>You might have an unsupported version of the mysql server: you should use MySQL server version 5.7 or higher or MariaDB version 10.3 or higher.</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#various","title":"Various","text":"<p>You see this error: <code>/lib/x86_64-linux-gnu/libc.so.6: version 'GLIBC_2.14' not found</code></p> <p>The version of libc6 is outdated. Run these commands to upgrade it.</p> <pre><code>sudo apt-get update\nsudo apt-get install libc6\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#cells-sync","title":"Cells Sync","text":""},{"location":"admin-guide/run-cells-in-production/troubleshooting/#cannot-list-workspaces","title":"Cannot list workspaces","text":"<p>If you are getting an error when you attempt to list the workspaces then your server might be running behind a reverse proxy, in this case you must use TLS on Cells and on the reverse proxy, please refer to our dedicated documentation Running Cells Behind a reverse Proxy.</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#i-do-see-not-my-workspaces","title":"I do see not my workspaces","text":"<p>Make sure that your workspaces can be synchronized (enable settings in workspace menu)</p>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#unable-to-create-or-list-folder-on-local-system","title":"Unable to create or list folder on local system","text":"<ul> <li>MacOSX users might require permissions, System Preferences &gt; Security &amp; Privacy &gt; Files and Folders and allow access.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#missing-package-linux","title":"Missing package (LINUX)","text":"<ul> <li>If you are getting this error (on Gnome):</li> </ul> <pre><code>./cells-sync: error while loading shared libraries: libappindicator3.so.1: cannot open shared object file: No such file or directory\n</code></pre> <ul> <li>Then install <code>sudo apt install libappindicator3-1</code></li> </ul>"},{"location":"admin-guide/run-cells-in-production/troubleshooting/#still-stuck","title":"Still stuck?","text":"<p>In case you do not find the answer you are looking for here, please do not ask question in github issues, nor in Twitter or other social feed: our preferred communication channel is our Forum.</p> <p>So, what should I do in case of:</p> <ul> <li>Install or upgrade issue? Search the F.A.Q or READ THE DOCS</li> <li>No answer yet? Search our forum</li> <li>Still stuck? It is time to ask the community via the FORUM</li> </ul> <p>And only if you are invited to:</p> <ul> <li>Post a github issue: make sure to put as much detail as possible.</li> <li>or submit a pull request.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/best-practices/index/","title":"Best practices","text":"<p>This section provides a set of best practices for production deployments. </p> <ul> <li>Recommended Architectures</li> <li>Create a Dedicated MySQL User</li> <li>Create a Service User</li> <li>Linux Service</li> <li>Working Directories</li> <li>System Logs</li> </ul>"},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/","title":"Recommended Architectures","text":"<p>One of the first question of a system administrator before installing Cells is how to select a suitable setup. How to organize the services of Cells in an existing infrastructure while satisfying general requirements:</p> <ul> <li>Ensure the service availability</li> <li>Optimize resource usage</li> <li>Maintain at low cost</li> </ul> <p>This article tries to figure out some typical use cases at different scales. It gives you some hardware configurations to start with. However, in the real life, 10 users with 10k uploaded files per day require more resources than a setup where 1000 users upload only 100 per day. To decide whether setup is a good fit for your case, you should prepare the answer for following questions:</p> <ul> <li>How many users do you have?</li> <li>Do you have a rough estimation of the number of existing files and the growth rate of data over the time?</li> </ul> <p>Beside the usual \"N-tier\" architecture that recommends splitting storage from compute, Cells micro-service architecture allows each service to be independently deployable. They can run in either the same server or in different servers in the network.</p>"},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/#architecture-samples","title":"Architecture Samples","text":""},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/#a-all-in-one-server","title":"A - All-In-One Server","text":"<p>This setup is suitable for a small organization with limited IT resource. All services and DB are installed in a single server. You can start quickly with this setup but over the time, system may reach limitations and the maintenance may become complex.</p> <p>Hardware configuration example</p> <ul> <li>4 cores CPU</li> <li>8 G RAM</li> <li>Local disk storage</li> </ul>"},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/#b-minimal-production-setup","title":"B - Minimal Production Setup","text":"<p>Serving the database on a different server is always a good approach and Cells does not make exception on this. Some organizations maintain a central DB server for all applications to optimize the cost of maintenance. With this setup, you can connect to an existing DB server, or install a personalized DB server for Cells.</p> <p>Hardware configuration example</p> <ul> <li>Cells</li> <li>4 cores CPU</li> <li>8 G RAM</li> <li>Local disk storage</li> <li>DB server (Sql + MongoDB)</li> <li>4 cores CPU</li> <li>4/8 G RAM</li> </ul>"},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/#c-failover-switchover-setup","title":"C - Failover / Switchover Setup","text":"<p>This setup takes the advantage of standard backups of well-known services that you're already familial with (MySQL, etc.). In case of one node failure, you can quickly restore the service from the real-time backups. Depending on the acceptable downtime, this may be done manually (switchover) or automatically (failover). </p> <p>Additionally, running Cells in a dedicated server may allow you to isolate the server Cells in a DMZ network.</p> <p>Hardware configuration example</p> <ul> <li>01 server Cells</li> <li>02 servers SQL in Master-Slave mode. For further information: https://mariadb.com/kb/en/replication-as-a-backup-solution/</li> <li>02 servers MongoDB in Master-Slave mode</li> <li>01 server S3 (minio). You can backup the data in S3 server by a standard file backup solution such as \"rsync\".</li> </ul>"},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/#d-cluster-high-availability-ha-setup","title":"D - Cluster High Availability (HA) Setup","text":"<p>Reaching full HA and zero-downtime can be done by deploying Cells in an auto-scalable, auto-healing cluster. This approach is detailed in the Deploying Cells in a Distributed Environment section.</p>"},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/#comparision-between-setups","title":"Comparision between setups","text":"Availability Scalability Maintainability Minimum # of Nodes A - Single server \u2605 \u2605 \u2606 \u2606 \u2606 \u2606 \u2606 \u2606 \u2606 \u2606 \u2605 \u2605 \u2605 \u2605 \u2606 \u2605 \u2606 \u2606 \u2606 \u2606 B - Single server + Sql &amp; Mongo DB \u2605 \u2605 \u2606 \u2606 \u2606 \u2605 \u2605 \u2605 \u2606 \u2606 \u2605 \u2605 \u2605 \u2605 \u2606 \u2605 \u2605 \u2606 \u2606  \u2606 C - Switchover \u2605 \u2605 \u2605 \u2605  \u2606 \u2605 \u2605 \u2605 \u2606  \u2606 \u2605 \u2605 \u2605 \u2606  \u2606 \u2605 \u2605 \u2605 \u2606  \u2606 D - High Availability \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605 \u2605  \u2605 \u2605 \u2605 \u2605 \u2605  \u2605"},{"location":"admin-guide/run-cells-in-production/best-practices/recommended-architectures/#network-traffic","title":"Network Traffic","text":"<p>Also called \"Network Flow\" or \"Network Diagram\", the tables below summarize the necessary open ports for running Cells inside any infrastructure. You may communicate this page to your System Administrator if they ask you \"what ports shall I open?\"...</p> <p>You can download PDF versions here.</p> <p>Ingress</p> Source Source Port Protocol Destination Destination Port Required Comment client IPs Ephemeral port range TCP Cells IP 443 yes https &amp; http/2 client IPs Ephemeral port range TCP Cells IP 80 http redirection client IPs Ephemeral port range TCP Cells IP 22 ssh client IPs Ephemeral port range TCP Cells IP 2022 (optional) sftp service <p>Egress</p> Source Source Port Protocol Destination Destination Port Required Comment Cells IP Ephemeral port range UDP y.y.y.y 123 yes ntp/chrony for time synchronization Cells IP Ephemeral port range TCP updatecells.pydio.com 443 Update cells service Cells IP Ephemeral port range TCP/UDP DNS IPs 53 Dns service Cells IP Ephemeral port range TCP MySQL DB 3306 MySQL DB Optional Services Cells IP Ephemeral port range TCP database.clamav.net 80 freshclam for antivirus service Cells IP Ephemeral port range TCP sso.server.com 443 sso server such as saml, openid connect, adfs Cells IP Ephemeral port range TCP smtp server 25/587/465 SMTP server Cells IP Ephemeral port range TCP Ldap server IP 389/636/3268 Ldap server Cells IP Ephemeral port range TCP S3 server IP 443 S3 service object <p>OS specific ephemeral port range: https://en.wikipedia.org/wiki/Ephemeral_port</p>"},{"location":"admin-guide/run-cells-in-production/best-practices/create-a-dedicated-mysql-user/","title":"Create a Dedicated MySQL User","text":"<p>By default, a new database will be created by the system during the installation process. You only need a user with database management permissions.</p> <p>If you would rather do it manually, you may create a dedicated user and an empty database by executing the following SQL queries :</p> <pre><code>CREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;your-password-here&gt;';\nCREATE DATABASE cells;\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/best-practices/create-a-service-user/","title":"Create a Service User","text":"<p>For security reason, it is highly recommended to run Pydio Cells with a dedicated \"unprivileged\" user. Never run Cells as \"root\"!</p> <p>In this guide, we use a dedicated user pydio and its home directory /home/pydio.</p> <p>In order to create a new user and its home directory execute this command:</p> <pre><code>sudo useradd -m -s /bin/bash pydio\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/best-practices/linux-service/","title":"Linux Service","text":"<p>Running Cells as a service is a good way to ensure that you always have your server running after an event such as a server restart.</p> <p>Our knowledge base provides comprehensive guide on how to setup your Cells instance as a service with most common linux service managers.</p> <ul> <li>Run cells as a service with systemd</li> <li>Run cells as a service with supervisor</li> </ul>"},{"location":"admin-guide/run-cells-in-production/best-practices/working-directories/","title":"Working Directories","text":"<p>By default, application data is stored under the standard OS application dir:</p> OS Working Dir Linux <code>${USER_HOME}/.config/pydio/cells</code> Darwin <code>${USER_HOME}/Library/Application Support/Pydio/cells</code> Windows <code>${USER_HOME}/ApplicationData/Roaming/Pydio/cells</code> <p>You can customize the various storage locations with the following ENV variables:</p> Env Variable Description Default <code>$CELLS_WORKING_DIR</code> replace the whole standard application dir OS Specific <code>$CELLS_DATA_DIR</code> replace the location for storing default datasources <code>$CELLS_WORKING_DIR/data</code> <code>$CELLS_LOG_DIR</code> replace the location for storing logs <code>$CELLS_WORKING_DIR/logs</code> <code>$CELLS_SERVICES_DIR</code> replace location for services-specific data <code>$CELLS_WORKING_DIR/services</code> <p>When running in production mode, we generally advise to setup at least <code>$CELLS_WORKING_DIR</code> to a standard Linux layout folder, typically <code>/var/cells</code>.</p> <p>More environment variables can be found inside the API documentation..</p>"},{"location":"admin-guide/run-cells-in-production/best-practices/system-logs/","title":"System Logs","text":"<p>Following the standard 12-factor architecture pattern for micro-services, all logs are redirected by default to the standard output. They are also output in rotating log files under <code>CELLS_WORKING_DIR/logs/pydio.log</code>.</p>"},{"location":"admin-guide/run-cells-in-production/best-practices/system-logs/#configuration","title":"Configuration","text":"<p>By default, logs are formatted in an Apache-like format. An embedded log collector parses and stores them in a local index to enable easy search and analyse via the admin console. To enable logs collection by external systems like ELK (Elastic Search, Logstash, Kibana), you can switch to the \"JSON\" mode: log messages are then output in JSON format. </p> <p>You can use the following flags (or they ENV variable equivalent):</p> <ul> <li><code>log</code> (or <code>CELLS_LOG</code>): Sets the log level (debug, info, warn or error)</li> <li><code>log_json</code> (or <code>CELLS_LOG_JSON</code>): Sets the log output format to JSON instead of text</li> <li><code>log_to_file</code> (or <code>CELLS_LOG_TO_FILE</code>): Write logs on-file in CELLS_LOG_DIR</li> </ul> <p>Default is <code>--log info --log_json=false --log_to_file=true</code>: logs are outputted in console format at the Info level and appended to a CELLS_LOG_DIR/pydio.log file. </p>"},{"location":"admin-guide/run-cells-in-production/best-practices/system-logs/#browsing-the-logs","title":"Browsing the logs","text":"<p>The logging service collects and parses logs. You can browse them in your admin dashboard under Backend &gt; Logs:</p> <p></p> <p>You can read them as the following:</p> <ol> <li>Date: the time when the event happened  </li> <li>IP: the IP if it happened elsewhere (could be a user etc...)  </li> <li>User the username of whom it happened to  </li> <li>Service: the service that is handling it  </li> <li>Message: what happened with the service concerned (such as stopping, restarting, etc...)  </li> </ol> <p>You can left click on any error to popup a detailed windows.</p> <p>Search the logs by using the search fields in the top right corner. For advanced filtering, click on the inverted triangle to choose a filter type and enter your parameters in the field that is on its left.</p> <p>Filter types are:</p> <ul> <li>Full-text search (selected by default): filter by anything such as usernames, etc...</li> <li>Pick one day: pretty straightforward, choose a date day to see log for this day.</li> <li>Time Period : you can choose more than one day by putting from this day to that day.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/index/","title":"Configuring Cells URLs","text":"<p>Cells acts an autonomous web server via the Cells Gateway. Similarly to Apache, Ngninx or Caddy, Cells provides ways to bind the gateway to multiple URLs. This section provides information about managing these multiple \"sites\" as well additional information to configure TLS and to properly setup Cells behind reverse proxy.</p> <ul> <li>Manage Sites</li> <li>Configure Cells with a reverse-proxy</li> <li>Configure TLS</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/manage-sites/","title":"Manage Sites","text":"<p>A site is a secure access route configuration in the Cells Gateway.</p> <p>The default configuration will get Cells up and running quickly with a direct access on a server or on a local machine. You can extend to wider network  and/or secure that access with Sites.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/manage-sites/#command-line-interface","title":"Command line interface","text":"<pre><code>./cells configure sites\n</code></pre> <ol> <li> <p>Bind Address(s): one or more <code>&lt;ip/hostname:port&gt;</code> to bind Cells to local host's network interfaces addresses. URL can be used in case of a TLS setup with Let's Encrypt.</p> </li> <li> <p>TLS Settings: TLS configuration for HTTPS support (TLS, Let's Encrypt, External URL)</p> </li> <li> <p>External URL: Accept traffic coming to this url and redirect to one of the bind address.     Typically if the app is behind a reverse-proxy or inside a container with ports mapping.</p> </li> <li> <p>Maintenance Mode [On|Off]: expose a maintenance page on this endpoint with Cells still running and accessible via the other sites.</p> </li> </ol>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/manage-sites/#default-configuration","title":"Default Configuration","text":"<p>The Cells gateway starts by default on <code>0.0.0.0:8080</code>.</p> <p>By using 0.0.0.0, the gateway will allow incoming traffic to any IPv4/domain of the machine network interfaces.</p> <p>If the port 8080 is busy (already used by another process), it will try other options.</p> <p>A self-signed certificate is automatically generated for supporting TLS connection out of the box.</p> <p></p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/manage-sites/#add-a-site","title":"Add a Site","text":"<p>All examples below can be used separately or in conjunction with one another.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/manage-sites/#local-network-example","title":"Local network example","text":"<p>Let's imagine you want to make your Cells accessible for everybody in your local network via the mypydio.local address. You already have your local DNS and port forwarding ready so that the incoming traffic redirects to the Cells server on port 8080. You've also generated a certificate, locally trusted.</p> <p>We indicate all this to Cells using the command and the following parameters:</p> <ul> <li>Bind Address: IP:8080</li> <li>TLS: Your own key/cert pair</li> <li>External URL: https://mypydio.local</li> </ul> <p></p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/manage-sites/#public-access-example","title":"Public access example","text":"<p>Let's imagine you want to make your Cells accessible via the world wide web. You have a secure reverse proxy running that redirects all traffic to a URL to the Cells server on port 8081. You can use the self-signed TLS parameter here as the only traffic we need to secure is between the reverse proxy and Cells.</p> <p>We indicate all this to Cells using the command and the following parameters:</p> <ul> <li>Bind Address: IP:8081</li> <li>TLS: Self-Signed</li> <li>External URL: https://mypydio.com</li> </ul> <p></p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/manage-sites/#ent-advanced-usage","title":"[Ent] Advanced Usage","text":"<p>When using multiple sites, you can use the Sites URL to make Cells behave differently depending on the site accessed. See for example:</p> <ul> <li>Authentication Connectors: display different ways of authenticating on different URLs.  </li> <li>Security Policies: use the URL in the context of the security policies to restrict access to the www site to specific IPs.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-cells-with-a-reverse-proxy/","title":"Configure Cells with a reverse-proxy","text":"<p>Reverse proxies are one of the most common way to secure web servers. You can make them hide the IP of your App server, serve as the main gateway to your private (virtual) network, or as TLS Termination point and expose your public certificates, etc.</p> <p>A simple HTTPS reverse-proxy is fairly easy to set up for basic usage (Web UX, REST API's, Mobile Applications). You just need to make sure that the URL is known to Cells so that it can allow incoming traffic from this address.</p> <p>Run the following command, </p> <pre><code>./cells configure sites\n</code></pre> <p>Select an active site or add a new site and set the reverse-proxy URL in the External URL field.</p> <p>Warning: if you intend to use CellsSync client together with your server instance, you cannot use TLS Offloading on your reverse proxy. The communication between the sync client and the server is done via gRPC on HTTP/2 and this will not work if you drop from HTTPS to HTTP between your reverse proxy and your Cells instance. Furthermore, note that your proxy has to support this protocol.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-cells-with-a-reverse-proxy/#tutorials","title":"Tutorials","text":"<p>In our knowledge base we have a growing number of comprehensive guides to setup various proxies with Cells:</p> <ul> <li>Running Cells behind Apache2 proxy</li> <li>Reverse proxy with Caddy</li> <li>Reverse proxy with Nginx</li> <li>Docker and Traefik</li> <li>Reverse proxy with a Apache your Docker instance</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-cells-with-a-reverse-proxy/#more-details","title":"More details","text":"<ul> <li>See our detailed article in the Knowledge Base.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/","title":"Configure TLS","text":"<p>Cells Gateway provides multiple ways for enabling TLS support. It is highly recommended to make sure all communications are encrypted between the client applications and the server (HTTPS).</p> <p>TLS configuration can be changed by using the <code>cells configure sites</code> command.</p> <pre><code>./cells configure sites\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/#supported-modes","title":"Supported Modes","text":""},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/#custom-certificate","title":"Custom certificate","text":"<p>You can provide a path on the server pointing to your existing Certificate/Key files (PEM format).</p> <p>Adding CAs</p> <p>If your certificate relies on a third-party Certificate Authority, you have to manually append the CA PEM content to your certificate PEM file.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/#lets-encrypt","title":"Lets Encrypt","text":"<p>Let's Encrypt is an open initiative to make the web safer. It provides free and secure certificates for any domains in an automated way. When switching to this mode, you will have to provide an email address and accept the Let's Encrypt EULA.</p> <p>Important warning:</p> <p>If you launch the app with an invalid configuration or if your domain name is not correctly registered and propagated by your DNS, the certicate generation will fail, possibly more than once, due to multiple retries and errors. You might then quickly reach Let's encrypt rate limits: this can lead to having your FQDN black listed, at least temporarily.</p> <p>Thus, we strongly advise to first use the staging entry point when configuring your network setup, by positively answering this question:</p> <pre><code>\u2714 Do you want to use Let's Encrypt staging entrypoint? [y/N] : y\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/#generating-a-self-signed-certificate","title":"Generating a Self-Signed certificate","text":"<p>Using this mode, you can easily let Cells generate a cert/key pair and use it to secure connections. This certificate is not recognized by a third-party authority, so it will be displayed as untrusted in a web-browser. </p> <p>However, it is a very good solution if you are behind a reverse-proxy to still enable TLS between the proxy and the server. This is in fact recommended if you want to use CellsSync with a Proxy as most proxy will only forward TLS-secured connections to TLS-secured upstream servers.</p> <p>About the RootCA</p> <p>When enabling self-signed mode, Cells will create (or use) a local RootCA and store it in <code>${CELLS_WORKING_DIR}/certs</code>. This CA can possibly be installed on a reverse-proxy machine to validate connection.</p> <p>Also, for development, if you want your browser to \"turn green\" (see the certificate as a valid one), you may install this rootCA in your system trust store. Do that easily:</p> <ul> <li>Install mkcert tool</li> <li>Export the CAROOT environment variable with value <code>CAROOT={$CELLS_HOME_USER_DIR}/.config/pydio/cells/certs</code></li> <li>Run <code>mkcert -install</code></li> <li>Relaunch your browser .</li> </ul>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/#disabling-tls","title":"Disabling TLS","text":"<p>You can finally fully disable TLS and let Cells serve connections over HTTP. This is not recommended but is good enough for testing or development. In that case, just beware that the gRPC gateway (required for CellsSync) will be exposed on a separate port that must be opened in the firewall, if any.</p>"},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/#notes","title":"Notes","text":""},{"location":"admin-guide/run-cells-in-production/configuring-cells-urls/configure-tls/#intermediate-certificates","title":"Intermediate certificates","text":"<p>If your Certificate Authority(CA) is not recognized by your browser, it might require from you to publish the Intermediate Certificates along with your certificates (Apache2 user might be used to the <code>SSLCertificateChainFile</code> directive).</p> <p>To achieve this on Pydio Cells, you must concatenate both the certificate and the intermediate certificate inside the same file. Below is an example of appending the intermediate certificate to your certificate: </p> <pre><code>cat the_certificate.crt &gt; fullcert.crt\ncat intermediate_cert.crt &gt;&gt; fullcert.crt\n</code></pre> <p>You can then proceed to installation, by using the custom certificates option and by providing the new fullcert.crt and the key.</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/index/","title":"Upgrades","text":"<p>This section provides detailed information about Cells upgrades.</p> <ul> <li>Software Upgrades</li> <li>Major Versions Upgrade Informations</li> </ul>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/","title":"Software Upgrades","text":"<p>Cells binary is self-contained and can be easily updated / upgraded. Use the in-app tool, the command-line, or simply replace the existing binary by the latest binary. All necessary migrations will be performed on version-change detection. Downgrading is not possible though, as downward migrations are generally not implemented.</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#in-app-tool","title":"In-App Tool","text":""},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#update-pydio-cells-to-the-latest-version","title":"Update Pydio Cells to the latest version","text":"<ul> <li>Check new updates available with the Check button,</li> <li>Select the version and install. Once it's finished you will be invited to restart your Cells instance.</li> <li>On Linux if you are bound to privileged ports (80 or 443) make sure to set the capabilities with:</li> </ul> <pre><code>  setcap 'cap_net_bind_service=+ep' cells\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#upgrade-pydio-cells-home-to-pydio-cells-enterprise","title":"Upgrade Pydio Cells Home to Pydio Cells Enterprise","text":"<p>Click on Upgrade to Cells Enterprise:</p> <ul> <li>A menu appears, proceed by clicking on start.</li> <li>You must accept the terms of the license (check box at the bottom).</li> <li>You are now invited to provide your License Key.</li> <li>Press install now.</li> <li>If you are on Linux and using port <code>80</code> and/or <code>443</code>, make sure to give correct permission to your binary:</li> </ul> <pre><code>sudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#command-line","title":"Command Line","text":""},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#update-pydio-cells-to-the-latest-version_1","title":"Update Pydio Cells to the latest version","text":"<ul> <li>Run the command <code>./cells update</code></li> <li>Identify the latest version number available (for instance 4.0.1)</li> <li>Run: <code>./cells update --version=4.0.1</code></li> <li>If you are on Linux and using port <code>80/443</code>, set the capabilities with: <code>setcap 'cap_net_bind_service=+ep' cells</code>,</li> <li>Restart Cells</li> </ul>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#upgrade-from-home-to-enterprise-distribution","title":"Upgrade from Home to Enterprise Distribution","text":"<ul> <li>Stop the Cells service</li> <li>Download the latest <code>cells-enterprise</code> binary and replace the current one (if you are using <code>systemd</code> either rename the binary to <code>cells</code> or update your <code>cells.service</code> target)</li> <li>Add the key provided by our sales team in a <code>pydio-license</code> file owned by the user running Cells in your <code>CELLS_WORKING_DIR</code> directory</li> <li>Restart Cells.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#notes","title":"Notes","text":""},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#disabling-automatic-checks","title":"Disabling automatic checks","text":"<p>In some situations, your server is not able/allowed to access the internet. You can turn off the automatic checks to avoid seeing errors in your admin dashboard. </p> <ul> <li>Go to: <code>Admin Web Console &gt; Software Updates</code> </li> <li>Check the <code>disable update checks</code> box. </li> </ul>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#security","title":"Security","text":"<p>To provide an additional security layer and to avoid MITM attack, all binaries downloaded from the official update server are signed with our private key: the server always check the validity of the package it has downloaded before applying the upgrade (by replacing the Pydio Cells binary).</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#do-not-forget-setcap","title":"Do not forget setcap!","text":"<p>After Updating always make sure to set the capabilities if you are running on a Linux server.</p> <pre><code>setcap 'cap_net_bind_service=+ep' cells\n</code></pre> <p>This is not compulsory if you use our recommended <code>cells.service</code> systemd configuration that defines this parameter: <code>AmbientCapabilities=CAP_NET_BIND_SERVICE</code>.  We yet strongly suggest to do it so that you won't get stuck in the future if you ever happen to try starting the apoplication by directly runing <code>cells start</code> with the <code>pydio</code> user. </p>"},{"location":"admin-guide/run-cells-in-production/upgrades/software-upgrades/#upgrading-from-cells-to-cells-enterprise","title":"Upgrading from Cells to Cells Enterprise","text":"<p>After upgrading to enterprise distribution, make sure that you have the license file, located in <code>CELLS_WORKING_DIR/pydio-license</code>.</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/","title":"Major Versions Upgrade Informations","text":"<p>This page collects information about noticeable changes to take care when upgrading to Cells new major versions.</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#cells-v4","title":"Cells v4","text":"<p>Major codebase changes for embracing Go Modules, upgrading dependencies, and simplifying microservices framework to ease cluster deployments.  Upgrade is done by In-App Tool, but there are a couple of important notes:</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#1-backup","title":"1 - Backup","text":"<p>As any major version, make sure to have a good backup of your MySQL database as well as your CELLS_WORKING_DIR content, except for the actual data but including the <code>.minio.sys</code> folder if possible. </p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#2-authentification-tokens-refreshed","title":"2 - Authentification Tokens refreshed","text":"<p>Hydra JWKs will be regenerated in the DB, with the effect of invalidating all existing authentication tokens. As a result, you will be logged out after upgrade, and if you are using Personal Access Tokens, you will have to regenerate new ones. Other applications like CellsSync will require re-authentication as well (see below).  </p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#3-cells-sites-configuration","title":"3 - Cells Sites configuration","text":"<p>Except for a TLS Let's Encrypt setup, Cells Sites \"Bind Addresses\" should now not use a domain name anymore. </p> <p>A bind address requires a binding PORT which will be the port your application will listen to (use standard port for Let's Encrypt), and a binding HOST that will either be a Network Interface IP, hostname (or domain name in the case of Let's Encrypt). If you have connection issue after upgrade, make sure to edit sites to bind to e.g. <code>0.0.0.0:8080</code> instead of <code>domain.name:8080</code> (using <code>cells configure sites</code> or by simply editing the <code>pydio.json</code> file). </p> <p>For a TLS setup with Let's Encrypt, the domain name must be used with the standard port 443 (other addresses can be used for alternate access only), as required by the ACME challenge.</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#4-cellssync-client-compatibility","title":"4 - CellsSync client compatibility","text":"<p>An important change introduced in v4 creates a compatibility issue between specific server versions and CellsSync versions. Please refer to the Connect Desktop Sync section to learn more. </p> <p>TL;DR: </p> <ul> <li>If you do not plan to upgrade, do not upgrade Cells Sync either. </li> <li>If you do upgrade to v4, do upgrade Cells Sync, and you will also have to launch a specific processing on your server datasources.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#5-collation-issues-at-upgrade","title":"5 - Collation issues at upgrade","text":"<p>While upgrading to Cells v4 from an older version, you might get this warning:</p> <pre><code>WARN    pydio.grpc.policy   [SQL] *****************************************************************************\nWARN    pydio.grpc.policy   [SQL] \nWARN    pydio.grpc.policy   [SQL]   The following tables have a character set that does not match the default character set for the database...\nWARN    pydio.grpc.policy   [SQL]       {\"name\": \"idm_policy_rel\", \"collation\": \"latin1_swedish_ci\"}\nWARN    pydio.grpc.policy   [SQL]       {\"name\": \"ladon_policy_subject\", \"collation\": \"latin1_swedish_ci\"}\nWARN    pydio.grpc.policy   [SQL]       {\"name\": \"idm_workspace_policies\", \"collation\": \"latin1_swedish_ci\"}\n# (... more warnings...)  \nWARN    pydio.grpc.policy   [SQL]   It might be due to the database being migrated from another system or the default database having been updated.\nWARN    pydio.grpc.policy   [SQL]   It could potentially lead to issues during upgrades so we you should pre-emptively fix the tables collations.\nWARN    pydio.grpc.policy   [SQL]   You can find more information here : https://pydio.com/kb/...\nWARN    pydio.grpc.policy   [SQL] \nWARN    pydio.grpc.policy   [SQL] *******************************************************************************\n</code></pre> <p>and/or this error:</p> <pre><code>ERROR   pydio.grpc.oauth    Stopping all migrations as some tables may have collations differing from the database defaults. This may break migrations and foreign keys.\n</code></pre> <p>This have been seen on some old instances that went through various OS upgrades and migrations and landed in a not very clean state in terms of character sets and collation. This had no impact on the running instance in v3- versions but is problematic while running DB migrations to upgrade to Cells v4. Rather than risking to end up with a broken instance, we chose to prevent migration when we are in this case.</p> <p>To solve this issue, you should:</p> <ul> <li>Stop Cells,</li> <li>Insure that no process is left (e.g. by running: <code>ps -afe | grep cells</code>),</li> <li>Perform a backup of your DB,</li> <li>Run following SQL commands:</li> </ul> <pre><code># Create a custom script in /tmp folder\necho \"SET FOREIGN_KEY_CHECKS=0;\" &gt; /tmp/upgrade.sql\nmysql -N -upydio -p -e \"SELECT CONCAT('ALTER TABLE ', tbl.TABLE_SCHEMA, '.', tbl.TABLE_NAME, ' CONVERT TO CHARACTER SET utf8mb4;') FROM INFORMATION_SCHEMA.TABLES tbl WHERE TABLE_SCHEMA='cells' AND TABLE_TYPE='BASE TABLE' AND TABLE_COLLATION NOT LIKE 'ascii%' AND TABLE_NAME NOT LIKE 'hydra_%';\" &gt;&gt; /tmp/upgrade.sql\necho \"SET FOREIGN_KEY_CHECKS=1;\" &gt;&gt; /tmp/upgrade.sql\n# Run it against you DB\nmysql -upydio -p cells &lt; /tmp/upgrade.sql\n</code></pre> <p>WARNING: Do not run this script until you see the warning or error described above: it might corrupt an otherwise perfectly fine instance. </p> <p>You can then restart Cells, the errors and warnings should be gone and your migration should run without further issue. </p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#cells-v3","title":"Cells v3","text":"<p>Introducing new \"Flat\" datasource format and many Cells Flows new features.</p> <p>Upgrade is straight-forward by using the In-App Tool.</p>"},{"location":"admin-guide/run-cells-in-production/upgrades/major-versions-upgrade-informations/#cells-v2","title":"Cells v2","text":"<p>Synchronization rebooted and standard authentication development.</p> <p>Upgrade is straight-forward by using the In-App Tool.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/index/","title":"Operational Maintenance","text":"<p>Pydio Cells provides a handset of tools to monitor your installation on a day-to-day basis, and making sure to keep its storage footprint under control. </p> <ul> <li>Truncate Logs / Audits</li> <li>Purge Activities / Notifications</li> <li>Monitoring Tools</li> <li>Backup / Recover</li> </ul>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/truncate-logs-audits/","title":"Truncate Logs / Audits","text":"<p>With time, running Cells in production may end up generating an important amount of log files and other non-business data. This page describes the locations you may have to watch for storage usage on your server, and eventually how you can automate cleaning/truncation of such data.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/truncate-logs-audits/#system-logs","title":"System Logs","text":"<p>All application logs will be stored both on file and inside an internal database.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/truncate-logs-audits/#files","title":"Files","text":"<p>Rotating files under <code>${CELLS_WORKING_DIR}/logs/</code>: these are outputted in JSON for easy collection by external tools (Elastic/Logstash/Kibana stacks or equivalent).</p> <p>These files are automatically rotated based on their size (10MB max per file) and copies are removed after 28 days.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/truncate-logs-audits/#internal-db","title":"Internal DB","text":"<p>In order to be able to easily display them and search them in the user interface, logs are also collected by an internal service and stored inside an internal DB (Bleve or Mongo DB, depending on your setup).</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/truncate-logs-audits/#when-using-bleve","title":"When using Bleve","text":"<p>This on-file database can be found under <code>$CELLS_SERVICE_DIR/pydio.grpc.log/syslog.bleve</code>. This one is automatically rotated based on its size (200MB per DB), but it is not truncated automatically.</p> <p>When the size of the DB reaches its maximum size, it is replicated for backup, thus in the folder you may see the following listing. DB folder with the greatest index is always most recent.</p> <pre><code> $&gt; ls $CELLS_SERVICE_DIR/pydio.grpc.log\n syslog.bleve\n syslog.bleve.001\n syslog.bleve.002\n syslog.bleve.003\n syslog.bleve.004\n....\n</code></pre> <p>[Ent] Cleaning DB folders with Scheduler/Cells Flows</p> <p>As of Cells Enterprise v3, a ready-to-use job is inserted in the Scheduler (or Cells Flows if you have a license for it) that triggers automatically the removal of older DB folders. Job is disabled by default, but you can enable it and either run it manually or program a schedule for automated runs.</p> <p>Job parameters allow setting the maximum size to keep, and an optional maximum size for Audit Logs databases as well (see below about Audit Logs).</p> <p>Cleaning DB folders with Command-Line</p> <p>For home users, logs purge can be applied using command line with the <code>clean logs</code> command. Its usage is described below:</p> <pre><code>Usage:\n  ./cells admin clean logs [flags]\n\nFlags:\n  -s, --service string     Log service to truncate (use log by default) (default \"log\")\n  -t, --threshold string   Size of logs to keep, specify in bytes (e.g 50MB, 1GB, ...)\n</code></pre> <p>Cleaning DB folders manually</p> <p>You can safely remove oldest folders. Restarting Cells will automatically rename remaining folders consistently. For example:</p> <pre><code># Delete oldest foldesr\n$&gt; cd $CELLS_SERVICE_DIR/pydio.grpc.log\n$&gt; rm -rf syslog.bleve syslog.bleve.001 syslog.bleve.002\n# List content\n$&gt; ls\nsyslog.bleve.003\nsyslog.bleve.004\n# ==&gt; RESTART CELLS and check content\n$&gt; ls\nsyslog.bleve\nsyslog.bleve.001\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/truncate-logs-audits/#ent-audit-logs","title":"[Ent] Audit Logs","text":"<p>In Cells Enterprise, Audit Logs are handled in the same way as system logs. You can use methods described in the previous section, just replacing the <code>pydio.grpc.log</code> service by <code>pydio.grpc.audit</code>.</p> <p>For example:</p> <pre><code> $&gt; ls $CELLS_SERVICE_DIR/pydio.grpc.audit\n auditlog.bleve\n auditlog.bleve.001\n auditlog.bleve.002\n</code></pre> <p>Or</p> <pre><code># Truncate at 100MB\n$&gt; ./cells-enterprise admin clean logs --service audit --threshold=100MB\n</code></pre> <p>Beware that you should export your audit log before truncating them, as they contain sensitive information!</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/purge-activities-notifications/","title":"Purge Activities / Notifications","text":""},{"location":"admin-guide/run-cells-in-production/operational-maintenance/purge-activities-notifications/#activities-model","title":"Activities model","text":"<p>In Pydio Cells, activities are designed as a generic concept following social network feeds model : an Object can receive activities from external events in its \"inbox\" and has its own self-triggered events exposed in its \"outbox\". This can model be compared to the social network feeds represented by a user \"story\" (outbox) and his/her wall (\"inbox'). </p> <p>In Cells it is applied in different contexts:  </p> <p>Users \"inboxes\" represent the notifications received when watching a file or folder for modifications.</p> <p></p> <p>Nodes (files/folders) \"outboxes\" registers all activities of a given node and all its children.</p> <p></p> <p>These activities are stored in the Activity Stream 2.0 format inside a onfile database. By default, these activities are kept forever, leading the on-file Bolt Database to grow, and eventually consume a lot of RAM. These activites are not used for Audit logs, and thus can be safely purged after a while.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/purge-activities-notifications/#ent-purging-users-notifications-with-schedulercells-flows","title":"[Ent] Purging Users Notifications with Scheduler/Cells Flows","text":"<p>Starting with Cells v3, a default job is inserted at startup for purging activities based on specific parameters. It is disabled by default, you can enable it and either run manually or setup a scheduler for automated run.</p> <p></p> <p>\"Purge Users Notifications\" job has the following parameters:</p> Parameters Description Default KeepAtLeast Minimum number of activities to keep for each file or folder, starting from the most recent ones. 1 KeepLast Maximum number of activities to keep for each file or folder (removing the oldest ones 10 UpdatedDays Purge activities recorder before a specific date (today minus the number of days. 30days <p>As explained above, this job applies to the \"users' inboxes\". After a purge, the activity database is entirely cloned and re-indexed for a better defragmentation.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/purge-activities-notifications/#ent-purging-filesfolders-activities-using-schedulercells-flows","title":"[Ent] Purging Files/Folders Activities using Scheduler/Cells Flows","text":"<p>Similarly to the \"Purge Users Notifications\", a \"Purge Files Activities\" job is available for automated run, with the same parameters. It is applied to the \"nodes' outboxes\". </p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/purge-activities-notifications/#using-command-line","title":"Using Command-Line","text":"<p>For home users or for more options, it is possible to manually trigger an operation similar to the scheduler jobs by using the <code>clean activities</code> command.</p> <pre><code>Usage:\n  ./cells admin clean activities [flags]\n\nFlags:\n  -a, --admin string     Provide login of the administrator user\n  -b, --box string       Either inbox (notifications received) or outbox (user activity / file activity) (default \"outbox\")\n      --clear            After DB compaction, remove original file, otherwise keep it as a backup\n      --compact          Trigger DB compaction by copying boltDB into a new file (default true)\n      --db string        Point directly to a DB file to perform the purge offline\n  -h, --help             help for activities\n      --max int          Clear by keeping a maximum number of records inside each box\n      --min int          Keep at least N, 0 for clearing all records (default 1)\n  -o, --owner string     Specific user or node ID, or all (default \"*\")\n      --timeout string   Set a longer timeout if there are tons of activities to purge (duration) (default \"6h\")\n  -t, --type string      Activity type, one of 'nodes' or 'users' (default \"nodes\")\n      --updated string   Clear by keeping all records updated before a given date. Use golang duration, e.g. '3d' will keep all records updated \n</code></pre> <p>You can find here the notions explained above : type is one of \"nodes\" or \"users\", box is one of \"inbox\" or \"outbox\". Other criteria for purging activities are similar to the jobs parameters.</p> <p>An interesting flag is the <code>--db</code> allowing to directly point to a database file. This allows applying the purge operation offline. This must be done with Cells service stopped, and can be applied to the <code>{CELLS_WORKING_DIR}/services/pydio.grpc.activity/activities.db</code> file.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/monitoring-tools/","title":"Monitoring Tools","text":"<p>When deployed inside an infrastructure providing monitoring dashboard and tools, Cells provides some specific entry points for grabbing statistics and healtcheck information. </p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/monitoring-tools/#healthcheck-endpoint","title":"Healthcheck Endpoint","text":"<p>Cells provides an optional HTTP endpoint that lists all micro-services and their statuses (in JSON format). If all services are up and running, endpoint returns with a 200 status code, and a 500 if one service is down.</p> <p>To enable this endpoint, pass a port number via the <code>CELLS_HEALTHCHECK=6565</code> environment variable (or via the --healthcheck command flag). Once set, healthcheck endpoint is available with a <code>GET http://your-cells:6565/healthcheck/</code> request.</p> <p>Basic Authentication is available by setting the following configuration :</p> <pre><code>./cells admin config set pydio.grpc.healthcheck username \"myusername\"\n./cells admin config set pydio.grpc.healthcheck password \"mypassword\"\n</code></pre> <p>Please beware that this endpoint is not protected by default: it is your responsibility to correctly setup your firewall or use the basic authentication.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/monitoring-tools/#prometheus-openmetrics","title":"Prometheus / OpenMetrics","text":"<p>Cells code is instrumented with Prometheus gauges for providing metrics about its internals (Golang Goroutines number, memory used per service, etc.). It is best coupled with a Grafana monitoring dashboard.</p> <p>Prerequisites to collect the metrics are the following:</p> <ul> <li>Enable the metrics endpoints on Cells by providing the <code>CELLS_ENABLE_METRICS=true</code> environment variable or by adding the flag <code>--enable_metrics</code> to cells' start command.</li> <li>Prometheus</li> </ul> <p>and for the <code>prometheus.yml</code> configuration append this instruction.</p> <pre><code>- job_name: \"cells\"\n    file_sd_configs:\n      - files:\n          - ${CELLS_WORKING_DIR}/services/pydio.gateway.metrics/prom_clients.json\n</code></pre> <p>Make sure to replace $CELLS_WORKING_DIR by your actual working directory.</p> <p></p> <p>Please refer to the knowledge base for more information about the Prometheus/Grafana configuration.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/","title":"Backup / Recover","text":"<p>Always plan for the worst. </p> <p>Take steps to limit time loss and avoid headaches by doing regular backups of your Pydio Cells instance and data. You'll be all set for a speedy recovery in case of a data or configuration loss (that can happen if you're hit by a disaster such as hard-drive failure, power loss, bad upgrade process, etc.)</p> <p>This procedure is adapted for simple mono-node installation, in such case, you have to backup 2 sources of data:</p> <ul> <li><code>CELLS_WORKING_DIR</code> contains the configuration, the log files, some indexes that uses key-value stores (typically for search indexes) and the default data location. If you have followed our recommanded best practices, it is located under <code>/var/cells</code> in Linux-like machines. Please refer to the working directories page for further details. . The corresponding database</li> </ul> <p>If you have made a multi-node installation, be aware that you must backup both storage and datasource for each one of your nodes.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#backup-configuration-and-default-data-location","title":"Backup configuration and default data location","text":"<p>In the case of a vanilla installation, the location defined by <code>CELLS_WORKING_DIR</code> environment variable contains almost everything: </p> <ul> <li>it contains all configuration  </li> <li>it is also the parent of the <code>data</code> subfolder that contains the default datasources that are created at installation time. Please note that these default datasources contains in addition to the default business datasources, the hidden internal datasources that are used to store among others version files, thumbnails, etc.</li> </ul> <p>Create a backup of this folder, for instance:</p> <pre><code># Stop Cells before doing the backup\nsudo systemctl stop cells\n\n# Using rsync, first time will be longer and then we will only incrementally add and/or remove new files\nrsync -avr --delete /var/cells/ /home/pydio/backups/cells\n\n# Restart Cells\nsudo systemctl start cells\n</code></pre> <p>In this kind of setup, you cannot perform the backup while the service is running: the default key-value store that is used by some of the services, for e.g log and search indexes, must be stopped when you copy the files or the restored version will be corrupted.</p> <p>WARNING: proceed with extra care with rsync when using the <code>--delete</code> flag: inverting source and target folders will wipe everything in the source folders... So be careful to really use: <code>rsync -avr --delete &lt;source folder&gt; &lt;target folder&gt;</code></p> <p>Notes:</p> <ul> <li>We advise you to use rsync to regularly backup this folder: after first time, the followings will be quicker because it only transfers the difference.</li> <li>If you ever happen to mess with your installation without impacting the DB you can always restore this folder to your latest backup and then do a <code>./cells start</code> with a new (or a restored old) binary. You should be good to go.</li> <li>All the information about network, database and plugins configuration are stored inside the <code>&lt;CELLS_WORKING_DIR&gt;/pydio.json</code> file.</li> </ul>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#backup-additionnal-datasources","title":"Backup additionnal datasources","text":""},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#file-system-datasource","title":"File system datasource","text":"<p>All file based  datasources are defined by 4 things:</p> <ol> <li>the configuration that is stored in the <code>pydio.json</code> file (see above)</li> <li>the files that are stored in this datasource</li> <li>a related index that is stored as tables in the configured DB</li> <li>for file system based DS: a <code>.minio.sys</code> folder that is located in the parent folder of the datasource root folder. This hidden folder contains s3/minio meta data for the files and is shared with all datasources that are located in the same parent folder. </li> </ol> <p>To backup datasources, we must backup configuration, files and indexes. The index and the content of the <code>.minio.sys</code> folder can be automatically restored after data restoration by running a resync from the admin interface. But including this folder in your backups will gain quite some time on restoration.</p> <p>For \"structured storage\" datasource, indexes can be rebuilt automatically. But indexes are really important for \"flat storage\" datasources, as files are stored as blob inside the storage, and if loosing indexes does not loose any actual data, it will loose the files and folders names and structure! Specific tools are provided to dump DB index directly into your storage (inside a specific file) to secure your backup/recovery processes.</p> <p>You can find more details about datasources here. It is a good read to understand how data is actually stored inside the storage.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#s3-datasource","title":"S3 datasource","text":"<p>This is one of the main advantage of using a S3 backend for your datasources: this system is fully decoupled from your Pydio Cells instance. You should be able to directly manage your backup policies via your S3 provider manager interface.</p> <p>The configuration of this datasource is fully stored in the main <code>pydio.json</code> file and is backed up and restored together with your main system.</p> <p>Note that the Enterprise distribution offers two more datasource types (namely Google Cloud and Azure Blob storage) that are to be backed up the same way.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#backup-the-database","title":"Backup the database","text":"<p>In a vanilla single node instance, at installation, you have configured a database connection, usually the <code>cells</code> DB. In such case, you only need to backup (and restore) this single database.</p> <p>To perform a backup, you can use default mysql tool that is usually installed with your DB software. Typically, on Linux:</p> <pre><code>mysqldump -u pydio -p cells &gt; /home/pydio/backups/cells_sqldump_$(date -u +%Y-%m-%d).sql\n</code></pre> <p>where:</p> <ul> <li><code>-u &lt;user&gt;</code>: defines the user to be used</li> <li><code>-p</code> prompts you for the mysql password</li> <li><code>cells</code>: your database name</li> <li><code>&gt; /home/pydio/backups/cells_sqldump_$(date -u +%Y-%m-%d).sql</code>tells the tool where to store resulting data.</li> </ul> <p>You might adapt these options to your use case.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#recovery","title":"Recovery","text":""},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#restoring-the-data","title":"Restoring the data","text":"<p>If you have followed the above steps, restoring the data is quite easy:</p> <ul> <li>Restore the content of the <code>cells</code> folder at <code>$CELLS_WORKING_DIR</code>, e.g. <code>/var/cells</code> on Linux or <code>~/Library/Application\\ Support/Pydio/cells</code> on MacOS), insure files ownership and permissions are OK. </li> <li>Restore the database from your sql backup file: make sure to create an empty <code>cells</code> with correct owner and use the following command:   <code>mysql -u pydio -p cells &lt; /home/pydio/backups/cells_sqldump_&lt;relevant_date&gt;.sql</code></li> <li>Optionally restore the folders of any additional external filesystem datasources</li> </ul>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#post-restoration-and-before-launching-the-app","title":"Post restoration and before launching the app","text":"<p>If you restore the application on a different server or if some of the configuration like database, URLs, IP addresses have changed, you must double check in the <code>pydio.json</code> configuration file that can be found at the root of the <code>CELLS_WORKING_DIR</code> folder and adapt the values to the new one, typically:</p> <ul> <li>if hostname as changed, change <code>.defaults.urlInternal</code> property, you might also want to check <code>.PeerAdress</code> property of the various DS</li> <li>if public URL has changed, you have to change all occurrences of it (currently 4 in v1.4 and newer)</li> <li>if DB configuration has changed: adapt <code>.databases.dsn</code> property</li> </ul> <p>You can then retrieve the relevant Pydio Cells binary and simply relaunch the app.</p> <p>You should connect as an <code>admin</code> user after first restart and check that all datasources are correctly up and running, and optionally also rerun a sync if you where not able to correctly backup and restore the index and parent <code>.minio.sys</code> folder.</p>"},{"location":"admin-guide/run-cells-in-production/operational-maintenance/backup-recover/#clean-uninstall","title":"Clean uninstall","text":"<p>If you want to uninstall Cells, you need to :</p> <ul> <li>Stop cells service</li> <li>Drop the database cells</li> <li>Empty the Working Directories</li> </ul> <p>WARNING: be careful not to remove the parent 'pydio' folder, other applications, typically the Cells Sync Client, have their working default directory as siblings of the <code>cells</code> folder and store configuration and data inside it.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/index/","title":"Deploying Cells in a Distributed Environment","text":"<p>This chapter provides detailed information to install Cells in a distributed setup.</p> <ul> <li>Kubernetes Quick install</li> <li>Going Stateless</li> <li>External Services</li> <li>Configuring with URLs</li> <li>Deploying Cells Nodes</li> <li>Migrating from Single Node</li> <li>K8s Advanced Parameters</li> <li>Providing HA with Docker Compose</li> </ul>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/kubernetes-quick-install/","title":"Kubernetes Quick install","text":"<p>These commands deploy a fully runnable instance of Cells on Kubernetes. Use it to quickly spin off a production-ready environment having high-availability and horizontal scalability at the ready from the get-go</p> <ol> <li><p>Add the Pydio Cells Helm Chart repository <code>$ helm repo add cells https://download.pydio.com/pub/charts/helm</code></p></li> <li><p>Run the install command <code>$ helm install cells cells/cells --namespace cells --create-namespace</code> <li><p>The output will tell you how to access your app once the deployment is ready. It can take a few minutes.</p></li>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/kubernetes-quick-install/#go-further","title":"Go further","text":"<p>The default helm chart will deploy a Cells instance w/ dependencies but still being capable of running on the smallest of environment such as minikube.</p> <p>The main parameters required to achieve a production-ready deployment are described below.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/kubernetes-quick-install/#valuesyaml","title":"values.yaml","text":"<pre>\n<code>\n\n# NOTE : Cells Enterprise users can comment out the lines following the # [ED] comment\n\n# Define what image version of Cells you want to use to have more control over your update\nimage:\n  # [ED]\n  # repository: pydio/cells-enterprise\n  tag: latest\n\n# Achieve high availability by starting a minimum number of replicas of the Cells stateless Pod\n# NOTE: each dependency of Cells has their own high availability strategy\n# Achieve horizontal scalability by setting up an autoscaling strategy \nautoscaling:\n  enabled: true\n  minReplicas: 3\n  maxReplicas: 5\n  targetCPUUtilizationPercentage: 80\n  targetMemoryUtilizationPercentage: 80\n\nresources:\n  limits:\n    cpu: \"500m\"\n    memory: \"2G\"\n\n# Achieve public-facing deployment by adding Ingress w/ Nginx as a load balancer\n# Uses lets-encrypt as a certficate authority\ningress:\n  enabled: true\n  clusterissuer:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: myexampleaddress@gmail.com\n  hostname: cluster.pydiocells.com\n  tls: true\n  selfSigned: true\n\nservice:\n  type: ClusterIP\n  # [ED]\n  # customconfigs: {\n  #  \"defaults/license/data\": \"MYLICENSE\",\n  # }\n</code>\n</pre> <p>Just run the following command in order to install and activate all the parameters defined above :</p> <ol> <li><code>$ helm update --install cells cells/cells --namespace cells -f values.yaml</code></li> </ol> <p>With sufficient resource, this will transform your basic non-secured system to a letsencrypt-secured load balancer in front of a highly available and horizontally scalable Cells deployment. </p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/kubernetes-quick-install/#not-sufficient-yet","title":"Not sufficient yet ?","text":"<p>Read on the rest of the pages in this section to get a deeper understanding of how things work in a Pydio Cells cluster and find the configurations you need.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/going-stateless/","title":"Going Stateless","text":"<p>The rest of this section is a must-read to understand what you are doing when deploying Cells in cluster mode.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/going-stateless/#deploying-software-in-a-distributed-environment","title":"Deploying software in a distributed environment","text":"<p>A key to deploying software in a distributed environment is the ability to easily replicate a running instance of the software while being sure that any new clone will share data and communicate with existing ones: </p> <ul> <li>Providing high-availability is about ensuring that if a running node is broken, another one can easily take over. </li> <li>Providing horizontal scalability is about ensuring that if a running node is overloaded, one can easily add a new one and balance the load on it. </li> </ul> <p>To achieve such flexibility, DevOps generally use pre-packaged software \"images\" (generally a virtual machine, or a container) that are isolated one from another in terms of CPU and memory, but working inside a private network to communicate with each other. It is crucial that these running images do not self-contain any business data that would be inacessible to any other instances.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/going-stateless/#cells-default-setup-limitation","title":"Cells default setup limitation","text":"<p>A standard standalone Cells setup uses multiple ways of storing data :</p> <ul> <li>Configuration, Vault configuration (JSON files)</li> <li>Logs, search indexes, activities, ... (BoltDB/BleveSearch files)</li> <li>Data tree, Permissions, Identity, ... (SQL)</li> <li>Cache, Service Registry, Pub / Sub events (in-memory)</li> <li>Data (files, S3)</li> </ul> <p>To have multiple Cells cooperate in multiple VMs in a network, we need to ensure that the same data is available simultaneously by each node without the possibility of it being corrupted. We can directly rule out a shared filesystem as it would not be reliable enough and would quickly lead to locking issues.</p> <p></p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/going-stateless/#a-cells-stateless-deployment","title":"A Cells stateless deployment","text":"<p>By plugging in new external storage drivers, we give Cells the flexibility to be accessible by all images safely and concurrently.</p> <p>We chose external storage that can also be clustered so that each piece of the puzzle can achieve high availability and horizontal scalability individually :</p> <ul> <li>Configuration (JSON files, ETCD)</li> <li>Vault Configuration (JSON files, Hashicorp Vault)</li> <li>Logs, search indexes, activities, ... (BoltDB/BleveSearch files, MongoDB)</li> <li>Data tree, Permissions, Identity, ... (SQL)</li> <li>Cache (in-memory, Redis)</li> <li>Pub / Sub events (in-memory, Nats.io)</li> <li>Data (files, S3)</li> </ul> <p></p> <p>In a more concise view, we now have : </p> <p></p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/external-services/","title":"External Services","text":"<p>As explained in the section above, Cells can externalize all storage and services layers to more easily provide a stateless, replicable image. Each of these external services are open source and can themselves be deployed in a highly-available setup. </p> <p>This page gathers information about each service and links to the documentation for their installation (that will depend on your cloud). Being a core requirement of Cells, MySQL/MariaDB is not handled here.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/external-services/#etcd-distributed-configurations-and-services-registry","title":"ETCD: distributed configurations and services registry","text":"<p>etcd is a strongly consistent, distributed key-value store that provides a reliable way to store data that needs to be accessed by a distributed system or cluster of machines. It gracefully handles leader elections during network partitions and can tolerate machine failure, even in the leader node.</p> <p>Cells uses Etcd for sharing configuration across cluster nodes, and keep a dynamic \"registry\" of all Cells services currently running in the cluster.</p> <p>Learn more at https://etcd.io/</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/external-services/#hashicorp-vault-secure-storage-for-master-keys-and-certificates","title":"Hashicorp VAULT: secure storage for master keys and certificates","text":"<p>Manage Secrets &amp; Protect Sensitive Data : secure, store and tightly control access to tokens, passwords, certificates, encryption keys for protecting secrets and other sensitive data using a UI, CLI, or HTTP API.</p> <p>Cells uses Vault to replace the file-base keyring by a distributed and secure storage.</p> <p>Learn more at https://www.vaultproject.io/docs</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/external-services/#nats-message-broker-and-distributed-queues","title":"NATS: message broker and distributed queues","text":"<p>NATS is a connective technology built for the ever increasingly hyper-connected world. It is a single technology that enables applications to securely communicate across any combination of cloud vendors, on-premise, edge, web and mobile, and devices. NATS consists of a family of open source products that are tightly integrated but can be deployed easily and independently. NATS is being used globally by thousands of companies, spanning use-cases including microservices, edge computing, mobile, IoT and can be used to augment or replace traditional messaging.</p> <p>Cells can connect to a Nats server for messages broadcasting inside the application, replacing the in-house gRPC broker used in simpler deployments.</p> <p>Jetstream is the built-in persistence engine of NATS. It enables messages to be stored and replayed at a later time. Unlike NATS Core which requires you to have an active subscription to process messages as they happen, JetStream allows the NATS server to capture messages and replay them to consumers as needed. </p> <p>In a standalone deployment, Cells uses a built-in queue, storing messages locally on disk. In a clustered environment where Cells runs in stateless mode, we use NATS JetStream to have distributed, fault-tolerant and scalable FIFO queues.</p> <p>Warning: NATS requires additional configuration to activate JetStream in cluster environment.</p> <p>Learn more at https://docs.nats.io/</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/external-services/#redis-shared-cache","title":"Redis: shared cache","text":"<p>Redis is the open source, in-memory data store used by millions of developers as a database, cache, streaming engine, and message broker.</p> <p>It is used by Cells for ephemeral and shared caching </p> <p>Learn more at https://redis.io/docs/</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/external-services/#mongo-db-nosql-database","title":"Mongo DB: NoSQL database","text":"<p>Mongo DB offers a flexible document data model along with support for ad-hoc queries, secondary indexing, and real-time aggregations to provide powerful ways to access and analyze your data.</p> <p>It is used by many Cells services that are best-fitted for storing data in a NoSQL format.</p> <p>Learn more at https://www.mongodb.com/try/download/community</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/","title":"Configuring with URLs","text":"<p>Cells configuration for all storages is done using a \"scheme-based\" pattern, that fully describes a given driver used by Cells.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#flags-and-urls","title":"Flags and URLs","text":"<p>Let's have a look at some of the available Flags advertised by the command (output below is filtered): </p> <pre><code>% CELLS_DISPLAY_HIDDEN_FLAGS=true ./cells start --help\n\nFlags:\n      --broker string                Pub/sub service URL for events broadcast. Supported schemes: grpc|mem|nats|rabbit (default \"mem://\")\n      --cache string                 Sharded Cache (default \"bigcache://\")\n      --discovery string             Combine registry, config and pub/sub discovery service (default \"mem://\")\n      --registry string              Registry URL used to manage services. Supported schemes: etcd|file|grpc|mem (default \"mem://?cache=shared\")\n      --shortcache string            Short cache (default \"pm://\")\n      --persistqueue string          Persisting Queue (default \"file://\")\n\nGlobal Flags:\n      --certs_store string   Certificates Store URL. Can be switched to vault://host:port/secretPath (default \"file://${CELLS_WORKING_DIR}/certs\")\n      --config string        Configuration storage URL. Supported schemes: etcd|file|grpc|mem|vault|vaults (default \"file://${CELLS_WORKING_DIR}/pydio.json\")\n      --keyring string       Keyring URL. Can be switched to vault://host:port/secretPath?key=storeKey (default \"file:///${CELLS_WORKING_DIR}/cells-vault-key?keyring=true\")\n      --vault string         Vault location, automatically detected from config url, unless an URL is provided (same schemes as config) (default \"detect\")\n</code></pre> <p>As you can see, most default values use a \"mem://\" (a.k.a memory) or \"file://\" scheme. This shows that data attached to these store will be maintained in memory or on-file. If we want one of these store to another technology, we can use one of the 'supported scheme' to pass a connection string and additional informations required by Cells with a different URL. For example, assuming an ETCD cluster is running and maintained aside in the cluster, we can easily start Cells with  <pre><code>% ./cells start --registry=etcd://:2379\n</code></pre></p> <p>Or as all our Flags can be configured by their corresponding CELLS_[FLAG_NAME_UPPER_CASE] environment variable, we could use :  <pre><code>% export CELLS_REGISTRY=etcd://:2379\n% ./cells start\n</code></pre></p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#supported-schemes","title":"Supported Schemes","text":"<p>We will explain below the supported schemes for each flag</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#registry","title":"Registry","text":"<p>The registry maintains a list of all Cells services (started or not) available in the cluster.</p> <p>Flag <code>--registry</code> or environment <code>CELLS_REGISTRY</code></p> Scheme Example Comment mem mem://?cache=shared This is the default. It provides an in-memory registry that is exposed via gRPC by the pydio.grpc.registry service etcd etcd://:2379/[prefix] Instead storing registry state in-memory, store it in an ETCD K/V store. This should be the default in Cluster mode. grpc grpc://:8002 This is the default for fork processes (whether the main process is using mem:// or etcd://). Connects to a running pydio.grpc.registry locally on the 8002 port"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#broker","title":"Broker","text":"<p>The broker provides Publish/Subscribe pattern for broadcasting events.</p> <p>Flag <code>--broker</code> or environment <code>CELLS_BROKER</code></p> Scheme Example Comment mem mem:// This is the default. It uses google cloud golang pub/sub library under the hood. It exposes itself as gRPC vie the pydio.grpc.broker service nats nats://:4222/[prefix] Connect to a Nats.io cluster for messaging. This should be the default in Cluster mode. grpc grpc://:8002 This is the default for fork processes (whether the main process is using mem:// or nats://). Connects to a running pydio.grpc.broker service locally on the 8002 port"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#persistqueue","title":"PersistQueue","text":"<p>The persisting queues mainly stores events for tasks when triggering large jobs (e.g generation of tumbnails when a user upload a folder with 1000s images) to improve performance and constistency.</p> Scheme Example Comment file file:// This is the default. Cells server uses the local file system to store events nats nats://:4222/[prefix] Connect to a Nats.io cluster for messaging. This should be the default in Cluster mode."},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#config-vault-certificates","title":"Config, Vault, Certificates","text":"<p>A watchable key/value API that is common to config and vault flags.</p> <p>Flag <code>--config</code> or environment <code>CELLS_CONFIG</code> : unencrypted configuration, as they can be found in the pydio.json file Flag <code>--vault</code> or environment <code>CELLS_VAULT</code> : specific configurations that must be encrypted using a master key (stored in the Keyring, see below). Flag <code>--certs_store</code> or environment <code>CELLS_CERTS_STORE</code> : Encrypted store for Caddy to store generated certificates. Uses a master key (stored in the Keyring, see below).  </p> Scheme Example Comment file file:///{path/to/pydio.json} This is the default. Stores configurations as JSON inside a local file. grpc grpc://:8002 This is the default for fork processes. Connects to a running pydio.grpc.config service locally on the 8002 port etcd etcd://:2379/[prefix] Used in cluster mode writing/reading configuration from an ETCD cluster vault vault://localhot:8200/[prefix] Used in cluster mode for encrypted values, points to a Hashicorp Vault key/value secret storage exposed on https://localhost:8200 vaults vaults://localhot:8200/[prefix] Same as previous but with TLS connection"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#discovery","title":"Discovery","text":"<p>The discovery flag is simply a shortcut for <code>--broker</code>, <code>--registry</code> and <code>--config</code> to shorten the fork processes command. If you look at the cells process, you will see all forks running with <code>--discovery grpc://:8002</code>, as the main process on a given machine always starts a set of grpc services to expose configs, broker and registry.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#cache","title":"Cache","text":"<p>Caching layer to heavy data requests. </p> <p>Flag <code>--cache</code> or environment <code>CELLS_CACHE</code></p> Scheme Example Comment bigcache bigcache:// Uses BigCache Go library (in memory, with pre-allocation of memory segments). pm pm:// Uses patrickmm/cache Go library (in memory, simple synchronised maps) redis redis://:6379 Connects to a Redis cluster for caching. Should be the default for Cluster mode."},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#keyring","title":"Keyring","text":"<p>As explained above, Vault and Certificates Store require a master key for encrypting data. This one is stored in the keyring.</p> <p>Flag <code>--keyring</code> or environment <code>CELLS_KEYRING</code></p> Scheme Example Comment file file://{path-to-cells_vault_key} Stores generated key on-file vault vault://localhost:8200/kv Stores keyring data inside HashiCorp vault"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/configuring-with-urls/#tls-connection-with-client-certificates","title":"TLS Connection with client certificates","text":"<p>TLS connections can be configured to secure the communication between Cells and external services.</p> <p>You first need to import the certificate via the command line to make it available to the application :</p> <pre><code>$ cells admin cert import --uuid my-client-cert myclientcert.pem\n$ cells admin cert import --uuid my-client-cert-key myclientcertkey.pem\n$ cells admin cert import --uuid my-client-rootca myclientrootca.pem \n</code></pre> <p>The following external systems can be configured with TLS :</p> Scheme Parameter used Example <code>mysql+tls</code> mysql dsn (cells configure / pydio.json) <code>mysql+tls://root@tcp(localhost:3306)/cells</code><code>?parseTime=true&amp;ssl=true&amp;tlsCertCAUUID=my-client-rootca&amp;tlsCertKeyUUID=my-client-cert-key&amp;tlsCertUUID=my-client-cert</code> <code>mongodb</code> mongodb dsn (cells configure / pydio.json) <code>mongodb://cells-mongodb.cells.svc.cluster.local:27017/cells</code><code>?ssl=true&amp;tlsCertCAUUID=my-client-rootca&amp;tlsCertKeyUUID=my-client-cert-key&amp;tlsCertUUID=my-client-cert</code> <code>etcd+tls</code> --registry / --config (cells start flag)CELLS_REGISTRY / CELLS_BROKER (environment variable) <code>etcd+tls://:2379?ssl=true&amp;tlsCertCAUUID=my-client-rootca&amp;tlsCertKeyUUID=my-client-cert-key&amp;tlsCertUUID=my-client-cert</code> <code>nats</code> --broker (cells start flag)CELLS_BROKER (environment variable) <code>nats://:4222?ssl=true&amp;tlsCertCAUUID=my-client-rootca&amp;tlsCertKeyUUID=my-client-cert-key&amp;tlsCertUUID=my-client-cert</code> <code>redis+tls</code> --cache (cells start flag)CELLS_CACHE (environment variable) <code>redis+tls://:6379?ssl=true&amp;tlsCertCAUUID=my-client-rootca&amp;tlsCertKeyUUID=my-client-cert-key&amp;tlsCertUUID=my-client-cert</code> <code>vaults</code> --keyring (cells start flag)CELLS_KEYRING (environment variable) <code>vaults://:8200?ssl=true&amp;tlsCertCAUUID=my-client-rootca&amp;tlsCertKeyUUID=my-client-cert-key&amp;tlsCertUUID=my-client-cert</code> <p>by using the following standard parameters :</p> Parameter Type Description <code>tlsCertStoreName</code> bool Store Name used in the server certificate to match <code>tlsCertInsecureHost</code> string Skip the store name verification <code>tlsCertUUID</code> string (cert) UUID of the imported certificate <code>tlsCertKeyUUID</code> string (cert) UUID of the imported certificate key <code>tlsCertCAUUID</code> string (cert) UUID of the imported certificate root ca"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/","title":"Deploying Cells Nodes","text":"<p>Once your environment is ready and all third-party dependencies are correctly running, you are now ready to start one or more  replicas of Cells nodes.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/#starting-cells-with-proper-parameters","title":"Starting Cells with proper parameters","text":"<p>As explained in Configuring with URLs, the key here will be to pass all the required flags (or their ENV counter-part) to the <code>cells configure</code>/<code>cells start</code> commands.</p> <p>Below is a list of ENVIRONMENT variables that will redefine internal defaults to use external services:</p> <pre><code>- CELLS_CONFIG=etcd://{ETCD_HOST}:{ETCD_PORT}/config\n- CELLS_VAULT=etcd://{ETCD_HOST}:{ETCD_PORT}/vault\n- CELLS_REGISTRY=etcd://{ETCD_HOST}:{ETCD_PORT}/registry\n- CELLS_BROKER=nats://{NATS_HOST}:{NATS_PORT}\n- CELLS_PERSISTQUEUE=nats://{NATS_HOST}:{NATS_PORT}\n- CELLS_KEYRING=vault://{VAULT_HOST}:{VAULT_PORT}/secret?key=master\n- CELLS_CERTS_STORE=vault://{VAULT_HOST}:{VAULT_PORT}/caddycerts\n- CELLS_CACHE=redis://{REDIS_HOST}:{REDIS_PORT}\n- VAULT_TOKEN={VAULT_ROOT_TOKEN}\n</code></pre> <p>Assuming that you have an internal DNS resolving services by their names and that you are using default ports for all, this could look like : </p> <pre><code>- CELLS_CONFIG=etcd://etcd:2379/config\n- CELLS_VAULT=etcd://etcd:2379/vault\n- CELLS_REGISTRY=etcd://etcd:2379/registry\n- CELLS_BROKER=nats://nats:4222\n- CELLS_PERSISTQUEUE=nats://nats:4222\n- CELLS_KEYRING=vault://vault:8200/secret?key=master\n- CELLS_CERTS_STORE=vault://vault:8200/caddycerts\n- CELLS_CACHE=redis://redis:6379\n- VAULT_TOKEN=${VAULT_ROOT_TOKEN}\n</code></pre> <p>Or, using command-line flags instead of Env, these could have been : </p> <pre><code>&gt; export VAULT_TOKEN=${VAULT_ROOT_TOKEN} # that one still requires ENV \n&gt; cells start --config=etcd://etcd:2379 --registry=etcd://etcd:2379 --broker=nats://nats:4222 --persistqueue=nats://nats:4222 --keyring=vault://vault:8200/secret?key=master --certs_store=vault://vault:8200/caddycerts --cache=redis://redis:6379\n</code></pre> <p>In the example above, we just specify the <code>config</code> URL: if no path is provided, it is automatically switched to \"URL/config\", and if CELLS_VAULT is not provided, it is inferred from config URL to \"URL/vault\". </p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/#a-beware-of-vault-vs-keyring","title":"A. Beware of --vault vs --keyring.","text":"<p>Beware that the <code>CELLS_VAULT</code> flag is not pointing to the Hashicorp Vault service (which is used in the <code>CELLS_KEYRING</code>) but it points to a configuration container similar to <code>CELLS_CONFIG</code>, where values are encrypted. The master key used for this encryption is itself stored in... the Keyring!</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/#b-hashicorp-vault-initialization","title":"B. Hashicorp Vault initialization","text":"<p>As you can see in the commands above, Vault is used for both the master keyring and for storing Cells embedded proxy (Caddy) generated-certificates. You must make sure that both KV storages \"secret\" and \"caddycerts\" are createad before starting. On a basic Vault install, the \"secret\" does exist by default, but you must create \"caddycerts\" with the following command: </p> <pre><code>&gt; export VAULT_TOKEN=${VAULT_ROOT_TOKEN}\n&gt; vault secrets enable -version=2 -path=caddycerts kv\n</code></pre> <p>The ${VAULT_ROOT_TOKEN} should be a safe token that is injected in your image in one way or another. </p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/#c-note-about-mongodb","title":"C. Note about MongoDB","text":"<p>Mongo DB support is not enabled via a start flag, but it is configured at first deployment. An existing Cells instance can also be migrated to support Mongo as described in the dedicated page.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/#first-run-installation","title":"First Run / Installation","text":"<p>When running Cells for the first time, you have to go through the <code>cells configure</code> process to set up some core configurations. In a cluster, automated approach, you must find a way to populate this configuration with your preset values. </p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/#running-cells-configure","title":"Running \"cells configure\"","text":"<p>One simple option is to simply run <code>cells configure</code> on the very first node you are starting, using the same flags/ENV as define above (to make sure that the config is written in ETCD).</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/deploying-cells-nodes/#using-docker","title":"Using Docker","text":"<p>If you are using Docker, our official images provide an internal bootstrap mechanism that tries to detect wether a configuration is properly set, and if not automatically use <code>cells configure</code> instead of <code>cells start</code>. By passing a reference to a YAML/JSON installation file, you can let the first start ingest this file and automatically restart the container in <code>start</code> mode.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/migrating-from-single-node/","title":"Migrating from Single Node","text":"<p>If you are already running a Cells instance on a mono-node server, you may want to improve its availability and scalability by replicating it to a multi-node cluster. </p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/migrating-from-single-node/#prerequisites","title":"Prerequisites","text":"<p>You must first make sure to upgrade Cells to at least version 4. </p> <p>We also assume that you have read the previous sections of this chapter:  </p> <ul> <li>Going Stateless provides an overview of our clustering concepts,  </li> <li>Configuring with URLS explains how to point Cells configuration toward the correct underlying services,   </li> <li>External Services explains how to set up all required cluster third-party services that will allow easy replication of the Cells image.  </li> </ul>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/migrating-from-single-node/#migrating-on-file-services-data-from-boltblevedb-to-mongodb","title":"Migrating on-file services data from Bolt/BleveDB to MongoDB","text":"<p>If you are already running a Cells V4 (or later) version with MongoDB, you can skip this section.</p> <p>The first dataset that must be made portable accross images is all the services-generated data that are stored on file-based DBs: parsed logs, audit data, activities, etc... This can be achieved by copying all these in a Mongo database and reconfiguring services to point to Mongo.</p> <p>To do that, simply use the following command : </p> <p><code>$&gt; cells admin config db add</code></p> <p>When prompted, choose 'NoSQL' database type and enter the MongoDB connection string (hostname, port, database name, etc).</p> <p><pre><code>$&gt; ./cells admin config db add    \n\u2714 NoSQL\n\u2714 mongodb\n\u2714 Please enter MongoDB server address. Can be in the form user:pass@host:port/dbName?key=value: \u2588ocalhost:27017/cells?maxPoolSize=20&amp;w=majority\n? Do you wish to use this storage for all services supporting MongoDB driver? [Y/n] \u2588\n</code></pre> At this point, select Y to modify configuration of all services to use Mongo instead of Bolt/Bleve.  <pre><code>## Performing NoSQL Installation\n\u2714 Starting installation now\nAssigning Document DSN to pydio.grpc.jobs\nAssigning Document DSN to pydio.grpc.jobs\nAssigning Document DSN to pydio.grpc.activity\nAssigning Document DSN to pydio.grpc.log\nAssigning Document DSN to pydio.grpc.docstore\nAssigning Document DSN to pydio.grpc.search\nAssigning Document DSN to pydio.grpc.chat\nAssigning Document DSN to pydio.grpc.mailer\nAssigning Document DSN to pydio.grpc.versions\n\u2714 Created main database\n? Do you wish to run migration for all assigned services?? [y/N] \u2588\n</code></pre> Finally, choose y to copy all data from Bolts and Bleve databases to Mongo. This may take some time, especially if you have a lot of logs and activities.  Once finished, your MongoDB is filled with data.</p> <p>You can test this migration by starting Cells as usual with <code>./cells start</code>. Everything should work as expected. </p> <p>Still, the pydio.grpc.search engine is not migrated, and you have to manually trigger a full re-indexation of the search engine, with <code>./cells admin resync --service pydio.grpc.search</code>. After that operation is finished, try to search something in the search engine, you should find correct results.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/migrating-from-single-node/#migrating-configuration-data-from-json-to-etcdvault","title":"Migrating configuration data from json to ETCD+VAULT","text":"<p>The other dataset to migrate from local filesystem to the external storages are all config-related. For that, you will use <code>./cells admin config copy</code> that expects --from and --to parameters in the URL form. </p> <p>Run <code>CELLS_DISPLAY_HIDDEN_FLAGS=true ./cells start --help</code> to look at the default URLs used for <code>--config</code>, <code>--certs_store</code>, <code>--keyring</code> and <code>--vault</code>.</p> <p>1 - Copy configs from JSON to ETCD: <pre><code>$&gt; ./cells admin config copy --from /home/pydio/.config/pydio/cells/pydio.json --to etcd://:2379/config\n</code></pre> 2 - Copy cells vault from JSON to ETCD: <pre><code>$&gt; ./cells admin config copy --from /home/pydio/.config/pydio/cells/pydio-vault.json --to etcd://:2379/vault\n</code></pre> 3 - Copy keyring from File to Vault: <pre><code>$&gt; ./cells admin config copy --from /home/pydio/.config/pydio/cells/cells-vault-key --to vault://:8200/kv/keyring\n</code></pre></p> <p>Warning, do not confuse cells vault (which is simply an encrypted config) with Hashicorp Vault (which is a secrets storage that we use to store the keyring).</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/migrating-from-single-node/#queues-no-need-to-migrate","title":"Queues: no need to migrate","text":"<p>As explained in the previous pages, in cluster mode, you must rather rely on NATs Jetstream for the persisting queues. Yet, we assume that you are not doing the migration from the single node to cluster while large jobs are still running in the server. Thus, you should not have to bother to migrate existing queues from the local file system to NATS Jetstream.</p> <p>To start nats with jetstream enabled, you can also use the <code>-js,--jetstream</code> and <code>-sd,--store_dir &lt;dir&gt;</code> flags from the command line:</p> <pre><code>nats-server --jetstream --store_dir=/var/lib/nats\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/migrating-from-single-node/#starting-cells-with-the-new-parameters","title":"Starting Cells with the new parameters","text":"<p>Once all configurations are live in ETCD and Vault, you can now set up Cells runtime using flags or environment variables:</p> <pre><code>$&gt; export CELLS_CONFIG=etcd://:2379/config\n$&gt; export CELLS_VAULT=etcd://:2379/vault\n$&gt; export CELLS_KEYRING=vault://:8200/kv\n$&gt; export CELLS_CERTS_STORE=vault://:8200/caddycerts\n$&gt; export CELLS_CACHE=redis://:6379/cells\n$&gt; export CELLS_BROKER=nats://:4222/cells\n$&gt; export CELLS_PERSISTQUEUE=nats://:4222\n\n# And finally:\n$&gt; ./cells start\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/","title":"K8s Advanced Parameters","text":"<p>Instead of managing manually your own cluster as in the precedent page, you might want to choose a container orchestration tool such as Kubernetes to have a maximum of flexibility on your deployment. This page gives detailed information on how to run Cells in a multi-node setup using inside Kubernetes.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#what-is-kubernetes","title":"What is Kubernetes ?","text":"<p>Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#install-a-kubernetes-cluster","title":"Install a Kubernetes cluster","text":"<p>You can manually create your own kubernetes cluster on your servers by using kubernetes tools.</p> <p>Alternatively, there are many operators that offer the possibility of installing a Kubernetes cluster easily. You can find a few below :</p> <ul> <li>Amazon Elastic Kubernets Service (EKS)</li> <li>Google Kubernetes Engine (GKE)</li> <li>Microsoft Azure Kubernetes Service (AKS)</li> <li>Scaleway Kubernetes Kapsule</li> </ul> <p>For testing, you can use minikube to easily deploy your applications in a local cluster</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#what-is-helm","title":"What is HELM ?","text":"<p>Helm is essentially a package manager for kubernetes applications. Helm Charts can be defined to easily preconfigure the deployment of an application with its dependencies.</p> <p>Parameters can be changed by setting them during install or upgrade. (e.g. <code>helm install my-cells cells/cells --set image.tag=latest</code>)</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#kubectl","title":"Kubectl","text":"<p>You can use kubectl locally to easily access your remote cluster. Change your kubeconfig to manage and monitor your deployment directly from your computer. Helm commands will automatically use the kubeconfig configuration.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#install-using-helm","title":"Install using Helm","text":"<p>Refer to the quick install page for more information.</p> <p>The cells helm charts can be used to deploy a ReplicaSet of Cells stateless servers. Using helm3 you can add the Cells Helm repo as follows :</p> <pre><code>helm repo add cells https://download.pydio.com/pub/charts/helm\nhelm install --namespace &lt;namespace&gt; --create-namespace my-cells cells/cells\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#dependencies","title":"Dependencies","text":"<p>Each dependency parameter can be configured directly from the command line by adding the name of the dependency as prefix :</p> <pre><code>helm install my-cells cells/cells --set mariadb.image.tag=latest ...\n</code></pre> <p>Dependencies can also be disabled if you want to use your own deployment from another repo. You need to make sure that you set the corrected address of your external service in the cells configuration for cells to be able to reach it. </p> <pre><code>helm install my-cells cells/cells --set mariadb.enabled=false\n</code></pre> <p>Cells Chart declares the following mandatory dependencies below. They are all necessary for a fully functional Cells cluster. You can install equivalent versions if you require by disabling the initial dependency</p> Name Repo Enable Parameters list mariadb bitnami <code>mariadb.enabled</code> https://artifacthub.io/packages/helm/bitnami/mariadb#parameters redis bitnami <code>redis.enabled</code> https://artifacthub.io/packages/helm/bitnami/redis#parameters nats bitnami <code>nats.enabled</code> https://artifacthub.io/packages/helm/bitnami/nats#parameters mongodb bitnami <code>mongodb.enabled</code> https://artifacthub.io/packages/helm/bitnami/mongodb#parameters minio bitnami <code>minio.enabled</code> https://artifacthub.io/packages/helm/bitnami/minio#parameters vault Hashicorp <code>vault.enabled</code> https://developer.hashicorp.com/vault/docs/platform/k8s/helm/configuration <p>Cells Chart declares the following optional dependencies below</p> Name Repo Enable Parameters list ingress-nginx kubernetes <code>ingress.enabled</code> https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx#values"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#configuration","title":"Configuration","text":""},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#number-of-replicas","title":"Number of replicas","text":"Parameter Description Default <code>replicaCount</code> Number of replicas used be default by the application 1"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#server-image","title":"Server image","text":"Parameter Description Default <code>image.repository</code> pydio/cells <code>image.pullPolicy</code> IfNotPresent <code>image.tag</code> unstable"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#service","title":"Service","text":"Parameter Description Default <code>service.type</code> NodePort <code>service.port</code> 8080 <code>service.discoveryPort</code> 8002 <code>service.binds</code> Configures new bind addresses for the pod not set <code>service.reverseproxyurl</code> Configure the reverse proxy url for the pod not set <code>service.tlsconfig</code> Configure the tlsconfig of the pod load balancer not set <code>service.customconfigs</code> Configure custom configuration for the Cells instance {\u00a0# Initial license\u00a0\"defaults/license/data\": \"FAKE\",\u00a0# sticky session for grpc\u00a0\"cluster/clients/grpc/loadBalancingStrategies[0]/name\": \"priority-local\",\u00a0#\u00a0\"frontend/plugin/core.pydio/APPLICATION_TITLE\": \"My Pydio Cells Cluster\"}"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#resources","title":"Resources","text":"<p>Resources are not set by default in order to run everywhere.</p> <p>But it becomes mandatory if you want to set up an autoscaling strategy (below)</p> Parameter Description Default <code>resources.limits.cpu</code> not set <code>resources.limits.memory</code> not set <code>resources.requests.cpu</code> not set <code>resources.requests.memory</code> not set"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#autoscaling","title":"Autoscaling","text":"<p>Autoscaling is disabled by default. But you can enable it to have the replica set horizontally scaling to use the full (or as defined) capacity of your cluster.</p> Parameter Description Default <code>autoscaling.enabled</code> Enables autoscaling false <code>autoscaling.minReplicas</code> Minimum number of replicas started for a Cells deployment 3 <code>autoscaling.maxReplicas</code> Maximum number of replicas started for a Cells deployment 5 <code>autoscaling.targetCPUUtilizationPercentage</code> Target cpu percentage usage of the maximum resource allocated to reach to trigger a new pod deployment 80 <code>autoscaling.targetMemoryUtilizationPercentage</code> Target memory percentage usage of the maximum resource allocated to reach to trigger a new pod deployment 80"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#ingress","title":"Ingress","text":"<p>In order to access your application remotely, you can set an ingress API object that will provide load balancing, SSL termination and name-based virtual hosting :</p> Parameter Description Default <code>ingress.enabled</code> Enables Ingress false <code>ingress.annotations</code> Ingress annotations {\"kubernetes.io/ingress.class\": \"nginx\",\u00a0\"cert-manager.io/cluster-issuer\": \"letsencrypt\",\u00a0\"nginx.ingress.kubernetes.io/proxy-body-size\": \"0\"} <code>ingress.hostname</code> Ingress main hostname cells.local <code>ingress.tls</code> Ingress TLS enabled false <code>ingress.clusterissuer.server</code> URL to the LetsEncrypt certification API https://acme-v02.api.letsencrypt.org/directory <code>ingress.clusterissuer.email</code> Email used for verification during the certification not set <code>ingress.extraHosts</code> Potential extra hostnames allowed []"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#nats-jetstream-queue","title":"Nats Jetstream queue","text":"<p>In cells helm chart <code>version &lt;= 0.1.2</code>, you should manually modify <code>deployment.yaml</code> to add an env for persist queue as well as activate nats jetstream in <code>values.yaml</code></p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#update-deploymentyaml","title":"Update deployment.yaml","text":"<p>Add an extra environment variable (CELLS_PERSISTQUEUE) to instruct Cells to use the NATS service as a queue. Modify the containers section as follows:</p> <pre><code>containers:\n  - name: {{ .Chart.Name }}\n    args:\n      ['-c', 'source /var/cells-install/source &amp;&amp; cells start ']\n    env:\n      - name: POD_NAME\n        valueFrom:\n          fieldRef:\n            fieldPath: metadata.name\n      - name: CELLS_PERSISTQUEUE\n        value: {{ include \"cells.natsURL\" . }}\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/k8s-advanced-parameters/#update-valuesyaml","title":"Update values.yaml","text":"<p>When NATS starts with JetStream, it transitions from a Deployment to a StatefulSet. This change requires adding a PersistentVolume to the cluster. An example configuration for NATS in values.yaml:</p> <pre><code>nats:\n  enabled: true\n  jetstream:\n    enabled: true\n    maxMemory: 5G\n  auth:\n    enabled: false\n  volumePermissions:\n    enabled: true\n\n  # Allow pod to write to the mounted repository\n  podSecurityContext: { enabled: true }\n\n  persistence:\n    enabled: true \n    storageClass: gp2\n    annotations: {}\n    accessModes:\n      - ReadWriteOnce\n    size: 8Gi\n    selector: {}\n  debug:\n    enabled: true\n  resourceType: statefulset\n\n  ## Number of NATS nodes\n  replicaCount: 3\n  cluster:\n    name: nats\n    connectRetries: \"\"\n    auth:\n      enabled: false\n      user: nats_cluster\n      password: \"secret-changeme\"\n</code></pre> <p>Note: The <code>podSecurityContext: { enabled: true }</code> setting is required for proper functionality.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/providing-ha-with-docker-compose/","title":"Providing HA with Docker Compose","text":"<p>This section shows how to run Cells in a multi-node setup using out-of-the-box docker compose file.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/providing-ha-with-docker-compose/#docker-compose-file","title":"Docker Compose file","text":"<p>Grab the compose file located at https://github.com/pydio/cells/blob/main/tools/docker/compose/ha/docker-compose.yml. </p> <p>It defines the following services: </p> <ul> <li><code>mysql</code>, <code>mongo</code>, <code>redis</code> for relational, json and KV stores</li> <li><code>etcd</code>, <code>nats</code>, <code>vault</code> for configs, message broker and secret store.</li> <li><code>minio</code> for exposing a file system as an S3 object storage</li> <li><code>cells1</code>, <code>cells2</code>, <code>cells3</code> multiple replicas of cells services</li> <li><code>caddy</code> as a frontend reverse proxy load-balancing on cells services</li> </ul>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/providing-ha-with-docker-compose/#setup-and-deployment","title":"Setup and Deployment","text":"<p>Simple docker compose deployment to experiment with Cells v4 Clustering model. It uses <code>pydio/cells:unstable</code> docker image, use whatever image by editing the docker-compose.yml file.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/providing-ha-with-docker-compose/#preparing-and-starting-dependencies","title":"Preparing and starting dependencies","text":"<p>HA deployments relies on external dependencies to make Cells image fully stateless. This sample creates the following images : MySQL, MongoDB, NATS.io, ETCD, Hashicorp Vault and Redis.</p> <p>Some preparatory steps are required : create Minio buckets for shared storage, and create a specific key/value store in Vault. </p> <pre><code>cd &lt;this folder&gt;\n# start all third-party services\ndocker compose up -d mysql mongo nats etcd vault redis minio caddy\n\n# create buckets in minio \ndocker compose up createbuckets\n\n# Create a dedicated kvstore for certificates in Vault (configured in DEV mode with a preset VAULT_TOKEN, this should not be the case in production)\ndocker compose exec -e VAULT_ADDR=http://localhost:8200 -e VAULT_TOKEN=secret_vault_token vault vault secrets enable -version=2 -path=caddycerts kv\n</code></pre>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/providing-ha-with-docker-compose/#caddy-loadbalancer","title":"Caddy LoadBalancer","text":"<p>Caddy load balancer is configured in self-signed mode with a <code>caddy</code> domain name. This requires adding <code>localhost =&gt; caddy</code> domain name to your local /etc/hosts file.</p> <p>Once started, the proxy will monitor cells instances on /pprofs endpoint to automatically enable/disable upstreams.</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/providing-ha-with-docker-compose/#running-cells-nodes","title":"Running Cells Nodes","text":"<p>At first run, start a unique node to let it perform the automatic installation. This step is reading its values from the <code>conf/install-conf.yml</code> file, you may change the frontendadmin / frontendpassword values to your own, otherwise default credentials are admin/admin.</p> <p>Monitor the logs to check that installation is complete or simply open https://caddy:8585/ to check that you can log in with admin credentials.</p> <pre><code>docker compose up -d cells1; docker compose logs -f cells1\n</code></pre> <p>Now you can spin more cells nodes: <pre><code># Once install is finished, start other nodes \ndocker compose up -d cells2 cells3; docker compose logs -f cells2 cells3\n</code></pre></p> <p>At next run, you can start all three nodes at once.</p> <p>Access https://caddy:8585/ to access Cells. Enjoy!</p>"},{"location":"admin-guide/run-cells-in-production/deploying-cells-in-a-distributed-environment/providing-ha-with-docker-compose/#stopping-cluster","title":"Stopping cluster","text":"<pre><code># To clean everything\ndocker compose down -v --remove-orphans\n</code></pre>"},{"location":"admin-guide/connect-your-users/index/","title":"Connect your users","text":"<p>Deployed on your infrastructure, Cells is generally part of a wider eco-system and you want to lower friction for onboarding users in the platform. This section describes how to connect your existing directories, either via standard AD/LDAP connection or by creating SSO bridges using modern technologies.</p> <ul> <li>Manage Users</li> <li>Single-Sign-On Features</li> <li>Users / Teams Visibility</li> <li>[Ent] Group Tenancy</li> <li>[Ent] Admin Delegation</li> <li>Additional APIs</li> </ul>"},{"location":"admin-guide/connect-your-users/manage-users/","title":"Manage Users","text":"<p>Pydio Cells provides advanced features for managing users. By implementing the authentication based on OAUTH2 standard, it can fully integrate in your Single-Sign-On (SSO) infrastructure and delegate authentication to your existing user directory. It can also bind to external identity providers like Github or Google, allowing your in-house collaborators to share files with external users.</p> <p>Yet, Cells provides a complete embedded solution with an internal directory that should be sufficient for most cases and that we present in the following section.</p> <p>Going to <code>Cells Console &gt; People</code> section, you can easily create new users and organize them by groups. Groups allow you to organize users in folders like you would with files. In a similar way, one user can only belong to one group. </p>"},{"location":"admin-guide/connect-your-users/manage-users/#users","title":"Users","text":"<p>To create a user go, click on the +USER button located in the top right corner. The following menu appears:</p> <p></p> <ul> <li>User Login: this can not be changed afterwards.  </li> <li>User Password: put the password of the user, you have to type it twice to ensure its validity. Make sure to always use strong passwords. Note that the plugin that performs password strength check is fully customizable in Cells Ent.</li> </ul> <p>When editing an existing user, you have access to following information:</p> <ul> <li>User Profile: this global category provides high-level set of permissions to the user. It can be used in conjunction with roles. Possible values are:</li> <li>standard: the most common profile</li> <li>shared: a restricted profile applied automatically to external users created by standard users</li> <li>admin: a super user with access to the Cells Console and most of the internal resources</li> <li>Name: a human-friendly label for this user (editable by the user)</li> <li>Email: e-mail address to receive notifications and invitations (editable by the user)</li> <li>Language: default language for showing the interface (editable by the user)</li> <li>Maximum Shared Users: an optional limit for the number of shared users this user is allowed to create.</li> </ul> <p>This screens also gives access to useful actions:</p> <p></p> <ul> <li>Change Password: manually reset the user password</li> <li>Lock out / Reactivate: instantly disconnect the user from all clients, or reactivate its access if it has been automatically locked out after too many failed login attempts. This <code>unlock</code> operation can also be done using the command line.</li> <li>Force Password Change: if switched on, at the next connection, the user is presented with a password change dialog and cannot login until she updates her password.</li> </ul> <p>The other tabs of the user editor are used to manage the users permissions (see the Access Controls chapter to learn more). Finally, the profile can be used to filter the users list, and shared and admin users are highlighted by a special icon in this list.</p>"},{"location":"admin-guide/connect-your-users/manage-users/#groups","title":"Groups","text":"<p>Groups allow you to manage the rights, parameters and actions of many users at once. It is usually used to regroup users that have the same usage of Pydio Cells, access the same workspaces, etc.</p> <p>To create a group, click on +GROUP located on the top right. The following menu appears:</p> <p></p> <ul> <li>Group Identifier: the ID for this group in Cells DB (useful for api etc...).</li> <li>Group Label: a human friendly name.</li> </ul> <p>Hint: If you need to move a user from one group to another, you can simple use drag and drop in the user tree.</p>"},{"location":"admin-guide/connect-your-users/manage-users/#additional-operations","title":"Additional operations","text":"<p>The search box at the top of the <code>People</code> screen lets you to quickly find users using their login or name. When you are in Search Results mode, you can edit or delete a user, or move it to a group as required.</p> <p>The BULK ACTIONS button allows you to select all users in page to delete them at once. When selecting the whole page, only users are selected, not groups.</p> <p>See Also</p> <ul> <li>Using SSO features to bind to external directories</li> <li>Managing permissions on Users, Groups and Roles</li> </ul>"},{"location":"admin-guide/connect-your-users/users-teams-visibility/","title":"Users / Teams Visibility","text":""},{"location":"admin-guide/connect-your-users/users-teams-visibility/#resources-policies","title":"Resources policies","text":"<p>Pydio Cells provides an additional layer of collaboration for the end-users: resources like teams, users, but also links and cells, are protected with flexible security rules defining ownership, read and write accesses.</p> <p>These policies are using the same approach as security policies, with a \"Deny By Default\" behavior and a possible set of rules that can be applied to any resources, with users, roles or groups as \"Subjects\".</p> <p>Concretely, this means that when a user creates a shared user in her Address Book, she can defines how this new object will be \"seen\" by other people, and optionnaly let other people edit this object as well.</p>"},{"location":"admin-guide/connect-your-users/users-teams-visibility/#rules-examples","title":"Rules Examples","text":"<p>Users resources are protected by these rules. For instance, when the Administrator creates a user, depending on the profile of the newly created user, one of these default rules is applied:</p> Resource Subject Action Effect Comment User.Uuid profile:admin write allow user is always editable by admins User.Uuid profile:standard read allow user is visible in address books of other users User.Uuid user:User.Uuid write allow user must be able to edit himself <p>In comparison, when a user A creates a shared user B, B is not visible to others by default, thus the rules would be:</p> Resource Subject Action Effect Comment User.B profile:admin write allow user is always editable by admins User.B profile:admin read allow user is always visible to admins User.B user:User.Uuid read allow user must be able to read his own properties User.B user:User.Uuid write allow user must be able to edit himself User.B user:User.A read allow user B is only visible in user A address book <p>If User A wishes to share this user with all users of a team XX that she has previously created, she could add the following rule to the list:</p> Resource Subject Action Effect Comment User.B role:TeamXRoleId read allow let users with role TeamXRoleId see this user B <p>Again, this behavior can be applied in a similar manner to Teams, Cells and Links. We may expand this to Roles and Groups in a near future.</p>"},{"location":"admin-guide/connect-your-users/users-teams-visibility/#user-interface","title":"User Interface","text":"<p>Of course, these rules are not \"written\" manually by end-users, but we provide an interface for that. Users can find the \"Visibility\" panel at various places in the interface, for handling exactly that.</p>"},{"location":"admin-guide/connect-your-users/users-teams-visibility/#users-and-teams","title":"Users and Teams","text":"<p>Visibility can be set up by end-users via their Address Book.</p> <p>For users:</p> <p> </p> <p></p> <p>For teams:</p> <p> </p> <p></p>"},{"location":"admin-guide/connect-your-users/users-teams-visibility/#links","title":"Links","text":"<p>When a user has shared a file or folder, a \"share\" icon is displayed in the various lists where the file appears, but by default, only for the user that have created the share can see this icon. The link visibility panel allows the users to also display the icon for some chosen others that have access to this file / folder.</p> <p></p>"},{"location":"admin-guide/connect-your-users/users-teams-visibility/#cells","title":"Cells","text":"<p>Cells are ways to share data with other users. When you select users for sharing, you can notice that the default visibility rules grant \"Read\" access to this Cell for these users. Warning: this \"Read\" access is just about being able to read the \"metadata\" of this Cell, and is not to be mixed up with the Read/Write permissions that define the actual content of the cell.</p> <p></p>"},{"location":"admin-guide/connect-your-users/ent-group-tenancy/","title":"[Ent] Group Tenancy","text":"<p>Pydio Cells provides an additional layer for visibility management: you can reduce the visibility scope at the group level, meaning that you can choose for instance if users of a group (A) can interact (e.g. see, assign, share with, etc.) with the users of group (B).</p>"},{"location":"admin-guide/connect-your-users/ent-group-tenancy/#what-is-group-tenancy","title":"What is group tenancy","text":"<p>In the context of Pydio Cells, group tenancy means that users of a group (A) cannot see the users of another group (B) as long as you respect following rules:</p> <ul> <li>All groups must be located at the root level (see screenshot below). Group tenancy with nested groups is not implemented in Pydio Cells.</li> </ul> <p></p> <ul> <li>To enable this option go to the admin console, Cells Console &gt; Application Parameters &gt; Main Settings &gt; Users Visibility.  </li> </ul> <p>Note: Users Visibility is an advanced feature. So if you cannot find it where it should be, make sure that you have enabled advanced parameters to be shown in the menu list. This is done by toggling on the <code>Show advanced parameters button</code> in the top right corner of the Admin console.</p> <p>You have 2 settings:</p> <p></p> <ul> <li>Users visible only to their group: isolate the various groups.</li> <li>Hide groups from sharing dialogs: add an additional layer by also removing any mention of groups from the sharing fields.</li> </ul>"},{"location":"admin-guide/connect-your-users/ent-group-tenancy/#for-the-record","title":"For the record","text":"<ul> <li>by default, every user can see every other user that is defined in your instance, even if one or the two of them have been nested in a group.</li> <li>keep in mind that all users always see the users that have been defined at the root (<code>/</code>) level, even if the users that have been defined in 2 distinct non-root groups cannot see each other.</li> <li>after switching this option from Off to On (or the other way round), the changes are applied in background by an asynchronous job: you must wait for the job to finish for the new rules to be effective as it recomputes all user policies. See below a screenshot of the job that computes the policies being processed.</li> </ul>"},{"location":"admin-guide/connect-your-users/ent-group-tenancy/#examples","title":"Examples","text":"<p>If you look at the first screenshot above, any user inside the group emerald will still see admin or any user at this level, but they will not see users of group rhinestone or any other.</p> <p>Another use case could be a school: let's say you have multiple classes each with its own respective group. You do not want the students of junior_class_1 to be able to share documents with junior_class_2 (because one of the classes has a test 2 days before the other, for instance :) ).</p>"},{"location":"admin-guide/connect-your-users/ent-admin-delegation/","title":"[Ent] Admin Delegation","text":"<p>Sometimes it is necessary to grant some non-administrative users some administrative (but restricted) permissions. </p>"},{"location":"admin-guide/connect-your-users/ent-admin-delegation/#usecases","title":"Usecases","text":"<p>Typically, you may wish to provide your Ops team a monitoring entry into the system (logs, updates required status, services healths, etc...), without giving them the full fledge \"super-user\" role that would allow users and data modification.</p> <p>Similarly, if you are using the Group Tenancy feature, you can decide that a \"Group Administrator\" has the right to manage users inside her group, while not being allowed to see all the other pages of the Cells Admin Console. </p>"},{"location":"admin-guide/connect-your-users/ent-admin-delegation/#feature-activation","title":"Feature Activation","text":"<p>First, you must make sure that your Cells Connect / Cells Enterprise License is enabled for this feature. You can see this by looking at the Enterprise License panel, where the active license features are listed.</p> <p></p> <p>If you cannot see this, please Contact Sales.</p> <p>If this feature is active, you can edit any user or role and go to the \"Application Pages\" menu: here you can see that the \"Admin Console\" access can be toggled, as would be any workspaces. </p> <p></p>"},{"location":"admin-guide/connect-your-users/ent-admin-delegation/#delegating-permissions","title":"Delegating Permissions","text":"<p>Using the Application Pages &gt; Admin Console READ access, you are presented with the exact same list of pages that you see in the Admin Console left-hand menu. Click on a page to give a consultation access to it. If you wish to give a write access as well, use the additional checkboxes to enable this. </p> <p></p>"},{"location":"admin-guide/connect-your-users/ent-admin-delegation/#additional-notes","title":"Additional Notes","text":""},{"location":"admin-guide/connect-your-users/ent-admin-delegation/#a-workspaces-management-use-cells-instead","title":"A - Workspaces Management: use Cells instead!","text":"<p>Some specific pages are excluded from this delegation list, as they always require a super-admin permission.</p> <p>The \"Workspaces\" page allows users to create Workspaces by defining their roots in the data tree, which includes all data sources. As such, giving access to this page always grants access to all the data. If you want to give limited access to workspaces, you should typically use the Cells feature, which allows non-admin users to create Cells within Workspaces that restrict the data they can view.</p>"},{"location":"admin-guide/connect-your-users/ent-admin-delegation/#b-cells-flows-too-much-responsibility","title":"B - Cells Flows: too much responsibility","text":"<p>With power comes responsibility... Using Cells Flows should always be restricted to super-admins, as it allows accessing all the data of the application. You can use Forms, Webhooks and Buttons to provide end-users interactions with Flows that you first define.</p>"},{"location":"admin-guide/connect-your-users/ent-admin-delegation/#c-pages-accesses-vs-api","title":"C - Pages Accesses vs. API","text":"<p>When you toggle the read/write operations for each page, these rights actually update the underlying Rest API that are used by the page. That way, you can be sure that you are opening this restricted permission only on a given API (e.g. the /a/user API when assigning accesses to People page), and on the other hand, that does mean that if you assign this permission, the corresponding API will be accessible for this user from an API client as well.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/index/","title":"Single-Sign-On Features","text":""},{"location":"admin-guide/connect-your-users/single-sign-on-features/index/#single-sign-on-sso","title":"Single Sign On (SSO)","text":""},{"location":"admin-guide/connect-your-users/single-sign-on-features/index/#what-is-it","title":"What is it?","text":"<p>Single Sign-On is a service that allows a user to use one login session to access multiple applications.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/index/#what-does-it-mean-in-pydio-cells","title":"What does it mean in Pydio Cells?","text":"<p>Pydio Cells can be used as an Identity Provider. In other words, any application can use the login session from Pydio Cells to validate access to a user and use its data.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/index/#what-does-it-mean-in-pydio-cells-enterprise-distribution","title":"What does it mean in Pydio Cells Enterprise Distribution?","text":"<p>On top of that, Cells Ent can integrate with multiple External Identity Providers. It automatically creates access for users from third-party services (commercial or on-premise) and understands multiple protocols (OIDC, SAML2.0, ...).</p> <p>Furthermore, Cells Ent provides a simple way to connect one or many external LDAP or Active Directory servers.</p> <ul> <li>Cells as Identity Provider</li> <li>[Ent] Using SSO with an External Identity Provider</li> <li>[Ent] LDAP / AD</li> <li>[Ent] LDAP / AD (Advanced)</li> <li>[Ent] AD + Kerberos Support</li> </ul> <p>See Also</p> <ul> <li>OpenID Connect</li> <li>OAuth 2.0 Authorization Framework</li> </ul>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/cells-as-identity-provider/","title":"Cells as Identity Provider","text":"<p>An Identity provider is a trusted provider that lets you use Single Sign-On (SSO) to access other websites.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/cells-as-identity-provider/#openid-connect","title":"OpenID Connect","text":"<p>OpenID Connect 1.0 is a type of Identity Provider working as a simple identity layer on top of the OAuth 2.0 protocol. It allows Clients to verify the identity of the End-User based on the authentication performed by an Authorization Server, as well as to obtain basic profile information about the End-User in an interoperable and REST-like manner. You can read more about it here.</p> <p>Cells provides OIDC endpoints, making it an Identity Provider for external applications. The standard Cells client applications (web frontend, sync, cells-client) do already use this protocol to handle authentication to Cells. As OpenIDConnect is a layer built on top of OAuth2.0, any OAuth2-enabled application will be able to use Cells as its Identity Provider.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/cells-as-identity-provider/#involved-parties","title":"Involved Parties","text":"<p>When configuring Cells as an Identity provider, please keep in mind that you are working in an environment where several entities must know each other and exchange security information via public network. You must know the role of each entity and the protocol required to exchange information in a specific order.</p> <ul> <li>Resource Owner: the owner of the data your application requires access to, (usually the user who is connecting)</li> <li>Authorization Server: the server delivering tokens to the client. (Cells)</li> <li>Resource Server: The application that holds the resource the client wants to access. (Cells - holds the user profile information and access to the user files)</li> <li>Clients: application that need access to resources on behalf of its owner. Must first be registered with the Authorization Server.</li> </ul>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/cells-as-identity-provider/#oidcoauth2-endpoints","title":"OIDC/OAuth2 Endpoints","text":"Endpoint URL OIDC Configuration http(s)://your-cells.com/oidc/.well-known/openid-configuration Authorization http(s)://your-cells.com/oidc/oauth2/auth Token http(s)://your-cells.com/oidc/oauth2/token"},{"location":"admin-guide/connect-your-users/single-sign-on-features/cells-as-identity-provider/#registering-an-oidc-client","title":"Registering an OIDC Client","text":""},{"location":"admin-guide/connect-your-users/single-sign-on-features/cells-as-identity-provider/#examples","title":"Examples","text":"<p>See the API docs.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-using-sso-with-an-external-identity-provider/","title":"[Ent] Using SSO with an External Identity Provider","text":"<p>You can add external Identity Providers to Pydio Cells Enterprise. Users will choose between a list of external Identity Providers you have configured (eg: Login in with Google, Facebook, Github...) instead of the traditional login page. Users that log in from an external Identity Provider are automatically created in a separate group in Cells internal user repository.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-using-sso-with-an-external-identity-provider/#involved-parties","title":"Involved Parties","text":"<p>When configuring Cells with external providers, please keep in mind that you are working in an environment where several entities must know each other and exchange security information via public network. You must know the role of each entity and the protocol required to exchange information in a specific order. Although OIDC and SAML are different frameworks, they have following parts in common:</p> <ul> <li>Users: the owner of the Cells data (resource), whose identification information is owned by the external Identity Provider. Before accessing their resources in Cells, users must identify with the Identity Provider and authorize Cells to access the resource on their behalf.</li> <li>User Agent: the client application/device used by users to connect to Cells. It can be a web browser, sync client application or mobile application.</li> <li>Cells: the Resource Server in OIDC, or Relaying Party in SAML</li> <li>Identity Provider: Depending on the framework, this server provides several services such as, authentication, identification, consent apps... You can use commercial servers such as Google, Azure, or on-premise servers that understand one of the multiple protocols available.</li> <li>Connectors: inside Cells, they are pre-configured adapters that \"talk\" with external Identity Providers using the correct protocol.</li> </ul> <p>Both OIDC and SAML are relying on PKI to encrypt and certify exchanged data. If you are working inside a test environment without well-known-authority signed certificates, you may also prepare a local Certificate Authority Server.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-using-sso-with-an-external-identity-provider/#data-exchange-workflow","title":"Data exchange workflow","text":"<ol> <li>User opens Cells in a web browser</li> <li>Cells renders login page to the user. If there are more than one connector, users have to pick a connector to login. Pydio Cells ships an internal Connector providing a simple login dialog for Cells internal users directory.</li> <li>If the connector is external, user is redirected to the login page of the corresponding Identity Server. User may use their credential (username/password), 2FA, etc. to authenticate to this server. If authentication succeeds, the Identity Server sends user identity information (such as user ID, email, groups, ...) in JWT or XML format to Cells and redirects the page back to Cells. This JWT/XML message will be inspected by Cells to allow or deny access.</li> <li>If all this workflow succeeds, the user can access to their data (or resources) inside Cells.</li> </ol>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-using-sso-with-an-external-identity-provider/#cells-connectors","title":"Cells Connectors","text":"<p>Connectors can be added in Cells via the <code>Cells Console &gt;&gt; Authentication</code> menu. Parameters differ between each connector, but they can be summarized into four groups:</p> <ul> <li>SSO URL : URL of the Identity Server</li> <li>Client ID/Secret : Cells instance identification, must be previously registered inside the Identity Server</li> <li>Redirect URL : an endpoint which Cells open to Identity Server for sending back information.</li> <li>Auxiliary infos : Certificate Authority file, mapping from IdP attributes to Cells user attributes, etc.</li> </ul> <p>See also:</p> <ul> <li>OpenID Connect</li> <li>OAuth 2.0 Authorization Framework</li> <li>Security Assertion Markup Language (SAML)</li> <li>Google authentication with Cells (OIDC)</li> <li>Github authentication with Cells (OIDC)</li> <li>Azure ADFS</li> <li>ADFS on-premise server</li> <li>SimpleSAML PHP server (SAML)</li> </ul>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/","title":"[Ent] LDAP / AD","text":"<p>In Cells, a LDAP server is seen as an external authentication source. You can extract a subset of users from your directory to be imported in Cells, using flexible parameters and configuration options. Cells supports binding to multiple directories using multiple LDAP domains.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#overview","title":"Overview","text":"<p>Integration is achieved using a Master/Slave model, where your LDAP is the master. Any modification done in your LDAP will overwrite the corresponding value in Cells during the next synchronization.</p> <p>As a consequence, we strongly advise that you configure your user interface to prevent the end-user from manually modifying any attribute that is mapped from an existing LDAP attribute. Typically, you should remove the <code>My Account</code> button from menus for LDAP defined users (see last paragraph of this section for more info on this).</p> <p>The synchronization runs on a regular basis (time and frequency are defined for each connection) and is managed by the scheduler: the configuration seen below only creates a new job in the scheduler. You can monitor and trigger this synchronization status directly in the scheduler (or Cells Flows if you have a license for it): - Go to <code>Cells Console &gt;&gt; Backend &gt;&gt; Scheduler</code> - Open editor for the synchronisation task by clicking on it in the list.   It is usually named: <code>&lt;name of your LDAP connexion&gt; &gt; Synchronize external directories</code></p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#supported-servers","title":"Supported Servers","text":"<p>The LDAP connector embedded in Cells Ent is compliant with LDAP standards. Thus, it can be used with servers that are implementing this protocol. We use the following servers for development and testing purposes. As such, they are known to integrate smoothly with Cells:</p> <ul> <li>OpenLDAP: a free, open source implementation of the Lightweight Directory Access Protocol developed by the OpenLDAP Project.</li> <li>Active Directory: a directory service of Microsoft that supports LDAP versions 2 and 3.</li> </ul> <p>You must install and configure your server before connecting it in Pydio Cells. Feel free to contact us if you have questions about another specific implementation.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#create-or-edit-a-connection-to-an-existing-ldap-server","title":"Create or edit a connection to an existing LDAP server","text":"<p>Logged as administrator, go to: <code>Cells Console &gt;&gt; Identity Management &gt;&gt; External Directory</code>.</p> <p>Click on <code>+ DIRECTORY</code> to register a new directory or select an existing LDAP configuration to modify it.</p> <p></p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#configuration","title":"Configuration","text":""},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#general-option","title":"General Option","text":"<p>It is usually a good practice to name this connection using the corresponding domain name. Connecting a directory will synchronize LDAP users with internal directory, and enable authentication by binding users to the external directory. </p> <p>As of Cells Enterprise 3.0.1, it is possible to only synchronize users internally, without binding the authentication part to the external directory. In that case, a random password is created for each users, and they must go through the \"Reset Password\" workflow to create their own password inside Cells. Subsequent synchronizations will not override this customized password for existing users.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#server-connection","title":"Server Connection","text":"<p>Use the numbers inside the above screenshot to refer to the settings.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#1-host","title":"1) Host","text":"<p>IP/hostname and port of your server. For instance:</p> <pre><code>127.0.0.1:389\nldap.domain.com:389\nldap.domain.com:639\n</code></pre> <p>If you do not specify any port, default port <code>389</code> is used.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#2-connection-type","title":"2) Connection Type","text":"<p>Define the type of connection you use. It is not recommended using an insecure connection if you are not in a private LAN.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#3-administrative-user-for-connection","title":"3) Administrative User for connection","text":"<p>3.1 Binding DN</p> <p>The Distinguished Name of a power user in your directory, who has sufficient privileges to list other users and groups. This field accepts user ID, Distinguished Name or Email. Choose the relevant format depending on your LDAP software. </p> <p>For instance:</p> <pre><code>pydio-admin@example.com\ncn=pydio-admin,ou=company,dc=example,dc=com\n</code></pre> <p>Note: in Active Directory, it is highly recommended using a dedicated LDAP user with delegated read privileges on the corresponding users. This can be done via the <code>Read all user information</code> task. You can visit this link for further information. In Active Directory, find the DN of the chosen user via the properties popup:</p> <p></p> <p>3.2 - Binding Password</p> <p>Password of the above user</p> <p>3.3 - Anonymous Bind</p> <p>In some rare cases, you may wich to anonymously connect to the directory (assuming it is accessed on a private network). Toggle \"Bind Anonymous\" for that.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#4-certificate-management","title":"4) Certificate Management","text":"<p>4.1 Skip certificate verification</p> <p>Turn this option ON if you are using a self-signed certificate that you trust. Use this option with extra care and at your own risk.</p> <p>4.2 Root Certificate Path</p> <p>This is only used for TLS and StartTLS connections. Specify the absolute path (on Cells server) to the certificate of the LDAP server.</p> <p>4.3 Root Certificate Data</p> <p>This option allows you to directly use a base64 format certificate for securing the LDAP connection. This is a base64 non-linebreak string.</p> <p>Note: You can retrieve the public part of your server's certificate using the following command. <pre><code>openssl s_client -showcerts -connect ldapserver.com:389 &lt;/dev/null 2&gt;/dev/null|openssl x509 -outform PEM &gt;mycertfile.pem\n</code></pre></p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#5-page-size","title":"5) Page size","text":"<p>This defines the maximum number of objects that are returned at each call.</p> <p>Please note that the maximum page size is defined on the server (hard limit), but you might use this option to reduce page size on the client size. For the record, default page size is 500 in OpenLDAP and 1000 in Active Directory.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#user-filter","title":"User Filter","text":"<p>Please setup at least one user filter, to define which users are to be imported from your external directory to Cells. You might only import a subset of your existing user base, depending on the filter you define. The tab looks like this:</p> <p></p> <p>Use the numbers inside the above screenshot to refer to the settings.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#1-dn","title":"1) DN","text":"<p>You can define more than one distinguished name (dn) of an organization unit (or a container in Active Directory) in the LDAP tree. Cells will retrieve the corresponding users and import them to its internal user directory. For instance:</p> <pre><code>ou=company,dc=example,dc=com\nou=visitor,dc=example,dc=com\n</code></pre>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#2-filter","title":"2) Filter","text":"<p>Additionally, specify at least one simple condition that must be met for a LDAP user to be imported in Cells. For instance:</p> <ul> <li>Filtering by object class:</li> <li><code>(objectClass=user)</code></li> <li><code>(objectClass=person)</code></li> <li><code>(objectClass=inetOrgPerson)</code></li> <li>Only import users whose department attribute value is staff:</li> <li><code>(&amp;(objectClass=user)(department=staff))</code></li> </ul> <p>If you are not very familiar with LDAP filtering, you might find this article on Microsoft website useful to get more information about LDAP syntax and a bunch of examples.</p> <p>When using Active Directory, it is highly recommended creating a specific security group to ease filtering. Typically, creating a <code>staff</code> security group in the <code>company</code> organisation and adding users and groups to it.</p> <p>In Cells, the filter will look like this :</p> <pre><code> (&amp;(objectClass=user)(memberOf=CN=staff,OU=company,DC=example,DC=org))\n</code></pre> <p>In Active Directory, if you want to also retrieve users from nested groups, you must specify this <code>memberOf</code> attribute: <code>memberOf:1.2.840.113556.1.4.1941</code>. For instance, this retrieves all members of the <code>staff</code> group including all members in the nested groups.</p> <pre><code>(&amp;(objectClass=user)(memberOf:1.2.840.113556.1.4.1941:=CN=staff,OU=company,DC=example,DC=com))\n</code></pre>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#mapping-attributes","title":"Mapping Attributes","text":"<p>You can map user attributes that are defined in your LDAP to user attributes in Pydio Cells. Each mapping is defined by a rule. A rule has three parts:</p> <ul> <li>Left Attribute: the attribute name of user object in the LDAP server</li> <li>Right Attribute: the attribute name of the user object in Cells.</li> <li>Rule String: an optional filter for the mapping process. This field can be blank, contain a list of values, or a regular expression.</li> </ul> <p>Warning: In Pydio Cells, user attribute names are case sensitive. E.g: displayName, email, Roles</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad/#a-basic-example","title":"A basic example","text":"<p>Let us say you have a <code>department</code> attribute on user objects in your LDAP model. This attribute can have the following values:</p> <ul> <li><code>finance</code></li> <li><code>admin</code></li> <li><code>hr</code></li> <li><code>marketing</code></li> <li><code>it_helpdesk</code></li> <li><code>it_hardware</code></li> </ul> <p>But you only want to map <code>admin</code>, <code>it_helpdesk</code> and <code>it_hardware</code> values to Roles in Pydio Cells. In order to do so, you might define the following mapping rule:</p> <ul> <li>Left Attribute: <code>department</code></li> <li>Rule String: <code>admin,it_helpdesk,it_hardware</code></li> <li>Right Attribute: <code>Roles</code></li> </ul> <p>If you need to only map values starting by <code>it_</code>, you can use the preg format.</p> <ul> <li>Left Attribute: <code>department</code></li> <li>Rule String: <code>preg:^it_</code></li> <li>Right Attribute: <code>Roles</code></li> </ul>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad-advanced/","title":"[Ent] LDAP / AD (Advanced)","text":"<p>Dynamic mapping of LDAP groups to Pydio roles is a powerful feature allowing administrors to keep users management on the LDAP-side, while Cells will automatically map these groups to roles. Setting Cells access lists on the roles is done once, and the synchronization will update users and their permissions as it runs.</p> <p>If your LDAP server supports the <code>memberof-overlay</code> in LDAP filters, each user object in LDAP response may have a \"memberOf\" attribute. Generally, this list of groups may contain system groups that we don't want to import and we are looking for only a small set of groups. Cells provides a configuration interface with simple but yet flexible parameters to help you refine the groups imported inside Cells.</p> <ul> <li>Microsoft Activie Directory supports natively <code>mamberof-overlay</code></li> <li>If your LDAP does not support <code>memberof-overlay</code>, we provide a magic parameter to force your ldap to list off the <code>memberof</code> value that, in turn, provides the input for the mapping.</li> </ul>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad-advanced/#memberof-mapping","title":"MemberOf mapping","text":"<p>This is a specific case of mapping, in order for a user to be assigned one or more roles in Pydio Cells, depending on the <code>memberOf</code> attribute defined in your external directory. <code>memberOf</code> is a multiple value attribute of user object which itself contains a list of groups where this user is a member. You should define a rule.</p> <ul> <li>Left Attribute: <code>memberOf</code></li> <li>Rule String:</li> <li>Right Attribute: <code>Roles</code></li> </ul> <p>The values of <code>memberOf</code> attribute can contain any group of the LDAP directory: you might want to narrow down the list of the groups that are to be mapped in Cells by using group filtering.</p> <p></p> <p>The above screenshot shows an example of <code>memberOf</code> mapping, where:</p> <p>1) toggles this feature ON and OFF</p> <p>2) Mapping: defines the name of the attribute that is to be used in your LDAP server. This is useful to emulate the <code>memberOf</code> feature if it is not supported by your implementation.</p> <p>3) DN: is the DN of one or more organization unit in the LDAP directory in which the connector searches for groups. If memberOf values have some groups in other locations, they will be ignored.</p> <p>4) Group Filter: Like User Filter   Example: <code>(objectClass=group)</code> or <code>(objectClass=groupOfNames)</code></p> <p>5) ID Attribute: Pydio will take the value of this attribute of group object to use as Role ID in Cells.</p> <p>Some LDAP directories do not support <code>memberOf</code> attribute by default. If you turn off the <code>Native MemberOf support</code> toggle, Cells tries to calculate this attribute from the <code>Fake memberof Attribute</code> value and its format.</p> <ul> <li>Fake <code>memberOf</code> Attribute: name of the attribute of group object which holds the member identity. In OpendLDAP, this value is usually <code>member</code> or <code>memberuid</code>.</li> <li>Depending on the value of <code>Fake memberOf Attribute</code> and the schema of your LDAP, the corresponding format is usually <code>dn</code> or <code>uid</code>.</li> </ul> <p>Values of these two options are usually:</p> <ul> <li>Fake memberOf Attribute: <code>member</code></li> <li>Fake memberOf Attribute Format: <code>dn</code></li> </ul> <p>or</p> <ul> <li>Fake memberOf Attribute: <code>memberuid</code></li> <li>Fake memberOf Attribute Format: <code>uid</code></li> </ul>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad-advanced/#fine-tuning","title":"Fine-tuning","text":"<p>As explained in the introduction, and due to the Master/Slave model of the integration, we strongly advise you to perform following fine-tuning on your instance.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ldap-ad-advanced/#remove-my-account-button","title":"Remove My Account button","text":"<p>The easiest way to prevent LDAP-defined users to change information that are defined in your external directory(ies), is to define a system-wide rule that will disable the <code>My Account</code> button for the relevant users. This is achieved easily:</p> <ul> <li>As an admin user, go to: <code>Cells Console &gt;&gt; Identity management &gt;&gt; People</code>,</li> <li>Open for edit the parent group of your LDAP users,</li> <li>Open the <code>Application Parameters</code> page,</li> <li>In the upper-right corner, choose the <code>All Workspaces</code> option from the <code>Add for...</code> drop down list,</li> <li>Search for the <code>My Account</code> action of the <code>action.user</code> category by simply typing <code>my account</code> in the quick search field, and select it,</li> <li>Ensure the MyAccount toggle is turned off.</li> </ul> <p>You are then set: the <code>My Account</code> button is then hidden for all corresponding users. Depending on your specific configuration, you might want to do this for various groups or define a specific role that can be applied to relevant groups and users.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/","title":"[Ent] AD + Kerberos Support","text":"<p>In this tutorial we will show you how to configure the servers to active Kerbers SSO in pydio Cells. We will work on three servers/machines.</p> <ul> <li>Windows Server - Domain Controller</li> <li>Cells Server: a linux server running cells - web service server</li> <li>Workstation + Web browser (Firefox, Chrome, Edge)</li> </ul>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#windows-server","title":"Windows Server","text":""},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#create-a-service-account","title":"Create a service account","text":"<p>Create a new user \u201ccellssrv\u201d in Users organizational unit.</p> <p></p> <p>Make sure that this user can\u2019t change the password as well as the password never expires. </p> <p>Two other option are required to be checked is  - Kerberos AES 235 bits - Do not require Kerberos preauthentication</p> <p></p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#generate-the-keytab","title":"Generate the keytab","text":"<p>Open PowerShell and execute following command to convert the \u201ccellssrv\u201d to service account</p> <p>The command should be written in one line.</p> <pre><code>PS C:\\Users\\Administrator&gt; ktpass /princ HTTP/cellssrv.lab.py@LAB.PY  /pass \"Passw0rd\" /mapuser cellssrv /out cellssrv.keytab\n/ptype KRB5_NT_PRINCIPAL  /crypto AES256-SHA1 /mapop set\n</code></pre> <p>Attention:  lab.py is the domain name and it should be in lowercase @LAB.PY is the domain name and it should be in uppercase you should replace by your domain name</p> <p></p> <p>After the command, you can see the user logon is changed to \u201cHTTP/cellssrv.lab.py\u201d Then copy the \"cellssrv.keytab\" to Cells\u2019 server e.g: <code>/var/cells/cellssrv.keytab</code></p> <p></p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#dns-record","title":"DNS record","text":"<p>Make sure that your dns server has a A record for cellssrv machine. Otherwise, crease a new Host record. </p> <p>Attention: Your server cells is running at https://cellssrv.lab.py. If it\u2019s running at https://other-name.lab.py, please create an \u201cother-name\u201d account service.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#cells-server","title":"Cells Server","text":""},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#key-tab","title":"Key tab","text":"<p>Copy the generated keytab (cellssrv.keytab) to Cells server. Change the permission so that \u201cpydio\u201d user can read. For example \u201c/var/cells/cellssrv.keytab\u201d</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#env-variables","title":"Env variables","text":"<p>Add following lines to systemd file config (/etc/systemd/system/cells.service)</p> <pre><code>\u2026\n[Service]\nWorkingDirectory=/home/pydio\nPermissionsStartOnly=true\n\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/home/pydio/cells-enterprise start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65000\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\n\n# Add environment variables\n\nEnvironment=CELLS_ENABLE_METRICS=false\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\nEnvironment=CELLS_SPNEGO_LABEL=\"Kerberos SSO\"\nEnvironment=CELLS_SPNEGO_KEYTAB=\"/var/cells/cellssrv.keytab\"\n\u2026.\n</code></pre> <p>CELLS_SPNEGO_LABEL: is the label of the button on the login screen on which user will login with SSO Kerberos when they click CELLS_SPNEGO_KEYTAB: the absolute path of keytab</p> <p>Attention: Don\u2019t forget to systemctl daemon-reload then systemctl restart cells</p> <p>User can authorize by clicking on a new button in login page</p> <p></p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#users-pc-web-browser","title":"Users' PC &amp; Web browser","text":"<p>At this step, you can see the \u201cKerberos SSO\u201d button on the login page of Cells. But it does not work because the authentication negotiation has not been activated.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#enable-spnego","title":"Enable spnego","text":"<p>In a joined-domain PC, open Internet Options then add \u201chttps://cellssrv.lab.py\u201d to the local internet zone</p> <p></p> <p></p> <p>After adding this option, you are able to authenticate with \u201cKerberos SSO\u201d. When you click on this button, you are logged in with the current window user.</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#the-configuration-in-internet-option-works-with-chrome-edge","title":"The configuration in \u201cInternet Option\u201d works with Chrome, Edge","text":"<p>If you are using Firefox, please visit this link to enable spnego: https://www.ibm.com/docs/en/was/9.0.5?topic=authentication-configuring-client-browser-use-spnego</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#grouppolicy","title":"GroupPolicy","text":"<p>You are also able to enable authentication negotiation (spnego) for web browsers via Domain Controller Group Policy</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#google-chrome","title":"Google Chrome:","text":"<p>Document: https://docs.keeper.io/enterprise-guide/deploying-keeper-to-end-users/keeper-fill/group-policy-deployment-chrome#:~:text=your%20Chrome%20Policy-,1.,and%20create%20a%20New%20Policy.</p> <p>Chrome gpo template: https://chromeenterprise.google/browser/download/#manage-policies-tab</p>"},{"location":"admin-guide/connect-your-users/single-sign-on-features/ent-ad-kerberos-support/#firefox","title":"Firefox","text":"<p>Document: https://specopssoft.com/blog/using-firefox-enterprise-gpos-enable-windows-integrated-authentication-specops-websites/</p> <p>Firefox gpo template: https://github.com/mozilla/policy-templates/releases</p>"},{"location":"admin-guide/connect-your-users/additional-apis/index/","title":"Additional APIs","text":"<p>Along with standard Web UX and REST API, Cells provides additional APIs to let users connect to their workspaces using other protocols.</p> <ul> <li>Webdav Server Access</li> <li>[Ent] SFTP Access</li> <li>Personal Access Tokens</li> </ul>"},{"location":"admin-guide/connect-your-users/additional-apis/webdav-server-access/","title":"Webdav Server Access","text":"<p>Webdav protocol is integrated out of the box in Pydio Cells.</p> <p>You can access your server with a webdav client and valid credentials at the following address:  <code>&lt;the-address-of-your-pydio&gt;/dav/</code>.</p> <p>For instance:</p> <p>I have a Pydio Cells installed on a server that I can access at <code>http://192.168.0.1:8080</code>: therefore to access the webdav, I would have to use the following address <code>http://192.168.0.1:8080/dav/</code>.  </p> <p>With domain names, it goes the same: if your pydio's domain name is <code>example.com</code> then use <code>http(s)://example.com/dav/</code>.</p>"},{"location":"admin-guide/connect-your-users/additional-apis/webdav-server-access/#implemented-features","title":"Implemented features","text":"<ul> <li>List and browse of workspaces and cells depending on current user rights and permissions.</li> <li>Copy, move, rename, delete of files and folders.</li> <li>Upload and download.</li> </ul> <p>Warnings:</p> <ul> <li>Some WebDAV clients, particularly those on Windows, may experience compatibility issues with self-signed certificates. If you encounter this situation, please visit our forum for assistance and to contribute towards resolving any remaining issues.</li> <li>Webdav is not a sync client. If you are off-line and therefore have no access to your server, you will not be able to interact with your files. Proceed with caution.</li> <li>If you are running Cells behind a reverse proxy, you must forward webdav related headers along with the forwarded requests (using the transparent directive usually does the trick).</li> </ul>"},{"location":"admin-guide/connect-your-users/additional-apis/webdav-server-access/#compatible-webdav-clients","title":"Compatible webdav clients","text":"<p>Following clients have been tested and are known to work with Pydio Cells:</p> <ul> <li>MacOS finder</li> <li>Windows explorer</li> <li>Ubuntu (and other Linux distributions)</li> <li>Cyberduck client (Windows and MacOS client)</li> </ul> <p>You can find a short setup guide for each one of them in our knowledge base.</p>"},{"location":"admin-guide/connect-your-users/additional-apis/ent-sftp-access/","title":"[Ent] SFTP Access","text":"<p>Cells Enterprise 2.2 provides a new SFTP gateway that exposes users workspaces through the SFTP protocol. This page describes the steps required to configure and enable the gateway.</p>"},{"location":"admin-guide/connect-your-users/additional-apis/ent-sftp-access/#creating-server-ssh-keys","title":"Creating server SSH keys","text":"<p>The first step is to create the server private key. Most common way is to use  openSSL tool <code>ssh-keygen</code> to generate a keypair:</p> <p><pre><code>$&gt; ssh-keygen -t rsa -f id_rsa\n</code></pre> This will generate two files inside the current folder: private key <code>id_rsa</code> and public key <code>id_rsa.pub</code>. The path to the private key file will be required for the next step. </p>"},{"location":"admin-guide/connect-your-users/additional-apis/ent-sftp-access/#enabling-sftp-gateway","title":"Enabling SFTP Gateway","text":"<p>SFTP Gateway must be enabled manually by editing the configuration file <code>$CELLS_WORKING_DIR/pydio.json</code>.</p> <p>In the \"services\" section, add a JSON section for <code>pydio.gateway.sftp</code> </p> <pre><code>{\n  \"services\": {\n    [...]\n    \"pydio.gateway.sftp\": {\n      \"enabled\": true,        \n      \"hostKeyFile\": \"/path/to/id_rsa\",\n      \"port\": 2022,\n      \"tmpDir\": \"/path/to/custom/temp/directory\",\n      \"tmpFilesLifespan\": \"15m\"\n    }\n  }\n}\n</code></pre> <p>Configuration values are described below.</p> Name Type Mandatory Default Description enabled boolean true false Start sFTP Gateway hostKeyFile string true Full path to the generated private key port integer false 2022 Port used to expose the SFTP Gateway tmpDir string false os.TempDir() Temporary directory used to store uploaded files (see Limitations below) tmpFilesLifespan duration false \"15m\" Time for cleaning temporary files that are kept for resumed uploads. Format is a golang duration. <p>Once JSON is updated, just restart Cells Enterprise.</p>"},{"location":"admin-guide/connect-your-users/additional-apis/ent-sftp-access/#connecting-to-sftp","title":"Connecting to SFTP","text":"<p>Assuming you are using the default configuration, SFTP is accessed through the custom 2022 port. Note that as it is differing from HTTP protocol, it does not go through Cells main Gateway. </p> <p>Create a Personal Token for a given user. For example, generating a token for user \"admin\" that will expire in 24h:</p> <pre><code>$&gt; ./cells-enterprise admin user token -u admin -e 24h\n\u2714 This token for admin will expire on 2021-01-28 14:36:32.206538 +0100 CET m=+86400.243984260.\n\u2714 suDOydSgC-9myGgG27KZPqycDoO--jI_YIJCgvF7Qh0.ciN0O0gLx4xmnsC6BVH6ofivOSSbJoQa3qYowsOuswk\n\u26a0 Make sure to secure it as it grants access to the user resources!\n</code></pre> <p>Once you have this token, you can use any SFTP client to connect with USERNAME/TOKEN as login/password.</p>"},{"location":"admin-guide/connect-your-users/additional-apis/ent-sftp-access/#limitations","title":"Limitations","text":"<p>SFTP protocol uploads files in a chunk-based, random-order mode. For this reason a temporary copy of the file is created on the server local filesystem, before being transferred to the underlying datasource.</p> <p>This is done in a temporary directory. Therefore if you plan to upload huge files via SFTP, you must make sure that the OS \"tmp\" location has enough available storage. You can customize this location using the \"tmpDir\" parameter.</p>"},{"location":"admin-guide/connect-your-users/additional-apis/personal-access-tokens/","title":"Personal Access Tokens","text":"<p>Personal Access Token (PAT) are a convenient way to access Cells APIs without going through the standard OAuth authentication procedure. They can be used in replacement to the Access Token generated by OAuth and passed via the <code>Authorization: Bearer</code> header. For APIs based on Basic Authentication like WebDAV or SFTP, they can be used as a replacement to the user password (use Username/PersonalToken combination).</p> <p>PAT can be generated by administrators for a given user with either a fixed expiration date, or an \"auto-refresh\" sliding window to refresh expiration time at each usage (see below).</p>"},{"location":"admin-guide/connect-your-users/additional-apis/personal-access-tokens/#ent-pat-management-in-people-administration-panel","title":"[Ent] PAT Management in People administration panel","text":"<p>In Cells Enterprise, PATs can be management directly via the users' edition panel.  Browse to <code>Cells Console &gt;&gt; People &gt;&gt; (edit a user) &gt;&gt; Personal Access Tokens</code>.</p> <p></p> <p>You can view the status or/and remove a personal access token from this interface.</p> <p></p> <p>To create a new token, hit the + button and start creating a personal access token.</p> <p>Give a friendly name to this token. For Expiration Model, select one of the 2 modes.   - Hard Limit: the token will be expired after the set time.   - Auto Refresh: the token will be renewed if used before the set time.</p> <p></p>"},{"location":"admin-guide/connect-your-users/additional-apis/personal-access-tokens/#home-generating-pat-with-the-command-line","title":"[Home] Generating PAT with the command line","text":"<p>Available on Cells Home (and Cells Ent as well), you can generate a personal access token by using the <code>./cells admin user token</code> command. </p> <p>Below is the command usage description, you can find the \"--expire\" and \"--auto\" flags corresponding to the Hard Limit and Auto Refresh expiration models described above.</p> <pre><code>TOKEN USAGE\n\n  These token can be used in replacement of an OAuth2-based access token : they can replace the \"Bearer\" access\n  token when calling any REST API. They can also be used as the password (in conjunction with username) for all\n  basic-auth based APIs (e.g. webDAV).\n\nTOKEN SCOPE\n\n  By default, generated tokens grant the same level of access as a standard login operation. To improve security,\n  it is possible to restrict these accesses to a specific file or folder (given it is accessible by the user in\n  first place) with a \"scope\" in the format \"node:NODE_UUID:PERMISSION\" where PERMISSION string contains either \"r\"\n  (read) or \"w\" (write) or both.\n\nUsage:\n  ./cells admin user token [flags]\n\nFlags:\n  -a, --auto string     Auto-refresh (number of seconds, see help)\n  -e, --expire string   Expire after duration, format is 20u where u is a unit: s (second), (minute), h (hour), d(day).\n  -h, --help            help for token\n  -q, --quiet           Only return the newly created token value (typically useful in automation scripts with a short expiry time)\n  -s, --scope strings   Optional scopes\n  -u, --user string     User login (mandatory)\n</code></pre>"},{"location":"admin-guide/connect-your-storage/index/","title":"Connect your Storage","text":"<p>Deployed on premise or on your cloud of choice, Cells stores actual data (files and folders) on your storage of choice as well. \"Datasources\", that can be seen as mount points, are explained deeply in this section so that you can easily connect to existing storage or add new ones whenever required.</p> <ul> <li>Datasources overview</li> <li>Datasource Format</li> <li>Create datasources</li> <li>Versioning Policies</li> <li>Encryption</li> <li>Metadata</li> <li>[Ent] Enable image and video annotations</li> <li>[Ent] Assign quotas</li> <li>[Ent] Shard with template path</li> </ul>"},{"location":"admin-guide/connect-your-storage/datasources-overview/","title":"Datasources overview","text":""},{"location":"admin-guide/connect-your-storage/datasources-overview/#concepts","title":"Concepts","text":"<p>Pydio Cells provides a strong decoupling between technical storages and business logic:</p> <ul> <li> <p>Datasources define the actual storage where the data lies. They can be seen as \"mount points\" for external storages. Each datasource provides access to data internally and maintains its own consistent index in the database. Indexes from the various datasources are aggregated into a global tree that is exposed to other services. That way, datasources can be distributed across as many nodes as needed.</p> </li> <li> <p>Workspaces are defined by administrators. Admins open accesses to one or many node in the global tree of files inside datasources by adding or removing permissions and policies on these nodes.</p> </li> <li> <p>Cells are sandboxed workspaces created by users to share data between themselves. Users easily manage accesses while still inheriting the restrictions set by administrators.</p> </li> </ul>"},{"location":"admin-guide/connect-your-storage/datasources-overview/#supported-storages","title":"Supported Storages","text":"<p>Datasource can be seen as a driver to access your data. It can currently be connected to the following storage types:</p> <ul> <li>Local FileSystem: folder located on the same server as where the service is running</li> <li>Object Storage: S3-compatible remote storage (can be a proper S3 or anything implementing the API).</li> <li>Google Cloud Storage: compatible with Google's cloud storage solution [Ent only].</li> <li>Azure Blob Storage: compatible with Azure's blob storage solution [Ent only].</li> </ul> <p>In the article Detailed structure of a datasource, a detailed view of how each service on datasource interacts.</p>"},{"location":"admin-guide/connect-your-storage/datasources-overview/#flat-vs-structured-storage-format","title":"Flat vs. Structured Storage Format","text":"<p>Starting with Cells v3, the default storage format is \"flat\": while indexes maintain the tree of files and folders in the database, actual data is stored as blobs on the storage. Using this format, you are not supposed to modify the storage directly (without going through Cells). </p> <p>If you need to be able to modify data directly on the storage, you will have to use \"structured\" storage format, and manually trigger a resynchronization to see the modifications appear and be usable. This operation can be done with a REST api call or with the CLI. Interacting with the data via the standard clients (Cells Web interface, Cells-client CLI or CellsSync) you should never care about re-indexation.</p> <p>Read more about the datasource format in the next chapter.</p>"},{"location":"admin-guide/connect-your-storage/versioning-policies/","title":"Versioning Policies","text":"<p>Versioning is provided out-of-the-box by Pydio Cells. In a few words, when versioning is turned on, every time a user modifies a file, it creates a new version of this file that is then considered as the reference for this file. The old version is then stored in a technical data repository and eventually discarded depending on the pruning policies (more on this in the corresponding paragraph below).</p> <p>Please, note that versioning has a cost in terms of the amount of data that is stored in your various data stores and have to be correctly configured and monitored in order to avoid exponential use of data space.</p> <p>When defining a datasource, you can pick an available Versioning Policies to apply it to this datasource.</p>"},{"location":"admin-guide/connect-your-storage/versioning-policies/#default-versioning-policies","title":"Default Versioning Policies","text":"<p>Pydio Cells comes bundled with a default set of Versioning Policies, as described below:</p> Policy Name Description Keep All Always keep all versions of all files Max 30 days Keep all versions before 15 days, then only 10 versions, then delete all versions older that 30 days. Regular Pruning Will keep 10 versions in the last 10 minutes, in the last 3 hours, in the last day, in the last 10 days, and finally delete all after 30 days. <p></p>"},{"location":"admin-guide/connect-your-storage/versioning-policies/#listing-and-reverting-to-a-version","title":"Listing and reverting to a version","text":"<p>As a user, if a file is versioned, it is possible to list a document revisions by right-clicking on any file and selecting \"Versions\". </p> <p>With this interface, it is easy to either download a specific file revision, or revert to this revision.</p> <p></p>"},{"location":"admin-guide/connect-your-storage/versioning-policies/#ent-defining-a-versioning-policy","title":"[Ent] Defining a Versioning Policy","text":"<p>Note: The Home Edition comes with the default set of Versioning Policies and they cannot be edited.</p> <p>In Pydio Cells Enterprise Edition, we have brought versioning one step further by giving you the option to define custom pruning policies that will fit to your business specific needs and requirement.</p> <p>Go to your <code>Cells Console</code> then under DataManagement &gt; Storage use the \"+ VERSIONING POLICY\" to create your own policy.</p> <p></p>"},{"location":"admin-guide/connect-your-storage/versioning-policies/#retention-rules","title":"Retention Rules","text":"<p>A couple of parameter give you great flexibility to keep storage footprint under control when it comes to retaining various revisions of your business files.</p> Parameter Description Size Limits Define a couple of limitations on a per-file basis or on a per-bucket basis to prune versions automatically when a given amount of storage space is reached. Retention Periods Define how versions will be pruned on a timely basis. Each retention period is composed of two parameters:  - Period Start is the time elapsed since a version was created  - Max number of versions is number of versions to keep during this period. Special numbers are -1 to keep all versions, or 0 to remove all versions. After original file deletion Define what to do with versions after a file is totally removed from a datasource (see below)."},{"location":"admin-guide/connect-your-storage/versioning-policies/#storage-location","title":"Storage location","text":"<p>By default, all policies use the specific \"versions\" internal datasource. If you wish to store versions inside another storage or volume, you may create your own internal datasource, and use it as a storage for your custom versioning policies. </p> <p>Only \"internal\" datasources can be used for storing versions, as they are more silent than standard datasources by avoiding events generation on resources creation or modification. However, as other datasources, they can be encrypted to make sure files revision are encrypted. </p> <p>Creating multiple versions datasources and their associated policies can be handy to shard data accross multiple storage (e.g store versions of each datasource inside separate storage).</p>"},{"location":"admin-guide/connect-your-storage/versioning-policies/#restoring-versions-for-permanently-deleted-files","title":"Restoring versions for permanently deleted files","text":"<p>Each versioning policy provides a setup to define how to handle kept versions when a file is totally removed from a datasource. There are three possible approaches :   - Backup all existing versions: will move all existing versions (inside the version datasource) to a dedicated folder   - Backup most recent version: will only keep the very last version (should correspond to the deleted file)   - Delete all existing versions: will remove versions</p> <p>When choosing one of the two first options, versions that are to be kept are moved inside the versions datasource under a dedicated <code>$DELETED$</code> folder. The path to the original file starting from the root is re-created under this folder, so that administrators can eventually find and restore a deleted file in-behalf of a user (generally in panic). </p>"},{"location":"admin-guide/connect-your-storage/versioning-policies/#restoration-example","title":"Restoration example","text":"<p>For instance, let's assume user \"john\" permanently removed a file <code>important-file.doc</code> located in his Personal Files workspace under <code>Todos/Done</code> folder. </p> <p>On-demand, an administrator can create a temporary access to the \"versions\" datasource by creating a workspace that points to the root of this datasource. Make sure to not set any default rights on this workspace, otherwise all users may have the ability to crawl the whole versions datasource! </p> <p>Going through this workspace, the administrator will then be able to access to <code>$DELETED$/personal/john/Todos/Done/important-file.doc</code> and either manually move it to another workspace, or download it and send it back to happy john!</p>"},{"location":"admin-guide/connect-your-storage/encryption/","title":"Encryption","text":"<p>One of the main reason why the encryption feature has been made available in Pydio Cells is to make sure data are still under control when using a storage provided by a third party.</p>"},{"location":"admin-guide/connect-your-storage/encryption/#datasource-encryption","title":"Datasource Encryption","text":"<p>When the encryption option is enabled for a datasource all data that are store in the datasource are encrypted using AES-GCM with a 256 bits master key generated by the admin.</p> <p>AES GCM is fast and is more secure than traditional traditional AES block mode like CBC and CTR.</p>"},{"location":"admin-guide/connect-your-storage/encryption/#file-encryption-key","title":"File Encryption key","text":"<p>For a given file an unique random AES key of 256 bits is generated and encrypted with the encryption key of the datasource the file belongs to. The datasource encryption keys are generated by the admin and are protected using the default keyring of the system Cells is installed in.</p>"},{"location":"admin-guide/connect-your-storage/encryption/#stream-mode","title":"Stream mode","text":"<p>Although fast and secure AES-GCM does not support stream mode. So when encrypting gigabytes sized file or a stream with unknown size, Cells proceed by encrypting the data as a sequence of fixed size block. This way the memory usage stays low as in normal stream mode. Plus in order to keep the same security strength, each block is encrypted with an unique set of parameters (IV, Nonce, Key).</p> <p>At the end the encrypted file is a concatenation of encrypted blocks and decrypted by block while being read.</p>"},{"location":"admin-guide/connect-your-storage/encryption/#security-comes-with-cost","title":"Security comes with cost","text":"<p>Put aside the additional CPU usage when using encryption, encrypted file size are superior than the original's. For a file of N blocks the result of the encryption uses at least N*44 additional bytes on the storage.</p>"},{"location":"admin-guide/connect-your-storage/encryption/#enabling-the-encryption-on-a-datasource","title":"Enabling the encryption on a datasource","text":"<p>First in DATA MANAGEMENT &gt; Storage section, the admin must generate at least one key that will serve to encrypt datasources. The key content is randomly generated all the information required is the id and the label. Here are the description of the form fields.</p> Field Description Identifier a unique string that identifies the key Label The name of the key as it appears in the key list <p>We do not encrypt the current data on your datasource, make sure to have an empty datasource before enabling encryption</p> <p>Once keys are generated encryption option can be enabled. in datasource create/edit form enabled to the encryption option at the bottom.</p> <p>DISCLAIMER: Keys are stored in the default database and if they ever get lost the encrypted data could not be recovered.</p>"},{"location":"admin-guide/connect-your-storage/metadata/","title":"Metadata","text":"<p>Metadata is a feature that enables the end-user to attach any kind of information to a file or a folder.</p> <p>Metadata namespaces are predefined by the Admin and their value can be freely added by the end-user. Typically, a good example of predefined metadata is the ability given by the admin to the end user to rate a file or a folder. Another widely used example is the comments feature.</p> <p>Metadata can be used to enrich files information. They are visible in the right panel that appear when a file is selected. </p> <p></p> <p>You can define almost any type of files metadata and specify for example the order they appear and whether they can be used as search criteria.</p> <p>In the admin left panel menu click the option metadata in the \"Data management\" section. And on the On right-top click on the NAMESPACE button to add define one.</p>"},{"location":"admin-guide/connect-your-storage/metadata/#basic-namespaces-parameters","title":"Basic Namespaces Parameters","text":"Fields Description Label The name of the metadata as it appears in the interface. Name The name of the metadata with no space (must start with usermeta-) Type See available types below Order The position number of the appearance <p>Metadata type are various here are some example of use case.</p> Meta Type Description Text A small text Paragraph Multiline text Number Integer valueVarious format options (General, Bytesize, Percent, Progress) True/False Boolean yes/no values Date/Time Date or Time field (date, time, or date &amp; time).Can be displayed normaly or as relative to current date (e.g. 4 minutes ago, 2 days ago...). Stars rate Sequence of clickable stars to rate between 1 and 5. Extensible tags List of values that can be extendedShows an auto-complete field Selection Preset list of key/value pairsEach key can also be attached a color. Color Labels Preset list of colored tags (legacy, use Selection instead) JSON Arbitrary JSON. This type is used by specific plugins to attach data to files. <p>Below is a preview of how these various types appear in the metadata edition form.</p> <p></p>"},{"location":"admin-guide/connect-your-storage/metadata/#display-options-grouping-and-ordering","title":"Display Options: grouping and ordering","text":"<p>When handling a large number of metadata fields, it may be more user-friendly to group namespaces under categories. That way, fields are more easily findable, and displaying fields inside expandable blocs (closed by default) avoids clutering the UX.</p> <p>Starting with version 4.2.6, you can create Groups by using the \"Group Name\" field of a metadata namespace. Once created, it will be available as an auto-complete suggestion in other namespaces. </p> <p></p> <p>Groups can be nested, by using a \"slash\" (<code>/</code>) separator in their name (think of them as folders).</p> <p></p> <p>As a result, the \"Metadata Info\" panel shown to users will look as below: </p> ![](../images/4_connecting_your_storage/meta-grouping-closed.png) ![](../images/4_connecting_your_storage/meta-grouping-open.png) <p>Additionally, the Order field allows you to fix the order of the fields.</p>"},{"location":"admin-guide/connect-your-storage/metadata/#visibility-restrictions","title":"Visibility Restrictions","text":"<p>In addition of enriching file info, metadata are use in may others part of Cells like the search engine, the security policies, the tasks scheduling and many other features. When defining a metadata the admin can choose  whether it is visible or editable by other everyone. The options help adjusting metadata restrictions:</p> Fields Description Show in files list Display the metadata value inline directly in the list Index in search engine Indexes values to make them searchable Restrict visibility to admins Only admins users are able to see it Restrict edition to admins Only admins users are able to edit it [Ent] Custom Policies Manually edit the restriction rules based on profiles, roles or users identifiers <p>Typically, an admin could define a \"Confidential\" metadata and let only people with \"Admin\" status have the right to edit this data. Then the value of this metadata could be used in a security policy to decide whether a document is accessible to the outside network, or outside of office hours, etc.</p>"},{"location":"admin-guide/connect-your-storage/metadata/#enterprise-importexport-namespaces-definitions","title":"[Enterprise] Import/Export Namespaces Definitions","text":"<p>Defining a large number of metadata namespaces can take some time and finetuning. It can be handy to export your namespaces to easily re-insert them in another Pydio Cells instance, or simply for backuping purposes.</p> <p>Cells Enterprise v4.3.0 introduces the Import/Export feature to save these definitions in JSON format. </p> <p></p> <p>When exporting to JSON or importing a JSON file, you can select which Namespaces you want to process. Typically, during the import operation, if namespaces already exist, you can choose wether to override, rename or ignore the corresponding import. </p> <p>Below is an example of the Export operation dialog.</p> <p></p>"},{"location":"admin-guide/connect-your-storage/ent-enable-image-and-video-annotations/","title":"[Ent] Enable image and video annotations","text":"<p>Image and video annotations are important features that enhance the collaborative aspect of the file sharing platform.  They provides ability to comment out any specific area of an image or a specific timecode inside a video.</p>"},{"location":"admin-guide/connect-your-storage/ent-enable-image-and-video-annotations/#enabling-annotations","title":"Enabling annotations","text":"<p>By default on the latest release (2.1.0) of Cells, image annotations are enabled but video annotations require manual enabling.</p>"},{"location":"admin-guide/connect-your-storage/ent-enable-image-and-video-annotations/#image-annotations","title":"Image annotations","text":"<p>To use image annotations, open an image with the Cells interface (main application or public link) and hit the annotation menu, a button located on the bottom right.</p> <p></p> <p>This will open up a menu, you can notice 3 different shapes selectors (circled by red dotted line on the screenshot below).</p> <p></p> <p>You can select any shape (in the screenshot above you can see the 3 different kind), then a cursor will be enabled, click on anything on the image and it will draw the annotation then you can add text to it.</p>"},{"location":"admin-guide/connect-your-storage/ent-enable-image-and-video-annotations/#video-annotations","title":"Video annotations","text":"<p>You need to first enable the annotations, to do so (enable advanced parameters) and browse to Application Parameters &gt;&gt; Available Plugins.</p> <p>Search for video:</p> <p></p> <p>Hit the edit button on the Video Player plugin.</p> <p></p> <p>then enable Timecode Annotations and hit save.</p> <p>Now you can go back and play any video and see the following indications.</p> <p></p> <p>Hit the display annotation button and then new, you can now select any part of the timeline and put a text to indicate what it is.</p> <p>Once you have added an annotation this will be the end result:</p> <p></p>"},{"location":"admin-guide/connect-your-storage/ent-assign-quotas/","title":"[Ent] Assign quotas","text":"<p>By defining quotas to limit the amount of storage that can be used on a workspace basis, this tool grants you more control over the size of your storages therefore allowing you to be cost effective.</p>"},{"location":"admin-guide/connect-your-storage/ent-assign-quotas/#define-quotas-on-a-workspace","title":"Define quotas on a workspace","text":"<p>Defining a quota on a workspace will restrict the amount of data that you can add. This rule applies globally to everyone that has access to this workspace.</p> <p>To illustrate the feature, assuming that you have set a quota limit of 200MB and have 20 users each uploading a 10MB file, which will add up to 200MB and therefore reach the limit. Now if any of those users attempts to upload a new file he will not be allowed because the quota was reached.</p> <p>As a special case, applying a quota of X on a \"Personal\" workspace, each user will be able to upload up to X amount of data.</p> <p>To access the menu go to, Data Management &gt;&gt; Workspaces &gt;&gt; Edit a workspace, the following menu will be displayed:</p> <p></p> <p>Once you have selected the unit (gigabyte, megabyte and so on) and added the number make sure to hit the save button on your workspace, now the rule will be applied to everyone that has an access to the workspace.</p> <p>Here is a quick look at what a user will get if they attempt to upload data when the quota limit has been reached.</p> <p></p>"},{"location":"admin-guide/connect-your-storage/ent-shard-with-template-path/","title":"[Ent] Shard with template path","text":"<p>Template paths provide you with scripting capacities to defined workspaces location based on the user name. That way, one can shard data over multiple datasources and dispatch them on multiple underlying storages.</p>"},{"location":"admin-guide/connect-your-storage/ent-shard-with-template-path/#template-path","title":"Template path","text":"<p>One specific workspace is the Personal workspace: while defined once and applied globally to all users, this workspace will dynamically create a folder for each users. In other words, each user will always only see her own files while using this workspace. This does not prevent users from sharing data from their Personal workspaces with other people, using Cells or Public Links (unless sharing is disabled of course).</p> <p>Under the hood, instead of pointing to a defined location in the DataSource tree, this workspace is using a Template Path that is resolved dynamically when accessed. The <code>my-files</code> template path is defined by a javascript snippet as follows:  <pre><code>Path = DataSources.personal + \"/\" + User.Name;\n</code></pre></p> <ul> <li><code>DataSources.&lt;datasourceName&gt;</code> this can be any datasource of your choice.</li> <li><code>User.Name</code> this value is dynamic and will match each user that has a personal-files access.</li> </ul> <p>Which translates into <code>personal/johndoe</code> (this is the personal file of the user John Doe).  If you take a closer look in your storage it will end up like this:</p> <p><pre><code>pydio@cells-server:/mnt/data$ tree\n.\n\u251c\u2500\u2500 personal\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 johndoe\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 image.jpg\n</code></pre> (the full path being <code>/mnt/data/personal/johndoe</code>)</p>"},{"location":"admin-guide/connect-your-storage/ent-shard-with-template-path/#sharding-personal-folders-on-3-servers","title":"Sharding Personal folders on 3 servers","text":"<p>In Cells Enterprise, you can create your own Template Paths, which can be very useful to e.g. map data from various sources to a unique path. Assuming you have three servers A, B, and C on which users data is evenly distributed (e.g. by their login first letters), you can easily write a script to resolve to the correct data source. Assuming Server A contains users data from [a to h], Server B from [i to p], etc... and you mounted them as separate datasources, script could look like : </p> <pre><code>// Test first letter of user login\nif (['a','b','c','d','e','f','g','h'].indexOf(User.Name[0]) !== -1) {\n    Path = DataSources.ServerA + \"/\" + UserName.Name;\n} else if (['i','j','k','l','m','n','o','p'].indexOf(User.Name[0]) !== -1){\n    Path = DataSources.ServerB + \"/\" + UserName.Name;\n} else {\n    Path = DataSources.ServerC + \"/\" + UserName.Name;\n}\n</code></pre> <p>There is also a template path for Cells created from scratch : unlike ones created from an existing folders, these Cells need to create a folder dynamically at creation. By default, these are stored in <code>cellsdata/{OwnerName}/{CellsName}</code>.</p>"},{"location":"admin-guide/connect-your-storage/ent-shard-with-template-path/#creating-a-template-path","title":"Creating a template path","text":"<p>To create a template path, you must first enable the advanced parameters (see screenshot below).</p> <p></p> <p>To contextualize the following examples, we have a s3 bucket dedicated to the marketing department and we have 4 branches therefore we would like to split the bucket to isolate each branch.</p> <p>Head to Data Management &gt;&gt; Template Paths and hit the + Template Path button.</p> <p></p> <p>A popup will appear asking you to name your template once it is done hit the create button.</p> <p></p> <p>Now you can edit your template with the integrated text editor which also has a suggestion feature (macOS: ctrl + space).</p> <p>Once you have finished to edit do not forget to save.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/","title":"Index","text":"<p>One requirement of many Pydio/PydioCells users was always to \"keep the tree structure\" of files and folders visible inside the storage (and eventually modify these directly without going through Pydio). To achieve this, Cells was conceived so that datasources rely on a unidirectionnal synchronization between the storage and the internal index. That way, the index is always reflecting the state of the storage, and if one wants to modify the storage content directly, a re-indexation is required.</p> <p>But when files number is getting high, this can bring a bunch of issues, and sometimes a \"resync\" of the datasource is required to fix index issues.</p> <p>Starting with Cells v3, a new datasource format was introduced, that keeps the tree structure only in Cells internal indexes, and stores files as a flat structure inside the storage. This is more inline with \"object storage\" design, and brings huge performance gains as no more \"sync\" is required to maintain these indexes. This is now the preferred format, unless a direct access to the files inside the storage is necessary.</p> <p>This \"format\" is decoupled from the storage technology : any datasource (Local FS, S3 or S3 compatible, etc...) supports both formats.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#structured-storage-best-for-accessing-the-files-directly","title":"Structured Storage: best for accessing the files directly","text":""},{"location":"admin-guide/connect-your-storage/datasource-format/index/#objects-to-index-synchronization","title":"Objects-to-Index Synchronization","text":"<p>In structured format, the files and folders you see in Cells are exactly the same as the storage contents. Any modification, even going through the Cells interface is always applied on the storage, and then reported to the index throught the real-time synchronization. </p> <p>[:image:4_connecting_your_storage/datasource-format-struct.png]</p> <p>In this configuration, modifying the storage content directly and triggering a manual re-synchronization makes sure that the index is always up-to-date.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#drawbacks","title":"Drawbacks","text":"<p>As Cells is speaking \"object\" with the storage, the drawback of this configuration is that huge moves (like a folder rename) require first moving all the objects inside the folder to their new name, listening to these move events, factorizing them and finally renaming the folder inside the index. Furthermore, the \"move\" operation does not really exist in object storages, but always require a copy/delete sequence!</p> <p>Another drawback is the presence of \".pydio\" hidden files inserted in each folder to maintain their UUID. </p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#backup-restore","title":"Backup / Restore","text":"<p>For structured storage, backup/restore is just a matter of copying the data to/from an other location and launching a resync manually.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#flat-storage-best-for-performances","title":"Flat Storage: best for performances","text":""},{"location":"admin-guide/connect-your-storage/datasource-format/index/#embracing-the-objects-storage-world","title":"Embracing the \"objects storage\" world","text":"<p>In flat storage, files are stored as basic data blobs named with their internal UUIDs. Folders are not physically present inside the storage. The index service maintains the whole tree of folders and files and will just query the storage when an actual data modification (upload/download) is necessary. As a result, tree modifications like \"moves\" are performed directly inside the index, at best speed. </p> <p>[:image:4_connecting_your_storage/datasource-format-flat.png]</p> <p>This is exactly what object storage technologies are designed for : serving objects by keys, allowing infinite horizontal scaling possibility.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#backup-restore_1","title":"Backup / Restore","text":"<p>For admins, it can be a bit scary to have a look at their storage and see just a bunch of UUID-named files. What if Cells is down, how will I get my folders/files back? A command line tool is provided to backup a flat datasource index directly inside a dedicated DB file on the storage. This DB file can later on be read by Cells to initialize a new datasource with the saved index data.</p> <p>To backup the index of \"ds1\" inside a \"snapshot.db\" file, run: <pre><code>cells admin datasource snapshot --datasource=ds1 --operation=dump --basename=snapshot.db \n</code></pre> Then you can restore this index with the opposite command: <pre><code>cells admin datasource snapshot --datasource=ds1 --operation=load --basename=snapshot.db \n</code></pre> Beware that the \"load\" operation will override the current index data! You can also create a new datasource and specify \"snapshot.db\" in the Advanced options.</p> <p>[Note] Performing regular backup of your SQL Database is enough to make sure that you are able to recover your files hierarchy. This optional on-file snapshot of the index table is a second layer of security, in case you loose your DB!</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#generating-snapshots-with-schedulercellsflows","title":"Generating snapshots with Scheduler/CellsFlows","text":"<p>As an addition to the command-line, the \"dump\" operation can be manually triggered from the scheduler. For Enterprise Distribution, an additional job is programmed  to run every night and dump snapshots for every Flat datasources. By default, these snapshots are kept for 10 days.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#switching-datasource-format","title":"Switching Datasource Format","text":"<p>A command-line tool is provided to eventually migrate a datasource from flat to structured and opposite. </p> <pre><code>cells admin datasource migrate\n</code></pre> <p>This tool is a command-line, as the server must run in a particular state to allow this migration. Basically, all <code>pydio.grpc.data.sync.*</code> services associated with each datasource must be turned off during a migration operation. When using the command line, it will check against the service registry that the targeted sync service is not running.</p> <p>It is better to not migrate data \"in-place\". For this reason, if a datasource \"ds1\" is stored in the bucket \"bucket1\" on the storage, you first have to create a new bucket \"bucket2\" where all data will be moved. Then, according to the new target format, the tool will move all files with correct renaming and eventually add or remove <code>.pydio</code> entries from the index. </p> <p>After a successfull operation, the tool will upgrade the configuration file to point the datasource to the new bucket. Files and folders entries in the index are always left untouched. After a restart, the operation should be transparent.</p> <p>Please note that this tool can be handy in the case of full uninstallation of Pydio Cells. Use it to transform a flat storage to a structured one before uninstalling Cells!</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/index/#special-case-internal-storage","title":"Special Case: \"Internal\" Storage","text":"<p>A third format, derived from Flat, is available to create specific datasources used for internal data, namely thumbnails and files versions. These datasources are using the same format as Flat, but have the specificity of not sending events to various parts of the application. </p>"},{"location":"admin-guide/connect-your-storage/datasource-format/structured-storage-best-for-accessing-the-files-directly/","title":"Structured Storage - Best for accessing the files directly","text":"<p>In structured format, the files and folders you see in Cells are exactly the same as the storage contents.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/structured-storage-best-for-accessing-the-files-directly/#objects-to-index-synchronization","title":"Objects-to-Index Synchronization","text":"<p>Any modification, even going through the Cells interface is always applied on the storage, and then reported to the index throught the real-time synchronization. </p> <p></p> <p>In this configuration, modifying the storage content directly and triggering a manual re-synchronization makes sure that the index is always up-to-date.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/structured-storage-best-for-accessing-the-files-directly/#drawbacks","title":"Drawbacks","text":"<p>As Cells is speaking \"object\" with the storage, the drawback of this configuration is that huge moves (like a folder rename) require first moving all the objects inside the folder to their new name, listening to these move events, factorizing them and finally renaming the folder inside the index. Furthermore, the \"move\" operation does not really exist in object storages, but always require a copy/delete sequence!</p> <p>Another drawback is the presence of \".pydio\" hidden files inserted in each folder to maintain their UUID. </p>"},{"location":"admin-guide/connect-your-storage/datasource-format/structured-storage-best-for-accessing-the-files-directly/#backup-restore","title":"Backup / Restore","text":"<p>For structured storage, backup/restore is just a matter of copying the data to/from an other location and launching a resync manually.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/flat-storage-best-for-performances/","title":"Flat Storage - Best for performances","text":""},{"location":"admin-guide/connect-your-storage/datasource-format/flat-storage-best-for-performances/#embracing-the-objects-storage-world","title":"Embracing the \"objects storage\" world","text":"<p>In flat storage, files are stored as basic data blobs named with their internal UUIDs. Folders are not physically present inside the storage. The index service maintains the whole tree of folders and files and will just query the storage when an actual data modification (upload/download) is necessary. As a result, tree modifications like \"moves\" are performed directly inside the index, at best speed. </p> <p></p> <p>This is exactly what object storage technologies are designed for : serving objects by keys, allowing infinite horizontal scaling possibility.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/flat-storage-best-for-performances/#backup-restore","title":"Backup / Restore","text":"<p>For admins, it can be a bit scary to have a look at their storage and see just a bunch of UUID-named files. What if Cells is down, how will I get my folders/files back? A command line tool is provided to back up a flat datasource index directly inside a dedicated DB file on the storage. This DB file can later on be read by Cells to initialize a new datasource with the saved index data.</p> <p>To back up the index of \"ds1\" inside a \"snapshot.db\" file, run: <pre><code>cells admin datasource snapshot --datasource=ds1 --operation=dump --basename=snapshot.db \n</code></pre> Then you can restore this index with the opposite command: <pre><code>cells admin datasource snapshot --datasource=ds1 --operation=load --basename=snapshot.db \n</code></pre> Beware that the \"load\" operation will override the current index data! You can also create a new datasource and specify \"snapshot.db\" in the Advanced options.</p> <p>[Note] Performing regular backup of your SQL Database is enough to make sure that you are able to recover your files hierarchy. This optional on-file snapshot of the index table is a second layer of security, in case you lose your DB!</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/flat-storage-best-for-performances/#generating-snapshots-with-schedulercellsflows","title":"Generating snapshots with Scheduler/CellsFlows","text":"<p>As an addition to the command-line, the \"dump\" operation can be manually triggered from the scheduler. For Enterprise Distribution, an additional job is programmed to run every night and dump snapshots for every Flat datasources. By default, these snapshots are kept for 10 days.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/flat-storage-best-for-performances/#loading-snapshot-with-cells-fuse","title":"Loading snapshot with Cells Fuse","text":"<p>The flat datasources snapshot can also be mounted and explored offline (without any running Pydio Cells) to recover one or more files. Read more about Cells Fuse.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/recovering-a-flat-storage-datasource-with-cells-fuse/","title":"Recovering a Flat Storage Datasource with Cells Fuse","text":"<p>The flat format storage is highly recommended to get the best performance. Switching to an \"object storage\" provides an unprecedented level of flexibility and scalability, but it can be daunting to see UUIDs instead of the original filenames.</p> <p>The \"snaphsot\" feature creates an index of the data for better long-term archiving. With that snapshot and the corresponding UUID files, Cells can easily recreate a datasource with the original files/folders tree.</p> <p>But what if you simply want to explore the storage \"offline\", without a Cells instance running, or without wanting to recreate a brand new datasource just to find a file inside a backup? Meet Cells Fuse.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/recovering-a-flat-storage-datasource-with-cells-fuse/#cells-fuse-command-line","title":"Cells Fuse command line","text":"<p>Cells Fuse is a dedicated tool used to directly interact with a snapshot database to search for a given file, retrieve its content, or event mount the whole tree as a FUSE volume on the machine. This feature is only supported on Linux (MacOSX can use MacFUSE, but requires a manual build of the binary).</p> <p>Let's read the manual for this command:</p> <pre><code>$&gt; ./cells-fuse \n\nDESCRIPTION\n\n  This tool allows the local mounting of a flat datasource, given a \"snapshot\" has been created in the storage. \n  It does NOT require a running Cells/Cells Enterprise instance nor MySQL connection.\n  It currently supports local filesystem and S3-based datasources.\n\n  Using cells-fuse can be useful in case of emergency to recover files from a flat datasource.\n\nEXAMPLES \n\n  1. Mount Local datasource\n  $ ./cells-fuse mount -t /tmp/datasource -s file:///var/cells/data/pydiods1/snapshot.db\n\n  2. Mount Remote S3 datasource (note the s3s scheme)\n  $ ./cells-fuse mount -t /tmp/datasource -s s3s://API_KEY:API_SECRET@s3.amazonaws.com/MyBucketName/snapshot.db\n\n  3. Lookup for a file (without mounting the datasource)\n  $ ./cells-fuse lookup --storage file:///var/cells/data/pydiods1/snapshot.db --name \"*\" --type file --base \"/folder/path\"\n\n  4. Copy a specific file (without mounting the datasource) to a local location\n  $ ./cells-fuse copy --storage file:///var/cells/data/pydiods1/snapshot.db --from \"/folder/path/file.ext\" --to \"./file.ext\"\n\n  5. Display tool version\n  $ ./cells-fuse version\n\nUsage:\n  ./cells-fuse [flags]\n  ./cells-fuse [command]\n\nAvailable Commands:\n  copy        Copy the content of a specific file from storage to a local file\n  help        Help about any command\n  lookup      Look up for a file without mounting the whole storage, equivalent to shell 'find' command.\n  mount       Mount whole datasource as a local filesystem using FUSE\n  version     Print version information\n\nFlags:\n  -h, --help   help for ./cells-fuse\n</code></pre> <p>As you can see, the tool provides 3 main commands : </p> <ul> <li>lookup: find a file directly inside the tree, similar to a find + grep command. </li> <li>copy: given its path in the tree, finds the corresponding file inside the storage and copy it to your output</li> <li>mount: mounts the whole tree as a local, readonly filesytem. From there you can copy any files or folders as you would with a standard FS.</li> </ul>"},{"location":"admin-guide/connect-your-storage/datasource-format/recovering-a-flat-storage-datasource-with-cells-fuse/#download-cells-fuse-binary","title":"Download cells-fuse binary","text":"<p>Cells Fuse is compiled at the same time as Cells and follows the same versioning policy. It is downloadable directly in the release folder (Linux AMD64): </p> <p>https://download.pydio.com/pub/cells/release/{CELLS LAST VERSION}/linux-amd64/cells-fuse</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/recovering-a-flat-storage-datasource-with-cells-fuse/#storage-support","title":"Storage support","text":"<p>Currently, Cells Fuse supports Local FS and S3/S3-compatible storage. As long as it finds the snapshot file in the same folder/bucket as the data.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/switching-datasource-storage-formats/","title":"Switching Datasource Storage Formats","text":""},{"location":"admin-guide/connect-your-storage/datasource-format/switching-datasource-storage-formats/#command-line-tool","title":"Command Line Tool","text":"<p>A command-line tool is provided to eventually migrate a datasource from flat to structured and opposite. </p> <pre><code>cells admin datasource migrate\n</code></pre> <p>This tool is a command-line, as the server must run in a particular state to allow this migration. Basically, all <code>pydio.grpc.data.sync.*</code> services associated with each datasource must be turned off during a migration operation. When using the command line, it will check against the service registry that the targeted sync service is not running.</p>"},{"location":"admin-guide/connect-your-storage/datasource-format/switching-datasource-storage-formats/#recommendations","title":"Recommendations","text":"<p>It is better to not migrate data \"in-place\". For this reason, if a datasource \"ds1\" is stored in the bucket \"bucket1\" on the storage, you first have to create a new bucket \"bucket2\" where all data will be moved. Then, according to the new target format, the tool will move all files with correct renaming and eventually add or remove <code>.pydio</code> entries from the index. </p> <p>After a successfull operation, the tool will upgrade the configuration file to point the datasource to the new bucket. Files and folders entries in the index are always left untouched. After a restart, the operation should be transparent.</p> <p>Please note that this tool can be handy in the case of full uninstallation of Pydio Cells. Use it to transform a flat storage to a structured one before uninstalling Cells!</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/index/","title":"Create datasources","text":"<p>In this chapter, we guide you through the process of creating a new datasource, for each of the four implemented storage providers:</p> <ul> <li>Common Options</li> <li>File System Storage</li> <li>Mounts / NAS</li> <li>S3 Compatible Storage</li> <li>[Ent] Google Cloud Storage</li> <li>[Ent] Azure Blob Storage</li> </ul>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/","title":"Common Options","text":"<p>DataSources can be seen as \"mount points\" to attach actual storage to the application. Cells datasource can connect to various storage types. Each of them have specific options that are described in the following pages:</p> <ul> <li>File System</li> <li>S3-Compatible Object Storage</li> <li>Google Cloud Storage</li> <li>Azure Blob Storage</li> </ul> <p>Appart from this connector type, all datasources share common options regarding how data is structured by Cells, generic Lifecycle features for data management, and some advanced settings for ETags management.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#creating-a-datasource","title":"Creating a datasource","text":""},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#required-options","title":"Required Options","text":""},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#format","title":"Format","text":"<p>When you create a datasource, you must first select the way Cells organizes data inside the storage. Please refer to Datasource Format to have a good understanding of this feature. Quickly put, Flat Storage is better for performances, while Structured Storage is required if you wish to keep files and folders visible at the storage layer (internal datasources are specifically used for storing Thumbnails and Versions, and should not be used for your actual business data).</p> <p></p>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#identifier","title":"Identifier","text":"<p>Datasource identifier uniquely identifies your datasource within Cells. In the \"global\" tree, all files located inside this datasource will see their path start with <code>datasource-id</code>. Please note that this ID must be alphanumeric only, and as it is seen as an S3-BucketName internally, it must be a DNS-compliant name.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#data-lifecycle","title":"Data Lifecycle","text":""},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#versioning","title":"Versioning","text":"<p>Setting up a versioning policy enables you to configure how Cells act with file versioning, how many versions are kept, how long we keep the old versions and many other options. You can create your own versioning policies and configure how you want to handle your versions.</p> <p>File versions are stored inside the Internal DataSource named <code>versions</code></p>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#encryption","title":"Encryption","text":"<p>Encryption at rest can be used to make sure files are never stored in clear format inside the storage. All files will be encrypted with a key and only be readable when decrypted with the same key.</p> <p>WARNING: Keys are stored in the default database and if they ever get lost the encrypted data could not be recovered.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#advanced-options","title":"Advanced Options","text":"<p>Advanced options should be used for specific cases and generally touched with care!</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#flat-data-import","title":"Flat data import","text":"<p>When using the \"Flat\" storage structure, it is possible to re-import an existing datasource that has been snapshotted in a previous installation of Cells. For that, at creation, you can specify the name of the snapshot file that should be found inside the storage.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/common-options/#etags-management","title":"ETags Management","text":"<p>To achieve best performances and files reconciliation, Cells heavily relies on files checksums (ETags) that change when a file content is modified. In most cases, ETags are provided directly as MD5 hashes by the storage, but for some specific cases like files uploaded as multiparts, Cells does have to recompute them manually, and attach them as metadata to the underlying storage. This can eventually lead to bandwith consumption and may not be wanted. </p> <p>Use Native ETags option will trust the storage-provided ETag value, even if it's not in the MD5 format and use it as is. As a drawback this will prevent the use of Cells Desktop Sync client as it relies on MD5 internally.</p> <p>Local Checksum option will store re-computed checksums locally instead of attaching them as metadata in the storage, avoiding any modification of the original objects.</p> <p></p>"},{"location":"admin-guide/connect-your-storage/create-datasources/file-system-storage/","title":"File System Storage","text":"<p>The most standard driver you can use is actually the File System datasource: it has the huge advantage of storing the files directly on a local or network file system, thus on the other way round, to read any existing data stored in a file system and empower it with Pydio Cells capabilities.</p> <p></p> <ul> <li>Peer Address: address of the server where the storage is located. This is necessary for distributed setup where Pydio Cells may run on various machines. Active peers should be automatically detected and proposed in the list. (You can now choose the hostname which in case of an ip change will not disturb your datasource)</li> <li>Path: path to the directory on the server file system that is served as the root of this datasource.</li> <li>Storage is MacOS: if the Peer is running on MacOS, enable this to perform UTF8 names normalization, or you may see strange issues with names containing accented characters.</li> </ul> <p>Warning when defining the path to the root folder of your datasource on the server, observe the following:</p> <p>The path must be at least 2 levels down, for instance <code>/mnt/data/</code></p> <ul> <li>The path must be absolute on the chosen peer: it must start from the root of the chosen server.   Once you have chosen a peer, note that the system automatically discovers the available directories and presents them in a popup list.</li> <li>Due to the internal implementation of the file-system-based Object service (see previous chapter):</li> <li>The leaf folder is exposed as an Amazon S3 bucket, it must comply with the Bucket naming rules, which are the same as the DNS sub-domains naming rules: technical names that must be lower case and without spaces.</li> <li>The path must be at least two levels deep (defining e.g. <code>/tmp</code> as a datasource does not work).</li> <li>The user owning the process that starts the app (usually the <code>pydio</code> user) must have read and write permissions on this folder and on the parent folder.</li> </ul> <p>If you wish to create a folder during that step, select the parent from the list, then you will see the \"new\" button appear on the line.</p> <p></p>"},{"location":"admin-guide/connect-your-storage/create-datasources/file-system-storage/#flat-format-data-distribution","title":"Flat Format data distribution","text":"<p>When creating a Flat datasource inside an FS storage, you will end up storing all the files at the root of the picked folder (as they are just referenced by their IDs). If you underlying storage technology does not like this kind of layout, you can use the automatic sharding feature by spreading files inside automatic folders and subfolders, based on their IDs. </p> <p>The parameter can be defined using the following pattern: <code>N:P:Q...</code> where N, P, Q are integers and represent levels of folders where folders are named from the file UUID's first characters. For example, using '1:2' for sharding would create a first level of folders with the first letter, and inside a second level of folders with the two first letters of the uuid. Using random UUIDs, this would look like:</p> <ul> <li>a/ab/abzraat2R2E</li> <li>a/ad/ad2ererzer</li> <li>q/q2/q2zzt43gezzet</li> <li>etc...</li> </ul>"},{"location":"admin-guide/connect-your-storage/create-datasources/mounts-nas/","title":"Mounts / NAS","text":"<p>Using any filesystem mounted as a volume should be working out-of-the-box similarly to a standard file system (see previous section). That said, you must take special care of the mounted volume structure and permissions.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/mounts-nas/#storage-layout-internal-folder","title":"Storage layout - Internal folder","text":"<p>When using a local path as storage for a datasource, Cells will expose the given folder as an \"s3 bucket\". This implies storing some specific metadata inside a hidden folder located at the upper level of the target folder. </p> <p>For example, if a datasource is created on <code>/data/storage/datasource1</code>, Cells will expect to create its internal folder at <code>/data/storage/.minio.sys/</code>. When uploading a file as multipart, the parts go inside this folder, and the final file is rebuilt and moved at the correct location.</p> <p>For this reason when creating this datasource, we must make sure that its parent folder <code>/data/storage</code> has the same permissions (pydio user), and is located on the same volume as the <code>datasource1</code> folder.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/mounts-nas/#mounting-a-nas-remote-storage","title":"Mounting a NAS / Remote storage","text":"<p>Any POSIX-compliant volume should be supported as a local FS by Cells. Typically, mounting a remote storage using the <code>cifs</code> or <code>nfs</code> protocols is very frequent. </p> <p>As explained above, in such case you must just make sure that your target storage folder and its parent folder are located in the same physical volume. To achieve this, the simplest way is to mount the parent instead of mounting the target folder directly. </p> <pre><code>EXAMPLE : Remote storage exposes the following folder: /shares/data/datasource\n\nWRONG\n - Mount /shares/data/datasource =&gt; Local /volumes/datasource\n - Creating a datasource on /volumes/datasource will fail as /volumes and /volumes/datasource are on differing volumes\n\nCORRECT\n - Mount /shares/data =&gt; Local /volumes/data\n - Creating a datasource on /volumes/data/datasource will work\n</code></pre>"},{"location":"admin-guide/connect-your-storage/create-datasources/mounts-nas/#forcing-cross-volume","title":"Forcing Cross-Volume","text":"<p>Sometimes you don't have a choice, and you must be able to mount a remote storage with the \"wrong\" setup. Although it should never be used in production, there is a trick to force such configuration, by using the <code>CELLS_MINIO_ALLOW_CROSSMOUNT=true</code> environment variable.</p> <p>Typically, that can be used to temporarily connect with the wrong setup and import all data at once, then using a clean datasource for actual usage.</p> <p>Note that this setup is dangerous and should not be used in production, as the cross-volume copy of uploaded files may be corrupted.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/s3-compatible-storage/","title":"S3 Compatible Storage","text":"<p>This connector allows using a remote S3-compliant storage as datasource for Pydio Cells, for instance you can connect your cells to a minio storage.</p> <p>Under the hood, an object service is started in Gateway mode using the Api KEY/SECRET that you will provide.</p> <p>We provide you with 2 examples of connections with S3 storages, you can use them to understand how the datasources interact with the S3 connectors.</p>"},{"location":"admin-guide/connect-your-storage/create-datasources/s3-compatible-storage/#connect-with-amazon-s3-storage","title":"Connect with Amazon S3 Storage","text":"<p>To connect your datasource to your S3 bucket you need to authenticate the S3 storage using credentials which are composed of an accessKey and a secretKey, in your amazon s3 instance they match as the following,</p> <ul> <li>S3 Api key: <code>access key id</code></li> <li>S3 Api secret: <code>secret access key</code></li> </ul> <p>you can get them on your amazon aws account, here is a piece of documentation from the amazon doc that will point you to the right place, https://aws.amazon.com/blogs/security/wheres-my-secret-access-key/.</p> <p></p> <p>then once you have all of the information and assuming that you have already created your bucket, these are the mandatory fields to get your datasource to work:</p> <ul> <li>S3 Api key: the <code>access key id</code> that you retrieve as explained above</li> <li>S3 Api secret: the <code>secret access key</code> that you retrieve as explained above</li> <li>Buckets: Once you have provided a Valid Key and Secret you will see appear a list of the buckets that you have access to and can select them by clicking or with a regular expression.</li> </ul> <p>You can notice that we used a regex to select only the buckets starting with cells</p> <p></p>"},{"location":"admin-guide/connect-your-storage/create-datasources/s3-compatible-storage/#connect-with-minio-storage","title":"Connect with Minio Storage","text":"<p>To connect with a minio storage, you need to retrieve your minio server AccessKey and SecretKey ( there is many ways for that, you can also define them yourself), the details can be found inside minio's documentation.</p> <p>Then you will need to fill the fields as the following:</p> <ul> <li>S3 Api Key: the <code>accessKey</code> that you retrieved as explained above.</li> <li>S3 Api Secret: the <code>secretKey</code> that you retrieved as explained above.</li> <li>Custom Endpoint: is the address where your Minio server is running, usually <code>&lt;address&gt;:9000</code>, for instance <code>http://192.168.0.116:9000</code>.</li> <li>S3 Api Region: you can leave this empty</li> <li>Buckets: Once you have provided valid parameters for the previous fields you will see appear a list of buckets that you have access to and can select them by clicking or with a regular expression.</li> </ul> <p></p>"},{"location":"admin-guide/connect-your-storage/create-datasources/ent-google-cloud-storage/","title":"[Ent] Google Cloud Storage","text":"<p>Pydio cells enterprise is compatible with google cloud object storage, therefore you can have datasources that are connected to your google cloud storage buckets.</p> <p>Start by generating credentials if you do not have them, for that, open the menu on your GCS dashboard (the top left burger) and then go to the following section APIs &amp; Services &gt; Credentials.</p> <p></p> <p>Now click on Create credentials and select Service account key:</p> <ul> <li>Service account : You can use the default one.</li> <li>Key type : Choose JSON</li> </ul> <p>then click on Create, it will generate and download automatically a JSON file, (you will it need later to configure your datasource).</p> <p>Assuming that you already have created your bucket, here's how you connect a GCS bucket to a Cells datasource:</p> <p></p> <ul> <li>Bucket Name : put your bucket name.</li> <li>GCS JSON Credentials: put the content of the file that we generated above with your gcs account.</li> <li>Internal path : you can make the datasource point to a specific folder inside the bucket.</li> </ul>"},{"location":"admin-guide/connect-your-storage/create-datasources/ent-azure-blob-storage/","title":"[Ent] Azure Blob Storage","text":"<p>Pydio Cells is compatible with Azure Blob Storage, you can connect your pydio datasources to your azure blob storage.</p> <p></p> <p>To connect your datasource to the azure blob storage you need prerequisites listed below.</p> <p>Look for the following menu in azure interface it's located in All Services &gt; Storage Account, then create or choose one, after that look at the examples below to find what you need.</p> <p></p> <p>in this menu you can find your Azure account name which corresponds to Storage account name and the Azure Secret Key which is the field <code>key</code> in either <code>key1</code> or <code>key2</code>.</p> <p>Then found the bucket name, which are called <code>blob</code> in azure, you can find them in the following interface (that will also be used to create blobs).</p> <p></p> <ul> <li>Bucket name: the name of the blob/bucket on the remote azure storage.</li> <li>Azure Account Name: your azure storage account name.</li> <li>Azure Secret Key: the secret key, is your storage access key.</li> <li>Internal Path: Additional Path appended to the bucket name when querying the remote storage.</li> </ul>"},{"location":"admin-guide/secure-your-data/index/","title":"Secure your data","text":"<p>A key point of Cells is to give you the ability to empower your end users with standard filesharing features, while keeping control of your data and closely monitoring who is accessing what. This section describes all the features you can use to ensure compliance and regulation on your Cells setup.</p> <ul> <li>Workspaces / Cells</li> <li>Role-based Access Control</li> <li>[Ent] Dynamic Access Control</li> <li>[Ent] Hardening Security</li> <li>[Ent] Audits &amp; Compliance</li> <li>UX Actions / Parameters</li> </ul>"},{"location":"admin-guide/secure-your-data/workspaces-cells/","title":"Workspaces / Cells","text":"<p>If you went through the Quick Admin Tour, you should already be familiar with the Workspaces concept. Basically a pointer to anywhere in the global tree aggregated by all Data Sources, they define the basic units to grant or restrict permissions, but also customize actions in the interface. These feature will be described in the next sections.</p> <p>This section will go through the advanced features of Workspaces and explain the difference with 'Cells'.</p>"},{"location":"admin-guide/secure-your-data/workspaces-cells/#workspaces-as-a-way-to-organize-your-data","title":"Workspaces as a way to organize your data","text":"<p>Workspaces provide a very flexible way to organize your data, depending on who will access to it. It is important to spend some time to define them properly. This is generally a good opportunity for looking at the existing datasets and clean/reorganize them. </p>"},{"location":"admin-guide/secure-your-data/workspaces-cells/#typical-layouts","title":"Typical layouts","text":"<p>In a typical company setup workspaces will often be organized by business units : </p> <p></p> <p>Other will define a per-region organization</p> <ul> <li>America</li> <li>Europe - Middle East</li> <li>Asia</li> <li>Africa</li> <li>etc... </li> </ul> <p>Up to you. </p>"},{"location":"admin-guide/secure-your-data/workspaces-cells/#multiple-paths-workspace","title":"Multiple Paths workspace","text":"<p>To define a workspace, one must point to at least one location in the DataSources tree. It is interesting to note that you can also compose a workspace from multiple locations. You can that way aggregate various data from various datasources into one unique workspace.</p>"},{"location":"admin-guide/secure-your-data/workspaces-cells/#cells-sandboxed-workspaces-for-the-users","title":"Cells : sandboxed workspaces for the users","text":"<p>As described in the Sharing Features section, Cells are a simple way for users to share data with other users, either by opening them partial access to their personal data, or by creating cells from scratch to start collaborating in a fresh folder. </p> <p>In fact, Cells are more or less \"just workspaces\" that can be managed by users, whereas only administrators can manage workspaces. They have the same abilities for aggregating data with multiple paths. Users can create cells based on an existing folders and later on share more data into that same Cells. </p> <p>Difference is subtle but important. Workspaces are created by administrators, they are fixed and come with a set of predefined authorizations or restrictions : these rules are always inherited by the Cells created inside those workspaces. As such, Cells provide the flexibility and power of workspaces, empowering your users, while still keeping the data secure and under control.</p> <p>See Also</p> <ul> <li>Creating a simple workspace in the Quick Admin Tour</li> <li>Datasources overview</li> <li>Assigning workspaces accesses via Users, Groups and Roles</li> </ul>"},{"location":"admin-guide/secure-your-data/role-based-access-control/","title":"Role-based Access Control","text":""},{"location":"admin-guide/secure-your-data/role-based-access-control/#role-as-a-central-concept","title":"Role as a central concept","text":"<p>The role abstraction is used by the system when defining authorizations and policies. Basically, a role is a simple container for an Access Control List (ACL).  An ACL is a set of permissions that either grants access to any Node of the tree, or stores specific configurations attached to the corresponding roles (like Actions and Parameters custom values).</p> <p>Nodes permissions are creating e.g. when assigning Read/Write to a Workspace or a Cell or a specific folder. They can be set manually (Read, Write), or computed dynamically at runtime by a Security Policy (see Security Policies section).</p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#admin-defined-roles","title":"Admin-defined Roles","text":"<p>An administrator can create an arbitrary role and assign it to any users. A specific \"Apply To\" field also allows to automatically assign it to users with a specific profile.</p> <p></p> <p>The basic information attached a role can be edited: </p> <p></p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#groups","title":"Groups","text":"<p>Groups are a convenient way to organize users hierarchically. A group is defined by its path, for instance <code>/management/directors</code> and can be nested under another group. </p> <p>When installing the application, a single default group is present: the <code>ROOT_GROUP</code> group has the specific <code>/</code> path. As such, the <code>ROOT_GROUP</code> group is the ancestor of all users and groups.</p> <p>Each group is attached with a canonical role that takes the group Uuid as Uuid.</p> <p></p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#users","title":"Users","text":"<p>A user represent a single person or entity. The user provides the authentication within the system. </p> <p>A user can only be part of one group and is characterized by her login and the path of her group: typically:  <code>/management/director/jane</code></p> <p>The main properties of a user are her <code>username</code> (the login she uses to connect to the system) and a technical Unique ID (that is a <code>String UUID</code>). A user can also be enriched with metadata, like various information (name, photo...), and the user Login is used in the activities and audit logs.</p> <p>Each user is attached with a canonical role that takes the user Uuid as Uuid.</p> <p>Additionally, an ordered list of Roles can be attached to any users.</p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#access-control-lists","title":"Access Control Lists","text":"<p>Access Control Lists allows the Administrator to actually apply the strategies described above. In the various users/roles/groups editors, one can grant permissions on Workspaces or on workspaces sub-folders for the corresponding \"canonical\" role.</p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#merge-rules","title":"Merge Rules","text":"<p>When multiple ACLs (either static or dynamic) are applied on a single <code>Node</code>, either because they are attached directly to this <code>Node</code> or to one of its ancestor, they are merged following the rules :</p> <ul> <li>Deny by Default: if no acl is found, access is never granted</li> <li>Access Flags: if a Flag value is found, it opens the associated right.</li> <li>Explicit Denial Wins: if any \"Deny\" is found somewhere in the tree, it always wins over other values.</li> </ul> <p>For instance for <code>READ</code> access this translates to:</p> <ul> <li>By default, a <code>Node</code> is never visible</li> <li>A \"Read\" flag attached to this <code>Node</code> (or one of its ancestor) gives Read access to this <code>Node</code></li> <li>If a \"Deny\" flag is attached to the <code>Node</code> or one of its ancestor, it takes precedence and always prevent accessing this node.</li> </ul>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#setting-workspace-accesses","title":"Setting Workspace Accesses","text":"<p>The basic operation to assign right goes through the \"Read\" / \"Write\" / \"Deny\" checkboxes. The first two will grant corresponding privilege to the currently edited object. The \"Deny\" operation is used to override a right that would have been applied by a role higher in the chain.</p> <p></p> <p>When editing ACLs, we recommend sticking to the Workspace level of granularity, to make your security model more maintainable. In some cases, you may require to directly assign rights at a folder level. For that you can use the \"+\" button next to the workspace name to list the workspace children and assign rights accordingly.</p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#ent-dynamic-acls-with-policies","title":"[Ent] Dynamic ACLs with Policies","text":"<p>Policies are a powerful feature of Pydio Cells used to dynamically assign ACLs depending on the context (logged in user, day and time of the week, client IP address...) and a set of rules that can be scripted and combined together. </p> <p></p> <p>See the Security Policies section to learn more.</p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#ent-policies-inheritance-and-cells","title":"[Ent] Policies inheritance and Cells","text":"<p>When using Security Policies to dynamically provide or deny access to a Workspace, if a user creates a Cell to share data from this workspace with another user, this Cell will automatically inherit from the original policy. </p> <p>For Cells created \"from scratch\" (not referring to an existing folder), an empty folder is automatically created, and by default it does not inherit from any parent workspace. If you want to apply a default policy for that case, you can use the \"Cells Policy\" field and preset a specific policy.</p> <p></p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#putting-things-together","title":"Putting Things Together","text":"<p>As you probably understood by now, when a user is logged in, this user may have a certain number of Roles applying to her. From there, all Access Lists will be summed at runtime into a unique effective role.</p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#computing-effective-role","title":"Computing Effective Role","text":"<p>All user's roles are used compute her actual role:</p> <ul> <li>If the user is part of nested groups /management/directors, she will inherit each Group Role starting from root:</li> <li>RootRole defined for \"/\"</li> <li>ManagementRole defined for \"/management\"</li> <li>DirectorsRole defined for \"/directors\"</li> <li>If the user has some arbitrary roles applied, e.g. \"Subscriber\" applied by admin and \"Team of John\" because she's part of a user team:</li> <li>SubscriberRole</li> <li>TeamOfJohnRole</li> <li>Finally the user always has her own canonical role</li> <li>CanonicalUserRole</li> </ul> <p>The \"Manage Roles\" component in the user editor provides you an accessible visualisation of all roles applied: </p> <p></p> <p>The rules that will apply when trying to detect if the user has a right to access a node or should see a given action for example will be computed by merging the various roles values in this order: from top (always RootRole first) to bottom (always CanonicalUserRole last).</p>"},{"location":"admin-guide/secure-your-data/role-based-access-control/#example","title":"Example","text":"<p>This model provides great flexibility to assign permissions on the Administrator side. Typical schemes can look like:</p> <ul> <li>Assign Read/Write on workspace Personal Files to Root Group (all users)</li> <li>Assign Read/Write access on workspace Accountants to group Accountants, same on workspace Engineers to group Engineers, etc...</li> <li>Assign Read access on workspace \"Marketing Files\" to Root Group, but Write access on this workspace to role \"Marketing Editors\". Then assign role \"Marketing Editors\" to a subset of users in various groups</li> <li>Deny Access on Personal Files to role \"External Users\", and make this role automatically applied to any user created by users (shared users),</li> <li>etc.</li> </ul>"},{"location":"admin-guide/secure-your-data/ux-actions-parameters/","title":"UX Actions / Parameters","text":"<p>In this section, we show how actions and parameters can help you micro manage every single thing about users/groups/roles, such as enabling/disabling an action from the right-click menu.</p>"},{"location":"admin-guide/secure-your-data/ux-actions-parameters/#parameters-and-actions","title":"Parameters and actions","text":"<p>Basically actions and parameters if chosen correctly can save you lot's of time and give you the custom experience that you wanted. You can control everything from for instance the buttons displaying and the action that users/groups are allowed to use, to even using the plugins such as the mailer, actions like compressing a file and more.</p> <p>To do so go and edit your <code>user / group / role</code> and go to Application Parameters section:</p> <ul> <li>For instance let's click on Add for and select  <code>All Workspaces</code>:</li> </ul> <p></p> <p></p> <p></p> <p>This is a list of every actions and parameters that you can configure.</p>"},{"location":"admin-guide/secure-your-data/ux-actions-parameters/#actions","title":"Actions","text":"<p>With actions, you can either restrict particular actions or if it was already restricted, allow it for a user that was not supposed to.</p> <p>As seen in this screen capture:</p> <p></p> <p></p> <p>For instance in this screenshot, the action \"create new Cells\" was disabled for everyone, therefore I wished to have a user (in this case Admin) to have the action available and be able to create Cells.</p> <p>You have a lot of choices but the principle is easy. You can apply this for groups, roles.  Choose the action and what it is targeting (for instance it could be the core.conf, and then you have a slider allowing to enable or disable it.</p> <p>The choices are multiple and it is up to you to customize it.</p>"},{"location":"admin-guide/secure-your-data/ux-actions-parameters/#parameters","title":"Parameters","text":"<p>With Parameters, you can control the parameters affecting one workspace or many workspaces at once and override them, for instance you can override the default quotas of the workspace and more.</p> <p>There is lots of parameters and customization available you can put specific values or on the other hand enable/disable them.</p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/index/","title":"Index","text":"<p>Sometimes Role-Base Access Control (RBAC) model is not enough. Inspired by Amazon IAM Rules, Cells Enterprise provides an even more flexible way of computing permissions dynamically based on contextual criteria. </p> <p>This chapter describe how Security Policies work and can be used to implement your specific business security rules.</p> <ul> <li>Using Security Policies</li> <li>Rules Conditions</li> </ul>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/","title":"Using Security Policies","text":""},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#introduction","title":"Introduction","text":"<p>Security Policies provide an alternative approach to RBAC for managing permission grants. With security policies, you get fine-grained access control with the ability to answer questions in evolving environments. </p> <p>A security policy consist in a stack of rules that are evaluated at runtime, taking into account contextual information such as the HTTP Request metadata (hostname, client IP, HTTP method, etc) or the file or folder metadata (type, name, extension, user-defined tags, etc).</p> <p>You can lean more about IAM Rules in IAM Policies - AWS Identity and Access Management.</p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#policy-rules","title":"Policy Rules","text":"<p>When evaluated, each rule of a security policy answers the following question: <code>WHO is ABLE to perform WHAT on SOMETHING in a given CONTEXT</code> :</p> Question Detail Who An arbitrary unique subject name, for example \"ken\" or \"printer-service.mydomain.com\". Able The effect which can be either \"allow\" or \"deny\". What An arbitrary action name, for example \"delete\", \"create\" or \"scoped:action:something\" Something An arbitrary unique resource name, for example \"something\", \"resources.articles.1234\" or some uniform resource name like \"urn:isbn:3827370191\" Context The current context containing information about the environment such as the IP Address, request date, the resource owner name, the department ken is working in or any other information you want to pass along. (optional) <p>A policy is composed of one or many rules: </p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#deny-by-default-vs-explicit-deny","title":"Deny by default vs. explicit deny","text":"<p>Composed of many rules, a security policy is always \"Deny by Default\". Given the Context, each rule will compute its \"ABLE\" value to \"allow\" or \"deny\". </p> <ul> <li>If no rules provide an \"allow\" value, policy is evaluated as denied. </li> <li>On the other hand, any rule evaluating as \"deny\" will supersede other rules and instantly set the policy to \"deny\".</li> </ul>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#cells-security-policies","title":"Cells Security Policies","text":"<p>In Pydio Cells, Resources can be of three types : a REST API endpoint, an OpenId Connect operation or a file or a folder (and by extension a workspace). </p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#rest-resources","title":"REST Resources","text":"<p>These policies are protecting the REST APIs on a per-uri/per-method basis. They grant basic access to some specific APIs for public discovery or logged users. You should generally not touch these unless you know exactly what you do.    </p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#openid-connect-resources","title":"OpenId Connect Resources","text":"<p>OpenId Connect Service is used for authentication of the user, before any access to the APIs. As such, you can totally disable the login operation for a set of users based on the requests context, e.g. disable logging from a given set of IP or at a given time.    </p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#context-based-acls","title":"Context-Based ACLs","text":"<p>These policies are used to dynamically provide read/write access to workspaces or files and folders. They are meant to be used in the Roles/Users workspace access panel in replacement to manual \"Read/Write\" assignements. </p> <p></p> <p>The rest of this documentation is focused on Context-Based ACLs, as they are a powerful way to provide dynamic access to workspaces or to filter any files that users are allowed to see or modify inside a workspace.</p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#using-context-based-acls-for-workspaces-accesses","title":"Using context-based ACLS for workspaces accesses","text":"<p>Pydio Cells comes out-of-box with a carefully chosen set of pre-defined policies. In order to fully understand the concept, we strongly encourage you to check these pre-defined policies and their underlying rules.   </p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#how-security-policies-apply-to-alcs","title":"How Security Policies apply to ALCs","text":"<p>If we refer to the <code>WHO is ABLE to perform WHAT on SOMETHING in a given CONTEXT</code> that each rule evaluates, in the context of ACLs, it usually refers to the following :</p> <ul> <li>WHO: a list of identities defined by their username, profile or role</li> <li>SOMETHING: a path to a specific workspace or node that user tries to access</li> <li>CONTEXT: request or file/folder metadata.</li> <li>WHAT: Read, Write or any other Action (see below)</li> </ul> <p>Once defined, these policies are available in the \"Workspaces Accesses\" panel (for each role, user or group) to replace the manual \"Read/Write\" assignments. Assigning a policy to a given workspace means that it will be evaluated for all requests (CONTEXT) performed by a user with this role (WHO) on all nodes that are inside this workspace (SOMETHING). </p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#acls-policies-actions","title":"ACLs Policies Actions","text":"<p>Read / Write Actions</p> <p>The most common applicable actions for defining an ACL Policy Rule are \"Read\" and \"Write\". A basic policy that has one rule that sets \"Allow\" effect on \"Read\" and \"Write\" actions and no conditions is purely equivalent to a Read/Write manual permission assignment.</p> <p>You can also combine Read and Write with \"Allow\" or \"Deny\" effects to specifically invert their application.</p> <p>Special \"Deny-only\" Actions</p> <p>The \"Delete\", \"Download\", \"Upload\" and \"Sync\" actions behave in a special way: they cannot be applied with \"Allow\" effect, because they always require an existing Read or Write permission to be set. These actions can only have a Deny effect and can be very useful to refine a generic permissions with more advanced ones. </p> <ul> <li>Deny Delete: forbid the definitive deletion of resources</li> <li>Deny Download: forbid the actual content download of file data</li> <li>Deny Upload: forbid the actual upload of file data</li> <li>Deny Sync: forbid a sync client to connect to a resource</li> </ul> <p></p> <p>For example, one can expand the basic \"Read/Write\" permissions by allowing for example a user to \"Read\" files (= see the file in the list) without being able to \"Download\" (read their contents) them, or on the other side to \"Write\" (move them around) without being able to \"Upload\" (modify their contents) or permanently \"Delete\" them. </p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#using-conditions","title":"Using Conditions","text":"<p>The interesting part comes with adding \"Conditions\" to rules that may evaluate differently depending on the context. </p> <p>Pre-defined policies provide some Conditions examples:</p> Policy Rules Access during business hours <code>Allow</code> - <code>Read, Write</code> - if <code>Time is between Monday-Friday/09:00/18:30</code> Deny access if outside local networkd <code>Allow</code> - <code>Read, Write</code><code>Deny</code> - <code>Read, Write</code> - if <code>Client IP is not localhost</code> Hide all files with txt extension <code>Allow</code> - <code>Read, Write</code><code>Deny</code> - <code>Read</code> - if <code>File Extension matches txt</code> <p>Policies 2 and 3 remind us that effect is always \"Deny By Default\": if we do not set at least one rule that can be evaluated to <code>Allow</code>, accesses will never be opened to the workspace!</p> <p>See Next Chapter to learn more about Conditions. </p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/using-security-policies/#create-edit-policies","title":"Create / Edit Policies","text":"<p>To create a new policy template click on the \"+NEW POLICY\" at the top-right panel of the <code>Cells Console &gt; Security Policies</code> dashobard.     </p> Field Description Name This is the name that will be displayed in the various lists, typically when a user picks up a policy to be applied on a workspace. Description Text that explains what the policy is about Policy type One of the 3 types of policy supported by Pydio Cells. <p>You then have to create rules for this policy template by clicking on the <code>ADD NEW RULE</code> button.   Here you must define:   </p> Field Description Label A self explanatory display name. Effect Wether this rule will <code>allow</code> or <code>deny</code> the action when the condition on context is true. Actions Wether this rule is applied on <code>write</code>, <code>read</code> or both actions Condition One or more Conditions that can will be evaluated at runtime <p>Conditions can be applied on two sets of metadata : request metadata and files metadata. They are described in the next chapter.</p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/rules-conditions/","title":"Rules Conditions","text":"<p>As explained in the previous chapter, Security Policies are a set of rules that are evaluated at runtime to answer simple questions and return an \"Allow\" or \"Deny\" response.</p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/rules-conditions/#comparators","title":"Comparators","text":"<p>Conditions are evaluated against various metadata (see next sections) using one of the following comparator:</p> Comparator Description Value Example Boolean Value Evaluates value as a boolean (as Golang would with strconv.ParseBool) <code>true</code>, <code>false</code> String Matches Compares with value using a regular expression. Empty value always evaluates to false. <code>localhost&amp;#124;127.0.01</code> String does not Match Opposite of String Matches (empty values always evaluate to true) <code>(?i)\\.txt$</code> String equals Strict string equality <code>value</code> Glob Matcher Special Glob comparison only usable with FullPath field. See specific section below. <code>(ip)/path/to/folder/**</code> Date Period Start/end dates in ISO8601 Format <code>2018-02-01T00:00+0100/2018-04-01T00:00+0100</code> Date after Start date in ISO8601 Format <code>2018-02-01T00:00+0100</code> Office Hours Multiple recurring periods Monday-Friday/09:00/18:30 CIDR Condition Network addresses comparisons <code>192.168.0.1/16</code>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/rules-conditions/#glob-matcher","title":"Glob Matcher","text":"<p>The Glob Matcher comparator is a specific manager performing \"glob-like\" comparison against files/folders paths. As such it's probably only useful in association with the FullPath field.</p> <p>The expected pattern supports some specific flags and wildchars using the following format <code>([flags])/path/to/folder/[wildchars]</code>: </p> <ul> <li>Flags: </li> <li><code>i</code> : for case-insensitive comparison</li> <li><code>p</code> : The p flag refers to 'parents'. It means that it applies similarly to all segments of the path</li> <li>Wildchars: </li> <li><code>*</code> : applies to all children first-level</li> <li><code>**</code> : applies to all children recursively</li> </ul> <p>Using these flags, you can for example provide a Read/Write access only to a specific folder and everything below, by combining two rules: </p> <ul> <li><code>(ip)datasource/path/to/folder =&gt; [R]</code> : open traversing (R) access to the folder's parents</li> <li><code>(i)datasource/path/to/folder{,/**} =&gt; [RW]</code> : allow creating any resource inside this folder and inside this folder chilren: braces are equivalent to <code>/folder</code> OR <code>/folder/**</code></li> </ul> <p>While the examples above match a fixed folder, Glob provides the ability to match a recurring pattern. A common use case can be to have \"one folder per partner/client/collaborator\" with a fixed structure of folders inside each, and to create rules to access only specific folders. Let's say you have</p> <p>Master folder under <code>datasource/path</code> : </p> <ul> <li>ClientA</li> <li>Commercial</li> <li>Support</li> <li>ClientB</li> <li>Commercial</li> <li>Support</li> <li>ClientC</li> <li>Commercial</li> <li>Support</li> <li>And so on... </li> </ul> <p>Create a profile that will only interact with the inner <code>Support</code> folders, the rules above can be changed to :</p> <ul> <li><code>(ip)datasource/path/*/Support =&gt; [R]</code> : open traversing (R) access to this pattern (any clients)</li> <li><code>(i)datasource/path/*/Support{,/**} =&gt; [RW]</code> : allow creating any resource inside <code>Support</code> and below</li> </ul>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/rules-conditions/#request-metadata","title":"Request Metadata","text":"<p>Every request sent to the server via Cells APIs carries a set of metadata that can be used in Conditions to restrict or authorize particular accesses. </p> Metadata Description Server Host Hostname to which the user has connected. This is can be used in conjunction with cells \"Sites\" that allow Cells to bind on different network addresses, and grant an access depending on the Site accessed. HTTP Method GET, PUT, POST, DELETE, etc. Request URI If you specifically want to deny access to a certain API endpoint HTTP Protocol HTTP vs. HTTPS User-Agent User-Agent header sent by Http client. Can be useful to prevent connection with Cells specific tools like Cells Client or Cells Sync, or with a specific Browser. Content-Type Content-Type header of the incoming request. Can be used to disable sync client access by excluding \"application/json+grpc\" requests. Cookies String Cookie header sent by browser Time Server time when request is performed."},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/rules-conditions/#nodes-metadata","title":"Nodes Metadata","text":"<p>Many Cells REST API requests carry information about a specific \"node\", which is a file or folder, located in one of the authorized workspace. This node may or may not exist at the time of the request. </p> <p>Typically, an upload request will \"PUT\" an object to \"/workspace/path/to/file.ext\" that does not exist yet. On the other hand, a listing or stat request will generally point to an existing file that can expose its own advanced metadata. </p> Metadata Description Basename The basename of the node is the last segment of its path (e.g. file.ext) Full Path Full path of the node inside the datasources global tree (.e.g pydiods1/path/to/file.ext) Node Type Whether it's a file (LEAF) or folder (COLLECTION). Extension Extension attached to file name Filesize Size in bytes, either from existing file, or from the Content-Length header for upload queries. Modification Time Timestamp of the last modification date for an existing file. Custom Metadata... Any other metadata that can be generated by Cells or by users (see below). <p>Using <code>Custom Metadata</code> can be typically used to evaluate a condition against user-defined tags. For example, you can define a policy that hides any file tagged with a specific value (like \"confidential\"), or on the opposite only show files that are tagged with a specific value (like \"scanned-for-viruses\")</p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/rules-conditions/#examples","title":"Examples","text":"<p>Below are some condition examples: </p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-dynamic-access-control/rules-conditions/#using-go-templates","title":"Using Go Templates","text":"<p>As a bonus, to provide even more flexibility and make security policies totally dynamic, you can also use Go Templates inside the various conditions fields, which can be handy if you want to compare to a context-related value. Typically, one could compare a custom metadata content to the currently-logged user login, enabling/disabling specific permissions for the owner of a file. </p> <p>The available template variables are as follows: </p> Name Notes {{.ClaimsName}} Current user Login {{.ClaimsSubject}} Current user UUID {{.ClaimsRoles}} Comma-separated list of roles {{.ClaimsProfile}} User profile (admin, standard, etc) {{.ClaimsGroupPath}} User Group Path {{.RemoteAddress}} See Request Metadata above {{.RequestMethod}} {{.RequestURI}} {{.RequestHost}} {{.RequestHostname}} {{.RequestPort}} {{.HttpProtocol}} {{.UserAgent}} {{.ContentType}} {{.CookiesString}} {{.ServerTime}} {{.ClaimsIssuer}} {{.ClaimsClientApp}}"},{"location":"admin-guide/secure-your-data/ent-hardening-security/index/","title":"Index","text":"<p>This chapter explains a couple of advanced features to secure authentication processes with additional security layers.</p> <ul> <li>[Ent] Password Complexity</li> <li>[Ent] Multi factor authentication</li> <li>[Ent] IP Ban</li> </ul>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-password-complexity/","title":"[Ent] Password Complexity","text":"<p>With the enterprise edition you have more ways to enhance the security of your instance and also the security of your users.</p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-password-complexity/#password-policy","title":"Password policy","text":"<p>Users of the Enterprise Edition have more refined settings enabling them to add more complexity on the allowed password length, type of characters etc...</p> <p>Make sure to first enable the display of the advanced parameters:</p> <p></p> <p>Head to Application parameters &gt;&gt; Available plugins and search for \"Password Policy\" and hit the edit button.</p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-multi-factor-authentication/","title":"[Ent] Multi factor authentication","text":"<p>Cells Enterprise Distribution provides a higher degree of security for users by enabling them to use Multi-Factor Authentication tools such as any TOTP compatible apps (like Google Authenticator App), Yubikey physical devices or DUO Security application features.</p> Yubikey Physical Device Google Auth / TOTP-compatible apps Duo Security Push <p>To enable Yubikey or TOTP, go to <code>Cells Console &gt;&gt; Application Parameters &gt;&gt; Authentication</code>.</p> <p></p> <p>Now each user has to go on its setting page that is located on the home page top left. User can choose the preferred mean of authentication and follow the instructions below for further details on each of them.</p> <p></p> <p>See below for instructions about enabling DUO Security.</p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-multi-factor-authentication/#totp-apps-google-authenticator-free-otp-etc","title":"TOTP Apps (Google Authenticator, Free OTP, etc)","text":"<p>To enable the Google Authenticator:</p> <ol> <li>Scan the QRCode with your app</li> <li>Put the generated code in the Google Authenticator Code field.</li> <li>Click on test, to verify that it's functioning.</li> <li>Save.</li> </ol> <p>Do not forget to note the recovery code, if you ever loose your authenticator(smartphone or could be a reinstall/data loss) it will enable you to log back in and set a new one or remove it.</p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-multi-factor-authentication/#yubikey","title":"Yubikey","text":"<p>To use your Yubikey you first need to retrieve the clientID and API Secret, to do so follow this link https://upgrade.yubico.com/getapikey/ put your email address and the Yubikey OTP that you will find in your package.</p> <p>As told on the Yubikey site wait up to 5 mins before starting to set your key up.</p> <p>Plug your Yubikey to your computer, install and follows the steps: depending on your OS, this is usually plug &amp; play.</p> <p>Now:</p> <ol> <li>Pur your CliendID and API Secret</li> <li>Put the focus on the Test your Key field and press once on your Yubikey</li> <li>Click on test, to verify that the information are correct</li> <li>Save</li> </ol>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-multi-factor-authentication/#duo-security","title":"DUO Security","text":"<p>This assumes you have an Admin Account already set up on the DUO website. Logged in on DUO, use \"Protect An Application &gt; Auth API\" to create API Keys.</p> <p>Enable DUO Security plugin in the Authentication &gt; Plugins screen.</p> <p></p> <p>Then edit the plugin options by providing the following values : </p> <ul> <li>API Key, API Secret as provided by DUO</li> <li>API Endpoint as provided by DUO</li> <li>Application identifier : create your own random 40 characters string to identify this installation.</li> </ul> <p>Select the \"Active Dual-form Authentication\" checkbox to enable this for all users. This parameter can be refined on a group/role/user base to have it active only for a subset of users.</p> <p></p> <p>Once saved, at next login, users will be prompted with a specific configuration window to setup their DUO mobile application.</p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-ip-ban/","title":"[Ent] IP Ban","text":"<p>By default the ip ban feature is enabled to protect the Pydio Cells instance from brute force attacks on passwords. It's also protecting users from having someone trying to guess their password.</p> <p>The following features are only available on our Enterprise Edition</p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-ip-ban/#ip-ban-service","title":"IP ban service","text":"<p>All the current bans are displayed on this interface you can choose perform an action on the bans listed such as unbanning or blacklisting a banned ip, there will be further details about that below.</p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-ip-ban/#whitelist-and-blacklist","title":"Whitelist and Blacklist","text":"<p>You can whitelist an ip meaning that this ip will have access to cells no matter what or you can blacklist an ip and then it will have no more access to the cells instance.</p>"},{"location":"admin-guide/secure-your-data/ent-hardening-security/ent-ip-ban/#configure-how-the-ban-occurs","title":"Configure how the ban occurs","text":"<p>The default behavior is a ban will occur on the ip that is trying to connect more than 10 times under a 5 seconds time period the ban will expire after 10 minutes.</p> <p>You can change those values by going to All PLugins &gt; IPBan Service.</p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/index/","title":"Index","text":"<p>Being able to extract access logs and making sure every piece of important data is key for compliance with your security team. This chapter describes the tools available to monitor logs, explore shared resources on the whole platform at a glimpse, and also explore storage usage to find out who is using most space.</p> <ul> <li>[Ent] Viewing and Exporting Audit Logs</li> <li>[Ent] Visualize Shared Resources</li> <li>[Ent] Explore Storage Usage</li> <li>[Ent] Adding Terms of Service</li> </ul>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-viewing-and-exporting-audit-logs/","title":"[Ent] Viewing and Exporting Audit Logs","text":"<p>In the Enterprise Edition, an audit log gathers all non-technical events to help focus on business logic when analyzing logs for compliance or when tracing events after a security breach. Logs are grouped using a unique Request-Id as they may be produced by a unique action going through various micro-services.</p> <p>When using Supervisorctl (or systemd) service, audit logs are also available in the <code>~/.config/pydio/cells/logs/audit.log</code> file (rotated every day).</p> <p>This is the main menu of the audit logs that can be found in Cells Console &gt;&gt; Audits &gt;&gt; Activity, you will be presented with the following page:</p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-viewing-and-exporting-audit-logs/#exporting-logs","title":"Exporting logs","text":"<p>For an easier analysis, audit logs can be exported in XLSX or CSV format. To do so, you can use the button in the top-right of the audit logs screen. Please note that you must first filter the logs (either by searching or by restricting to a given period) to avoid exporting the whole base of logs at once.</p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-viewing-and-exporting-audit-logs/#filtering","title":"Filtering","text":"<p>The audit log also allows you to filter the logs and their content, you can combine filters to trim even more the result.</p> <p>To display the advanced filtering you need to click on the inverted triangle and click on the filter, here is a quick description of the options and their purpose:</p> <ul> <li>Filter logs: This is the main search bar, you can write any word related to Cells.</li> <li>Pick a day: Choose which day the logs happened.</li> <li>Level: This is the level of logs for Cells, you have INFO, ERROR or DEBUG, by default INFO and ERROR are displayed and if you only want to one of them displayed, select it in the filter.</li> <li>Service: Allows you to display logs for any specific service, as Cells is ran with multiple micro services.</li> <li>User Login: This is the user login that triggered the log, therefore applying this filter will only display actions for the provided user.</li> <li>IP: It allows you to display only logs that happened from a specific connection IP.</li> </ul>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-visualize-shared-resources/","title":"[Ent] Visualize Shared Resources","text":"<p>Pydio Cells provides a way to keep track of every shared resources, therefore giving you more visibility and control about who accesses what at any time.</p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-visualize-shared-resources/#audits","title":"Audits","text":"<p>With audits you will have all the sharing activity on your cells. For instance, if you deleted a user and you want to retrieve all the shared resources that he had, it's easy you can search for his resources, edit them and change the owner.</p> <p>First generate a report using the top-right button. A progress bar will appear allowing you to keep track of the progression.</p> <p></p> <p>Once the logs are generated, filter them and retrieve the information that you are looking for, you can filter them.</p> <p></p> <ol> <li> <p>Data Type: Files or Folders only</p> </li> <li> <p>Path Prefix: is the path to the resource; the path prefix can contain a wildcard at the end, the path must be of this form:</p> </li> <li>for a simple case inside a public workspace <code>&lt;datasource&gt;/&lt;resource&gt;</code></li> <li>for a the personal files cases <code>&lt;datasource&gt;/&lt;username&gt;/&lt;resource&gt;</code></li> <li> <p>you can use a wildcard at the end as said for instance <code>&lt;datasource&gt;/*</code> or <code>&lt;datasource&gt;/&lt;folder&gt;/*</code> and so on.</p> </li> <li> <p>Resource Type: Workspace, Cells or Public links.</p> </li> <li> <p>Owner: by whom the resource is owned.</p> </li> <li> <p>Visible By: users that are able to see the resource.</p> </li> <li> <p>Date: when the resource was updated.</p> </li> </ol>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-visualize-shared-resources/#workspaces","title":"Workspaces","text":"<p>You can retrieve the workspace activity by clicking this button:</p> <p></p> <p>it will display the following menu:</p> <p></p> Field Description Node Node name (datasource in this case). Read access Number of users who have read access on the workspace. Write access Number of users who have write access on the workspace. Last update Last time the node had an action performed on it. Activity History of each and single action that happened on the node."},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-visualize-shared-resources/#cells","title":"Cells","text":"<p>You can retrieve the cells activity the same way you did for the workspaces (by clicking the graph button that will appear when your mouse is on the cells)</p> <p></p> <p></p> Field Description Node Node name (the path to the cell in this case). Owner User who created the cell. Last updated Last time an action happened. Activity History of the all actions performed inside this path. <p>You can also edit the cell change it's content and parameters (the same interface as when you create a cell).</p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-visualize-shared-resources/#public-link","title":"Public link","text":"<p>When looking at Public Links, a red flag indicates that a link has no protection set (no password, no expiration date). This can be handy to quickly review \"fully public\" links and alert their owner to check if this is a normal situation.</p> <p></p> <p>You can retrieve all the activity that happened around a public link the same way. (By clicking the graph button on the right of the green icon and name of the owner) it will display a recap of who accessed the public link and such.</p> <p></p> Field Description Node Path to the shared resource in this case. Owner Who created the shared link. Last updated Last time an activity happened. Activity History of actions. In this case you can see the accesses to the link the cf498178.... is the id of the temporary user created when someone access the resource."},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-explore-storage-usage/","title":"[Ent] Explore Storage Usage","text":"<p>The Storage Usage tool allows you to visualize and understand where most of your storage is being used, and what type of resource is using most of it.</p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-explore-storage-usage/#storage-usage","title":"Storage Usage","text":"<p>To visualize the storage usage head to, Cells Console &gt;&gt; Audits, and select the Storage tab.</p> <p>The following menu will appear displaying the storage usage of all the available datasources on your Cells instance.</p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-explore-storage-usage/#how-to-use-the-storage-usage-audit","title":"How to use the Storage usage audit","text":"<p>When you first visit the storage menu only the main datasources size are loaded we, do not load everything because it takes resources to compute the sizes of the underlying tree to give you a more detailed view therefore we do it progressively as you browse deeper into the storage.</p> <p></p> <p>To load the storage repartition for <code>cellsdata</code>, click on the <code>cellsdata</code> part, then you will have more detail (see screenshot below)</p> <p></p> <p>and then you can still go a level deeper, to analyse the usage for a specific user, here for instance we are going to look at the user <code>admin</code> cell storage usage.</p> <p></p> <p>We could also analyse the <code>personal</code> workspaces of your current users and see who and what is taking so much space as seen on the screenshot below.</p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-adding-terms-of-service/","title":"[Ent] Adding Terms of Service","text":"<p>Disclaimer features provides a way to force your users to accept your Terms of Use before being allowed to use the platform. This is typically suited to fit compliance rules from your company or GDPR european laws.</p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-adding-terms-of-service/#enable-the-disclaimer","title":"Enable the disclaimer","text":"<p>You first need to enable the plugin, to do that browse to the following menu Cells Console &gt;&gt; Identity Management &gt;&gt; Authentication.</p> <p>You are now presented with the following settings window, you need to enabled it and then you can edit it to add your custom message.</p> <p></p> <p>HTML elements are also working in the disclaimer text field as you can notice on the screenshot below (see the user authentication screenshot for the end result).</p> <p>You now also have an option to display a disclaimer for the public links.</p> <p></p>"},{"location":"admin-guide/secure-your-data/ent-audits-compliance/ent-adding-terms-of-service/#user-authentication","title":"User authentication","text":"<p>When a user authenticates for the first time he will be greeted with the following message and will have to agree and validate before being able to access the application.</p> <p>This will also happen for password protected public links if the option is enabled.</p> <p></p>"},{"location":"admin-guide/customize-interface/index/","title":"Customize interface","text":"<p>Accessed by your users and often by users external to the company, Cells can be deeply customized to reflect your branding and visual identity. This section presents the tools to change logos, colors and wordings easily from within the Cells Console.</p> <ul> <li>[Ent] Logos and Wording</li> <li>[Ent] Brand Theme</li> <li>[Ent] Email Templates</li> <li>[Ent] EasyTransfer Layout</li> <li>[Ent] Using SmartForm</li> </ul>"},{"location":"admin-guide/customize-interface/ent-logos-and-wording/","title":"[Ent] Logos and Wording","text":"<p>This article quickly introduces the options you have to fine tune some aspects of the web GUI to comply with you company specific branding. To begin with, let's change the main Logo of the application, the favicons and the background images.</p>"},{"location":"admin-guide/customize-interface/ent-logos-and-wording/#main-logo-and-background-image","title":"Main logo and Background image","text":"<p>To change the logo on the main pages, head to Cells Console &gt;&gt; Application Parameters &gt;&gt; Appearance.</p> <p>You will be presented with the following menu:</p> <p></p> <p>and below are the location of each of the setting:</p> <p></p> <p></p> <p>You can also notice that the backgrounds are mentioned, while in the same menu Cells Console &gt;&gt; Application Parameters &gt;&gt; Appearance scroll down and you will see the following settings.</p> <p></p> <p>First you can notice 2 distinct sections. The following rule applies for both, you can have a set of 1 to 6 different background images that are selected on a random basis.</p> <ul> <li>Pydio Background Images: which are all the background images displayed while login or browsing on the application (see screenshots above for the locations).</li> <li>Minisite: those images are  for instance used on the public links, (public links make use of the minisite settings, such as the role).</li> </ul> <p>For users that do wish to have the same and unique background image, you have to make sure to put the same image on all of the different <code>custom background(n)</code> settings.</p>"},{"location":"admin-guide/customize-interface/ent-logos-and-wording/#change-the-favicon","title":"Change the favicon","text":"<p>You can modify the favicon (it is the little icon on your browser tab) by heading to Application Parameters &gt;&gt; Advanced Settings.</p> <p></p>"},{"location":"admin-guide/customize-interface/ent-logos-and-wording/#modify-the-public-link-logo","title":"Modify the public link logo","text":"<p>The logo displayed on the public links can also be modified, head to Application Parameters &gt;&gt; Advanced Settings.</p> <p></p>"},{"location":"admin-guide/customize-interface/ent-brand-theme/","title":"[Ent] Brand Theme","text":"<p>The branding tool helps you customize Pydio Cells to match the color of your other services. You can even add custom buttons to add more functionality as well as custom CSS for advanced styling purpose.</p>"},{"location":"admin-guide/customize-interface/ent-brand-theme/#enable-the-branding-tool","title":"Enable the Branding Tool","text":"<p>To enable the  Brand Theme tool, you must first have the advanced parameters enabled (see screenshot below)</p> <p></p> <p>Once it is done, go to Available Plugins &gt;&gt; and search for Vanitizer.</p> <p></p> <p>Enable and edit the plugin settings, this operation will display the following:</p> <p></p> <ul> <li>Display Branding Tool: this setting simply displays the  Brand Theme tool, any changes will not be applied (you can use this to do testing).</li> <li>Use configured branding: this setting will apply any modification that you have set with the brand tool.</li> </ul> <p>Once you have enabled the Display Branding Tool refresh your browser tab, to display the tool.</p> <p></p>"},{"location":"admin-guide/customize-interface/ent-brand-theme/#advanced-customization","title":"Advanced Customization","text":"<p>The Brand Theme among other things also allows you to have your custom CSS.</p> <p>Add custom buttons that you can map to any functionality you wish to, it could be related to Cells or unrelated for instance you can have a button to redirect to your company portal, redirect you to your mailbox and many more.</p>"},{"location":"admin-guide/customize-interface/ent-email-templates/","title":"[Ent] Email Templates","text":"<p>In this chapter, we have a look at the mailing system integrated to Pydio Cells and guide you through template customization.</p>"},{"location":"admin-guide/customize-interface/ent-email-templates/#enterprise-edition-custom-templates-for-mailer","title":"[Enterprise Edition] Custom templates for mailer","text":"<p>With the Enterprise Edition there are 3 additional options that will allow you to change the mailer template:</p> <ul> <li>Change the Logo</li> <li>Change the Application Name</li> <li>Change the Footer (Usually copyrights)</li> </ul> <p></p> <p>Refer to the numbers on the screenshot for the list below</p> <ol> <li> <p>To modify the Logo you must go to Advanced Settings &gt; UI Customization and modify Emails Template Logo with an url pointing to an image directly, for instance <code>http://domain/image.png</code>.</p> </li> <li> <p>To modify the application name go to Application Core &gt; Main Options and change the Application Title setting.</p> </li> <li> <p>To modify the footer (bottom text) go to Advanced Settings &gt; UI Customization and modify Emails Template Footer.</p> </li> </ol> <p>By the Way the test mail will not display the message</p>"},{"location":"admin-guide/customize-interface/ent-easytransfer-layout/","title":"[Ent] EasyTransfer Layout","text":"<p>Sometimes for inexperimented users, it is better to provide a limited UX with less options and automated actions. Cells Enterprise EasyTransfer layout can be applied on any workspace to provide an all-in-one \"Upload and Share\" experience to users.</p>"},{"location":"admin-guide/customize-interface/ent-easytransfer-layout/#activating-easytransfer","title":"Activating EasyTransfer","text":"<p>When editing a workspace (as admin), you can select the EasyTransfer layout at the bottom of the form. </p> <p></p> <p>After saving, when a user will open this workspace, she will be presented the following \"drop file\" interface. </p> <p></p> <p>Each time a file is dropped, it is automatically shared as a public link, and the link is displayed to the user with the ability to send this link by email. </p> <p></p> <p>Simple! </p>"},{"location":"admin-guide/customize-interface/ent-easytransfer-layout/#recommended-setup","title":"Recommended Setup","text":"<p>As the user cannot actually see the content that has been already previously uploaded, this layout can be applied to a shared workspace. However, as the target is generally an over-simplification of the UX, we recommend the following setup for the target users (either by editing the Root Group role or by defining a specific role for specific users).</p> <ul> <li>Use EasyTransfer layout on the Personal Files</li> <li>Via a role, DENY accesses to any workspaces except for R/W on Personal Files</li> <li>In the role as well, DENY access also the \"Welcome\" home page (under Application Pages)</li> </ul> <p></p> <p>That way, a user will be immediately directed to the file-drop interface after login.</p>"},{"location":"admin-guide/customize-interface/ent-using-smartform/","title":"[Ent] Using SmartForm","text":"<p>In the course of a given project, sometimes you need to gather information from team members, partners and even clients. Cells SmartForm is a flexible, easy-to-use form builder with added intelligence.</p> <p>As with any form builder, you can quickly build forms with checkboxes, multiple selections, long and short text fields \u2013 all the things you would expect from a form builder.</p> <p>You can build any form you need from questionnaires to consent forms to project checklists. Smart Form stores all your form submissions within a single JSON file that can be used to power Cells Flows automations.</p> <p>Smart Form also allows you to collect documents from users as part of their form submissions, as well as provides you access to the submission metadata for full tracking and tracing.</p> <p></p>"},{"location":"admin-guide/customize-interface/ent-using-smartform/#creating-a-smartform","title":"Creating a SmartForm","text":""},{"location":"admin-guide/customize-interface/ent-using-smartform/#one-smartform-one-folder","title":"One SmartForm = One Folder","text":"<p>SmartForm is mostly a graphical interface to a form definition stored inside a folder's metadata. As such, each form instance is attached to a folder you create, and that will receive both the documents and the content of the form fields stored as a JSON file.</p> <p>To start using SmartForm, you must first enable the plugin in the Cells Console &gt; All Available Plugins list. Then inside a - preferably empty - folder, use the SmartForm... action to open the editor.</p>"},{"location":"admin-guide/customize-interface/ent-using-smartform/#collecting-specific-documents","title":"Collecting Specific Documents","text":"<p>A key feature of Cells SmartForm is the ability to create an expected list of documents specifying each doc's name, format and maximum size. Any file can be dropped by users on the displayed list items and if their format matches, the file is automatically renamed to the expected name and this item is considered as completed. </p> <p></p>"},{"location":"admin-guide/customize-interface/ent-using-smartform/#simple-form-fields","title":"Simple Form Fields","text":"<p>Along with specific documents, it is often necessary to collect some specific structured data from users. The form build allows you to create many fields with various supported types. This can also be used independently of the documents feature.</p> <p></p>"},{"location":"admin-guide/customize-interface/ent-using-smartform/#processing-smartform-output","title":"Processing SmartForm output","text":""},{"location":"admin-guide/customize-interface/ent-using-smartform/#submission-behavior","title":"Submission behavior","text":"<p>On a user perspective, you can configure what happens once all forms fields are filled and all expected documents are uploaded: either automatically trigger a submission or show a button to let users submit the form by theirselves. </p> <p></p> <p>Submission here is simply attaching a metadata you define to the folder where the SmartForm is running. That gives you all flexibility to observe this metadata change with Cells Flows and act on the folder in consequence.</p>"},{"location":"admin-guide/customize-interface/ent-using-smartform/#reading-form-values-and-upload-documents","title":"Reading form \"values\" and upload documents","text":"<p>The form values are saved in real-time in a hidden <code>form.values</code> file inside the current folder. This files contains a JSON map with all field =&gt; values. Using the \"Read Content\" action in Cells Flows, it is simple to load this data and trigger actions depending on the detected values : send values by emails, reformat them, etc... </p> <p>Similarly, upload documents are just normal documents stored inside the SmartForm folder. As such, once the form is submitted, it is easy to apply any Flow to these docs.</p>"},{"location":"admin-guide/customize-interface/ent-using-smartform/#smartform-templates","title":"SmartForm Templates","text":"<p>The SmartForm Editor provides a sleek \"Templates\" features for easily re-using prepared SmartForms. This also provides useful tools for automatisation: Cells Flows can find a SmartForm template by its UUID and automatically apply it to any newly created folder.</p> <p></p>"},{"location":"admin-guide/advanced/index/","title":"Advanced","text":"<p>This section gathers interesting reads about specific features that you may want to use, as well as additional resources about Cells internals that can be handy to better understand how it works.</p> <ul> <li>Migrate Pydio 8 to Cells</li> <li>Scheduler / Cells Flows</li> <li>YAML/JSON Installation</li> <li>Pydio Cells Internals</li> <li>Advanced configurations</li> </ul>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/","title":"Migrate Pydio 8 to Cells","text":"<p>This how-to describes the migration from Pydio 8 to Pydio Cells Enterprise Distribution step by step.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#preparation","title":"Preparation","text":""},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#forewords","title":"Forewords","text":"<ul> <li>The process is quite tested and robust, yet you should perform a full backup of your system before starting.</li> <li>The migration can only be achieved from Pydio 8 to Pydio Cells, thus if you are running an older version, you must first migrate up to Pydio 8.2.5 (the latest version at time of writing)</li> <li>We advise that you install Pydio Cells on another new machine to ease the process and be able to abort the migration and be able to be back online with the Pydio 8 server in no time. In such case, perform a copy (via rsync) of the business data from your old server to your new server before starting. (In Cells, when you add an existed folder as a new datasource to Cells, it will write some additional information in .minio.sys or .pydio file. That means that you are at risk of a modification on data of production. It is thus highly recommended to install Cells on a separated machine during migration).</li> </ul>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#clean-before-start","title":"Clean before start","text":"<ul> <li>The migration is quite long and resource consuming, so it is a good idea to perform a clean up of the files before starting and thus reduce the amount of data that are to be migrated.</li> </ul> <p>You should also perform following cleanups so that the migration runs smoothly:</p> <p>Compulsory:</p> <ul> <li>In the admin console, under each <code>Workspaces &gt;&gt; &lt;chose a workspace&gt; &gt;&gt; Shares</code> click on \"Remove broken links\": broken links break the migration of the shares</li> <li>If possible, remove all public links that have been created by users that are not in the referential anymore.</li> </ul> <p>Incompatibilities:</p> <p>There are some plugins/functionalities in Pydio 8 Community that are not available in Cells Home distribution. Please take a look in this list to make sure before proceding.</p> Functionalities/Plugins Pydio Community Cells Home Notes LDAP auth plugin yes no available in Cells Enterprise only Custom DB auth plugin yes no SMB auth plugin yes no FTP auth plugin yes no RADIUS auth plugin yes no Remote auth plugin yes no OTP auth-frontend yes no CAS auth-frontend yes no use SAML instead Dual-form auth-frontend yes no Access driver samba yes no Access driver mailbox yes no Access driver FTP over SSH yes no Access driver FTP Server yes no Access driver WebDav yes no Access driver Dropbox yes no Access driver Open Stack yes no Personal workspaces yes yes SubFolder permissions no no <p>Optional:</p> <ul> <li>Empty the recycle bin of each workspace</li> <li>Ask your users to empty their recycle bin in MyFiles</li> </ul>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#pydio-8-machine","title":"Pydio 8 machine","text":"<p>Perform following steps on your legacy server before starting:</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#apache-config","title":"Apache Config","text":"<p><code>AllowEncodedSlashes On</code> should be placed in the configuration of pydio site in Apache config. This parameter allows encoded slashes in url when Cells communicates with Pydio 8 via API.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#pydio-version","title":"Pydio version","text":"<p>Pydio version &gt;= 8 is required. However it's recommended to upgrade Pydio to latest version.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#migration-plugins","title":"Migration plugins","text":"<p>Migration plugins should be installed in Pydio 8 to add necessary additional entry points to the existing API. You can get this plugin there.</p> <p>WARNING: This module exposes user's secret information on API so it must be added during migration process only and removed from Pydio at the end of migration task.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#specific-account-for-migration","title":"Specific account for migration","text":"<p>It is recommended to create a new account (for instance <code>importer</code>) with administrative rights for the migration. Please make sure that this <code>importer</code> user has the R/W accesses to all workspaces you will import. This makes it easier to later dig out all activities that have been performed during the migration process.</p> <p>If you do so, we also strongly advise to fill the various info of this <code>importer</code> user, and especially her display name, so that various logs and activities are later human friendlier.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#cells-machine","title":"Cells machine","text":""},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#before-start","title":"Before start","text":""},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#copy-the-data-to-the-target-machine","title":"Copy the data to the target machine","text":"<p>This usually takes some time, so be prepared.</p> <p>You should first think of a target tree structure, taking into account the specificities of datasources management in Pydio Cells.</p> <p>You must then copy all your files to the target destination.</p> <p>If you install the new server on the same machine, we strongly advise that you make a copy of the business data for instance in <code>/home/pydio/data/...</code> rather than creating datasources that point toward the legacy default <code>/var/www/html/data</code> path.</p> <p>Do not forget to insure files and folder have correct permissions for the user that runs the app (usually <code>pydio</code>).</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#clean-versioning-from-pydio-8","title":"Clean Versioning from Pydio 8","text":"<p>If the versioning plugin was enabled in Pydio 8, we should clean all <code>.git</code> data.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#download","title":"Download","text":"<p>Download the latest version of Pydio Cells from the website, for instance:</p> <pre><code>wget https://download.pydio.com/pub/cells-enterprise/release/{latest}/linux-amd64/cells-enterprise\n</code></pre>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#tls","title":"TLS","text":"<p>When Pydio 8 is running on simple HTTP (e.g. without TLS), you must also launch Cells without TLS. Otherwise, you will have problem of \"mixed content\" when the migration tool makes API calls.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#data","title":"Data","text":"<p>Install and start Pydio Cells as usual on the target machine. Please visit our documentation for more information.</p> <p>In Pydio 8, the data is located by default in a data folder (e.g.: /var/lib/pydio/data/) or /var/www/html/data/). However, you may have other workspaces which point to other location such as /mnt/data.</p> <ul> <li>If all data is stored on a local disk on Pydio server, it should be copied to the target server in a folder which will be a single datasource in Cells.</li> </ul> <p>For instance:</p> <pre><code>You have three workspaces and their absolute path as below:\n(1) My Files: /var/lib/pydio/data/personal/AJXP_USER\n(2) Common Files: /var/lib/pydio/data/files\n(3) Data: /data\nIn Cells, we copy each folder to only one location (i.e: /home/pydio/pydio8dss).\n\nMy Files: /var/lib/pydio/data/personal/AJXP_USER =&gt; /home/pydio/pydio8dss/personal\nCommon Files: /var/lib/pydio/data/files =&gt; /home/pydio/pydio8dss/files\nData: /data =&gt; /home/pydio/pydio8dss/data\n</code></pre> <ul> <li>If you have a workspace pointing to a mounted folder, it should be mapped to new datasource in Cells</li> </ul> <p>For instance:</p> <pre><code>(4) DataMount: /mnt/pydio8dss/data\n</code></pre> <p>Attention: problem of folder level in creation mounted datasource, please visit this thread in the forum.</p> <ul> <li>If you have S3 workspaces, we must create corresponding S3 datasources in Cells.</li> </ul> <p>WARNING: after you have copied all files to their target location, and especially in case of file system datasource, you must insure that directory and file owner are correctly set, typically, we suggest to run Cells with a pydio user and you should then perform a <code>sudo chown -R pydio.pydio /home/pydio/data</code> or similar to insure all relevant files and folders have correct permissions.  </p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#indexation-of-the-data","title":"Indexation of the data","text":"<p>After creation of new datasources in Cells, the indexation process will be launched automatically and you must wait until this task finishes. Depending on the size of data, it may take several hours or even a day.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#personal-workspaces-enterprise-distribution-only","title":"Personal workspaces [Enterprise Distribution only]","text":"<p>If you have workspaces with personal path like <code>My Files</code> which uses <code>AJXP_USER</code> in the path, you are required to create a new Template Path for this workspace on the correct datasource in Pydio Cells. For example a new Template Path: <code>Path = DataSources.pydio8dss + \"/personal/\" + User.Name;</code></p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#migration","title":"Migration","text":"<p>The migration is divided into three options and should be run one after another. (1) LDAP config (2) Migrate users, roles, groups (3) Migrate workspaces and metadata, sharing information</p> <p>Attention: You can select all task at one time and click Next, but it should work one by one. (1) and (2) can be done many times because that synchronizes. However we should trigger (3) task just one time.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#copying-ldap-config-enterprise-distribution-only","title":"Copying LDAP config [Enterprise Distribution only]","text":"<p>This option allows us to copy the LDAP config from Pydio 8. You might ignore this option if your legacy server does not rely on a LDAP server. This task can be easily manually verified in Cells to make sure all params are migrated correctly.</p> <p>At this point you can launch the synchronization of the users with new ldap configuration. The set of users from LDAP via this configuration and the set of user ldap via API of Pydio 8 are identical in Cells (they have the same AuthSource). However, it is recommended to do the first synchronization of users in following step.</p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#migrate-users-roles-groups","title":"Migrate users, roles, groups","text":"<p>There is no specific configuration in this step, so you can just click on \"Next\" to foward and wait for result.</p> <p></p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#migrate-workspaces-sharing-data-and-metadata","title":"Migrate workspaces, sharing data and metadata","text":"<p>Attention: This step should be triggered only one time.</p> <p>We usually select all children options of \"Workspace\"</p> <ul> <li>Workspaces ACLs</li> <li>Files Metadata</li> <li>Shares &lt;= Running the <code>shares</code> migration more than once will trigger the creation of duplicated Cells. if you have to re-run this, please insure you have removed all cells via the \"Audit\" page of the console before proceeding.</li> </ul> <p></p> <p>After clicking on \"Next\", you will see the interface where you can match the workspace in P8 to their counterpart in Cells.</p> <p>Matching is done by following these steps:</p> <ul> <li>Select Pydio workspace</li> <li>Select datasource in Cells where the data of this workspace has been copied in previous steps.</li> <li>Select template path. If you see a Pydio8 workspace with \"AJXP_USER\" in the path, the template path should have been defined in previous step. You can create new one here but it's buggy at this time. Select \"none\" for normal workspace.</li> <li>in \"Cells Nodes\", you can see the relative path (in Pydio Cells) of the workspace we are going to map.</li> </ul>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#green-red","title":"Green &amp; Red","text":"<p>In \"Pydio 8 Workspace\" panel, if you are matching a workspace and the color turns to RED, it means that the corresponding path does not yet exist in Cells. You must create it manually and it will turn to GREEN.</p> <p></p>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#verification","title":"Verification","text":"<p>You can quickly verify the migration by checking in Cells:</p> <ul> <li>Login with the same credential</li> <li>Verify public link</li> <li>Verify shared workspace</li> <li>Number of users</li> </ul>"},{"location":"admin-guide/advanced/migrate-pydio-8-to-cells/#final-step","title":"Final step","text":"<ul> <li>Set signed certificate</li> <li>Prepare DNS for switching Cells to production</li> <li>Remove migration plugins in Pydio 8</li> </ul>"},{"location":"admin-guide/advanced/scheduler-cells-flows/","title":"Scheduler / Cells Flows","text":"<p>In this section, we introduce the scheduler and show how you can optimize your workflow by scripting redundant tasks. The scheduler is available in all Cells edition: unleash its powers with our Cells Flows module! </p>"},{"location":"admin-guide/advanced/scheduler-cells-flows/#using-the-internal-scheduler","title":"Using The internal Scheduler","text":"<p>First you need to display the advanced parameters by enabling the following button.</p> <p></p> <p>The scheduler in Pydio Cells let you define task that are to be done and program when they are to be executed, directly via the web interface. For instance, you might want to configure a task to clear the recycle bin every first day of the month, instead of launching a script or else to clear it.</p> <p>You can find the scheduler under Backend &gt;&gt; Scheduler, the main interface looks like this:</p> <p></p> Trigger Label Owner Last Execution Status Type of the trigger: manual, on-event or periodic Human friendly name of the task (usually its goal) Who launched the task ( for system jobs it's usually the system user) Last time it ran Current status (in the figure above, all tasks were done)"},{"location":"admin-guide/advanced/scheduler-cells-flows/#system-jobs","title":"System jobs","text":"<p>System jobs are default jobs registered inside the application. They usually handle tasks such as syncing the datasources, indexing and more. They mainly make sure that your Pydio Cells instance is running healthily. You do not want to intervene on those. Yet, you can disable the jobs or force them to run on demand.</p> <p>As seen in this screenshot (we took the sync DataSource pydiods1 job) :</p> <p></p> <p>You can:</p> <ul> <li>Run Now: force the task to run right now</li> <li>Disable job: disable the task that will therefore no longer run</li> <li>Enable multiple or Clear All which clears the history.</li> </ul> <p>You can also click on any job to have an history of it's events such as errors.</p>"},{"location":"admin-guide/advanced/scheduler-cells-flows/#user-jobs","title":"User Jobs","text":"<p>User jobs are usually tasks launched by users such as compression, share etc ... They are created and launched asynchronously to keep end user experience fluid and smooth when executing heavy tasks without blocking the UI. Typically, when uploading or compressing large files or folders.</p> <p>You can interact with user jobs in a similar manner as you do with system jobs, see above.</p>"},{"location":"admin-guide/advanced/scheduler-cells-flows/#create-your-own-jobs","title":"Create your own jobs","text":"<p>With the Cells Flows extension you can define, configure and schedule (and therefore auto-run) the task of your choice.</p>"},{"location":"admin-guide/advanced/yaml-json-installation/","title":"YAML/JSON Installation","text":"<p>As explained in the Cells Installation, a core set of config must be set using the <code>cells configure</code> command before being able to run Cells for the first time. As this command is interactive (either via CLI or Browser), it may be blocking an automatic deployment of Cells.</p>"},{"location":"admin-guide/advanced/yaml-json-installation/#running-configure-non-interactive","title":"Running 'configure' non-interactive","text":"<p>The <code>cells configure</code> command can be run in a non-interactive mode by passing all expected values inside a json or yaml file. Basically, all the questions asked during the interactive mode are filling a model that can be unmarshalled directly using the correct keys.</p> <p>Given a correct YAML file (see below for keys), you can run </p> <pre><code>cells configure --yaml /path/to/install-file.yaml\n</code></pre> <p>or in the same way </p> <pre><code>cells configure --json /path/to/install-file.json\n</code></pre> <p>or even with an ENV variable</p> <pre><code>export CELLS_INSTALL_YAML=/path/to/install-file.yaml\ncells configure\n</code></pre> <p>The latter is typically used in our Docker image where the YAML is mounted as an internal file in a volume, and the ENV passes the path to the yaml. </p>"},{"location":"admin-guide/advanced/yaml-json-installation/#installation-models","title":"Installation Models","text":"<p>Models used are defined as protobuf, as described below. Each field declares its json key, YAML key is the lowercase version of the key.</p>"},{"location":"admin-guide/advanced/yaml-json-installation/#installconfig-proto","title":"InstallConfig proto","text":"<pre><code>// All DB Connection informations\nDbConnectionType        string `protobuf:\"bytes,1,opt,name=dbConnectionType,proto3\" json:\"dbConnectionType,omitempty\"`\nDbTCPHostname           string `protobuf:\"bytes,2,opt,name=dbTCPHostname,proto3\" json:\"dbTCPHostname,omitempty\"`\nDbTCPPort               string `protobuf:\"bytes,3,opt,name=dbTCPPort,proto3\" json:\"dbTCPPort,omitempty\"`\nDbTCPName               string `protobuf:\"bytes,4,opt,name=dbTCPName,proto3\" json:\"dbTCPName,omitempty\"`\nDbTCPUser               string `protobuf:\"bytes,5,opt,name=dbTCPUser,proto3\" json:\"dbTCPUser,omitempty\"`\nDbTCPPassword           string `protobuf:\"bytes,6,opt,name=dbTCPPassword,proto3\" json:\"dbTCPPassword,omitempty\"`\nDbSocketFile            string `protobuf:\"bytes,7,opt,name=dbSocketFile,proto3\" json:\"dbSocketFile,omitempty\"`\nDbSocketName            string `protobuf:\"bytes,8,opt,name=dbSocketName,proto3\" json:\"dbSocketName,omitempty\"`\nDbSocketUser            string `protobuf:\"bytes,9,opt,name=dbSocketUser,proto3\" json:\"dbSocketUser,omitempty\"`\nDbSocketPassword        string `protobuf:\"bytes,10,opt,name=dbSocketPassword,proto3\" json:\"dbSocketPassword,omitempty\"`\nDbManualDSN             string `protobuf:\"bytes,11,opt,name=dbManualDSN,proto3\" json:\"dbManualDSN,omitempty\"`\nDbUseDefaults           bool   `protobuf:\"varint,37,opt,name=dbUseDefaults,proto3\" json:\"dbUseDefaults,omitempty\"`\n\n// NoSQL Document store (mongo)\nDocumentsDSN             string         `protobuf:\"bytes,38,opt,name=DocumentsDSN,proto3\" json:\"DocumentsDSN,omitempty\"`\nUseDocumentsDSN          bool           `protobuf:\"varint,39,opt,name=UseDocumentsDSN,proto3\" json:\"UseDocumentsDSN,omitempty\"`\n\n// Datasources informations\nDsName                   string         `protobuf:\"bytes,12,opt,name=dsName,proto3\" json:\"dsName,omitempty\"`\nDsPort                   string         `protobuf:\"bytes,13,opt,name=dsPort,proto3\" json:\"dsPort,omitempty\"`\nDsType                   string         `protobuf:\"bytes,15,opt,name=dsType,proto3\" json:\"dsType,omitempty\"`\nDsS3Custom               string         `protobuf:\"bytes,16,opt,name=dsS3Custom,proto3\" json:\"dsS3Custom,omitempty\"`\nDsS3CustomRegion         string         `protobuf:\"bytes,17,opt,name=dsS3CustomRegion,proto3\" json:\"dsS3CustomRegion,omitempty\"`\nDsS3ApiKey               string         `protobuf:\"bytes,18,opt,name=dsS3ApiKey,proto3\" json:\"dsS3ApiKey,omitempty\"`\nDsS3ApiSecret            string         `protobuf:\"bytes,19,opt,name=dsS3ApiSecret,proto3\" json:\"dsS3ApiSecret,omitempty\"`\nDsS3BucketDefault        string         `protobuf:\"bytes,20,opt,name=dsS3BucketDefault,proto3\" json:\"dsS3BucketDefault,omitempty\"`\nDsS3BucketPersonal       string         `protobuf:\"bytes,21,opt,name=dsS3BucketPersonal,proto3\" json:\"dsS3BucketPersonal,omitempty\"`\nDsS3BucketCells          string         `protobuf:\"bytes,22,opt,name=dsS3BucketCells,proto3\" json:\"dsS3BucketCells,omitempty\"`\nDsS3BucketBinaries       string         `protobuf:\"bytes,23,opt,name=dsS3BucketBinaries,proto3\" json:\"dsS3BucketBinaries,omitempty\"`\nDsS3BucketThumbs         string         `protobuf:\"bytes,35,opt,name=dsS3BucketThumbs,proto3\" json:\"dsS3BucketThumbs,omitempty\"`\nDsS3BucketVersions       string         `protobuf:\"bytes,36,opt,name=dsS3BucketVersions,proto3\" json:\"dsS3BucketVersions,omitempty\"`\nDsFolder                 string         `protobuf:\"bytes,14,opt,name=dsFolder,proto3\" json:\"dsFolder,omitempty\"`\n\n// Additional Frontend configuration\nFrontendHosts            string         `protobuf:\"bytes,24,opt,name=frontendHosts,proto3\" json:\"frontendHosts,omitempty\"`\nFrontendLogin            string         `protobuf:\"bytes,25,opt,name=frontendLogin,proto3\" json:\"frontendLogin,omitempty\"`\nFrontendPassword         string         `protobuf:\"bytes,26,opt,name=frontendPassword,proto3\" json:\"frontendPassword,omitempty\"`\nFrontendRepeatPassword   string         `protobuf:\"bytes,27,opt,name=frontendRepeatPassword,proto3\" json:\"frontendRepeatPassword,omitempty\"`\nFrontendApplicationTitle string         `protobuf:\"bytes,28,opt,name=frontendApplicationTitle,proto3\" json:\"frontendApplicationTitle,omitempty\"`\nFrontendDefaultLanguage  string         `protobuf:\"bytes,33,opt,name=frontendDefaultLanguage,proto3\" json:\"frontendDefaultLanguage,omitempty\"`\n\n// Sites configuration\nProxyConfigs            []*ProxyConfig `yaml:\"proxyconfigs\",json:\"proxyConfigs,omitempty\"`\n\n// Additional arbitrary configs, where key is config path and value can be any type\nCustomConfigs           map[string]interface{} `yaml:\"customconfigs\",json:\"customConfigs,omitempty\"`\n</code></pre>"},{"location":"admin-guide/advanced/yaml-json-installation/#proxyconfig-proto","title":"ProxyConfig proto","text":"<pre><code>// A list of [host]:port to bind to\nBinds           []string `protobuf:\"bytes,1,rep,name=Binds,proto3\" json:\"Binds,omitempty\"`\n\n// Optional URL of reverse proxy exposing this site\nReverseProxyURL string `protobuf:\"bytes,3,opt,name=ReverseProxyURL,proto3\" json:\"ReverseProxyURL,omitempty\"`\n// TLS configuration used for this site\n// Types that are assignable to TLSConfig:\n//  *ProxyConfig_SelfSigned\n//  *ProxyConfig_LetsEncrypt\n//  *ProxyConfig_Certificate\n\nTLSConfig       isProxyConfig_TLSConfig `protobuf_oneof:\"TLSConfig\"`\n\n// If TLS is set, whether to automatically redirect each http://host:port to https://host:port\nSSLRedirect     bool `protobuf:\"varint,2,opt,name=SSLRedirect,proto3\" json:\"SSLRedirect,omitempty\"`\n\n// If set, this site will be in maintenance mode\nMaintenance     bool `protobuf:\"varint,7,opt,name=Maintenance,proto3\" json:\"Maintenance,omitempty\"`\n\n// Append caddy directive to restrict maintenance mode\nMaintenanceConditions []string `protobuf:\"bytes,8,rep,name=MaintenanceConditions,proto3\" json:\"MaintenanceConditions,omitempty\"`\n</code></pre>"},{"location":"admin-guide/advanced/yaml-json-installation/#examples","title":"Examples","text":"<p>Below are some examples of YAML and JSON files</p>"},{"location":"admin-guide/advanced/yaml-json-installation/#yaml-basic-install","title":"YAML Basic Install","text":"<pre><code># Basic no-TLS config for the embedded gateway\nproxyconfig:\n  binds:\n    - localhost:9090\n  reverseproxyurl: http://localhost\nfrontendlogin: admin\nfrontendpassword: password\ndbconnectiontype: tcp\ndbtcphostname: localhost\ndbtcpport: 3306\ndbtcpname: cells\ndbtcpuser: pydio\ndbtcppassword: cells\n</code></pre>"},{"location":"admin-guide/advanced/yaml-json-installation/#yaml-multi-site-custom-configurations","title":"YAML Multi Site, custom configurations","text":"<pre><code># Pre-configure multi sites \n# Note that the proxy configurations defined here overwrite the values \n# that might have been passed by the --bind and --url flags.\nproxyconfigs:\n  - binds:\n      - 0.0.0.0:8080\n    reverseproxyurl: http://localhost:8080\n  - binds:\n      - 0.0.0.0:8081\n    reverseproxyurl: https://localhost:8081\n    tlsconfig:\n      selfsigned:\n        hostnames:\n          - localhost\n  - binds:\n      - 0.0.0.0:8082\n    reverseproxyurl: https://localhost:8082\n    tlsconfig:\n      selfsigned:\n        hostnames:\n          - localhost\n</code></pre>"},{"location":"admin-guide/advanced/yaml-json-installation/#json-with-provided-certificate","title":"JSON with provided certificate","text":"<pre><code>{\n    \"ProxyConfig\": {\n        \"Binds\": [\"localhost:443\"],\n        \"ReverseProxyURL\": \"https://localhost\",\n        \"RedirectURLs\": [\n            \"http://localhost\"\n        ],\n        \"TLSConfig\": {\n            \"Certificate\": {\n                \"CertFile\": \"/var/cells/certs/cert.pem\",\n                \"KeyFile\": \"/var/cells/certs/key.pem\"\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"admin-guide/advanced/pydio-cells-internals/","title":"Pydio Cells Internals","text":"<p>This section covers the basics of the Pydio Cells architecture. Although not necessary, we believe it's a good read to understand what is going on under the hood and thus, among others, have a better understanding of the log messages</p>"},{"location":"admin-guide/advanced/pydio-cells-internals/#introduction","title":"Introduction","text":"<p>Pydio Cells is composed of a set of micro-services, which are small, mono-oriented, independent programs communicating together only via defined API's. This does improve flexibility and overall scalability of the system.</p> <p>This is transparent for standard, one-node deployments: when you run Pydio Cells with the standard <code>./cells start</code> command, all services are started altogether, and a dedicated \"proxy\" service provides the glue to expose only one HTTP address to the users. You certainly do not \"have to\" run each service independently on different machines. </p>"},{"location":"admin-guide/advanced/pydio-cells-internals/#services-are-stateless-and-fully-independent","title":"Services are stateless and fully independent","text":"<p>As exposed, each micro service exposes its own API, using either a gRPC Protocol or a REST HTTP protocol (more on that later). Also, each micro service comes with its own storage. Some services rely on a MySQL storage, whereas others currently embed their own on-file database (based on BoltDB). This is important as it allows to scale each service independently depending on the load applied on this service. </p> <p>Again, the complexity is hidden from you for standard deployments: the central configuration shares one database for all services. Inside this database, each service creates its own tables and relies only on these tables. There are no relational links betweens the tables of different services. By correctly tweaking the configuration file, you can assign a different database server for each server without issue.</p>"},{"location":"admin-guide/advanced/pydio-cells-internals/#communication-and-main-service-types","title":"Communication and main service types","text":"<p>Services communicate one with another via a fixed API. There are two types of services, following the \"gateway\" pattern of micro-services best practices.</p> <ul> <li> <p>__pydio.grpc.__ services: low-level layers, interacting with the persistence layer and implementing very basic CRUD operations for objects, are exposing a GRPC API. Using Protocol Buffers*, this remote procedure call system based on HTTP2 provides high efficiency, streaming and many other advantages. It is promoted by Google and massively adopted in any language. Protobuf is a standard syntax for describing messages and services, and a specific tool allows the translation of these protobufs into concrete implementation in the language of your choice, for both servers and clients. GRPC services are never connected directly from the outside world (like http browsers).</p> </li> <li> <p>__pydio.rest.__ All interactions with the outside world are performed using HTTP/1 Rest APIs*. These services receive HTTP calls forwarded by the gateway, and forward them to the underlying services. The idea of micro-service is to deport the logic as high as possible in the client. Thus where the GRPC services are generally very basic CRUD providers, the REST services may provide more business logic and create glue between many GRPC services.  </p> </li> </ul> <p>These are the two main service types that Pydio Cells is running. They are often running as pairs: exposing some objects to the outside world requires a dedicated \"rest\" gateway even when no intelligence is required. </p> <p>You can for instance find following services in Pydio Cells: <code>pydio.grpc.policies</code> [storing policies in DB]  =&gt; <code>pydio.rest.policies</code> [providing rest apis for listing/creating policies].</p>"},{"location":"admin-guide/advanced/pydio-cells-internals/#global-architecture","title":"Global Architecture","text":"<p>Below is the global architecture schema (not all services are represented here). Please see the developer guide to learn more about the detailed architecture.</p> <p></p>"},{"location":"admin-guide/advanced/advanced-configurations/","title":"Advanced configurations","text":"<p>This article will introduce you to some of the advanced configurations that you can apply on your Cells instance.</p> <p>Beware, those settings are to be handled with care.</p> <p>First and foremost make sure to enable the Advanced Parameters (see the following screenshot).</p> <p></p>"},{"location":"admin-guide/advanced/advanced-configurations/#available-plugins","title":"Available Plugins","text":"<p>The available plugins lists all the plugins that enables all of the features on Cells, from this interface you can edit a lot more than from the basic dashboard.</p> <p></p> <p>From this menu, you can search for any plugin that is available on your Cells instance (home or enterprise), you can also edit many plugins configuration. Those are advanced settings so tread with caution when editing.</p> <p>If you are wondering why some plugins cannot be edited, it is because those are the main components that allow Cells to run.</p>"},{"location":"admin-guide/advanced/advanced-configurations/#number-of-items-per-page-and-archive-format","title":"Number of items per page and archive format","text":"<p>For instance you can change the number of items displayed by page on your workspaces or the type of archive that is created when you download multiple files at once.</p> <p>Search for \"Gateway\" plugin and hit the edit button.</p> <p></p>"},{"location":"cellsflows/index/","title":"CellsFlows","text":"<p>CellsFlows documentation</p>"},{"location":"cellsflows/cells-flows-manual/index/","title":"Cells Flows Manual","text":"<p>[:image:cells-flows.png]</p> <p>Welcome to Cells Flows Documentation.</p> <p>This Guide provides in-depth explanation of what Cells Flows can do for you and how it works, as well as generated documentation of all resources that are packaged within the product.</p> <ul> <li>Introduction to Cells Flows</li> <li>Anatomy of a Flow</li> <li>Demo of a simple Flow (video)</li> <li>Building your own Flows</li> <li>Providing End-User Interactions</li> <li>Scripting Capabilities</li> <li>Managing Flows</li> </ul>"},{"location":"cellsflows/cells-flows-manual/introduction-to-cells-flows/","title":"Introduction to Cells Flows","text":"<p>Cells Flows is a powerful drag-and-drop tool that allows you to easily automate tasks in Pydio Pydio Cells.</p>"},{"location":"cellsflows/cells-flows-manual/introduction-to-cells-flows/#why-should-i-use-cells-flows","title":"Why should I use Cells Flows?","text":"<p>Keeping things (servers?) under control in a company where file sharing and content collaboration usage intensifies is a big part of an administrator daily routine tasks. Whether it be monitoring storage usage, making sure any former employees files are not publicly shared, providing on-demand accesses to various collaborators, all these tedious manual tasks can now be replaced by automatic jobs that are either triggered in a timely manner or in response to various platform events.</p>"},{"location":"cellsflows/cells-flows-manual/introduction-to-cells-flows/#drag-and-drop-interface-on-top-of-cells-internal-scheduler","title":"Drag-and-drop Interface on top of Cells Internal Scheduler","text":"<p>Cells Scheduler was added day one to Pydio Cells to provide tasks management for features such as Extract Thumbnails, Clean up Revoked Tokens, Handle Mailer Queue, etc. Cells Flows provides a unique drag-and-drop interface on top of this mature technology to build, customize and monitor automated jobs in your Cells instance.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/introduction-to-cells-flows/#process-files-and-folders-but-also-other-internal-data","title":"Process files and folders, but also other internal data","text":"<p>While Cells Flows primarily aims at processing files uploaded in Cells (move them around, extract PDF textual contents or thumbnails/exif data, many processors are available out-of-the-box), it can also process other data types: list all users with given attributes, apply some specific permissions to them, generate a CSV list and send it by email every day, etc.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/introduction-to-cells-flows/#replace-cron-or-watch-events","title":"Replace CRON or watch events","text":"<p>Jobs can also be scheduled to run on a timely manner, replacing good old CRON for starting tasks every hour, every days, etc.</p> <p>Event-based approach gives you the flexibility you need to react to many events. From new file uploaded or contents changed, to users signing in or public link creation, Cells Flows have you covered to trigger jobs whenever required.  </p> <p></p>"},{"location":"cellsflows/cells-flows-manual/introduction-to-cells-flows/#cells-integration-with-third-party-tools","title":"Cells Integration with third-party tools","text":"<p>Many Actions provide tools to interact with external services, from webhooks to command-line and HTTP calls. This makes it easy to seamlessly integrate Cells inside your existing infrastructure and set of services. Easily connect Cells to feed your in-house service developed for specific file processing, and use Cells REST API to automatically trigger Jobs within Cells Flows. </p> <p></p>"},{"location":"cellsflows/cells-flows-manual/introduction-to-cells-flows/#high-level-concepts","title":"High-level concepts","text":"<p>A Job represent the definition of a sequence of Actions, basic building blocks that can be chained together to process data. Just add an action and connect it to others, adding Filters on the data flow, or loading data from Cells internal services using Queries. </p> <p></p> <p>When Trigger conditions are met (based on events, schedule or when you run manually), a job will launch Task with your job-defined Parameters, and process all actions and log their results in the Task Logs.</p> <p></p> <p>Learn more about the Anatomy of a Flow to get started quickly in the next section!</p>"},{"location":"cellsflows/cells-flows-manual/demo-of-a-simple-flow-video/","title":"Demo of a simple Flow (video)","text":"<p>This video cover the basics of creating a Job in Cells Flows. It demonstrates how to use the drag-and-drop interface and cover concepts such as Actions, Triggers, Filters and Queries and their Parameters.</p> <p>The video provides a start-to-end tutorial for a sample usecase: </p> <ul> <li>Watch for PDF files</li> <li>Uploaded in a specific folder</li> <li>Tag them automatically</li> <li>Email all users with role \u00abReviewers\u00bb if file is bigger than 500KB</li> </ul> <p>It is the first of a sery that will be dedicated to Cells Flows features.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/index/","title":"Anatomy of a Flow","text":"<p>A Flow represent the definition of a sequence of Actions that are basic building blocks chained together to process data. The job Trigger starts in response to various event types. Tasks are actual instance of a job that are running. </p> <p>Data can be either explicitely loaded from internal Cells services using Queries or generated by the initial job trigger, and is carried by Messages from one action to another. </p> <p>Between each action, Filters can transform the message Data, or apply an arbitrary condition. </p> <p>[:image:0_overview/anatomy-of-a-job-overview.png]</p> <p>Pages below provide more details about each of the Jobs components.</p> <ul> <li>Actions and Messages</li> <li>Data Types, Queries, Filters</li> <li>Triggers</li> <li>Parameters</li> <li>Tasks Logs</li> </ul>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/actions-and-messages/","title":"Actions and Messages","text":""},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/actions-and-messages/#the-basic-building-blocks","title":"The basic building blocks","text":"<p>Basic building blocks of Cells Flows jobs are Actions. They provide a wide range of tools to either process file contents, transform arbitrary data, communicate with external tools or even simply print something to the task log to monitor the good processing of a running task. </p> <p>See the list of available actions and get inspired!</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/actions-and-messages/#chaining-actions","title":"Chaining Actions","text":"<p>Actions are chained together with simple connectors : every action can be chained to one or more actions, sending its output as input to the next sequence of actions for further processing.</p> <p></p> <p>Connecting one action to 2 or more actions will start running these in parallel (see Parallelism &amp; Concurrency).</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/actions-and-messages/#handling-data-flow","title":"Handling Data flow","text":""},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/actions-and-messages/#inputoutput-messages","title":"Input/Output messages","text":"<p>Every action receives a \"Message\" in its input, that contains information of various types: </p> <ul> <li>Data loaded or generated during the previous steps of the sequence, like one or more Nodes (file or folder), a given User, Role, Workspace, etc. or an arbitrary String/JSON message. See the Data Types section to learn more.</li> <li>Job-context information like job and task identifiers, current context that triggered the job (username, http request metadata, etc), and job-level parameters.</li> </ul> <p>Each action handles input message differently depending on its purpose, and optionally passes on a copy or modified version of this input as output for the next chained actions (see below).</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/actions-and-messages/#feeding-messages-data","title":"Feeding messages data","text":"<p>Messages data can be generated or loaded: </p> <p>Event-generated data</p> <p>When jobs are triggered by events, the data associated with that event will be implicitely appended to the first action Input.</p> <p>Loading data with Queries </p> <p>You may need to explicitely load some data to feed a given sequence of actions. This is done using Queries that allows you to select rows (like you would in an SQL database) based on various criteria.  One can for example list all files under a certain path, or list all Workspaces updated since a certain period, etc.</p> <p>Filtering Data </p> <p>Once some data is passed along from one action to another, you can perform dynamic filtering to e.g. reduce the amount of data to process, or continue the sequence only if received data meets certain conditions.</p> <p>You will learn more about Data Types in the following section.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/actions-and-messages/#actions-parameters","title":"Actions Parameters","text":"<p>Most action come with their own set of Parameters. Parameters are editable and can be scripted using Golang Templating to be dynamically computed at runtime based on previous message input, job-level parameters values and many other things. </p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/","title":"Data Types, Queries, Filters","text":"<p>As explained in previous section, all Actions receive an Input Message that contains some arbitrary data. Below are described the currently supported data types.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#data-types","title":"Data Types","text":""},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#actionmessage","title":"ActionMessage","text":"<p>Input Messages always have the following structure (described here in protobuf syntax):</p> <p><pre><code>// Message passed along from one action to another, main properties\n// are modified by the various actions.\nmessage ActionMessage {\n    // Initial event that triggered the Job\n    google.protobuf.Any Event = 1;\n    // One or more Node\n    repeated tree.Node Nodes = 2;\n    // One or more User\n    repeated idm.User Users = 3;\n    // One or more Role\n    repeated idm.Role Roles = 6;\n    // One or more Workspace\n    repeated idm.Workspace Workspaces = 7;\n    // One or more ACL\n    repeated idm.ACL Acls = 8;\n    // One or more Activity\n    repeated activity.Object Activities = 4;\n    // Stack of ActionOutput messages appended by all previous actions\n    repeated ActionOutput OutputChain = 5;\n}\n\n// The ActionMessage.OutputChain is a stack of ActionOutput messages:\n// ActionOutput message is less-typed and can contain arbitrary String, JSON or Binary data.\nmessage ActionOutput {\n    // True if action succeeded\n    bool Success = 1;\n    // Arbitrary bytes sequence\n    bytes RawBody = 2;\n    // Arbitrary string\n    string StringBody = 3;\n    // Arbitrary JSON-encoded bytes\n    bytes JsonBody = 4;\n    // Error\n    string ErrorString = 5;\n    // If action was returned WithIgnore()\n    bool Ignored = 6;\n    // Time taken to run the action\n    int32 Time = 7;\n}\n</code></pre> Fields \"Nodes\", \"Users\", \"Roles\", \"Workspaces\" are the most commonly used by actions. For example, a message containing just a given reference to a file would look like: </p> <pre><code>{\n  \"Nodes\": [\n    {\n      \"Uuid\": \"086bdb2d-51d8-4be5-9913-24e002e38b5f\",\n      \"Path\": \"pydiods1/fakepath/foo.bar\",\n      \"Type\": \"LEAF\",\n      \"Size\": \"100\",\n      \"MTime\": \"1612260750\",\n      \"Etag\": \"sample-etag\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#reading-data-with-golang-templates","title":"Reading data with Golang Templates","text":"<p>In many cases, action parameters will give you enough flexibility to ignore the data type format that comes in input. But soon you will want to use one specific piece of information to be treated by the action. That's where Golang Templating comes into place. Given the previous example, let's say you want to write an action that prints out the Path of the file passed in input, you would use the following syntax: </p> <p><pre><code>{{.Input.Nodes[0].Path}}\n</code></pre> or as a shortcut (as first Node, first User, etc... are passed by default as <code>Node</code>, <code>User</code>,... fields to the template):  <pre><code>{{.Node.Path}}\n</code></pre></p> <p>See the detailed section about Scripting Capabilities to learn more. </p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#loading-data","title":"Loading Data","text":""},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#input-data-provided-by-events","title":"Input data provided by Events","text":"<p>When triggering jobs on events, the data associated with that event will be implicitely appended to the first action Input.</p> <p>Typically, when a job reacts to an event like \"Node Created\", the associated Node (file or folder) is automatically appended to the job first Input.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#loading-data-with-queries","title":"Loading data with Queries","text":"<p>You may need to explicitely load some data to feed a given sequence of actions. This is done using Queries that allows you to select rows (like you would in an SQL database) based on various criteria.  One can for example list all files under a certain path, or list all Workspaces updated since a certain period, etc.</p> <p>The following image shows the available Queries that can be used to select data to feed any action. To create your own query, select a query type and then drop the query on the target action.</p> <p></p> <p>When Queries return many results, you may either choose to pass all the results along as a bulk to one specific action, or to fan out each result as a unique message passed to many instances of the same action. In the later case, multiple action instances will be triggered in parallel, each one processing one of the result.</p> <p>Example1: collecting data to spin one action with N results:  </p> <p>Example2: collecting data and spinning N actions in parallel. You can cead more about Parallelism and Concurrency and how to make the most out of this powerful feature.</p> <p></p> <p>Sometimes you have a message that contains N results and you actually want to trigger N actions instead. You can use the \"Fan Out\" flag of the selector, without any criteria, to just split the result into N messages =&gt; N actions. </p> <p></p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#filtering-data","title":"Filtering Data","text":"<p>Once some data is transferred from one action to another, you can perform dynamic filtering to e.g. reduce the amount of data to process, or continue the sequence only if received data meets certain conditions. Filters offer the same kind of criteria as would the Queries, but are applied on the current set of data.</p> <p>The following image shows the available Filters that can be used to select data to feed any action. To create a filter, select the filter type and the drop the filter on the connector between the two actions where you want the filtering to be applied. </p> <p></p> <p>Notes </p> <ul> <li>You must first connect two actions to be able to drop a filter on the connector.  </li> <li>a Filter returning no result will stop the current flow, to avoid launching actions that would do nothing.  </li> <li>A Filter can be also applied directly to an event trigger. As implied by the previous restriction (stop if empty), this is a best-practice to make sure to launch a job only if filter passes.  </li> </ul>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#conditional-filtering","title":"Conditional Filtering","text":"<p>As explained above, filters are useful to limit the data that we want to process, but can be also used as simple \"show-stoppers\": if condition on data is not met, just stop there. In that case, you may want to provide an alternative sequence of actions. Switching a filter to \"Conditional\" mode will allow you to create \"if/else\" branches.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/data-types-queries-filters/#advanced-query-builder","title":"Advanced Query Builder","text":"<p>Both Queries and Filters are built in a similar fashion: they are a composition of criteria that can be combined using sub-queries that will be applied in two possible ways: </p> <ul> <li>Condition passes if all condition are met (AND)</li> <li>Condition passed if at least one condition is met (OR) </li> </ul> <p>Although queries and filters are \"typed\" components (\"Files/Folders\" does not offer the same criteria as a \"Users\"), their \"Query Builder\" look the same. </p> <ul> <li> <p>Select/filter all Nodes that are \"LEAF\" (files) AND not named \".pydio\"    </p> </li> <li> <p>Select/filter all Nodes that are named \"possible1\" OR \"possible2\"    </p> </li> </ul> <p>See all the available building blocks for creating Queries and Filters in the dedicated section.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/triggers/","title":"Triggers","text":"<p>Cells Flows Jobs can be started in many ways: reacting to Cells events, based on a schedule, or manually, or even by end-users using WebHooks and buttons.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/triggers/#event-based-triggers","title":"Event-based Triggers","text":"<p>To create a job that will react to certain events, use Event-based triggers. Image below shows the list of available events.</p> <p></p> <p></p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/triggers/#combining-multiple-events","title":"Combining Multiple Events","text":"<p>A job can be programmed to start based on multiple events (for example jobs are often started on \"File Created\" or \"File Modified\" event), but as a rule of thumb make sure to combine only events of the same type. As explained in the Data Types section, events will feed their triggering data (e.g. \"The modified File\", \"The user who logged in\") in the first action Input, and that action will generally expect a specific data type.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/triggers/#schedule-based-triggers","title":"Schedule-based Triggers","text":"<p>Running jobs on a timely manner is done by using Schedule-based trigger.  </p> <p></p> <p>Note that scheduled jobs can also be run manually.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/triggers/#starting-jobs-manually","title":"Starting Jobs Manually","text":"<p>You can simply start a manual or scheduled job using the RUN NOW button in the top-right hand of the screen.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/triggers/#webhooks","title":"WebHooks","text":"<p>WebHooks are a powerful way for enabling users interaction with you admin-defined Flow. See the Dedicated Section to learn more about WebHooks.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/parameters/","title":"Parameters","text":"<p>Parametrization is an essential feature of any workflow tool. Cells Flows flexible model allows you to set up parameters at various levels, and re-use them using advanced scripting capabilities.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/parameters/#action-parameters","title":"Action Parameters","text":"<p>Each action declares its own set of parameters that are typed (string, number, boolean, preset list of choices...) and can be edited directly in the interface.</p> <p>In Edit mode, just click on an action to edit its parameters.</p> <p></p> <p>As you can see, you can also rename the action to make your diagram flow more readable.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/parameters/#flow-level-parameters","title":"Flow-level Parameters","text":""},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/parameters/#defining-flow-level-parameters","title":"Defining Flow-level parameters","text":"<p>You can define your own set of parameters at the Flow level. </p> <p></p> <p>Defining parameters at the Flow-level provides many advantages : </p> <ul> <li>Centralize parameters management and reuse their values inside Actions, Filters and Queries.</li> <li>Parameters are typed (string, number, boolean, preset list of choices...) to avoid human errors.</li> <li>Manual and scheduled Flows run with the parameters preset values, but the \"Run With Custom Parameters\" option allows to apply some values for just one specific run. </li> </ul> <p>Creating or editing parameter is simply done by clicking on the \"+\" button of the Parameters panel, or the \"pencil\" icon next to an existing parameter.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/parameters/#using-flow-level-parameters","title":"Using Flow-level parameters","text":"<p>As such, these parameters are not used anywhere: it is your mission to use them inside your Actions parameters (any parameter) or Queries/Filters field values (only applicable to text fields).  This is done by using the Golang Template syntax <code>{{.JobParameters.ParameterName}}</code>. Below is an example used in the default \"Personal Files Archive\" Flow. </p> <ul> <li>Using <code>ArchivePath</code>, <code>ArchivePrefix</code> and <code>Format</code> in the \"Compress\" action parameters:</li> </ul> <p></p> <ul> <li>Using <code>RootPath</code>, in the Query used for finding user personal folder:</li> </ul> <p></p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/parameters/#runtime-values-and-variables","title":"Runtime Values and Variables","text":"<p>Flow-level parameters can have their values overriden at runtime. Inside the Flows, you may also have the need to store and retrieve contextual values known as Variables. See this page to learn more about Runtime Parameters and Variables.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/tasks-logs/","title":"Tasks Logs","text":""},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/tasks-logs/#tasks-history","title":"Tasks History","text":"<p>Once a job is defined and ready to run, its actual running instances are named \"Tasks\". One job has one or many tasks that have a runtime Status : \"Pending\", \"Running\", \"Complete\" or \"Error\".</p> <p>Each task will log its output to a specific logger. Most actions are pre-configured to send logs to the task logger, summarizing what exactly happened during their run. </p> <p>Tasks history and their logs can be found below the job workflow panel. You can manually clear tasks from this list using the various delete buttons (delete one raw, select multiple then delete, delete all tasks). </p> <p></p> <p>Note: the task list is refreshed automatically, but as logs are sent internally in an asynchronous way, logs may take some time to appear just after a task has run.</p>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/tasks-logs/#printing-information-to-logger","title":"Printing Information to Logger","text":"<p>When creating your own custom job, it is very often useful to print out some informative or debugging data to check if you are correctly configuring your actions, queries or others. </p> <p>The Empty Action is a good tool that you can insert here and there inside your flow, to print out the contents of the current messages passing along. Create a new action and select \"Empty Action\" in the action picker screen:</p> <p></p> <p>Then use the action parameter to type any message you want to print out. Notice that you can use Golang Templates here to print out a specific part of the action input!</p> <p></p> <p>You can also use the toggles to send this message to the Application Log. In that case, it will be appended to the standard syslog of Pydio Cells.</p> <p>When using Anko Scripting, use the <code>Logger</code> object that is made available in the script scope with Info(), Warn() or Debug() functions.</p> <pre><code>Logger.Info(\"My log message\", anyObject, anyValue)\n</code></pre>"},{"location":"cellsflows/cells-flows-manual/anatomy-of-a-flow/tasks-logs/#using-logs-for-debugging-flows","title":"Using Logs for Debugging Flows","text":"<p>Switching logs to DEBUG level is a nice way to monitor very closely all messages that are transferred from one action to another during a given Flow run. See the Debugging Tools page to learn more about this.</p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/index/","title":"Building your own Flows","text":"<p>Once you are familiar with the high-level concept, use this section as a toolkit for translating your business requirements into an actionable Cells Flow that you can easily build, modify, test and debug</p> <ul> <li>Business Requirements</li> <li>Debugging Tools</li> <li>Parallelism and Concurrency</li> <li>Runtime Parameters and Variables</li> <li>Combining multiple triggers</li> </ul>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/business-requirements/","title":"Business Requirements","text":"<p>Understanding your business requirements and starting to translate it to an \"automation-oriented\" sequence of actions is the first if not the most difficult step. </p> <p>Translating a workflow requirement into actionable steps for a workflow management tool involves identifying the specific tasks and activities that need to be completed, and organizing them into a sequence or flow that represents the steps that need to be taken to complete the workflow. </p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/business-requirements/#identifying-the-what-and-the-when","title":"Identifying the \"what\" and the \"when\"","text":"<p>The first step is to understand \"what\" you are about to manipulate. In most cases for a tool like Pydio, you will be handling \"files\" or \"folders\". In other cases, you may want to modify or create \"users\", \"permissions\", ...  </p> <p>Then you have to understand the scope of what you will be manipulating : are you targeting a specific resource (e.g. one file) or do you have to gather a list of filtered objects ?  </p> <p>Then finally you will need to figure out the \"when\", i.e. which event will trigger the workflow: will it be a recurring task scheduled at a specific time? or will it be triggered by an event happening on the platform ? </p> <p>Examples :</p> Requirement When What Scope I want to process all uploaded files with a custom script file uploaded the new file file I want to alert admin when shared users will login user logged in the logged user user I want to disable public links based on certain conditions manual or regular A selection of workspaces workspaces I want to purge files after 30 days every night All files modified since more than 30 days files"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/business-requirements/#decomposing-into-atomic-actions","title":"Decomposing into Atomic Actions","text":"<p>Probably the first thing you have identified is the actual action you want to perform during your workflow! CellsFlows provides many ready-to-use \"atomic\" actions that try to keep as simple as possible, to provide the most flexibility. As every action always take the same Input and Output formats, they can be composed as needed. Sometimes, you will only need to use one action, but sometimes the operations you want to do will have to be decomposed into a sequence of action. </p> <p>For example, updating a User attributes is done by an action, but this action does not actually persist the changes in the database. Another action \"Persist Idm Changes\" (as Identity Management) must be chained to the first one and configured to persist the \"Users\". </p> <p></p> <p>On the other hand, the operation you need to do may not be available as a simple action, but you can create it by combining actions. For example, you want to \"batch files that are uploaded at the same time\" : this concept does not really exist, but you can emulate it by automatically moving files to new folders stamped with the current time and attaching a metadata to them at runtime. This would require at least two actions (copy/move, set user-meta) to be chained.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/business-requirements/#identifying-conditions-and-translating-into-automations","title":"Identifying \"Conditions\" and translating into automations","text":"<p>When it gets complex, a Flow generally is just a sequence of various actions that are triggered when conditions are met. Like in a programmation language, it's all about understanding logical causes and consequences that can boil down to :</p> <pre><code>If (condition fullfills...) then (do something) else (do something else)\n\n// or\n\nRetrieve objects fullfilling the following conditions [condition1, condition2, condition3, ...]\n</code></pre> <p>Cells Flows provides many ways to implement conditions:</p> <ul> <li>If you need to gather an ensemble of filtered object, Cells Flows provides \"QUERIES\" objects allowing you to retrieve objects from within Cells internal data, following specific conditions. </li> <li>If your Flow is fed with an event-generated object (e.g. the \"user\" sent by the \"user logged event\"), FILTERS allow you to apply the same kind of criteria and decide whether the flow should continue on a specific path or switch to another sequence of action. </li> </ul> <p>Examples :</p> Requirement Translates into All files modified since more than 30 days QUERY Files, Modification Time parameter \"&gt;30d\" Public links QUERY Workspace, Scope = LINK All Reviewers QUERY Users, HasRole = \"Reviewers\" If logged user is admin, do not email FILTER Users, Profile not equals \"admin\" If DataSource is encrypted, do not extract data FILTER Datasource, IsEncrypted = False <p>You will find the \"ACTIONS\", \"FILTERS\" and \"QUERIES\" in the toolbar when editing a Flow.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/debugging-tools/","title":"Debugging Tools","text":"<p>As explained in the first section of Anatomy of a Flow, a core concept of the workflow is how the \"data\" transits from one action to another inside ActionMessages. </p> <p>As soon as your Flow grows, you will want to try it with specific inputs to see if it's working properly.</p> <p>Generally, the only way would be to use real data, and repeat the process of tweaking, saving, running, and looking at the output. It can quickly become very cumbersome.</p> <p>Cells Flows has the ability to inspect the values of all messages passing along. This proves a real time-saver for complex Flows.</p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/debugging-tools/#enabling-messages-debugging","title":"Enabling messages debugging","text":"<p>You can switch the debug mode on for Cells Flows with the following Environment variable:  <pre><code>export CELLS_JOBS_LOG_LEVEL=debug\n</code></pre> And restart Cells. </p> <p>Once the debugging is on, you can toggle the DEBUG level of the task logs using the <code>{}</code> button. They contain a lot of information, particularly all messages that are received by all actions, and outputted at the end of all actions. </p> <p></p> <p>The messages are displayed as expandable JSON objects, showing all the properties of the messages in a very detailed way.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/debugging-tools/#following-messages-in-the-graph","title":"Following messages in the Graph","text":"<p>When loading the DEBUG level logs for a given task, you will see that they also appear directly inside the Flow Graph! You can now visually follow what happened during the task.</p> <p>To see the content of a message, simply click on the <code>{}</code> symbol: it will appear in a pop-up, and you can expand the JSON (as in the logs). To keep this pop-up open while looking at another message, you can \"Pin\" it (and then move it arround if you want). </p> <p></p> <p>Pinning a message is especially useful when an action has received a collection of objects as Input. In that case, you can click on the \"tag\" icon to filter the messages to a specific object occurence, showing how the rest of the Flow behaved for this particular object. </p> <p></p> <p>The example below shows a first image of messages where we can see that two nodes where received by the first action. By filtering inputs, we show that the first node (image 2) was passing the filter condition, while the seconde node (image 3) was not.</p> <p></p> <p></p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/parallelism-and-concurrency/","title":"Parallelism and Concurrency","text":""},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/parallelism-and-concurrency/#parallelism","title":"Parallelism","text":"<p>Various use cases may lead to one action of a job being started multiple times \"in parallel\": </p> <ul> <li>An event-based job received many events at once</li> <li>A QUERY is configured to select multiple objects and trigger one action for each object</li> <li>Multiple actions are chained to the output of an action</li> </ul> <p>This powerful feature can make use of parallelism to e.g. perform tasks on all the available CPUs and speed up the processes. But it can have an important drawback: running tons of tasks in parallel may quickly result in overloading your server CPU!.</p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/parallelism-and-concurrency/#limiting-concurrency","title":"Limiting Concurrency","text":"<p>To avoid that issue, jobs define a \"Max. Parallel Tasks\" parameter that you define to tell the internal queue to never run more than XX action instances at the same time.  </p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/parallelism-and-concurrency/#example","title":"Example","text":"<p>Let's have a look at the internal job used for extracting images thumbnails and exif metadata: </p> <p></p> <p>Now imagine that a user is uploading 1000 JPG images to Cells at once. </p> <ul> <li>Input trigger could eventually receive 1000 \"Create Node\" events in a very short period of time</li> <li>For all these images both \"Create Thumbs\" and \"Extract EXIF\" will be launched in parallel. These actions require reading the entire file and manipulating image pixels, and are CPU-heavy. </li> </ul> <p>Without any restrictions, you could end up having Cells processing 2000 heavy-load actions concurrently! If you notice the Max. Parallel Tasks: 5 value, we avoid this by batch-processing images only 5 by 5.</p> <p>Of course, if you have dimensioned your server CPU/RAM to handle super high load, you could decide to raise this value to accelerate thumbnails generation (within acceptable limits for your hardware).</p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/parallelism-and-concurrency/#managing-timeouts","title":"Managing Timeouts","text":"<p>Another important aspect of Cells Flows is that it can trigger long-running operations on your server, and sometimes it's not what you want. Or sometimes it is and you want to give a Flow some extra-time to make sure that it finished. </p> <p>Timeouts are parameters that can be used at many levels of a Flow to precisely how each step should behave: </p> <ul> <li>Flow-level Timeout: a global limit applying to the entire Flow, will interrupt all running actions if it is reached.</li> <li>Queries Timeout: Populating objects based on specific criteria can be time-consuming if the result ends up loading a huge amount of objects. All selector types have a Timeout parameter to limit these queries.</li> <li>Actions Timeout: All actions also have a Timeout option to limit their processing-time.</li> </ul>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/parallelism-and-concurrency/#synchronizing-parallel-tasks","title":"Synchronizing parallel tasks","text":"<p>Handling parallelism is useful for resource optimisation. But as soon as multiple branches are launched in parallel, they \"forget\" about their siblings, and they will finish \"when they want\". Generally this is not an issue, but in some case you want to actually :</p> <ul> <li>Launch many actions in parallel</li> <li>Wait that they are all finished</li> <li>Eventually collect and combine results from all these actions</li> <li>And finally do something specific or carry on with the flow. </li> </ul> <p>This is in fact doable by setting a \"Merge Action\" on the output of an action : all branches that start from this action will be synchronized and re-combined into a unique message and the Merge Action will then be called. </p> <p>To create a merge action, look for the \"branch\" button on the output of the parent action that is dispatching parallel branches:</p> <p></p> <p>A simple example showing how two branches can be synchronized and merged back to carry on with other actions:</p> <p></p> <p>For those familiar with the Golang language, this is very similar to a <code>sync.WaitGroup</code>.</p> <p>Some notes : </p> <ul> <li>A Merge Action can be set on the job trigger, and it will apply to all the job branches, allowing to set a final action, whatever the branches where.</li> <li>Due to technical limitations, one cannot add a Merge Action on an action that is already a Merge Action. If you need that, just chain another empty action and create the Merge Action on that one.</li> <li>Merges operations can be nested to regroup actions by clusters. See the image example below.</li> </ul> <p></p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/runtime-parameters-and-variables/","title":"Runtime Parameters and Variables","text":"<p>Using specific values to trigger filters or conditions is a common practice, and it is straightforward when it is a property attached to the object you are manipulating (e.g. do something \"based on the file type\"). </p> <p>But sometimes you keep repeating them (=&gt; parameters), or sometimes you need to compute values at an early stage of the Flow  and re-use them later on (=&gt; variable). </p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/runtime-parameters-and-variables/#parameters-defaults-vs-runtime","title":"Parameters - Defaults vs Runtime","text":"<p>As soon as your Flow becomes complex, it is a very good practice to extract all the possible changing values from within the actions, filters and queries, and define flow-level parameters that will help you to reuse this Flow. </p> <p>Typically, if you use a Files Query that selects all files under <code>pydiods1/myspecial/folder</code>, instead of hard-coding this value inside the query condition, you should define a \"LookupPath\" parameter in the Flow parameters, and refer to it as {{.JobParameters.LookupPath}} in the query condition. That way, in six-months, when <code>myspecial/folder</code> will be renamed to <code>myspecial/directory</code> due to internal policies changes, updating that value will be super-simple and easy to find.</p> <p></p> <p>And maybe you already know that you will want to launch this job on a different folder once in a while: for that you can simply use the \"Run|...\" button to launch a job with a different value, without modifying the default value.</p> <p></p> <p>Similarly, when using WebHooks, you can create multiple hooks on the same job, and define a specific value for each of them. This can be useful to ease the use of the hooks with predefined values. Or this could be used for security reason: one hook could be configured to be run \"as admin\" and the other \"as user\"... </p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/runtime-parameters-and-variables/#variables","title":"Variables","text":"<p>Going further with parameters, Variables give you the ability to create/compute arbitrary values and \"store\" them in the Flow's messages for later usage. </p> <p>This is done by using the \"Build Message\" action, where you can define variables and their types and values. These are set in the ActionMessage and passed to every subsequent actions. It can then be accessed using Golang templating {{.Vars.MyVariable}} or other scripting capabilities. </p> <p></p> <p>Note that the underlying \"variable store\" is immutable: if you chain multiple \"Build Message\" actions and rewrite a same variable with a different value, a full copy of the store is made. So for example if a variable is sent to parallel branches, we make sure that modifying it in one branch will not modify its original value in the other branch.</p> <p>The image below shows the value of a Build Message input:</p> <p></p> <p>And the value of its output after setting a variable:</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/combining-multiple-triggers/","title":"Combining multiple triggers","text":"<p>When designing a Flow that implements a complex business requirements, you will often end-up creating different branches that react differently to their own specific stimulus. </p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/combining-multiple-triggers/#example","title":"Example","text":"<p>Here is our requirement:  <pre><code>Wire Cells with a custom in-house tool that creates a thumbnail for specific file formats. \n</code></pre></p> <p>First we need to create a simple job: </p> <ul> <li>Listens to the \"On Create File\" events, </li> <li>Filter them by extension, </li> <li>Call our extractor API, </li> <li>Store the thumbnail back as a metadata of the file. </li> </ul> <p>If we look closer, how can we make sure that the created thumbnail is deleted along with the original file? Ok, let's create an other flow: </p> <ul> <li>Listen to \"On Delete\" file,  </li> <li>Removed corresponding thumbnail</li> </ul> <p>And what about all the files that exist in the system before we wired this in-house tool ? We can create a \"Manual Flow\": </p> <ul> <li>Crawl the datasources looking for files that are missing our special thumbnails</li> <li>Process them accordingly (call extractore, store thumbnail).</li> </ul> <p>So we end up with 3 Flows here. That's Ok. But now let's say that the list of extensions used to identify the candiate files may evolve in the future : we would create \"Job Parameters\" in each of the 3 Flows for that, and update them accordingly when required... You get the point, it is not very elegant. It would be much simpler to maintain one Flow that could handle all the cases. </p>"},{"location":"cellsflows/cells-flows-manual/building-your-own-flows/combining-multiple-triggers/#combining-triggers-in-one-flow","title":"Combining Triggers in one Flow","text":"<p>Using triggers filters, we can enable multiple different triggers for a given flow, and create as many branches as required to handle these. The key here is to attach one Trigger Filter per branch, to determine to which stimuli it must react. </p> <p>So for our example described above, we could enable events listening on \"Create\" and \"Delete\", as well as a Manual trigger, and simply create filters for each. Here is an example as used in the standard \"Create thumbnails and extract EXIF\" Flow.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/index/","title":"Providing End-User Interactions","text":"<p>Providing access to sensitive information at build time, Cells Flows is first conceived as an admin-centric tool. But if you want to provide your user with custom access points to interact with your Flows, we have you covered!</p> <ul> <li>Webhooks &amp; Buttons</li> <li>Smart Forms</li> </ul>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/","title":"Webhooks & Buttons","text":"<p>In the current Cells version, Flows creation and edition is an admin-only operation, as by definition a Flow can access to a wide range of resources in the server. But once a Flow is ready, you may wish to let end-users (with limited permissions) interact with it. </p> <p>A special trigger type called a \"WebHook\" can be registered as a custom API endpoint that can be called to trigger the Flow.</p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/#webhooks","title":"WebHooks","text":"<p>Creating a WebHook trigger consists of picking a unique Slug that will expose a specific endpoint in the API, that is defined as follows: <pre><code>POST /a/scheduler/hooks/{FlowUniqueSlug}\n\nRequest body: text/json\n{\n    // Optional runtime parameters overriding defaults values for job\n    \"JobParameters\":{\n        \"key1\": \"value1\", \n        \"key2\":\"value2\"\n    },\n    // Optional list of nodes path (path relative to userspace)\n    \"Paths\":[\n        \"path/to/file1.ext,\n        \"path/to/file2.ext\n    ]\n    // Optional preset unique ID to follow the progress\n    \"TaskID\":\"unique-id\"\n}\n</code></pre></p> <p>To enable a WebHook, you must add a custom Trigger to the Flow main input: </p> <p></p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/#parameters","title":"Parameters","text":"<p>You can configure the webHook to allow the JobParameters default values to be overridden. In that case, as you can see in the Request body, you can pass your own values via the API.</p> <p></p> <p>Similarly, the Request body can be passed a list of files/folders Paths, that will be fed as {{.Input.Nodes}} to the Flow when it is started. The paths are expressed in userspace format (e.g. <code>workspace-slug/path/to/file.ext</code>) and will be checked for read/write permission and translated to internal format (<code>datasource-name/internal/path/to/file.ext</code>).</p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/#access-restriction","title":"Access Restriction","text":"<p>This endpoint access is restricted by security policies definitions: these are a set of rules allowing only specified set of users to access. For example, using <code>profile:admin</code> will only open the access to the administrators, or <code>role:reviewers</code> would open access to all users with role Reviewers.</p> <p></p> <p>Most common pattern is to allow access to <code>profile:admin</code> and <code>profile:standard</code> if you want all common users to have access to the Api.</p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/#buttons","title":"Buttons","text":"<p>WebHooks is a powerful feature to expose an admin-defined Flow, but calling a REST API requires technical skills that are not really user-friendly... Once a WebFlow is active, you can provide a nice, integrated interaction to end-users by defining a Button that will appear in the interface.</p> <p></p> <p>You can setup where the button appears in the UX, its label and icon, and many other properties.</p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/#context-and-buttons-permissions","title":"Context and Buttons Permissions","text":"<p>Buttons will follow the same Security Rules that you have defined as access restriction for the WebHook. That is, if then endpoint must only be accessed by <code>profile:admin</code>, similarly the Button will only show for users with <code>profile:admin</code>. </p> <p></p> <p>Using Button Context, you can customize further the rules for the button to appear: will it appear by default user is inside a workspace or does it require a specific file to be selected (see below)? You can also define a code snippet that will evaluate with the current folder node metadata to determine whether it is active or not.  </p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/#selection-sending-flow-input-node","title":"Selection / Sending Flow Input Node","text":"<p>Enabling a \"Selection\u201c requirement will make the button appear only if specific files or folders are actively selected. You can finetune how the selection must be composed: does it allow folders? files? specific extensions? only one item, or only multiple items?... </p> <p></p> <p>Generally speaking, if a selection is enabled, you probably want to \"do something with this selection\", namely send it to the Flow for processing. You can toggle this, or also choose to simply send the current parent folder as the input Path.</p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/webhooks-buttons/#handling-parameters","title":"Handling Parameters","text":"<p>As exposed in the previous section, a WebHook can allow the Flow Parameters default values to be overriden (you can enable that for each parameter). Some parameters may have a preset value for this hook, but you can also let the users edit this value at submission time. </p> <p></p> <p>By using \"Expose Parameters As a Form\", clicking on the Button will show a form with a legend and selected editable parameters, so that the user can provide additional inputs for your Flow.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/","title":"Smart Forms","text":"<p>In the course of a given project, sometimes you need to gather information from team members, partners and even clients. Cells SmartForm is a flexible, easy-to-use form builder with added intelligence.</p> <p>As with any form builder, you can quickly build forms with checkboxes, multiple selections, long and short text fields \u2013 all the things you would expect from a form builder.</p> <p>You can build any form you need from questionnaires to consent forms to project checklists. Smart Form stores all your form submissions within a single JSON file that can be used to power Cells Flows automations.</p> <p>Smart Form also allows you to collect documents from users as part of their form submissions, as well as provides you access to the submission metadata for full tracking and tracing.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#creating-a-smartform","title":"Creating a SmartForm","text":""},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#one-smartform-one-folder","title":"One SmartForm = One Folder","text":"<p>SmartForm is mostly a graphical interface to a form definition stored inside a folder's metadata. As such, each form instance is attached to a folder you create, and that will receive both the documents and the content of the form fields stored as a JSON file.</p> <p>To start using SmartForm, you must first enable the plugin in the Cells Console &gt; All Available Plugins list. Then inside a - preferably empty - folder, use the SmartForm... action to open the editor.</p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#collecting-specific-documents","title":"Collecting Specific Documents","text":"<p>A key feature of Cells SmartForm is the ability to create an expected list of documents specifying each doc's name, format and maximum size. Any file can be dropped by users on the displayed list items and if their format matches, the file is automatically renamed to the expected name and this item is considered as completed.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#simple-form-fields","title":"Simple Form Fields","text":"<p>Along with specific documents, it is often necessary to collect some specific structured data from users. The form build allows you to create many fields with various supported types. This can also be used independently of the documents feature.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#processing-smartform-output","title":"Processing SmartForm output","text":""},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#submission-behavior","title":"Submission behavior","text":"<p>On a user perspective, you can configure what happens once all forms fields are filled and all expected documents are uploaded: either automatically trigger a submission or show a button to let users submit the form by theirselves.</p> <p></p> <p>Submission can consist of attaching a metadata to the folder where the SmartForm is running. That gives you all flexibility to observe this metadata change with Cells Flows and act on the folder in consequence.</p> <p></p> <p>SmartForm is best combined with a WebHook: once a Flow declares a WebHook, you can reference it as the submission action in the SmartForm, and it will be triggered with the current folder as the Flow's input node.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#reading-form-values-and-upload-documents","title":"Reading form \"values\" and upload documents","text":"<p>The form values are saved in real-time in a hidden <code>form.values</code> file inside the current folder. This files contains a JSON map with all field =&gt; values. Using the \"Read Content\" action in Cells Flows, it is simple to load this data and trigger actions depending on the detected values : send values by emails, reformat them, etc...</p> <p>Similarly, upload documents are just normal documents stored inside the SmartForm folder. As such, once the form is submitted, it is easy to apply any Flow to these docs.</p>"},{"location":"cellsflows/cells-flows-manual/providing-end-user-interactions/smart-forms/#smartform-templates","title":"SmartForm Templates","text":"<p>The SmartForm Editor provides a sleek \"Templates\" features for easily re-using prepared SmartForms. This also provides useful tools for automatisation: Cells Flows can find a SmartForm template by its UUID and automatically apply it to any newly created folder.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/index/","title":"Scripting Capabilities","text":"<p>Cells Flows provides powerful scripting capabilities that enable you to tailor jobs exactly the way you want. The core feature is the usage of Golang Templating engine, that is enriched with many built-in functions and can be used in most parameters of actions, filters or queries. </p> <ul> <li>Using Golang Templates</li> <li>Templates Functions</li> <li>Anko Pseudo-Script</li> <li>Using Javascript</li> <li>Live Playground</li> <li>Scripting Cheatsheet</li> </ul>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-golang-templates/","title":"Using Golang Templates","text":"<p>Go\u2019s text/template package provides a rich templating language for text templates. It's html/template counterpart is mostly used in web applications to display data in a structured way in a client\u2019s browser. </p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-golang-templates/#go-templates-basics","title":"Go-templates Basics","text":"<p>The core concept is simple. </p> <p>A data structure is passed to the template to \"evaluate\" its value at runtime. Let's imagine a simple data structure: </p> <pre><code>  {\n    \"Field1\":\"string\", \n    \"Field2\":34, \n    \"Done\":true, \n    \"Data\":{\"Title\": \"title\"}, // other data-structure \n    \"List\":[{}, {}] // array of data-structures\n}\n</code></pre> <p>The templating language contains a rich set of control structures to render text. Template controls are always delimited with <code>{{...}}</code>. Below is an overview of the most commonly used ones. To get a detailed list of all possible structures visit text/template.</p> Control Structure Definition <code>{{/* a comment */}}</code> Defines a comment <code>{{.}}</code> Renders the root element <code>{{.Field1}}</code> Renders the \u201cField1\u201d-field in the root element <code>{{.Data.Title}}</code> Renders the \u201cTitle\u201d-field in a nested element <code>{{if .Done}} {{else}} {{end}}</code> Defines an if-Statement <code>{{range .List}} {{.}} {{end}}</code> Loops over all \u201cList\u201d and renders each using {{.}}"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-golang-templates/#using-go-templates-in-jobs","title":"Using Go Templates in Jobs","text":"<p>All parameters of an Action and all textual fields of Queries and Filters accept templates as values. These templates will be evaluated at runtime with the current \"ActionMessage\" that is passed as Input (for actions and queries) or that is being passed along from one actions to another (for filters).</p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-golang-templates/#input-data","title":"Input Data","text":"<p>If you went through the Actions and Messages and Data Types, you are already familiar with the data structure you may expect in the parameters.</p> <p>Below is a sample of the data passed as template data: </p> <pre><code>{\n  //\n  // Job-level defined parameters\n  //\n  \"JobParameters\": {\n    \"Key1\": \"value1\",\n    \"Key2\": \"value2\",\n  },\n  //\n  // Main ActionMessage object\n  //\n  \"Input\": {\n    \"Nodes\": [],      // zero or more Nodes\n    \"Users\": [],      // zero or more Users\n    \"Roles\": [],      // zero or more Roles\n    \"Workspaces\": [], // zero or more Workspaces\n    \"Acls\": [],       // zero or more ACLs\n    \"OutputChain\": [{}, {}]  // Stack of previous actions ActionOutput objects\n  },\n  //\n  // Shortcuts to Input lists, for shortening templates\n  //\n  \"Node\":       {},   // A copy of .Input.Nodes[0] if it exists\n  \"Workspace\":  {},   // A copy of .Input.Workspace[0] if it exists\n  \"User\":       {},   // A copy of .Input.User[0] if it exists\n  \"Role\":       {},   // A copy of .Input.Roles[0] if it exists\n  \"Acl\":        {},   // A copy of .Input.Acls[0] if it exists\n  \"LastOutput\": {},   // A copy of the last entry of .Input.OutputChain\n  //\n  // Global Environment values\n  //\n  \"Env\": {\n    \"Date\":     \"Result of time.Now().Format('01-02-2006')\",// date in string format\n    \"Time\":     \"Result of time.Now().Format('15:04')\",     // time in string format\n    \"Now\":      \"Result of time.Now()\",                     // golang date format \n    \"JobUUID\":  \"job-unique-identifier\",\n    \"TaskUUID\": \"running-task-unique-identifier\",\n  },\n  \"ContextUser\": {},       // Logged user currently running the job\n  \"ContextWorkspace\": {}  // If applicable, current workspace detected in context \n}\n</code></pre>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-golang-templates/#example-compute-a-target-location","title":"Example: compute a target location","text":"<p>With that in mind, let's assume we have an Action that takes a node as input (for example on creation), and whose task is to copy it somewhere inside \"target\" (action parameter). We want that \"target\" to be computed as follows: inside folder <code>TargetFolder</code> (defined in job-level parameters), renamed with the current user login and the date/time. </p> <p>The action \"target\" parameter could use the following value:  <pre><code>{{.JobParameters.TargetFolder}}/{{.ContextUser.Login}}-{{.Env.Date}}-{{.Env.Time}}\n</code></pre></p> <p>Going further, we could decide that only files created inside folder <code>SourceFolder</code> are to be processed, other should be ignored. We can put a Filter on the \"Create Node\" trigger to filter all nodes by \"Path Prefix\", with value <code>{{.JobParameters.SourceFolder}}</code>.</p> <p>And so on.</p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/templates-functions/","title":"Templates Functions","text":""},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/templates-functions/#the-need","title":"The need","text":"<p>In the first section example, we renamed an arbitrary file to <code>TargetFolder/userLogin-date</code>, wich is probably not very useful if we also want to keep the original filename. How can we extract the file \"basename\" from the input? That's where Template Functions are useful.</p> <p>Instead of <pre><code>{{.JobParameters.TargetFolder}}/{{.ContextUser.Login}}-{{.Env.Date}}-{{.Env.Time}}\n</code></pre> Let's use the following value: <pre><code>{{.JobParameters.TargetFolder}}/{{.ContextUser.Login}}-{{.Env.Date}}-{{.Node.Path | base}}\n</code></pre> As you can see, we are transforming the <code>.Node.Path</code> value with a <code>base</code> function, that is defined to extract basename from a path (i.e. <code>/path/to/file.ext</code> =&gt; <code>file.ext</code>).</p> <p>Functions provide scripting capabilities inside Golang Templates to dynamically modify inputs. Any evaluated data can be \"piped\" through transforming functions.</p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/templates-functions/#calling-template-functions","title":"Calling template functions","text":"<p>Function can be called in two manners: </p> <ul> <li>If a function takes more argument <code>f(param1,param2) = y</code>, start the template instruction with function name followed by its arguments <code>{{funcName \"param1\" \"param2\"}}</code> </li> <li>If a function is as simple as <code>f(x) = y</code>, use \"pipe\" to transform data with <code>{{.DataValue | funcName}}</code>. This is would in fact be equivalent to <code>{{funcName .DataValue}}</code></li> </ul> <p>Functions can be successively piped: <code>{{.DataValue | f1 | f2}}</code> is equivalent to calling <code>f2(f1(x))</code> </p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/templates-functions/#more-examples","title":"More examples","text":"<p>Replace word occurence then remove spaces from filename: <pre><code>{{.Node.Path | replace \"search word\" \"replaced word\" | nospace}}\n</code></pre> Display file size in a human readable format (e.g. 56MB): <pre><code>{{.Node.Size | toString | humanBytes }}\n</code></pre></p> <p>Compute a timestamp representing \"yesterday at the same time\": <pre><code>{{now | date_modify \"-24h\" | asStamp}}\n</code></pre></p> <p>Extract info from data with <code>gval</code> \"jsonpath\" feature: <pre><code>{{.Node | toJsonMap | gval \"$[0].Path\"}}\n</code></pre></p> <p>Using <code>gval</code> to compute a percentage and compare it to a threshold value. Here the LastOutput contains a json struct with storage statistics: <pre><code>{{gval \"$[0].Stats.Free / $[0].Stats.Total * 100 &gt; $[1]\" .LastOutput.JsonAsValue.Map .JobParameters.Threshold}}\n</code></pre></p> <p>The exhaustive list of available functions is available here.</p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/templates-functions/#advanced-scripting-with-anko","title":"Advanced scripting with Anko","text":"<p>When Golang templating is not enough, you might want to write complex scripts to parse specific values, create ACLs or other things like that. Anko Script action provides a pseudo-go language to perform such advanced data transformation. </p> <p>Detailed documentation is not yet available for this scripting language, please contact us if you need to write your own action!</p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/anko-pseudo-script/","title":"Anko Pseudo-Script","text":"<p>Although Golang templates are very powerful and it should be the preferred way to go when you need to manipulate data, sometimes you need more advanced scripting capabilities.</p> <p>Anko is a pseudo-go language that is able to manipulate all sorts of objects. It is better to be familiar with the Go language, although not necessary if you just need to write a simple script.</p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/anko-pseudo-script/#basic-syntax","title":"Basic Syntax","text":"<p>Syntax is a simplified version of Golang (we can highlight it with Javascript grammar, although it is not). Below is an example as provided by Anko Repository. Refer to this repository for mors examples.</p> <pre><code>// declare variables\nx = 1\ny = x + 1\n\n// print using outside the script defined println function\nprintln(x + y) // 3\n\n// if else statement\nif x &lt; 1 || y &lt; 1 {\n    println(x)\n} else if x &lt; 1 &amp;&amp; y &lt; 1 {\n    println(y)\n} else {\n    println(x + y)\n}\n\n// slice\na = []interface{1, 2, 3}\nprintln(a) // [1 2 3]\nprintln(a[0]) // 1\n\n// map\na = map[interface]interface{\"x\": 1}\nprintln(a) // map[x:1]\na.b = 2\na[\"c\"] = 3\nprintln(a[\"b\"]) // 2\nprintln(a.c) // 3\n\n// struct\na = make(struct {\n    A int64,\n    B float64\n})\na.A = 4\na.B = 5.5\nprintln(a.A) // 4\nprintln(a.B) // 5.5\n\n// function\nfunc a (x) {\n    println(x + 1)\n}\na(5) // 6\n</code></pre>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/anko-pseudo-script/#input-output","title":"Input / Output","text":"<p>To add scripting, simply add an \"Anko\" action to your Flow. As any other actions, it will receive an Input and is expected to return with an Output in the same <code>ActionMessage</code> format. This is simply done by injecting the <code>input</code> variable in the script, and expecting you to declare an <code>output</code> variable. Generally, you will just have to clone the input:  <pre><code>output = input.Clone()\n</code></pre></p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/anko-pseudo-script/#importing-libraries","title":"Importing Libraries","text":"<p>Most Golang standard libraries are available for importing, using a <code>lib = import(\"lib\")</code> syntax. Cells Flows provides additional libraries that can be imported, as well a \"Services\" that are directly available in the scope of the script. See some examples below. </p> <p>Hello World:  <pre><code>fmt = import(\"fmt\")\nfmt.Println(\"Hello World\")\n</code></pre></p> <p>Standard Libs:  <pre><code>path = import(\"path\")\nstrings = import(\"strings\")\n\ndir,base = path.Split(input.Nodes[0].Path) \ndirs = strings.Split(dir, \"/\")\n</code></pre></p> <p>Logger Service (no need to import): <pre><code>Logger.Info(\"This will appear in the task activities\"\n</code></pre></p> <p>Cells-defined libraries and enriching Output:  <pre><code>fmt=import(\"fmt\")\njobs=import(\"jobs\")\n\noutput = input.Clone()\nif input.Nodes[0].MetaStore[\"pydio:s3-bucket-tag-PydioCustom\"] != \"\" {\n    fmt.Println(\"Got Meta\", input.Nodes[0].MetaStore)\n    msg = make(jobs.ActionOutput)\n    msg.Success = true\n    msg.StringBody = input.Nodes[0].MetaStore[\"pydio:s3-bucket-tag-PydioCustom\"];\n    output.AppendOutput(&amp;msg)\n}\n</code></pre></p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/anko-pseudo-script/#using-playground","title":"Using Playground","text":"<p>As the syntax is not straight-forward and cannot be validated directly, the Playground (see next section) provides an Anko mode to at least validate the syntax before saving.</p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-javascript/","title":"Using Javascript","text":"<p>The powerful Anko scripting language provides access to internals and golang standard libraries for interacting with Cells engine, but has a complex and non-intuitive syntax.</p> <p>The Javascript action provides a simpler way to write your own piece of script using the Javascript language. It is interpreted by a simple EcmaScript5 engine, and is more suited to manipulate structured data you may have loaded from a file or an external API. </p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-javascript/#usage","title":"Usage","text":"<p>The environment where the script will be executed is fed with the following variables : </p> <p>Inputs: </p> <ul> <li>JsonBody: if action receives a LastOutput with JsonBody, this is decoded from JSON and passed as an interface.</li> <li>Vars: contents of the stacked variables passed along the previous actions</li> <li>Params: locally defined parameters (in the action form)</li> </ul> <p>Output: </p> <ul> <li>Output: undefined, this is your responsibility to assign something to this variable, as it will be evaluated after the process, and assigned to either JsonBody or a Variable depending on the action setup.</li> </ul>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/using-javascript/#simple-example","title":"Simple Example","text":"<pre><code>// Retrieve data from incoming JsonBody (we know it's an object containing a list of results), do some processing, and pass along to next action\n\nvar rows = JsonBody.Rows.map(function(row) =&gt; {\n    // Do something on each row!\n    //\n\n    return modifiedRow\n})\n\n// Assign to \"Output\" javascript global variable (fixed name) so that it is extracted \n// after the processing and passed to the next action.\nOutput = rows;\n</code></pre>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/live-playground/","title":"Live Playground","text":"<p>Although extremely powerful, using templates and remembering all functions can be complicated.</p> <p>Cells Flows provides a unique Live Playground feature allowing you to test your templates before using them in jobs. In Edit Mode, click on the \"Playground\" icon at the bottom of the screen: </p> <p></p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/live-playground/#playground-presentation","title":"Playground presentation","text":"<p>You are presented with a \"playground\" where code is dynamically run. There are 3 zones: </p> <ul> <li>Template Code: this is where you type the Golang Template you want to test.</li> <li>Input Message: this JSON is a default value for the {{.Input}} that could be received by any action. Default value displayed here is generally sufficient for basic testing, but you can edit it as well.</li> <li>Output Value: computed on the fly, this is the result of the evaluation of your template with the input JSON passed as data structure.</li> </ul> <p></p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/live-playground/#inline-functions-documentation","title":"Inline functions documentation","text":"<p>The playground also provides a nice way to lookup for a certain function and its associated documentation. Use the \"Search functions docs\" field to find a function, and display its documentation directly inline.</p> <p>Looking for \"to\":</p> <p></p> <p>Selecting \"toJsonMap\" function: </p> <p></p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/live-playground/#testing-anko-script","title":"Testing Anko Script","text":"<p>Using Anko mixed syntax is not easy, and often requires some test-and-learn cycles to write the correct anko script. Switching the Playground to Anko mode allows you to compile and evaluate a script and detect errors early.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/scripting-cheatsheet/","title":"Scripting Cheatsheet","text":""},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/scripting-cheatsheet/#go-template","title":"Go Template","text":"value description {{.Input}} Access the entire input Object containing everyhing below {{.Node}} input.Nodes[0] Access the first Node Object {{.User}} input.Users[0] Access the first User Object {{.Workspace}} input.Workspace[0] Access the first Workspace Object {{.Role}} input.Roles[0] Access the first Role Object {{.LastOutput}} input.GetLastOutput() Access the LastOutput Object {{.Env}} see example 4) below Custom object that gives access to, \"time\", \"date\"... {{.Context.User}} Access the context user object (originating the current request or flow). It can differ from the .Input.User"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/scripting-cheatsheet/#commonly-used-template-functions","title":"Commonly used template functions","text":"value function example base calls path.Base() base \"/folderA/subfolderB/image.jpg\" = \"image.jpg\" dir calls path.Dir() dir \"/folderA/subfolderB/image.jpg\" = \"/folderA/subfolderB\" ext call path.Ext() ext \"/folderA/subfolderB/image.jpg\" = \"jpg\" toJson json.Marshal() {{toJson .Node}} = a json representation of the TreeNodeObject"},{"location":"cellsflows/cells-flows-manual/scripting-capabilities/scripting-cheatsheet/#examples-with-templates","title":"Examples with templates","text":"<p>Lets assume that we have a Read Node event on a node in \"common-files\" (pydiods1/images/image.jpg)</p> <pre><code>{\n  \"Uuid\": \"124554-5154a-a6e54-az65e4a1e2\",\n    \"Path\": \"pydiods1/images/image.jpg\",\n  \"Type\": \"LEAF\",\n  \"Size\": \"1264878\"\n  ....\n  ....\n}\n</code></pre> <pre><code>{{.Node.Path}} -&gt; \"pydiods1/images/image.jpg\" .will be replaced with the path\n</code></pre> <pre><code>{{toJson .Node}} -&gt; will change the object into a json string (see below)\n</code></pre> <pre><code>{{ext .Node.Path}} -&gt; \"jpg\"\n</code></pre> <pre><code>{{.Env.Date}} -&gt; \"01-02-2020\"\n{{.Env.Time}} -&gt; \"23:42\"\n{{.Env.Now}}  -&gt; \"2009-11-10 23:00:00 +0000 UTC m=+0.000000001\"\n{{.Env.JobUUID}} -&gt; \"224454-32a1z21-2s13qdd-21ad21ad2a\"\n{{.Env.TaskUUID}} -&gt; \"224454-32a1z21-2s13qdd-21ad21ad2a\"\n</code></pre>"},{"location":"cellsflows/cells-flows-manual/managing-flows/index/","title":"Managing Flows","text":"<p>This section describes how-to manage your Cells Flows jobs.</p> <ul> <li>Creating, renaming and deleting</li> <li>Import/Export JSON File</li> <li>Templates and Presets</li> <li>Flows Versioning</li> </ul>"},{"location":"cellsflows/cells-flows-manual/managing-flows/creating-renaming-and-deleting/","title":"Creating, renaming and deleting","text":""},{"location":"cellsflows/cells-flows-manual/managing-flows/creating-renaming-and-deleting/#creating-a-job","title":"Creating a Job","text":"<p>There are various methods to create a job, accessible via the \"+JOB\" button</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/creating-renaming-and-deleting/#using-preset-jobs","title":"Using Preset Jobs","text":"<p>Pre-defined jobs are carefully crafted by Pydio Team to be easy to use, with predefined parameters and nice labelling of actions, queries and filters to make the diagram as simple as possible.</p> <p>The most common approach to create your own job is to start from a Preset and modify it to suit your need.</p> <p>You can see the whole list of Preset Flows here.</p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/creating-renaming-and-deleting/#creating-an-empty-job","title":"Creating an empty Job","text":"<p>If you want to create job from scratch, you will be guided through the steps required to build the most basically functional job:</p> <ul> <li>Set up a label for the job</li> <li>Choose a trigger type (manual, scheduled, event-based)</li> <li>Choose a first-step action</li> </ul>"},{"location":"cellsflows/cells-flows-manual/managing-flows/creating-renaming-and-deleting/#creating-job-from-json","title":"Creating Job from JSON","text":"<p>Using the JSON representation of a job can be a handy way to import a job from another instance, or for a job provided to you by our support team. Just paste the JSON and hit Save to continue to job edition.</p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/creating-renaming-and-deleting/#renaming-an-existing-job","title":"Renaming an existing Job","text":"<p>To rename a job, select it in the list and switch the workflow to Edit mode using the Pencil button.</p> <p></p> <p>Then edit the label and hit Save.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/creating-renaming-and-deleting/#deleting-a-job","title":"Deleting a Job","text":"<p>Jobs can be simply deleted with the DELETE button.</p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/import-export-json-file/","title":"Import/Export JSON File","text":"<p>Starting at version 4.2.6, Flows can be easily exported as JSON files for proper backup and re-use. These files can then be re-imported on a different installation.</p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/import-export-json-file/#exporting-flow-as-json-file","title":"Exporting Flow as JSON File","text":"<p>In Edit Mode, you can display the current JSON representation of your job.</p> <p></p> <p>You can directly edit or copy the JSON here. Warning, modifying here is a dangerous operation, make sure to create a revision of your Flow before ! </p> <p>Using the \"Export To File\" button, you can directly save this JSON to a file on your desktop.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/import-export-json-file/#importing-a-json-file","title":"Importing a JSON File","text":"<p>Saved JSON flows can be directly imported by using the \"Import JSON\" button in the Flow creation dialog (or by simply drag-n-dropping the JSON file on this button)</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/templates-and-presets/","title":"Templates and Presets","text":"<p>Jobs, actions, queries and filters can be saved as \"Templates\" for easily duplicating or re-using them.</p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/templates-and-presets/#job-templates","title":"Job Templates","text":"<p>As explained in the Create section, one simple way to create a new job is to use a preset template that is shipped with Cells Flows. These jobs are carefully crafted by Pydio Team for ease of use and clarity of the flow chart. The full list is available in the Preset Flows section.</p> <p>You can feed this template list with your own jobs, by simply selecting the \"Save Job as Template\" option in the bottom-right buttons of the job editor (you must be in Edit mode). Pick a label, an icon and a description to save this template.</p> <p></p> <p>Templates, including preset ones, can be deleted simply in the \"Create Job\" picker.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/templates-and-presets/#actions-queries-filters-templates","title":"Actions, Queries, Filters templates","text":"<p>In a similar way, you can save your own templates for Actions, Queries and Filters. They are stored with all parameters set, making it super easy to reuse in other parts of a job or in another job.</p> <p></p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/flows-versioning/","title":"Flows Versioning","text":"<p>Flows modifications can be destructive and often you want to restore a previous version of a Flow. This section describes Flows versioning feature.</p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/flows-versioning/#restoring-an-auto-saved-version","title":"Restoring an auto-saved version","text":"<p>Each time you save a Flow, the previous version is copied as a backup, in case you inadvertently broke something. You can list and restore available version by clicking on the bottom-right button. </p> <p></p> <p>Select the version you wish to restore</p>"},{"location":"cellsflows/cells-flows-manual/managing-flows/flows-versioning/#tagging-your-own-versions","title":"Tagging your own versions","text":"<p>Cells Flows only \"auto-save\" one version by default to avoid storing too much data and having to deploy complex versioning strategies. Once you have a satisfactory Flow, you can \"Tag\" it and create a version that will be kept. That way, you can make sure that you will be able to restore it anytime in the future.</p> <p>The versions dialogs shows the list of all versions.</p> <p></p>"},{"location":"cellsflows/preset-flows/index/","title":"Preset Flows","text":"<p>Cells Flows ships useful preset jobs for your convenience. They are generally a good start to create your own custom jobs.</p> <ul> <li>Intelligent File Management</li> <li>Efficient System Maintenance</li> <li>Automated Identity and Access Management</li> <li>Data Analysis, Insights and Reporting</li> <li>Workflow Automation</li> <li>Data Formatting and Conversion</li> </ul>"},{"location":"cellsflows/preset-flows/intelligent-file-management/index/","title":"Intelligent File Management","text":"<p>Automate repetitive and time-consuming file management tasks, from backups to metadata to archiving.</p> <ul> <li>Detect metadata change</li> <li>Move Files Automatically</li> <li>Personal Files Preset</li> </ul>"},{"location":"cellsflows/preset-flows/intelligent-file-management/detect-metadata-change/","title":"Detect metadata change","text":"<p>Monitor a specific Tag on files and send an email.</p> <p></p> <p>Used in conjunction with security policies and other jobs that can modify metadata, this flow is a good start to set up validation workflow scenarios:</p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/detect-metadata-change/#how-it-works","title":"How It Works","text":"<ul> <li>A specific user has the right to see all new files and tag them as \"valid\"</li> <li>When the tag is modified, email administrator to inform that a new file is valid</li> <li>Set up a security policy that hide files that do not have this specific tag value</li> </ul>"},{"location":"cellsflows/preset-flows/intelligent-file-management/detect-metadata-change/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description TagValue text signed false Lookup for a specific value in the Tags metadata. SendEmailTo text admin false User login to send an email to."},{"location":"cellsflows/preset-flows/intelligent-file-management/detect-metadata-change/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/detect-metadata-change/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Detect metadata change\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Monitor a specific Tag on files and send an email\",\n    \"Icon\": \"mdi mdi-tag\",\n    \"TplCategory\": \"file-management\",\n    \"Usage\": \"Used in conjunction with security policies and other jobs that can modify metadata, this flow is a good start to set up validation workflow scenarios:\\n\\n### How It Works\\n\\n - A specific user has the right to see all new files and tag them as \\\"valid\\\"\\n - When the tag is modified, email administrator to inform that a new file is valid\\n - Set up a security policy that hide files that do not have this specific tag value\\n\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:6\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.sendmail\",\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"FreeString\\\"}\",\n        \"message\": \"Hello, \\n\\nTags on {{if eq .Node.Type 1}}file{{else}}folder{{end}} \\\"{{.Node.Path}}\\\" has been changed to \\\"{{.JobParameters.TagValue}}\\\" by  {{.ContextUser.Login}}.\",\n        \"subject\": \"Metadata changed on {{.Node.Path | base}}\",\n        \"to-mail\": \"\",\n        \"to-user\": \"{{.JobParameters.SendEmailTo}}\"\n      }\n    }\n  ],\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/tree.Query\",\n          \"value\": \"ShorTWV0YS51c2VybWV0YS10YWdzOnNpZ25lZA==\"\n        }\n      ]\n    },\n    \"Label\": \"Check value for Tags\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"TagValue\",\n      \"Description\": \"Lookup for a specific value in the Tags metadata.\",\n      \"Value\": \"signed\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"SendEmailTo\",\n      \"Description\": \"User login to send an email to.\",\n      \"Value\": \"admin\",\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/intelligent-file-management/move-files-automatically/","title":"Move Files Automatically","text":"<p>When uploaded in A/, automatically move file to B/.</p> <p></p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/move-files-automatically/#usecase","title":"Usecase","text":"<p>This template implements a simple workflow: </p> <ul> <li>When any file is uploaded inside a \"source\" folder, </li> <li>Automatically move it to a \"target\" folder.</li> </ul> <p>The \"Source\" and \"Target\" parameters are mandatory to enable the Flow.</p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/move-files-automatically/#how-it-works","title":"How It Works","text":"<p>This show-cases various aspects of Cells Flows: </p> <ul> <li>Listening to files creation with an \"Event\"-based trigger</li> <li>Filtering these events based on various conditions (inside source folder only, files only)</li> <li>Use a piece of script to compute target destination</li> </ul>"},{"location":"cellsflows/preset-flows/intelligent-file-management/move-files-automatically/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description SourceFolder text pydiods1/upload/ false Source folder to watch for new files uploaded. TargetFolder text pydiods1/download false Target folder where to move uploaded files."},{"location":"cellsflows/preset-flows/intelligent-file-management/move-files-automatically/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/move-files-automatically/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Move Files Automatically\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"When uploaded in A/, automatically move file to B/\",\n    \"Icon\": \"mdi mdi-folder-move\",\n    \"TplCategory\": \"file-management\",\n    \"Usage\": \"### Usecase \\n\\nThis template implements a simple workflow: \\n\\n * **When any file is uploaded** inside a \\\"source\\\" folder, \\n * Automatically **move it** to a \\\"target\\\" folder.\\n   \\nThe \\\"Source\\\" and \\\"Target\\\" parameters are mandatory to enable the Flow.\\n   \\n### How It Works\\n\\nThis show-cases various aspects of Cells Flows: \\n\\n * Listening to files creation with an \\\"Event\\\"-based trigger\\n * Filtering these events based on various conditions (inside source folder only, files only)\\n * Use a piece of script to compute target destination\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:0\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.script.anko\",\n      \"Label\": \"Compute New Target\",\n      \"NodesFilter\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"OgYucHlkaW9wAQ==\"\n            }\n          ]\n        },\n        \"Label\": \"Exclude hidden files\"\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"FileName\\\"}\",\n        \"paramName\": \"Basename\",\n        \"paramName_1\": \"TargetFolder\",\n        \"paramValue\": \"{{.Node.Path | base}}\",\n        \"paramValue_1\": \"{{.JobParameters.TargetFolder}}\",\n        \"script\": \"strings = import(\\\"strings\\\")\\njobs = import(\\\"jobs\\\")\\n\\noutput = input\\ntargetPath = Params[\\\"TargetFolder\\\"] + \\\"/\\\" + Params[\\\"Basename\\\"]\\noutput.Nodes[0].MetaStore[\\\"MoveTarget\\\"] = targetPath\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.copymove\",\n          \"Label\": \"Move to Destination\",\n          \"Parameters\": {\n            \"create\": \"false\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"Type\\\"}\",\n            \"recursive\": \"false\",\n            \"target\": \"{{.Node.MetaStore.MoveTarget}}\",\n            \"targetParent\": \"false\",\n            \"type\": \"move\"\n          }\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 20,\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/tree.Query\",\n          \"value\": \"Ch97ey5Kb2JQYXJhbWV0ZXJzLlNvdXJjZUZvbGRlcn19\"\n        },\n        {\n          \"type_url\": \"type.googleapis.com/tree.Query\",\n          \"value\": \"MAE=\"\n        }\n      ],\n      \"Operation\": 1\n    },\n    \"Label\": \"Watch SourceFolder\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"SourceFolder\",\n      \"Description\": \"Source folder to watch for new files uploaded.\",\n      \"Value\": \"pydiods1/upload/\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"TargetFolder\",\n      \"Description\": \"Target folder where to move uploaded files.\",\n      \"Value\": \"pydiods1/download\",\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/intelligent-file-management/personal-files-preset/","title":"Personal Files Preset","text":"<p>Fill personal files with data from a template folder.</p> <p></p> <p>This flow shows automatically provisions the content of every user's Personal Files folder at their first connection. This can be handy for on-boarding, to provide e.g. a preset layout of folders, or a \"README\" file, or a SmartForm for each users.</p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/personal-files-preset/#how-it-works","title":"How It Works","text":"<p>The flow listens to the \"Bind User\" event and uses a custom role attached to the user to decide wether it has already run or not. Then it simply copies the content of a source folder inside the user Personal Files.</p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/personal-files-preset/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description TemplateFolder text pydiods1/template true Path to a template folder to be replicated for each user. AssignRoleUuid text custom-role-uuid true Role uuid for detecting first connection (make sure to create the role first)."},{"location":"cellsflows/preset-flows/intelligent-file-management/personal-files-preset/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/intelligent-file-management/personal-files-preset/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Personal Files Preset\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Fill personal files with data from a template folder\",\n    \"Icon\": \"mdi mdi-folder-account\",\n    \"TplCategory\": \"file-management\",\n    \"Usage\": \"This flow shows automatically provisions the content of every user's Personal Files folder at their first connection. This\\ncan be handy for on-boarding, to provide e.g. a preset layout of folders, or a \\\"README\\\" file, or a SmartForm for each users.\\n\\n### How It Works\\n\\nThe flow listens to the \\\"Bind User\\\" event and uses a custom role attached to the user to decide wether it has already run or not. Then it simply copies the content of a source folder inside the user Personal Files.\\n\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"IDM_CHANGE:USER:4\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.script.anko\",\n      \"Label\": \"Assign Role\",\n      \"IdmSelector\": {\n        \"Type\": 1,\n        \"All\": true,\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.RoleSingleQuery\",\n              \"value\": \"CiF7ey5Kb2JQYXJhbWV0ZXJzLkFzc2lnblJvbGVVdWlkfX0=\"\n            }\n          ]\n        },\n        \"Collect\": true,\n        \"Label\": \"Load Role\"\n      },\n      \"Parameters\": {\n        \"script\": \"idm = import(\\\"idm\\\")\\nfmt = import(\\\"fmt\\\")\\n\\noutput = input\\n\\n\\nuser = input.Users[0]\\nrole = input.Roles[0]\\n\\nuser.Roles[len(user.Roles)] = role\\n\\noutput.Users = [user]\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.store\",\n          \"Label\": \"Save User\",\n          \"Parameters\": {\n            \"fieldname/@value\": \"HasRole\",\n            \"objectTypes\": \"User\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.tree.copymove\",\n              \"Label\": \"Copy Templates\",\n              \"NodesSelector\": {\n                \"All\": true,\n                \"Query\": {\n                  \"SubQueries\": [\n                    {\n                      \"type_url\": \"type.googleapis.com/tree.Query\",\n                      \"value\": \"aiF7ey5Kb2JQYXJhbWV0ZXJzLlRlbXBsYXRlRm9sZGVyfX0=\"\n                    }\n                  ],\n                  \"Operation\": 1\n                },\n                \"Collect\": true,\n                \"Label\": \"Load Template Files\"\n              },\n              \"Parameters\": {\n                \"create\": \"false\",\n                \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n                \"recursive\": \"true\",\n                \"target\": \"personal/{{.User.Login}}\",\n                \"targetParent\": \"true\",\n                \"type\": \"copy\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.cmd.sendmail\",\n      \"Label\": \"Notify Admin\",\n      \"Bypass\": true,\n      \"Parameters\": {\n        \"fieldname/@value\": \"Paths\",\n        \"message\": \"User {{.User.Login}} connected for the first time!\",\n        \"subject\": \"User {{.User.Login}} connected for the first time\",\n        \"to-mail\": \"charles.dujeu@gmail.com\"\n      }\n    }\n  ],\n  \"IdmFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n          \"value\": \"QiF7ey5Kb2JQYXJhbWV0ZXJzLkFzc2lnblJvbGVVdWlkfX1QAQ==\"\n        }\n      ],\n      \"Operation\": 1\n    },\n    \"Label\": \"User does not have role\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"TemplateFolder\",\n      \"Description\": \"Path to a template folder to be replicated for each user.\",\n      \"Value\": \"pydiods1/template\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"AssignRoleUuid\",\n      \"Description\": \"Role uuid for detecting first connection (make sure to create the role first).\",\n      \"Value\": \"custom-role-uuid\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/index/","title":"Efficient System Maintenance","text":"<p>Reduce the never-ending pinchlist of vital but tedious and time-consuming tasks.</p> <ul> <li>Backup Personal Files</li> <li>Capture Snapshots</li> <li>Check Software Updates</li> <li>Daily Snapshots (Flat)</li> <li>Disable Links Older...</li> <li>Empty All Recycles</li> <li>Purge Activities</li> <li>Purge Files Activities</li> <li>Purge Users Notifications</li> <li>Truncate Logs</li> <li>Unlock Public Links</li> </ul>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/backup-personal-files/","title":"Backup Personal Files","text":"<p>Create a compressed archive for each personal files for all users.</p> <p></p> <p>This flow can be useful for automatic backups, by pointing the final archive generation to e.g. an external S3 encrypted datasource.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/backup-personal-files/#how-it-works","title":"How It Works","text":"<ul> <li>Combine various criteria to list all \"internal\" users logins</li> <li>Compute their personal folder</li> <li>Pass this location as input to the \"Compress\" action. </li> </ul> <p>Last action is parametrized to select the archive format, and its target location. </p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/backup-personal-files/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description ArchivePrefix text daily- false Used to build archive name. ArchivePath text /pydiods1/backups true Path where to store all archives. Format select, possible values: Zip (zip), Tar.gz (tar.gz) zip true Archive format"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/backup-personal-files/#trigger-type","title":"Trigger Type","text":"<p>Scheduled</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/backup-personal-files/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Backup Personal Files\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Create a compressed archive for each personal files for all users\",\n    \"Icon\": \"mdi mdi-archive\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"This flow can be useful for automatic backups, by pointing the final archive generation to e.g. an external S3 encrypted datasource.\\n\\n### How It Works\\n\\n * Combine various criteria to list all \\\"internal\\\" users logins\\n * Compute their personal folder\\n * Pass this location as input to the \\\"Compress\\\" action. \\n \\n Last action is parametrized to select the archive format, and its target location. \"\n  },\n  \"Schedule\": {\n    \"Iso8601Schedule\": \"R/2012-01-01T00:00:00.828696-09:00/PT24H\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"User Personal\",\n      \"IdmSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/service.Query\",\n              \"value\": \"Ci0KJ3R5cGUuZ29vZ2xlYXBpcy5jb20vaWRtLlVzZXJTaW5nbGVRdWVyeRICSAEQAQ==\"\n            },\n            {\n              \"type_url\": \"type.googleapis.com/service.Query\",\n              \"value\": \"CkYKJ3R5cGUuZ29vZ2xlYXBpcy5jb20vaWRtLlVzZXJTaW5nbGVRdWVyeRIbCg9weWRpby5hbm9uLnVzZXJQAWoGc2hhcmVkEAE=\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"List all internal users\"\n      },\n      \"Parameters\": {\n        \"internalLogger\": \"false\",\n        \"message\": \"User {{.User.Login}}\",\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.archive.compress\",\n          \"Label\": \"Zip user data\",\n          \"Description\": \"Create an archive for user data\",\n          \"NodesSelector\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"ahhwZXJzb25hbC97ey5Vc2VyLkxvZ2lufX0=\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Collect\": true,\n            \"Label\": \"Find personal folder\"\n          },\n          \"Parameters\": {\n            \"format\": \"{{.JobParameters.Format}}\",\n            \"target\": \"{{.JobParameters.ArchivePath}}/{{.JobParameters.ArchivePrefix}}{{.User.Login}}-{{now | date \\\"2006-01-02\\\"}}.{{.JobParameters.Format}}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 10,\n  \"Parameters\": [\n    {\n      \"Name\": \"ArchivePrefix\",\n      \"Description\": \"Used to build archive name.\",\n      \"Value\": \"daily-\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"ArchivePath\",\n      \"Description\": \"Path where to store all archives.\",\n      \"Value\": \"/pydiods1/backups\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"Format\",\n      \"Description\": \"Archive format\",\n      \"Value\": \"zip\",\n      \"Mandatory\": true,\n      \"Type\": \"select\",\n      \"JsonChoices\": \"{\\\"zip\\\":\\\"Zip\\\",\\\"tar.gz\\\":\\\"Tar.gz\\\"}\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/disable-links-older/","title":"Disable Links Older...","text":"<p>Disable links that are older than a given period of time.</p> <p></p> <p>This Flow looks for all public links that were not updated since a given period of time, and delete them. It can be useful to make sure some public links are not left out in the wild.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/disable-links-older/#how-it-works","title":"How It Works","text":"<p>Worth noting here is the usage of the workspace \"Scope\":   - \"ADMIN\" Scope: normal workspaces created via the Cells Administration Console  - \"ROOM\" Scope: Cells created by users to share data internally  - \"LINK\" Scope: hidden workspaces exposed via public links</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/disable-links-older/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description LastUpdated text &gt;30d true Find links created within a range date. Use for example &gt;30d for links older than 30 days."},{"location":"cellsflows/preset-flows/efficient-system-maintenance/disable-links-older/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/disable-links-older/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Disable Links Older...\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Disable links that are older than a given period of time\",\n    \"Icon\": \"mdi mdi-share-variant\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"This Flow looks for all public links that were not updated since a given period of time, and delete them. It can be useful to make sure some public links are not left out in the wild.\\n\\n### How It Works\\n\\nWorth noting here is the usage of the workspace \\\"Scope\\\": \\n - \\\"ADMIN\\\" Scope: normal workspaces created via the Cells Administration Console\\n - \\\"ROOM\\\" Scope: Cells created by users to share data internally\\n - \\\"LINK\\\" Scope: hidden workspaces exposed via public links\"\n  },\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Select Links\",\n      \"IdmSelector\": {\n        \"Type\": 2,\n        \"All\": true,\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.WorkspaceSingleQuery\",\n              \"value\": \"KAM=\"\n            },\n            {\n              \"type_url\": \"type.googleapis.com/idm.WorkspaceSingleQuery\",\n              \"value\": \"Oh57ey5Kb2JQYXJhbWV0ZXJzLkxhc3RVcGRhdGVkfX0=\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Collect\": true,\n        \"Label\": \"Find Links\"\n      },\n      \"Parameters\": {\n        \"fieldname/@value\": \"FileName\",\n        \"internalLogger\": \"false\",\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.delete\",\n          \"Label\": \"Delete\",\n          \"Bypass\": true,\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"LastUpdated\\\"}\",\n            \"objectTypes\": \"Workspace\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"LastUpdated\",\n      \"Description\": \"Find links created within a range date. Use for example \\u003e30d for links older than 30 days.\",\n      \"Value\": \"\\u003e30d\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/empty-all-recycles/","title":"Empty All Recycles","text":"<p>Clear all workspaces recycle bin folders.</p> <p></p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/empty-all-recycles/#usecase-overview","title":"Usecase Overview","text":"<p>This Flow finds all \"recycle bin\" inside all workspaces, and empty their contents on a regular basis.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/empty-all-recycles/#how-it-works","title":"How It Works","text":"<p>\"Recycle bins\" are created as a sub-folder named \"recycle_bin\" of any folder tagged with the special <code>recycle_root</code> ACL. That way, when deleting any file or folder, Cells seeks for the first \"recycle_root\" in the parents and move the file/folder inside the corresponding Recycle Bin.</p> <p>To find all recycle, this flow :   * Looks up for this <code>recycle_root</code> ACL,   * Loads the corresponding node (ACL refer to nodes via their <code>UUID</code> and we need to reload them to get their <code>Path</code>),   * Compute the recycle path by appending recycle_bin to the path  * Finally calls the \"Delete\" action.</p> <p>Default setup makes it run every day at 3AM, but it can also be ran manually.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/empty-all-recycles/#parameters","title":"Parameters","text":"<p>No parameters defined</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/empty-all-recycles/#trigger-type","title":"Trigger Type","text":"<p>Scheduled</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/empty-all-recycles/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Empty All Recycles\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Clear all workspaces recycle bin folders\",\n    \"Icon\": \"mdi mdi-delete-forever\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"### Usecase Overview\\n\\nThis Flow finds all \\\"recycle bin\\\" inside all workspaces, and empty their contents on a regular basis.\\n\\n### How It Works\\n\\n\\\"Recycle bins\\\" are created as a sub-folder named \\\"recycle_bin\\\" of any folder tagged with the special `recycle_root` ACL.  \\nThat way, when deleting any file or folder, Cells seeks for the first \\\"recycle_root\\\" in the parents and move the file/folder inside the corresponding Recycle Bin.\\n\\nTo find all recycle, this flow : \\n * Looks up for this `recycle_root` ACL, \\n * Loads the corresponding node (ACL refer to nodes via their `UUID` and we need to reload them to get their `Path`), \\n * Compute the recycle path by appending recycle_bin to the path\\n * Finally calls the \\\"Delete\\\" action.\\n\\nDefault setup makes it run every day at 3AM, but it can also be ran manually.\"\n  },\n  \"Schedule\": {\n    \"Iso8601Schedule\": \"R/2020-03-04T02:00:59.471Z/PT24H\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Recycle Root ACLs\",\n      \"IdmSelector\": {\n        \"Type\": 3,\n        \"All\": true,\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.ACLSingleQuery\",\n              \"value\": \"Cg4KDHJlY3ljbGVfcm9vdA==\"\n            }\n          ]\n        },\n        \"Label\": \"Find \\\"recycle_root\\\" ACLs\"\n      },\n      \"Parameters\": {\n        \"fieldname/@value\": \"FileName\",\n        \"internalLogger\": \"false\",\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Recycle Root Folder\",\n          \"NodesSelector\": {\n            \"All\": true,\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"eg97ey5BY2wuTm9kZUlEfX0=\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Collect\": true,\n            \"Label\": \"Find folder for ACL\"\n          },\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"UUIDs\\\"}\",\n            \"internalLogger\": \"false\",\n            \"message\": \"Acl Node: {{.Acl.NodeID}}\",\n            \"taskLogger\": \"true\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.scheduler.log-input\",\n              \"Label\": \"Recycle Bin Folder\",\n              \"NodesSelector\": {\n                \"Query\": {\n                  \"SubQueries\": [\n                    {\n                      \"type_url\": \"type.googleapis.com/tree.Query\",\n                      \"value\": \"OgtyZWN5Y2xlX2Jpbmoae3suTm9kZS5QYXRofX0vcmVjeWNsZV9iaW4=\"\n                    }\n                  ],\n                  \"Operation\": 1\n                },\n                \"Label\": \"Find Recycle Bin\"\n              },\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n                \"internalLogger\": \"false\",\n                \"message\": \"Will delete children of {{.Node.Path}}\",\n                \"taskLogger\": \"true\"\n              },\n              \"ChainedActions\": [\n                {\n                  \"ID\": \"actions.tree.delete\",\n                  \"Label\": \"Clear content\",\n                  \"Parameters\": {\n                    \"childrenOnly\": \"true\",\n                    \"fieldname/@value\": \"FileName\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-activities/","title":"Purge Activities","text":"<p>Generic purge for users/files activities.</p> <p></p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-activities/#purging-activities","title":"Purging Activities","text":"<p>Based on the internal gRPC API of the activity service, this flow is useful for housekeeping and maintaining activity DB size under control. Run regularly, it allows you to prune activities (either files/folders activities displayed in the right-hand panel of the interface or users notifications) on  a regular basis. </p> <p>Purge is based on various rules : </p> <ul> <li>Updated : remove records registered before a given date. It can be combined with KeepAtLeast parameter to still make    sure to keep a given number of rows, even if they were older than the purge dates (avoid empty feeds!).</li> <li>Number of Records to keep : remove records based on a minimum and maximum number of rows.</li> </ul>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-activities/#defragmenting-boltdb","title":"Defragmenting BoltDB","text":"<p>When not MongoDB-enabled, Cells default setup stores activities on-file inside a \"BoltDB\", which is a rapid key/value store. This has the downside that delete rows still eat up memory in the DB (and memory consumed by the application). After purging, it is thus necessary to compact the database. This flow provides the required parameters to do so.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-activities/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description PurgeOn select, possible values: Files/Folders (0), Users (1) 1 false Purge users or files/folders activities. OwnerId text * true Specific user or node ID, or \"*\" to browse all records. BoxName select, possible values: Inbox (inbox), Outbox (outbox) inbox false Either Inbox (notifications received) or Outbox (user activity / file activity). KeepAtLeast integer 1 false Keep at least X records in the box. KeepMax integer 100 false Maximum number of records to be kept. Updated text {{now | date_modify \"-720h\" | unixEpoch}} false Limit to purge records registered before this date. Default value is 30 days ago (24*30 hours) CompactDB boolean true false For Bolt implementation, compact database after purge ClearBackups boolean false false After DB compaction, remove original db, otherwise keep a backup (default)"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-activities/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-activities/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Purge Activities\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Generic purge for users/files activities\",\n    \"Icon\": \"mdi mdi-delete-sweep\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"### Purging Activities\\n\\nBased on the internal gRPC API of the activity service, this flow is useful for housekeeping and maintaining activity DB size under control. Run regularly, it allows you to prune activities (either files/folders activities displayed in the right-hand panel of the interface or users notifications) on  a regular basis. \\n\\nPurge is based on various rules : \\n\\n - **Updated** : remove records registered before a given date. It can be combined with **KeepAtLeast** parameter to still make\\n   sure to keep a given number of rows, even if they were older than the purge dates (avoid empty feeds!).\\n - **Number of Records to keep** : remove records based on a minimum and maximum number of rows.\\n\\n### Defragmenting BoltDB\\n\\nWhen not MongoDB-enabled, Cells default setup stores activities on-file inside a \\\"BoltDB\\\", which is a rapid key/value store. This has the downside that delete rows still eat up memory in the DB (and memory consumed by the application). After purging, it is thus necessary to compact the database. This flow provides the required parameters to do so.\"\n  },\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"Purge Activities\",\n      \"Parameters\": {\n        \"method\": \"activity.ActivityService.PurgeActivities\",\n        \"request\": \"{\\n      \\\"OwnerType\\\": {{.JobParameters.PurgeOn}},\\n      \\\"OwnerID\\\": \\\"{{.JobParameters.OwnerId}}\\\",\\n      \\\"BoxName\\\": \\\"{{.JobParameters.BoxName}}\\\",\\n      \\\"minCount\\\": {{.JobParameters.KeepAtLeast}},\\n      \\\"maxCount\\\": {{.JobParameters.KeepMax}},\\n      \\\"updatedBeforeTimestamp\\\": \\\"{{.JobParameters.Updated}}\\\",\\n      \\\"CompactDB\\\": {{.JobParameters.CompactDB}},\\n      \\\"ClearBackups\\\": {{.JobParameters.ClearBackups}}\\n}\",\n        \"service\": \"pydio.grpc.activity\",\n        \"timeout\": \"6h\"\n      }\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"PurgeOn\",\n      \"Description\": \"Purge users or files/folders activities.\",\n      \"Value\": \"1\",\n      \"Type\": \"select\",\n      \"JsonChoices\": \"{\\\"1\\\":\\\"Users\\\",\\\"0\\\":\\\"Files/Folders\\\"}\"\n    },\n    {\n      \"Name\": \"OwnerId\",\n      \"Description\": \"Specific user or node ID, or \\\"*\\\" to browse all records.\",\n      \"Value\": \"*\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"BoxName\",\n      \"Description\": \"Either Inbox (notifications received) or Outbox (user activity / file activity).\",\n      \"Value\": \"inbox\",\n      \"Type\": \"select\",\n      \"JsonChoices\": \"{\\\"inbox\\\":\\\"Inbox\\\",\\\"outbox\\\":\\\"Outbox\\\"}\"\n    },\n    {\n      \"Name\": \"KeepAtLeast\",\n      \"Description\": \"Keep at least X records in the box.\",\n      \"Value\": \"1\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"KeepMax\",\n      \"Description\": \"Maximum number of records to be kept.\",\n      \"Value\": \"100\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"Updated\",\n      \"Description\": \"Limit to purge records registered before this date. Default value is 30 days ago (24*30 hours)\",\n      \"Value\": \"{{now | date_modify \\\"-720h\\\" | unixEpoch}}\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"CompactDB\",\n      \"Description\": \"For Bolt implementation, compact database after purge\",\n      \"Value\": \"true\",\n      \"Type\": \"boolean\"\n    },\n    {\n      \"Name\": \"ClearBackups\",\n      \"Description\": \"After DB compaction, remove original db, otherwise keep a backup (default)\",\n      \"Value\": \"false\",\n      \"Type\": \"boolean\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-files-activities/","title":"Purge Files Activities","text":"<p>Clear activities on files/folders based on criteria.</p> <p></p> <p>This flow is a preset version of the \"Purge Activities\" generic job, providing out-of-the-box parameters for regular pruning of files and folders activities.  It should be run on a regular basis to avoid growing the on-file activities database to a very large size.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-files-activities/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description KeepAtLeast integer 1 false Keep at least N activities on each file/folder. KeepMax integer 10 false Maximum number of activities to be kept on each file/folder. UpdatedDays integer 30 false Purge activities recorded before this date (today minus NN days). CompactDB boolean true false For Bolt implementation, compact database after purge ClearBackups boolean false false After DB compaction, remove original db, otherwise keep a backup (default)"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-files-activities/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-files-activities/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Purge Files Activities\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Clear activities on files/folders based on criteria\",\n    \"Icon\": \"mdi mdi-playlist-remove\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"This flow is a preset version of the \\\"Purge Activities\\\" generic job, providing out-of-the-box parameters for regular pruning of files and folders activities.  It should be run on a regular basis to avoid growing the on-file activities database to a very large size.\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"Purge Activities\",\n      \"Parameters\": {\n        \"method\": \"activity.ActivityService.PurgeActivities\",\n        \"request\": \"{{$computed := .JobParameters.UpdatedDays|mul 24}}{{$hours := list \\\"-\\\" $computed \\\"h\\\" | join \\\"\\\"}}{\\n      \\\"OwnerType\\\": 0,\\n      \\\"OwnerID\\\": \\\"*\\\",\\n      \\\"BoxName\\\": \\\"outbox\\\",\\n      \\\"minCount\\\": {{.JobParameters.KeepAtLeast}},\\n      \\\"maxCount\\\": {{.JobParameters.KeepMax}},\\n      \\\"updatedBeforeTimestamp\\\": {{now | date_modify $hours | unixEpoch}},\\n     \\\"CompactDB\\\": {{.JobParameters.CompactDB}},\\n      \\\"ClearBackups\\\": {{.JobParameters.ClearBackups}}\\n}\",\n        \"service\": \"pydio.grpc.activity\",\n        \"timeout\": \"6h\"\n      }\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"KeepAtLeast\",\n      \"Description\": \"Keep at least N activities on each file/folder.\",\n      \"Value\": \"1\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"KeepMax\",\n      \"Description\": \"Maximum number of activities to be kept on each file/folder.\",\n      \"Value\": \"10\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"UpdatedDays\",\n      \"Description\": \"Purge activities recorded before this date (today minus NN days).\",\n      \"Value\": \"30\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"CompactDB\",\n      \"Description\": \"For Bolt implementation, compact database after purge\",\n      \"Value\": \"true\",\n      \"Type\": \"boolean\"\n    },\n    {\n      \"Name\": \"ClearBackups\",\n      \"Description\": \"After DB compaction, remove original db, otherwise keep a backup (default)\",\n      \"Value\": \"false\",\n      \"Type\": \"boolean\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-users-notifications/","title":"Purge Users Notifications","text":"<p>Purge users notification feeds based on criteria.</p> <p></p> <p>This flow is a preset version of the \"Purge Activities\" generic job, providing out-of-the-box parameters for regular pruning of users notifications (activities). It should be run on a regular basis to avoid growing the on-file activities database to a very large size.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-users-notifications/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description KeepAtLeast integer 1 false Keep at least N notifications in the user inbox. KeepMax integer 10 false Maximum number of notifications to be kept in each user's inbox. UpdatedDays integer 30 false Purge notifications received before this date (today minus N days). CompactDB boolean true false For Bolt implementation, compact database after purge ClearBackups boolean false false After DB compaction, remove original db, otherwise keep a backup (default)"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-users-notifications/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/purge-users-notifications/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Purge Users Notifications\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Purge users notification feeds based on criteria\",\n    \"Icon\": \"mdi mdi-bell-off\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"This flow is a preset version of the \\\"Purge Activities\\\" generic job, providing out-of-the-box parameters for regular pruning of users notifications (activities). It should be run on a regular basis to avoid growing the on-file activities database to a very large size.\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"Purge Notifications\",\n      \"Parameters\": {\n        \"method\": \"activity.ActivityService.PurgeActivities\",\n        \"request\": \"{{$computed := .JobParameters.UpdatedDays|mul 24}}{{$hours := list \\\"-\\\" $computed \\\"h\\\" | join \\\"\\\"}}{\\n      \\\"OwnerType\\\": 1,\\n      \\\"OwnerID\\\": \\\"*\\\",\\n      \\\"BoxName\\\": \\\"inbox\\\",\\n      \\\"minCount\\\": {{.JobParameters.KeepAtLeast}},\\n      \\\"maxCount\\\": {{.JobParameters.KeepMax}},\\n      \\\"updatedBeforeTimestamp\\\": {{now | date_modify $hours | unixEpoch}},\\n     \\\"CompactDB\\\": {{.JobParameters.CompactDB}},\\n      \\\"ClearBackups\\\": {{.JobParameters.ClearBackups}}\\n}\",\n        \"service\": \"pydio.grpc.activity\",\n        \"timeout\": \"6h\"\n      }\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"KeepAtLeast\",\n      \"Description\": \"Keep at least N notifications in the user inbox.\",\n      \"Value\": \"1\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"KeepMax\",\n      \"Description\": \"Maximum number of notifications to be kept in each user's inbox.\",\n      \"Value\": \"10\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"UpdatedDays\",\n      \"Description\": \"Purge notifications received before this date (today minus N days).\",\n      \"Value\": \"30\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"CompactDB\",\n      \"Description\": \"For Bolt implementation, compact database after purge\",\n      \"Value\": \"true\",\n      \"Type\": \"boolean\"\n    },\n    {\n      \"Name\": \"ClearBackups\",\n      \"Description\": \"After DB compaction, remove original db, otherwise keep a backup (default)\",\n      \"Value\": \"false\",\n      \"Type\": \"boolean\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/truncate-logs/","title":"Truncate Logs","text":"<p>Truncate log databases to a given size every day at 6AM.</p> <p></p> <p>Housekeeping flow to keep logs databases size under control. Can be applied to both pydio.grpc.log (system logs) and pydio.grpc.audit (audit logs) services.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/truncate-logs/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description SystemLogSize integer 50 false (MB) Size of logs to keep. AuditLogSize integer false (MB) Size of audit logs to keep. Leave empty to avoid truncating audit logs."},{"location":"cellsflows/preset-flows/efficient-system-maintenance/truncate-logs/#trigger-type","title":"Trigger Type","text":"<p>Scheduled</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/truncate-logs/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Truncate Logs\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Truncate log databases to a given size every day at 6AM\",\n    \"Icon\": \"mdi mdi-delete-sweep\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"Housekeeping flow to keep logs databases size under control. Can be applied to both pydio.grpc.log (system logs) and pydio.grpc.audit (audit logs) services.\"\n  },\n  \"Custom\": true,\n  \"Schedule\": {\n    \"Iso8601Schedule\": \"R/2020-03-04T05:00:00.471Z/PT24H\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.resync\",\n      \"Label\": \"System Logs\",\n      \"Parameters\": {\n        \"dry-run\": \"false\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"FreeString\\\"}\",\n        \"path\": \"truncate/{{.JobParameters.SystemLogSize | gval \\\"$[0] * 1024 * 1024\\\" | int64}}\",\n        \"service\": \"pydio.grpc.log\"\n      }\n    },\n    {\n      \"ID\": \"actions.cmd.resync\",\n      \"Label\": \"Audit Logs\",\n      \"ActionOutputFilter\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n              \"value\": \"ajp7e2lmIC5Kb2JQYXJhbWV0ZXJzLkF1ZGl0TG9nU2l6ZX19dHJ1ZXt7ZWxzZX19ZmFsc2V7e2VuZH19\"\n            }\n          ]\n        },\n        \"Label\": \"Stop if AuditLogSize is empty\"\n      },\n      \"Parameters\": {\n        \"dry-run\": \"false\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"FreeString\\\"}\",\n        \"path\": \"truncate/{{.JobParameters.AuditLogSize | gval \\\"$[0] * 1024 * 1024\\\" | int64}}\",\n        \"service\": \"pydio.grpc.audit\"\n      }\n    }\n  ],\n  \"MaxConcurrency\": 1,\n  \"Parameters\": [\n    {\n      \"Name\": \"SystemLogSize\",\n      \"Description\": \"(MB) Size of logs to keep.\",\n      \"Value\": \"50\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"AuditLogSize\",\n      \"Description\": \"(MB) Size of audit logs to keep. Leave empty to avoid truncating audit logs.\",\n      \"Type\": \"integer\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/unlock-public-links/","title":"Unlock Public Links","text":"<p>Auto-unlock users of password-protected public links.</p> <p></p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/unlock-public-links/#how-it-works","title":"How It Works","text":"<p>This flow first looks up for \"locked\" and \"hidden\" users, then change their attribute and finally save them in unlocked state. Note that \"Hidden\" users are public users created under the hood to provided a public (but authenticated) access to a public link.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/unlock-public-links/#parameters","title":"Parameters","text":"<p>No parameters defined</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/unlock-public-links/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/unlock-public-links/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Unlock Public Links\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Auto-unlock users of password-protected public links\",\n    \"Icon\": \"mdi mdi-lock-open\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"### How It Works\\n\\nThis flow first looks up for \\\"locked\\\" and \\\"hidden\\\" users, then change their attribute and finally save them in unlocked state.  \\nNote that \\\"Hidden\\\" users are public users created under the hood to provided a public (but authenticated) access to a public link.\"\n  },\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.idm.user-set-attribute\",\n      \"Label\": \"Remove lock\",\n      \"IdmSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/service.Query\",\n              \"value\": \"CjkKJ3R5cGUuZ29vZ2xlYXBpcy5jb20vaWRtLlVzZXJTaW5nbGVRdWVyeRIOKgZoaWRkZW4yBHRydWUQAQ==\"\n            },\n            {\n              \"type_url\": \"type.googleapis.com/service.Query\",\n              \"value\": \"CjwKJ3R5cGUuZ29vZ2xlYXBpcy5jb20vaWRtLlVzZXJTaW5nbGVRdWVyeRIRKgVsb2NrczIIKmxvZ291dCoQAQ==\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"Locked Hidden Users\"\n      },\n      \"Parameters\": {\n        \"attributeName\": \"locks\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"AttributeValue\\\"}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.store\",\n          \"Label\": \"Save user\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"AttributeValue\\\"}\",\n            \"objectTypes\": \"User\"\n          }\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 20\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/capture-snapshots/","title":"Capture Snapshots","text":"<p>Capture snapshots from both s3 and index for debugging purpose.</p> <p></p> <p>This Flow triggers a snapshots capture for a structured datasource, mainly for debugging purposes. Structured datasources are continuously synchronizing a storage (an object storage or a local FS exposed as an S3-compatible storage), and an SQL index. Sometimes, synchronization issues cannot be easily fixed and it can be useful to load the initial representation of both endpoints.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/capture-snapshots/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description DataSourceName text true Name of the datasource to capture. TargetFolder text true Folder where to store the snapshots (must be created). Format select, possible values: JSON (json), BoltDB (bolt) json true Output format for the snapshots."},{"location":"cellsflows/preset-flows/efficient-system-maintenance/capture-snapshots/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/capture-snapshots/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Capture Snapshots\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Capture snapshots from both s3 and index for debugging purpose\",\n    \"Icon\": \"mdi mdi-reload\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"This Flow triggers a snapshots capture for a structured datasource, mainly for debugging purposes. Structured datasources are continuously synchronizing a storage (an object storage or a local FS exposed as an S3-compatible storage), and an SQL index. Sometimes, synchronization issues cannot be easily fixed and it can be useful to load the initial representation of both endpoints.\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.capture\",\n      \"DataSourceSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/object.DataSourceSingleQuery\",\n              \"value\": \"CiF7ey5Kb2JQYXJhbWV0ZXJzLkRhdGFTb3VyY2VOYW1lfX0=\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"format\": \"{{.JobParameters.Format}}\",\n        \"prefix\": \"snapshot-\",\n        \"sides\": \"both\",\n        \"target\": \"{{.JobParameters.TargetFolder}}\"\n      }\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"DataSourceName\",\n      \"Description\": \"Name of the datasource to capture.\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"TargetFolder\",\n      \"Description\": \"Folder where to store the snapshots (must be created).\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"Format\",\n      \"Description\": \"Output format for the snapshots.\",\n      \"Value\": \"json\",\n      \"Mandatory\": true,\n      \"Type\": \"select\",\n      \"JsonChoices\": \"{\\\"json\\\": \\\"JSON\\\", \\\"bolt\\\": \\\"BoltDB\\\"}\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/check-software-updates/","title":"Check Software Updates","text":"<p>Check for software available updates, and send an email notification..</p> <p></p> <p>This Flow checks for updates in background and alerts an administrator if an update is available.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/check-software-updates/#how-it-works","title":"How It Works","text":"<p>The Flow performs a gRPC call to the dedicated update service on a regular basis, and parses the output as JSON. If there is an available update, it will try to notify the user defined by the parameters. To avoid spamming the user, a specific attribute is attached to it as soon as a notification is sent once for a given version.</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/check-software-updates/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description NotifyUser text, possible values: {\"type\":\"string\",\"data\":{\"defaultValue\":\"\",\"mandatory\":true}} false User login who will receive a notification NotifyAttribute text, possible values: {\"type\":\"string\",\"data\":{\"defaultValue\":\"pydio:update-version-notify\",\"mandatory\":true}} pydio:update-version-notify false Attribute used to avoid multiple notifications"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/check-software-updates/#trigger-type","title":"Trigger Type","text":"<p>Scheduled</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/check-software-updates/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Check Software Updates\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Check for software available updates, and send an email notification.\",\n    \"Icon\": \"mdi mdi-update\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"This Flow checks for updates in background and alerts an administrator if an update is available.\\n\\n### How It Works\\n\\nThe Flow performs a gRPC call to the dedicated update service on a regular basis, and parses the output as JSON. If there is an available update, it will try to notify the user defined by the parameters. To avoid spamming the user, a specific attribute is attached to it as soon as a notification is sent once for a given version.\"\n  },\n  \"Schedule\": {\n    \"Iso8601Schedule\": \"R/2012-01-01T00:00:00.828696-09:00/PT24H\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"Service grpc.update\",\n      \"Parameters\": {\n        \"method\": \"update.UpdateService.UpdateRequired\",\n        \"request\": \"{}\",\n        \"service\": \"pydio.grpc.update\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.build-message\",\n          \"Label\": \"Extract Version Info\",\n          \"IdmSelector\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                  \"value\": \"Ch17ey5Kb2JQYXJhbWV0ZXJzLk5vdGlmeVVzZXJ9fQ==\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Label\": \"Load User\"\n          },\n          \"ActionOutputFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                  \"value\": \"akx7eyhndCAoLkxhc3RPdXRwdXQuSnNvbkFzVmFsdWVzLk1hcC5BdmFpbGFibGVCaW5hcmllcyB8IGxlbikgMCkgfCB0b1N0cmluZ319\"\n                }\n              ]\n            },\n            \"Label\": \"Check Available Binaries\"\n          },\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"Login\\\"}\",\n            \"paramName\": \"NewVersion\",\n            \"paramType\": \"string\",\n            \"paramValue\": \"{{(index .LastOutput.JsonAsValues.Map.AvailableBinaries 0).Version}}\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.scheduler.log-input\",\n              \"Label\": \"Do nothing\",\n              \"IdmFilter\": {\n                \"Query\": {\n                  \"SubQueries\": [\n                    {\n                      \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                      \"value\": \"KiJ7ey5Kb2JQYXJhbWV0ZXJzLk5vdGlmeUF0dHJpYnV0ZX19MhR7ey5WYXJzLk5ld1ZlcnNpb259fQ==\"\n                    }\n                  ],\n                  \"Operation\": 1\n                },\n                \"Label\": \"Already Notified?\"\n              },\n              \"Parameters\": {\n                \"message\": \"User already notified, stopping!\",\n                \"sender\": \"{\\\"@value\\\":\\\"disabled\\\"}\",\n                \"taskLogger\": \"true\"\n              },\n              \"FailedFilterActions\": [\n                {\n                  \"ID\": \"actions.idm.user-set-attribute\",\n                  \"Label\": \"Set Attribute\",\n                  \"Parameters\": {\n                    \"attributeName\": \"{{.JobParameters.NotifyAttribute}}\",\n                    \"attributeValue\": \"{{.Vars.NewVersion}}\",\n                    \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\"\n                  },\n                  \"ChainedActions\": [\n                    {\n                      \"ID\": \"actions.cmd.sendmail\",\n                      \"Parameters\": {\n                        \"input-users\": \"true\",\n                        \"message\": \"A new update is available\",\n                        \"subject\": \"Pydio Cells {{.Vars.NewVersion}} is available!\"\n                      },\n                      \"ChainedActions\": [\n                        {\n                          \"ID\": \"actions.idm.store\",\n                          \"Label\": \"Persist User\",\n                          \"Parameters\": {\n                            \"breakOnError\": \"true\",\n                            \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\",\n                            \"objectTypes\": \"User\"\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      \"ID\": \"actions.scheduler.log-advanced\",\n                      \"Label\": \"Artifact New Version\",\n                      \"Parameters\": {\n                        \"artifact_format\": \"object\",\n                        \"artifact_label\": \"New Version\",\n                        \"as_object\": \"false\",\n                        \"fieldname\": \"{\\\"@value\\\":\\\"FreeCondition\\\"}\",\n                        \"internalLogger\": \"{{.JobParameters.ApplicationLog}}\",\n                        \"is_artifact\": \"string\",\n                        \"level\": \"{{\",\n                        \"zap_key\": \"version-found\",\n                        \"zap_value\": \"New version is available: {{.Vars.NewVersion}}\"\n                      }\n                    }\n                  ]\n                }\n              ]\n            }\n          ],\n          \"FailedFilterActions\": [\n            {\n              \"ID\": \"actions.scheduler.log-input\",\n              \"Label\": \"Do nothing\",\n              \"Parameters\": {\n                \"message\": \"No update available, stopping!\",\n                \"sender\": \"{\\\"@value\\\":\\\"disabled\\\"}\",\n                \"taskLogger\": \"true\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"NotifyUser\",\n      \"Description\": \"User login who will receive a notification\",\n      \"Type\": \"text\",\n      \"JsonChoices\": \"{\\\"type\\\":\\\"string\\\",\\\"data\\\":{\\\"defaultValue\\\":\\\"\\\",\\\"mandatory\\\":true}}\"\n    },\n    {\n      \"Name\": \"NotifyAttribute\",\n      \"Description\": \"Attribute used to avoid multiple notifications\",\n      \"Value\": \"pydio:update-version-notify\",\n      \"Type\": \"text\",\n      \"JsonChoices\": \"{\\\"type\\\":\\\"string\\\",\\\"data\\\":{\\\"defaultValue\\\":\\\"pydio:update-version-notify\\\",\\\"mandatory\\\":true}}\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/daily-snapshots-flat/","title":"Daily Snapshots (Flat)","text":"<p>Daily dump of DB index for all flat datasources.</p> <p></p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/daily-snapshots-flat/#usecase-overview","title":"Usecase Overview","text":"<p>As \"flat\" datasources store the documents using UUIDs instead of actual file names in the storage, one may be afraid of loosing the link between folder tree and actual files contents.  </p> <p>This flow secures backup/recovery operations by daily snapshoting the index directly inside the storage. By default, it keeps snapshots for ten days (then deletes the oldest ones), but this can be changed using the job parameters. </p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/daily-snapshots-flat/#how-it-works","title":"How It Works","text":"<p>Both actions use a hook in the gRPC datasource service, using the Resync method with specific <code>write/snapshot-name</code> or <code>delete/snapshot-name</code> parameters. Flat datasources are configured to understand these parameters (whereas the Resync of a structured datasource triggers an actual resynchronization of the index).</p> <p>This job makes use of various Go Templates features:</p> <p><code>{{$h := mul 24 .JobParameters.KeepDays | printf \"-%dh\"}}delete/snapshot-{{now | dateModify $h | date \"2006-01-02\"}}.db</code>  * Assign a value to the <code>$h</code> variable  * This value equals to (24 * NumberOfDays)h  * Then used with the dateModify function</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/daily-snapshots-flat/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description KeepDays integer 10 true Number of snapshot to keep"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/daily-snapshots-flat/#trigger-type","title":"Trigger Type","text":"<p>Scheduled</p>"},{"location":"cellsflows/preset-flows/efficient-system-maintenance/daily-snapshots-flat/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Daily Snapshots (Flat)\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Daily dump of DB index for all flat datasources\",\n    \"Icon\": \"mdi mdi-database\",\n    \"TplCategory\": \"maintenance\",\n    \"Usage\": \"### Usecase Overview\\n\\nAs \\\"flat\\\" datasources store the documents using UUIDs instead of actual file names in the storage, one may be afraid of loosing the link between folder tree and actual files contents.  \\n\\nThis flow secures backup/recovery operations by daily snapshoting the index directly inside the storage. By default, it keeps snapshots for ten days (then deletes the oldest ones), but this can be changed using the job parameters. \\n\\n### How It Works\\n\\nBoth actions use a hook in the gRPC datasource service, using the Resync method with specific `write/snapshot-name` or `delete/snapshot-name` parameters. Flat datasources are configured to understand these parameters (whereas the Resync of a structured datasource triggers an actual resynchronization of the index).\\n\\nThis job makes use of various Go Templates features:\\n\\n`{{$h := mul 24 .JobParameters.KeepDays | printf \\\"-%dh\\\"}}delete/snapshot-{{now | dateModify $h | date \\\"2006-01-02\\\"}}.db`\\n * Assign a value to the `$h` variable\\n * This value equals to (24 * NumberOfDays)h\\n * Then used with the dateModify function\\n \"\n  },\n  \"Custom\": true,\n  \"Schedule\": {\n    \"Iso8601Schedule\": \"R/2012-01-01T01:00:00.828Z/PT24H\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.resync\",\n      \"Label\": \"Daily Snapshot\",\n      \"DataSourceSelector\": {\n        \"Label\": \"Flat DataSources\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/service.Query\",\n              \"value\": \"CkYKMHR5cGUuZ29vZ2xlYXBpcy5jb20vb2JqZWN0LkRhdGFTb3VyY2VTaW5nbGVRdWVyeRISag1jZWxsc0ludGVybmFsgAEBEAE=\"\n            },\n            {\n              \"type_url\": \"type.googleapis.com/service.Query\",\n              \"value\": \"CjYKMHR5cGUuZ29vZ2xlYXBpcy5jb20vb2JqZWN0LkRhdGFTb3VyY2VTaW5nbGVRdWVyeRICKAEQAQ==\"\n            }\n          ],\n          \"Operation\": 1\n        }\n      },\n      \"Parameters\": {\n        \"path\": \"write/snapshot-{{now | date \\\"2006-01-02\\\"}}.db\",\n        \"service\": \"pydio.grpc.data.sync.{{.DataSource.Name}}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.cmd.resync\",\n          \"Label\": \"Clean Old Ones\",\n          \"Parameters\": {\n            \"path\": \"{{$h := mul 24 .JobParameters.KeepDays | printf \\\"-%dh\\\"}}delete/snapshot-{{now | dateModify $h | date \\\"2006-01-02\\\"}}.db\",\n            \"service\": \"pydio.grpc.data.sync.{{.DataSource.Name}}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"KeepDays\",\n      \"Description\": \"Number of snapshot to keep\",\n      \"Value\": \"10\",\n      \"Mandatory\": true,\n      \"Type\": \"integer\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/index/","title":"Automated Identity and Access Management","text":"<p>A wide range of preset identity management workflows and an extensive library of off-the-shelf actions that can be used to quickly build custom identity and access solutions.</p> <ul> <li>Batch Create Links</li> <li>Batch Delete Link</li> <li>Clear OTP setup</li> <li>Import Users (CSV)</li> <li>List Locked Users</li> <li>Modify a User Login</li> <li>Role for each Workspace</li> <li>WS First Connection</li> </ul>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/import-users-csv/","title":"Import Users (CSV)","text":"<p>Import users from a CSV file uploaded at a given location.</p> <p></p> <p>This flow allows automatic import of a CSV file containing users into Cells internal directory.</p> <p>It takes a normal Cells file as input, and listen for its changes (triggers on \"Create Node\" or \"Update Content\"). That way you just have to setup a specific  location in a workspace accessed by administrator to upload an updated CSV and have it parsed and imported automatically.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/import-users-csv/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description FileLocation text personal/admin/imports/ true Folder path where to watch for CSV files created or modified."},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/import-users-csv/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/import-users-csv/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Import Users (CSV)\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Import users from a CSV file uploaded at a given location\",\n    \"Icon\": \"mdi mdi-account-plus\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"This flow allows automatic import of a CSV file containing users into Cells internal directory.\\n\\nIt takes a normal Cells file as input, and listen for its changes (triggers on \\\"Create Node\\\" or \\\"Update Content\\\"). That way you just have to setup a specific \\nlocation in a workspace accessed by administrator to upload an updated CSV and have it parsed and imported automatically.\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:0\",\n    \"NODE_CHANGE:3\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.etl.users-csv\",\n      \"Parameters\": {\n        \"attribute\": \"Login\",\n        \"attribute_1\": \"Password\",\n        \"attribute_2\": \"Attributes.displayName\",\n        \"attribute_3\": \"Attributes.email\",\n        \"comma\": \";\",\n        \"comment\": \"#\",\n        \"csv\": \"Login\",\n        \"csv_1\": \"Password\",\n        \"csv_2\": \"Name\",\n        \"csv_3\": \"Email\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"PathPrefix\\\"}\",\n        \"group\": \"\",\n        \"trimLeadingSpace\": \"true\"\n      }\n    }\n  ],\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/tree.Query\",\n          \"value\": \"UgNjc3Y=\"\n        },\n        {\n          \"type_url\": \"type.googleapis.com/tree.Query\",\n          \"value\": \"Ch97ey5Kb2JQYXJhbWV0ZXJzLkZpbGVMb2NhdGlvbn19\"\n        }\n      ],\n      \"Operation\": 1\n    },\n    \"Label\": \"Watch CSV files in location\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"FileLocation\",\n      \"Description\": \"Folder path where to watch for CSV files created or modified.\",\n      \"Value\": \"personal/admin/imports/\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/list-locked-users/","title":"List Locked Users","text":"<p>Build a list of all users that have locked themselves out.</p> <p></p> <p>This flow looks up for users with a specific attribute name/value combination (<code>locks</code> contains <code>logout</code>) and  then uses conditional filtering to build two lists of users: \"hidden\" ones (that are basically the temporary identifiers associated with each public link) and the standard ones.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/list-locked-users/#parameters","title":"Parameters","text":"<p>No parameters defined</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/list-locked-users/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/list-locked-users/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"List Locked Users\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Build a list of all users that have locked themselves out\",\n    \"Icon\": \"mdi mdi-account\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"This flow looks up for users with a specific attribute name/value combination (`locks` contains `logout`) and \\nthen uses conditional filtering to build two lists of users: \\\"hidden\\\" ones (that are basically the temporary identifiers\\nassociated with each public link) and the standard ones.\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"All Locked\",\n      \"IdmSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n              \"value\": \"KgVsb2NrczIIKmxvZ291dCo=\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Collect\": true,\n        \"Label\": \"Users with lock attribute\"\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\",\n        \"internalLogger\": \"false\",\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.build-message\",\n          \"Label\": \"Links Message\",\n          \"IdmFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                  \"value\": \"KgZoaWRkZW4yBHRydWU=\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Label\": \"Hidden (links) vs. internal\"\n          },\n          \"Parameters\": {\n            \"ctype\": \"string\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"AttributeValue\\\"}\",\n            \"fromCtl\": \"{\\\"@value\\\":\\\"default\\\"}\",\n            \"message\": \"There are {{len .Input.Users}} hidden users currently locked : \\n{{range .Input.Users}}\\n- User : {{.Login}}\\n{{end}}\\nThis means that some public links are currently inaccessible. \",\n            \"sender\": \"{\\\"@value\\\":\\\"smtp\\\"}\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.scheduler.log-input\",\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"AttributeValue\\\"}\",\n                \"internalLogger\": \"false\",\n                \"message\": \"{{.LastOutput.StringBody}}\",\n                \"taskLogger\": \"true\"\n              }\n            }\n          ],\n          \"FailedFilterActions\": [\n            {\n              \"ID\": \"actions.scheduler.build-message\",\n              \"Parameters\": {\n                \"ctype\": \"string\",\n                \"message\": \"There are {{len .Input.Users}} standard users currently locked :  \\n{{range .Input.Users}}\\n- User : {{.Login}}\\n{{end}}\",\n                \"sender\": \"{\\\"@value\\\":\\\"smtp\\\"}\"\n              },\n              \"ChainedActions\": [\n                {\n                  \"ID\": \"actions.scheduler.log-input\",\n                  \"Parameters\": {\n                    \"fieldname\": \"{\\\"@value\\\":\\\"AttributeValue\\\"}\",\n                    \"internalLogger\": \"false\",\n                    \"message\": \"{{.LastOutput.StringBody}}\",\n                    \"taskLogger\": \"true\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/modify-a-user-login/","title":"Modify a User Login","text":"<p>Replacement of a login identifier in various sub-services.</p> <p></p> <p>Modifying a user login is a special operation as logins may be used as reference identifier by various parts of the application. All services that do use logins as keys implement a specific gRPC method for performing the necessary operations if a login must be changed. </p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/modify-a-user-login/#how-it-works","title":"How It Works","text":"<p>This Flow will sequentially call the following services:   - pydio.grpc.tree (renames Personal Files folder)  - pydio.grpc.user (renames the login)  - pydio.grpc.workspace|role|policy (adapt security policies that may refer to the existing user)</p> <p>The only thing it does not do is changing the personal file folder on the file system if it is stored in a structured datasource. You may have to do this manually and resynchronize (but not if it is a flat datasource).</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/modify-a-user-login/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description OriginalLogin text true User login to be replaced. NewLogin text true New login to be used. DryRun boolean true false Dry-Run mode will show pending actions without executing them."},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/modify-a-user-login/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/modify-a-user-login/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Modify a User Login\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Replacement of a login identifier in various sub-services\",\n    \"Icon\": \"mdi mdi-account-convert\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"Modifying a user login is a special operation as logins may be used as reference identifier by various parts of the application. All services that do use logins as keys implement a specific gRPC method for performing the necessary operations if a login must be changed. \\n\\n### How It Works\\n\\nThis Flow will sequentially call the following services: \\n - pydio.grpc.tree (renames Personal Files folder)\\n - pydio.grpc.user (renames the login)\\n - pydio.grpc.workspace|role|policy (adapt security policies that may refer to the existing user)\\n \\nThe only thing it __does not__ do is changing the personal file folder on the file system if it is stored in a structured datasource. You may have to do this manually and resynchronize (but not if it is a flat datasource).\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"Personal Folder\",\n      \"IdmSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n              \"value\": \"CiB7ey5Kb2JQYXJhbWV0ZXJzLk9yaWdpbmFsTG9naW59fQ==\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"Check User Exists\"\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"Login\\\"}\",\n        \"method\": \"LoginModifier.ModifyLogin\",\n        \"request\": \"{\\n\\\"OldLogin\\\":\\\"{{.JobParameters.OriginalLogin}}\\\",\\n\\\"NewLogin\\\":\\\"{{.JobParameters.NewLogin}}\\\", \\n\\\"DryRun\\\": {{.JobParameters.DryRun}}\\n}\",\n        \"service\": \"pydio.grpc.tree\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.cmd.rpc\",\n          \"Label\": \"User Login\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"Login\\\"}\",\n            \"method\": \"LoginModifier.ModifyLogin\",\n            \"request\": \"{\\n\\\"OldLogin\\\":\\\"{{.JobParameters.OriginalLogin}}\\\",\\n\\\"NewLogin\\\":\\\"{{.JobParameters.NewLogin}}\\\", \\n\\\"DryRun\\\": {{.JobParameters.DryRun}}\\n}\",\n            \"service\": \"pydio.grpc.user\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.cmd.rpc\",\n              \"Label\": \"Workspaces Policies\",\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"Login\\\"}\",\n                \"method\": \"LoginModifier.ModifyLogin\",\n                \"request\": \"{\\n\\\"OldLogin\\\":\\\"{{.JobParameters.OriginalLogin}}\\\",\\n\\\"NewLogin\\\":\\\"{{.JobParameters.NewLogin}}\\\", \\n\\\"DryRun\\\": {{.JobParameters.DryRun}}\\n}\",\n                \"service\": \"pydio.grpc.workspace\"\n              }\n            },\n            {\n              \"ID\": \"actions.cmd.rpc\",\n              \"Label\": \"Roles Policies\",\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"Login\\\"}\",\n                \"method\": \"LoginModifier.ModifyLogin\",\n                \"request\": \"{\\n\\\"OldLogin\\\":\\\"{{.JobParameters.OriginalLogin}}\\\",\\n\\\"NewLogin\\\":\\\"{{.JobParameters.NewLogin}}\\\", \\n\\\"DryRun\\\": {{.JobParameters.DryRun}}\\n}\",\n                \"service\": \"pydio.grpc.role\"\n              }\n            },\n            {\n              \"ID\": \"actions.cmd.rpc\",\n              \"Label\": \"Meta Policies\",\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"Login\\\"}\",\n                \"method\": \"LoginModifier.ModifyLogin\",\n                \"request\": \"{\\n\\\"OldLogin\\\":\\\"{{.JobParameters.OriginalLogin}}\\\",\\n\\\"NewLogin\\\":\\\"{{.JobParameters.NewLogin}}\\\", \\n\\\"DryRun\\\": {{.JobParameters.DryRun}}\\n}\",\n                \"service\": \"pydio.grpc.user-meta\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 3,\n  \"Parameters\": [\n    {\n      \"Name\": \"OriginalLogin\",\n      \"Description\": \"User login to be replaced.\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"NewLogin\",\n      \"Description\": \"New login to be used.\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"DryRun\",\n      \"Description\": \"Dry-Run mode will show pending actions without executing them.\",\n      \"Value\": \"true\",\n      \"Type\": \"boolean\"\n    }\n  ],\n  \"Timeout\": \"10h\"\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-create-links/","title":"Batch Create Links","text":"<p>Create links on all files inside a folder and generate a CSV.</p> <p></p> <p>This Flow automatically creates a unique public link for every files in a folder, and generates a reporting CSV with all links URLs.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-create-links/#how-it-works","title":"How It Works","text":"<p>The Flow basically loops on all files and call the \"Create Link\" action on them. The \"Merge\" features allows to resynchronize the loop and gather all generated links (as metadata of each Node), finally creating a unique CSV. For each node, the Link URL is retrieved with the <code>GeneratedLinkURL</code> key in its metadata.</p> <p>Note about links: a link owner must always be provided to create a public link, thus the first action that loads a user by its login at the beginning of the flow.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-create-links/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description FolderPath text true Path to folder where to list and create links OwnerLogin text admin true A link owner is mandatory to create public link with correct permissions. CSVReport boolean false false Create a CSV report with all new links. OutputCSVFile text GeneratedLinks.csv true CSV file where all generated links will be written. ExpirationDate text false Optional expiration date for public links - golang duration to now."},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-create-links/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-create-links/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Batch Create Links\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Create links on all files inside a folder and generate a CSV\",\n    \"Icon\": \"mdi mdi-share-variant\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"This Flow automatically creates a unique public link for every files in a folder, and generates a reporting CSV with all links URLs.\\n\\n### How It Works\\n\\nThe Flow basically loops on all files and call the \\\"Create Link\\\" action on them. The \\\"Merge\\\" features allows to resynchronize the loop and gather all generated links (as metadata of each Node), finally creating a unique CSV. For each node, the Link URL is retrieved with the `GeneratedLinkURL` key in its metadata.\\n\\n__Note about links__: a link owner must always be provided to create a public link, thus the first action that loads a user by its login at the beginning of the flow.\"\n  },\n  \"CreatedAt\": 1680601112,\n  \"ModifiedAt\": 1682588307,\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.build-message\",\n      \"Label\": \"Compute Working Dir\",\n      \"Parameters\": {\n        \"Condition\": \"{\\\"@value\\\":\\\"StringEqualCondition\\\"}\",\n        \"ctype\": \"string\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"PathPrefix\\\"}\",\n        \"paramName\": \"WorkingDir\",\n        \"paramType\": \"string\",\n        \"paramValue\": \"{{if .Node}}{{.Node.Path}}{{else}}{{.JobParameters.FolderPath}}{{end}}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Load Owner User\",\n          \"Description\": \"Owner user is mandatory to create a public link\",\n          \"IdmSelector\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                  \"value\": \"Ch17ey5Kb2JQYXJhbWV0ZXJzLk93bmVyTG9naW59fQ==\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Collect\": true\n          },\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n            \"message\": \"\",\n            \"taskLogger\": \"false\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.idm.link.create\",\n              \"Label\": \"Create Links\",\n              \"NodesSelector\": {\n                \"Query\": {\n                  \"SubQueries\": [\n                    {\n                      \"type_url\": \"type.googleapis.com/tree.Query\",\n                      \"value\": \"ChR7ey5WYXJzLldvcmtpbmdEaXJ9fTAB\"\n                    }\n                  ],\n                  \"Operation\": 1\n                },\n                \"Label\": \"All Files in FolderPath\"\n              },\n              \"Parameters\": {\n                \"accessTypeDownload\": \"true\",\n                \"expirationDate\": \"{{if .JobParameters.ExpirationDate}}{{now | date_modify .JobParameters.ExpirationDate | toStamp}}{{end}}\",\n                \"fieldname\": \"{\\\"@value\\\":\\\"LastUpdated\\\"}\",\n                \"foldersTemplateName\": \"pydio_shared_folder\",\n                \"maxDownloads\": \"0\",\n                \"onExistsBehavior\": \"update\",\n                \"password\": \"\",\n                \"resetDownloads\": \"false\"\n              }\n            }\n          ],\n          \"MergeAction\": {\n            \"ID\": \"actions.scheduler.log-input\",\n            \"Label\": \"Collect Links\",\n            \"Description\": \"This action synchronize previous actions and collects all outputs.\",\n            \"Parameters\": {\n              \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n              \"message\": \"Finished\",\n              \"taskLogger\": \"true\"\n            },\n            \"ChainedActions\": [\n              {\n                \"ID\": \"actions.etl.transform\",\n                \"Label\": \"To CSV Format\",\n                \"Description\": \"Use output Nodes metadata to create a simple CSV format\",\n                \"ActionOutputFilter\": {\n                  \"Query\": {\n                    \"SubQueries\": [\n                      {\n                        \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                        \"value\": \"ahx7ey5Kb2JQYXJhbWV0ZXJzLkNTVlJlcG9ydH19\"\n                      }\n                    ]\n                  },\n                  \"Label\": \"CSVReport True?\"\n                },\n                \"Parameters\": {\n                  \"Condition\": \"{\\\"@value\\\":\\\"StringEqualCondition\\\"}\",\n                  \"cellwidth\": \"NaN\",\n                  \"cellwidth_1\": \"NaN\",\n                  \"csv-separator\": \",\",\n                  \"dataformat\": \"string\",\n                  \"dataformat_1\": \"\",\n                  \"expand\": \"\",\n                  \"expand_1\": \"\",\n                  \"fieldname\": \"{\\\"@value\\\":\\\"PathPrefix\\\"}\",\n                  \"format\": \"csv\",\n                  \"input\": \"input\",\n                  \"jsonpath\": \"{{.Data.Path | base}}\",\n                  \"jsonpath_1\": \"$.MetaStore.GeneratedLinkURL\",\n                  \"name\": \"File\",\n                  \"name_1\": \"Link\",\n                  \"selector\": \"$.Nodes\"\n                },\n                \"ChainedActions\": [\n                  {\n                    \"ID\": \"actions.tree.put\",\n                    \"Label\": \"Write CSV File\",\n                    \"Parameters\": {\n                      \"Condition\": \"{\\\"@value\\\":\\\"StringEqualCondition\\\"}\",\n                      \"fieldname\": \"{\\\"@value\\\":\\\"PathPrefix\\\"}\",\n                      \"input\": \"rawbody\",\n                      \"target_file\": \"{{.Vars.WorkingDir}}/{{.JobParameters.OutputCSVFile}}\"\n                    }\n                  }\n                ]\n              }\n            ]\n          }\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 4,\n  \"Parameters\": [\n    {\n      \"Name\": \"FolderPath\",\n      \"Description\": \"Path to folder where to list and create links\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"OwnerLogin\",\n      \"Description\": \"A link owner is mandatory to create public link with correct permissions.\",\n      \"Value\": \"admin\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"CSVReport\",\n      \"Description\": \"Create a CSV report with all new links.\",\n      \"Value\": \"false\",\n      \"Type\": \"boolean\"\n    },\n    {\n      \"Name\": \"OutputCSVFile\",\n      \"Description\": \"CSV file where all generated links will be written.\",\n      \"Value\": \"GeneratedLinks.csv\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"ExpirationDate\",\n      \"Description\": \"Optional expiration date for public links - golang duration to now.\",\n      \"Type\": \"text\"\n    }\n  ],\n  \"Hooks\": [\n    {\n      \"ApiSlug\": \"batch-create-links\",\n      \"PresetParameters\": {\n        \"CSVReport\": \"false\",\n        \"OutputCSVFile\": \"BatchGeneratedLinks.csv\",\n        \"OwnerLogin\": \"{{.ContextUser.Login}}\"\n      },\n      \"AllowOverridePresets\": true,\n      \"Metadata\": {\n        \"action\": \"{\\\"name\\\":\\\"batch-create-links\\\",\\\"gui\\\":{\\\"iconClass\\\":\\\"mdi mdi-share-variant\\\",\\\"text\\\":\\\"Batch Create Links\\\",\\\"title\\\":\\\"batch-create-links\\\",\\\"context\\\":{\\\"actionBar\\\":\\\"true\\\",\\\"actionBarGroup\\\":\\\"other\\\",\\\"selection\\\":\\\"false\\\"}},\\\"rightsContext\\\":{\\\"read\\\":\\\"true\\\",\\\"userLogged\\\":\\\"true\\\",\\\"write\\\":\\\"true\\\"}}\",\n        \"formParameters\": \"[{\\\"Description\\\":\\\"Optional expiration date (timestamp) for public links - number of days starting now.\\\",\\\"Name\\\":\\\"ExpirationDate\\\",\\\"Type\\\":\\\"text\\\"},{\\\"Type\\\":\\\"boolean\\\",\\\"Name\\\":\\\"CSVReport\\\",\\\"Value\\\":\\\"true\\\",\\\"Description\\\":\\\"Create a CSV report with all new links.\\\"}]\",\n        \"formPrompt\": \"true\",\n        \"promptMessage\": \"Create one public link per file. Optionally add an expiration (in hours, e.g. 240h for 10 days), and generate a CSV report with all created links.\",\n        \"successMessage\": \"Creating public links for all files in folder.\",\n        \"useContextNode\": \"true\"\n      },\n      \"Policies\": [\n        {\n          \"Action\": 3,\n          \"Subject\": \"profile:admin\",\n          \"Effect\": 1\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/role-for-each-workspace/","title":"Role for each Workspace","text":"<p>Create role automatically based on workspace creation.</p> <p></p> <p>An advanced flow showing how Anko Script can provide flexibility to create a role automatically</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/role-for-each-workspace/#how-it-works","title":"How It Works","text":"<p>At each workspace creation, an ANKO script creates a new idm.Role object, and the associated ACLs to provide read/write access to the new workspace. The Script is explained below.</p> <pre><code>// Imports, from both standard libraries (fmt) and Cells-provided ones (idm)\nfmt = import(\"fmt\")\nidm = import(\"idm\")\n\n// **output** is the variable that the script is expected to fill\n// It must be a jobs.ActionMessage struct, so we start here by cloning the input.\n// Then we read the workspace passed as input by the job Trigger Event.\noutput = input\nws = input.Workspaces[0]\nfmt.Println(ws)\n\n// Create a new struct idm.Role and assign it to output.Roles\nwsRole = new(idm.Role)\nwsRole.Uuid = \"access-\" + ws.Slug\nwsRole.Label = \"Access to \" + ws.Label\noutput.Roles = [wsRole]\n\n// Same with ACLs. Here we use internal functions provided in the script environment IdmService.MakeACL.\nacls = make([]*idm.ACL, len(ws.RootNodes)*2)\ncount = 0\nfor nid in ws.RootNodes {\n  n = ws.RootNodes[nid]\n  acls[count] = IdmService.MakeACL(n.Uuid, wsRole.Uuid, ws.UUID, \"read\", \"1\")\n  count ++\n    acls[count] = IdmService.MakeACL(n.Uuid, wsRole.Uuid, ws.UUID, \"write\", \"1\")\n  count ++\n}\noutput.Acls = acls\n</code></pre> <p>At that point after script execution, the action gets an output filled with new Role and new ACLs.  Beware that neither Role or ACLs are persisted at that point, thus the next steps called to trigger persistence.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/role-for-each-workspace/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description UuidPrefix text access- false Prefix for new role uuid, workspace slug will be appended. LabelPrefix text Access to workspace false Prefix for new role label, workspace label will be appended."},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/role-for-each-workspace/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/role-for-each-workspace/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Role for each Workspace\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Create role automatically based on workspace creation\",\n    \"Icon\": \"mdi mdi-account-convert\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"An advanced flow showing how Anko Script can provide flexibility to create a role automatically\\n\\n### How It Works\\n\\nAt each workspace creation, an ANKO script creates a new idm.Role object, and the associated ACLs to provide read/write access to the new workspace. The Script is explained below.\\n\\n\\n```\\n// Imports, from both standard libraries (fmt) and Cells-provided ones (idm)\\nfmt = import(\\\"fmt\\\")\\nidm = import(\\\"idm\\\")\\n\\n// **output** is the variable that the script is expected to fill\\n// It must be a jobs.ActionMessage struct, so we start here by cloning the input.\\n// Then we read the workspace passed as input by the job Trigger Event.\\noutput = input\\nws = input.Workspaces[0]\\nfmt.Println(ws)\\n\\n// Create a new struct idm.Role and assign it to output.Roles\\nwsRole = new(idm.Role)\\nwsRole.Uuid = \\\"access-\\\" + ws.Slug\\nwsRole.Label = \\\"Access to \\\" + ws.Label\\noutput.Roles = [wsRole]\\n\\n// Same with ACLs. Here we use internal functions provided in the script environment IdmService.MakeACL.\\nacls = make([]*idm.ACL, len(ws.RootNodes)*2)\\ncount = 0\\nfor nid in ws.RootNodes {\\n  n = ws.RootNodes[nid]\\n  acls[count] = IdmService.MakeACL(n.Uuid, wsRole.Uuid, ws.UUID, \\\"read\\\", \\\"1\\\")\\n  count ++\\n\\tacls[count] = IdmService.MakeACL(n.Uuid, wsRole.Uuid, ws.UUID, \\\"write\\\", \\\"1\\\")\\n  count ++\\n}\\noutput.Acls = acls\\n```\\n\\nAt that point after script execution, the action gets an output filled with new Role and new ACLs. \\nBeware that neither Role or ACLs are persisted at that point, thus the next steps called to trigger persistence.\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"IDM_CHANGE:WORKSPACE:0\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.script.anko\",\n      \"Label\": \"Create Role \\u0026 ACL\",\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"scope\\\"}\",\n        \"paramName\": \"RoleUuid\",\n        \"paramName_1\": \"RoleLabel\",\n        \"paramValue\": \"{{.JobParameters.UuidPrefix}}-{{.Workspace.Slug}}\",\n        \"paramValue_1\": \"{{.JobParameters.LabelPrefix}}{{.Workspace.Label}}\",\n        \"script\": \"idm = import(\\\"idm\\\")\\nfmt = import(\\\"fmt\\\")\\n\\noutput = input\\nws = input.Workspaces[0]\\nfmt.Println(ws)\\nwsRole = new(idm.Role)\\nwsRole.Uuid = \\\"access-\\\" + ws.Slug\\nwsRole.Label = \\\"Access to \\\" + ws.Label\\noutput.Roles = [wsRole]\\n\\nacls = make([]*idm.ACL, len(ws.RootNodes)*2)\\ncount = 0\\nfor nid in ws.RootNodes {\\n  n = ws.RootNodes[nid]\\n  acls[count] = IdmService.MakeACL(n.Uuid, wsRole.Uuid, ws.UUID, \\\"read\\\", \\\"1\\\")\\n  count ++\\n\\tacls[count] = IdmService.MakeACL(n.Uuid, wsRole.Uuid, ws.UUID, \\\"write\\\", \\\"1\\\")\\n  count ++\\n}\\noutput.Acls = acls\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.store\",\n          \"Label\": \"Store Role\",\n          \"Parameters\": {\n            \"objectTypes\": \"Role\"\n          }\n        },\n        {\n          \"ID\": \"actions.idm.store\",\n          \"Label\": \"Store ACL\",\n          \"Parameters\": {\n            \"objectTypes\": \"Acl\"\n          }\n        }\n      ]\n    }\n  ],\n  \"IdmFilter\": {\n    \"Type\": 2,\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/idm.WorkspaceSingleQuery\",\n          \"value\": \"KAE=\"\n        }\n      ]\n    },\n    \"Label\": \"Filter by scope\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"UuidPrefix\",\n      \"Description\": \"Prefix for new role uuid, workspace slug will be appended.\",\n      \"Value\": \"access-\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"LabelPrefix\",\n      \"Description\": \"Prefix for new role label, workspace label will be appended.\",\n      \"Value\": \"Access to workspace \",\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-delete-link/","title":"Batch Delete Link","text":"<p>Disable All Public Links inside a given Folder.</p> <p></p> <p>This Flow is the alter-ego of the \"Batch Create Links\" Flow. It disable all public links from files inside a given folder.</p> <p>Note about links: a link owner must always be provided to create a public link, thus the first action that loads a user by its login at the beginning of the flow.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-delete-link/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description FolderPath text true Folder where to remove all links. OwnerLogin text admin true"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-delete-link/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/batch-delete-link/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Batch Delete Link\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Disable All Public Links inside a given Folder\",\n    \"Icon\": \"mdi mdi-share-variant\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"This Flow is the alter-ego of the \\\"Batch Create Links\\\" Flow. It disable all public links from files inside a given folder.\\n\\n__Note about links__: a link owner must always be provided to create a public link, thus the first action that loads a user by its login at the beginning of the flow.\"\n  },\n  \"CreatedAt\": 1680601112,\n  \"ModifiedAt\": 1680624700,\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Feed User\",\n      \"IdmSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n              \"value\": \"Ch17ey5Kb2JQYXJhbWV0ZXJzLk93bmVyTG9naW59fQ==\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Collect\": true\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n        \"message\": \"\",\n        \"taskLogger\": \"false\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.link.delete\",\n          \"NodesSelector\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"Ch17ey5Kb2JQYXJhbWV0ZXJzLkZvbGRlclBhdGh9fQ==\"\n                }\n              ],\n              \"Operation\": 1\n            }\n          },\n          \"Parameters\": {\n            \"onNotExists\": \"ignore\"\n          }\n        }\n      ],\n      \"MergeAction\": {\n        \"ID\": \"actions.scheduler.log-input\",\n        \"Label\": \"Collect Output Nodes\",\n        \"Parameters\": {\n          \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n          \"message\": \"Finished!\",\n          \"taskLogger\": \"true\"\n        }\n      }\n    }\n  ],\n  \"MaxConcurrency\": 4,\n  \"Parameters\": [\n    {\n      \"Name\": \"FolderPath\",\n      \"Description\": \"Folder where to remove all links.\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"OwnerLogin\",\n      \"Value\": \"admin\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/ws-first-connection/","title":"WS First Connection","text":"<p>Trigger an action at user first connection to a workspace.</p> <p></p> <p>This Flow uses a custom user attribute to detect if it is the first time that a user \"connects\" to a workspace.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/ws-first-connection/#how-it-works","title":"How It Works","text":"<p>Here, the \"connection\" to a workspace is assumed as the first time where the user reads any node inside this workspace. End-users can only access a node (file or folder) if an access has been open to them via a workspace or a Cell, the later being just a special workspace type. As such, we listen to the Read Node event and check load the \"Contextual Workspace\" under which the user is operating at the time.</p> <p>From there, the Flow builds an attribute name for the current workspace, and check the existence of this key in the user attributes. If not created, this is a first connection, do something and update the user's attributes. Otherwise ignore it and do nothing.</p> <p>This Flow should be further extended with an email alert, auto-provisining of data, or any other suited action.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/ws-first-connection/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description AttributePrefix text accessed- true Save user attribute \"prefix-WorkspaceSlug\" with current date."},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/ws-first-connection/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/ws-first-connection/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"WS First Connection\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Trigger an action at user first connection to a workspace\",\n    \"Icon\": \"mdi mdi-account\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"This Flow uses a custom user attribute to detect if it is the first time that a user \\\"connects\\\" to a workspace.\\n\\n### How It Works\\n\\nHere, the \\\"connection\\\" to a workspace is assumed as the first time where the user reads any node inside this workspace. End-users can only access a node (file or folder) if an access has been open to them via a workspace or a Cell, the later being just a special workspace type. As such, we listen to the Read Node event and check load the \\\"Contextual Workspace\\\" under which the user is operating at the time.\\n\\nFrom there, the Flow builds an attribute name for the current workspace, and check the existence of this key in the user attributes. If not created, this is a first connection, do something and update the user's attributes. Otherwise ignore it and do nothing.\\n\\nThis Flow should be further extended with an email alert, auto-provisining of data, or any other suited action.\"\n  },\n  \"EventNames\": [\n    \"NODE_CHANGE:1\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Context workspace\",\n      \"IdmSelector\": {\n        \"Type\": 2,\n        \"All\": true,\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.WorkspaceSingleQuery\",\n              \"value\": \"Chp7ey5Db250ZXh0V29ya3NwYWNlLlVVSUR9fQ==\"\n            }\n          ]\n        },\n        \"Collect\": true,\n        \"Label\": \"Append workspace to input\"\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\",\n        \"internalLogger\": \"false\",\n        \"taskLogger\": \"false\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.user-set-attribute\",\n          \"IdmSelector\": {\n            \"All\": true,\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                  \"value\": \"WhV7ey5Db250ZXh0VXNlci5VdWlkfX0=\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Collect\": true,\n            \"Label\": \"Append user to input\"\n          },\n          \"ContextMetaFilter\": {\n            \"Type\": 1,\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                  \"value\": \"KjV7ey5Kb2JQYXJhbWV0ZXJzLkF0dHJpYnV0ZVByZWZpeH19e3suV29ya3NwYWNlLlNsdWd9fTgBUAE=\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Label\": \"Check current user attribute\"\n          },\n          \"Parameters\": {\n            \"attributeName\": \"{{.JobParameters.AttributePrefix}}{{.Workspace.Slug}}\",\n            \"attributeValue\": \"{{.Env.Date}}\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.idm.store\",\n              \"Label\": \"Save user\",\n              \"Parameters\": {\n                \"fieldname/@value\": \"Uuid\",\n                \"objectTypes\": \"User\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"AttributePrefix\",\n      \"Description\": \"Save user attribute \\\"prefix-WorkspaceSlug\\\" with current date.\",\n      \"Value\": \"accessed-\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/clear-otp-setup/","title":"Clear OTP setup","text":"<p>Remove Google OTP or Yubikey setup for a user.</p> <p></p> <p>Manually triggered job to clear MFA status on a given user. Useful if user has forgotten their information.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/clear-otp-setup/#how-it-works","title":"How It Works","text":"<p>Basically, this is a sequence of attributes clearing on a User object (Set Attribute action with an empty value), followed by an action to save the User.</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/clear-otp-setup/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description UserLogin text true Specify a user login."},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/clear-otp-setup/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/automated-identity-and-access-management/clear-otp-setup/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Clear OTP setup\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Remove Google OTP or Yubikey setup for a user\",\n    \"Icon\": \"mdi mdi-lock-open\",\n    \"TplCategory\": \"idm\",\n    \"Usage\": \"Manually triggered job to clear MFA status on a given user. Useful if user has forgotten their information.\\n\\n### How It Works\\n\\nBasically, this is a sequence of attributes clearing on a User object (Set Attribute action with an empty value), followed by an action to save the User.\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.idm.user-set-attribute\",\n      \"Label\": \"Reset Google OTP\",\n      \"IdmSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n              \"value\": \"Chx7ey5Kb2JQYXJhbWV0ZXJzLlVzZXJMb2dpbn19\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Collect\": true,\n        \"Label\": \"Find Input User\"\n      },\n      \"Parameters\": {\n        \"attributeName\": \"pydio:google_otp_secret\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.user-set-attribute\",\n          \"Label\": \"Reset Yubikey Client\",\n          \"Parameters\": {\n            \"attributeName\": \"pydio:yubikey_client\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.idm.user-set-attribute\",\n              \"Label\": \"Reset Yubikey Secret\",\n              \"Parameters\": {\n                \"attributeName\": \"pydio:yubikey_secret\",\n                \"fieldname\": \"{\\\"@value\\\":\\\"AttributeName\\\"}\"\n              },\n              \"ChainedActions\": [\n                {\n                  \"ID\": \"actions.idm.store\",\n                  \"Label\": \"Save User\",\n                  \"Parameters\": {\n                    \"fieldname\": \"{\\\"@value\\\":\\\"AttributeAnyValue\\\"}\",\n                    \"objectTypes\": \"User\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"UserLogin\",\n      \"Description\": \"Specify a user login.\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/index/","title":"Data Analysis, Insights and Reporting","text":"<p>Find data, analyze that data and then produce reports and presentations for external compliance or internal performance monitoring.</p> <ul> <li>Export Audits Report</li> <li>Export Users Permissions</li> <li>Folder Content Report</li> <li>Purge Files Older...</li> <li>Read License Stats</li> <li>Storage Usage</li> </ul>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-audits-report/","title":"Export Audits Report","text":"<p>Read audit report and transform to XLSX.</p> <p></p> <p>This Flow creates a spreadsheets based on the Audit Reports and save it XLSX or CSV.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-audits-report/#how-it-works","title":"How It Works","text":"<p>The steps are as follow:   - An internal gRPC call to the Audit Reports service: the method <code>reports.ReportsService.ListSharedResources</code>  is identified by {PackageName}.{ProtobufService}.{ProtobufMethod}, sent in JSON and the result is returned in JSON as well.  - Transform the JSON of the previous step into XLSX or CSV using the \"Data Transformation\" tool: define the destination columns using JSONPath or Go Template to point to the source data.  - Finally store the file.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-audits-report/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description OutputPath text personal/admin/audit-export-{{now | date \"2006-01-02\"}}.xlsx true Where to store the output. RequestLimit integer 1000 true Limit for 'Load Report' request."},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-audits-report/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-audits-report/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Export Audits Report\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Read audit report and transform to XLSX\",\n    \"Icon\": \"mdi mdi-file-excel\",\n    \"TplCategory\": \"analytics\",\n    \"Usage\": \"This Flow creates a spreadsheets based on the Audit Reports and save it XLSX or CSV.\\n\\n### How It Works\\n\\nThe steps are as follow: \\n - An internal **gRPC** call to the Audit Reports service: the method `reports.ReportsService.ListSharedResources`\\n is identified by {PackageName}.{ProtobufService}.{ProtobufMethod}, sent in JSON and the result is returned in JSON as well.\\n - Transform the JSON of the previous step into XLSX or CSV using the \\\"**Data Transformation**\\\" tool: define the destination columns using JSONPath or Go Template to point to the source data.  \\n - Finally store the file.\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"Load Report\",\n      \"Parameters\": {\n        \"method\": \"reports.ReportsService.ListSharedResources\",\n        \"request\": \"{\\\"Limit\\\": {{.JobParameters.RequestLimit}}}\",\n        \"service\": \"pydio.grpc.reports\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.etl.transform\",\n          \"Label\": \"JSON to XLSX\",\n          \"Parameters\": {\n            \"csv-separator\": \",\",\n            \"expand\": \"\",\n            \"expand_1\": \"$.Workspaces\",\n            \"expand_2\": \"$.Workspaces\",\n            \"expand_3\": \"$.Workspaces\",\n            \"expand_4\": \"$.Workspaces\",\n            \"expand_5\": \"$.Workspaces\",\n            \"expand_6\": \"$.Workspaces\",\n            \"format\": \"xlsx\",\n            \"input\": \"jsonbody\",\n            \"jsonpath\": \"$.Node.Path\",\n            \"jsonpath_1\": \"$.Workspace.Scope\",\n            \"jsonpath_2\": \"$.Workspace.Label\",\n            \"jsonpath_3\": \"$.OwnerUser.Login\",\n            \"jsonpath_4\": \"$.UsersReadCount\",\n            \"jsonpath_5\": \"$.UsersWriteCount\",\n            \"jsonpath_6\": \"$.Workspace.UUID\",\n            \"name\": \"File/Folder\",\n            \"name_1\": \"Resource Type\",\n            \"name_2\": \"Label\",\n            \"name_3\": \"Owner\",\n            \"name_4\": \"Readable by\",\n            \"name_5\": \"Writeable by\",\n            \"name_6\": \"Workspace ID\",\n            \"selector\": \"$.Resources\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.tree.put\",\n              \"Label\": \"Save Excel File\",\n              \"Parameters\": {\n                \"contents\": \"\",\n                \"input\": \"rawbody\",\n                \"target_file\": \"{{.JobParameters.OutputPath}}\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"OutputPath\",\n      \"Description\": \"Where to store the output.\",\n      \"Value\": \"personal/admin/audit-export-{{now | date \\\"2006-01-02\\\"}}.xlsx\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"RequestLimit\",\n      \"Description\": \"Limit for 'Load Report' request.\",\n      \"Value\": \"1000\",\n      \"Mandatory\": true,\n      \"Type\": \"integer\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-users-permissions/","title":"Export Users Permissions","text":"<p>Compute accesses on each workspaces for each users.</p> <p></p> <p>This Flow provides another approach to Audits by crawling permissions on a user point-of-view instead of a folder point-of-view.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-users-permissions/#how-it-works","title":"How It Works","text":"<p>After listing specified users, it uses the \"Load Permissions\" action to compute ACLs for each of these users, and express them in a user-readable manner (per workspace permission). </p> <p>Then the XLSX formatting will use an expander to create, for each users, as many lines as there are workpaces.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-users-permissions/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description ExportFolder text true The path to save the exported file. Profile select, possible values: Internal Users (standard), Administrator (admin), External Users (shared) standard false Select a profile to list all users."},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-users-permissions/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/export-users-permissions/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Export Users Permissions\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Compute accesses on each workspaces for each users\",\n    \"Icon\": \"mdi mdi-account-settings\",\n    \"TplCategory\": \"analytics\",\n    \"Usage\": \"This Flow provides another approach to Audits by crawling permissions on a user point-of-view instead of a folder point-of-view.\\n\\n### How It Works\\n\\nAfter listing specified users, it uses the \\\"Load Permissions\\\" action to compute ACLs for each of these users, and express them in a user-readable manner (per workspace permission). \\n\\nThen the XLSX formatting will use an expander to create, for each users, as many lines as there are workpaces.\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Collect Users\",\n      \"IdmSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n              \"value\": \"ahp7ey5Kb2JQYXJhbWV0ZXJzLlByb2ZpbGV9fQ==\"\n            }\n          ],\n          \"Operation\": 1\n        }\n      },\n      \"Parameters\": {\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"action.idm.user-load-permissions\",\n          \"Label\": \"Load Permissions\",\n          \"Parameters\": {\n            \"attributePrefix\": \"permission:\",\n            \"ignoreWorkspacesInternal\": \"true\",\n            \"outputFormat\": \"expand-wsp\"\n          }\n        }\n      ]\n    }\n  ],\n  \"MergeAction\": {\n    \"ID\": \"actions.scheduler.log-input\",\n    \"Label\": \"Log Output\",\n    \"Parameters\": {\n      \"message\": \"Computed {{.Input.Users | len}} permissions lines\",\n      \"taskLogger\": \"true\"\n    },\n    \"ChainedActions\": [\n      {\n        \"ID\": \"actions.etl.transform\",\n        \"Label\": \"Format XLSX\",\n        \"ActionOutputFilter\": {\n          \"Query\": {\n            \"SubQueries\": [\n              {\n                \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                \"value\": \"ah17e2d0ICguSW5wdXQuVXNlcnMgfCBsZW4pIDB9fQ==\"\n              }\n            ]\n          },\n          \"Label\": \"Check Lines Number\"\n        },\n        \"Parameters\": {\n          \"cellwidth\": \"40\",\n          \"cellwidth_1\": \"30\",\n          \"cellwidth_2\": \"40\",\n          \"cellwidth_3\": \"45\",\n          \"cellwidth_4\": \"20\",\n          \"cellwidth_5\": \"20\",\n          \"csv-separator\": \",\",\n          \"dataformat\": \"string\",\n          \"dataformat_1\": \"string\",\n          \"dataformat_2\": \"string\",\n          \"dataformat_3\": \"string\",\n          \"dataformat_4\": \"string\",\n          \"dataformat_5\": \"string\",\n          \"expand\": \"\",\n          \"expand_1\": \"\",\n          \"expand_2\": \"\",\n          \"expand_3\": \"\",\n          \"expand_4\": \"\",\n          \"expand_5\": \"\",\n          \"format\": \"xlsx\",\n          \"input\": \"input\",\n          \"jsonpath\": \"$.Uuid\",\n          \"jsonpath_1\": \"$.Login\",\n          \"jsonpath_2\": \"$.Attributes[\\\"permission:workspace_uuid\\\"]\",\n          \"jsonpath_3\": \"$.Attributes[\\\"permission:workspace_label\\\"]\",\n          \"jsonpath_4\": \"$.Attributes[\\\"permission:workspace_scope\\\"]\",\n          \"jsonpath_5\": \"$.Attributes[\\\"permission:workspace_rights\\\"]\",\n          \"name\": \"User UUID\",\n          \"name_1\": \"Login ID\",\n          \"name_2\": \"Workspace UUID\",\n          \"name_3\": \"Workspace Label\",\n          \"name_4\": \"Workspace Scope\",\n          \"name_5\": \"Permissions\",\n          \"selector\": \"$.Users\",\n          \"sheet\": \"Data\"\n        },\n        \"ChainedActions\": [\n          {\n            \"ID\": \"actions.tree.put\",\n            \"Label\": \"Write Excel File\",\n            \"Parameters\": {\n              \"fieldname\": \"{\\\"@value\\\":\\\"HasProfile\\\"}\",\n              \"input\": \"rawbody\",\n              \"target_file\": \"{{.JobParameters.ExportFolder | trimSuffix \\\"/\\\"}}/users-permissions-{{.JobParameters.Profile}}-{{now | htmlDate}}.xlsx\"\n            }\n          }\n        ],\n        \"FailedFilterActions\": [\n          {\n            \"ID\": \"actions.scheduler.log-input\",\n            \"Label\": \"Nothing to Export\",\n            \"Parameters\": {\n              \"fieldname\": \"{\\\"@value\\\":\\\"FreeCondition\\\"}\",\n              \"message\": \"Nothing to export\",\n              \"taskLogger\": \"true\"\n            }\n          }\n        ]\n      }\n    ]\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"ExportFolder\",\n      \"Description\": \"The path to save the exported file. \",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"Profile\",\n      \"Description\": \"Select a profile to list all users. \",\n      \"Value\": \"standard\",\n      \"Type\": \"select\",\n      \"JsonChoices\": \"{\\\"standard\\\": \\\"Internal Users\\\", \\\"admin\\\": \\\"Administrator\\\", \\\"shared\\\": \\\"External Users\\\"}\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/folder-content-report/","title":"Folder Content Report","text":"<p>List folder contents, write a CSV and/or send a markdown email.</p> <p></p> <p>This flow interestingly demonstrates various capacities of Cells Flows: </p> <ul> <li>Use Golang templating to generate proper CSV or Markdown format based on actions input (in \"Write To CSV File\" and \"Email In Markdown\" actions)</li> <li>Use custom filters \"Free Condition\" to trigger an action based on the job-level parameter.</li> </ul>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/folder-content-report/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description Folder text pydiods1 true Path to folder where to list contents. CsvPathPrefix text personal/admin/Listing- false Prefix used to generated CSV. Current date and CSV extension will be appended. EmailToUser text admin false Send report by email (enter user Login)."},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/folder-content-report/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/folder-content-report/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Folder Content Report\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"List folder contents, write a CSV and/or send a markdown email\",\n    \"Icon\": \"mdi mdi-format-list-bulleted\",\n    \"TplCategory\": \"analytics\",\n    \"Usage\": \"This flow interestingly demonstrates various capacities of Cells Flows: \\n\\n * Use Golang templating to generate proper CSV or Markdown format based on actions input (in \\\"Write To CSV File\\\" and \\\"Email In Markdown\\\" actions)\\n * Use custom filters \\\"Free Condition\\\" to trigger an action based on the job-level parameter.\"\n  },\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Collect nodes\",\n      \"NodesSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"Chl7ey5Kb2JQYXJhbWV0ZXJzLkZvbGRlcn19\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Collect\": true,\n        \"Label\": \"List all files/folders\"\n      },\n      \"Parameters\": {\n        \"message\": \"\",\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.put\",\n          \"Label\": \"Write To CSV File\",\n          \"NodesFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"OgYucHlkaW9wAQ==\"\n                }\n              ]\n            },\n            \"Label\": \"Filter out .pydio\"\n          },\n          \"ActionOutputFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                  \"value\": \"ajt7e2lmIC5Kb2JQYXJhbWV0ZXJzLkNzdlBhdGhQcmVmaXh9fXRydWV7e2Vsc2V9fWZhbHNle3tlbmR9fQ==\"\n                }\n              ]\n            },\n            \"Label\": \"Stop if CSVPathPrefix is empty\"\n          },\n          \"Parameters\": {\n            \"contents\": \"{{$prefix:=.JobParameters.Folder}}\\\"Name\\\";\\\"Type\\\";\\\"Size\\\";\\\"Modified\\\";{{range .Input.Nodes}}\\n\\\"{{.Path | trimPrefix $prefix | trimPrefix \\\"/\\\"}}\\\";\\\"{{if eq .Type 1}}File{{else}}Folder{{end}}\\\";\\\"{{.Size}}\\\";\\\"{{.MTime | fromStamp}}\\\";{{end}}\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"FreeCondition\\\"}\",\n            \"target_file\": \"{{.JobParameters.CsvPathPrefix}}{{now | date \\\"2006-01-02\\\"}}.csv\"\n          }\n        },\n        {\n          \"ID\": \"actions.cmd.sendmail\",\n          \"Label\": \"Email in Markdown\",\n          \"NodesFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"OgYucHlkaW9wAQ==\"\n                }\n              ]\n            },\n            \"Label\": \"Filter out .pydio\"\n          },\n          \"ActionOutputFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                  \"value\": \"ajl7e2lmIC5Kb2JQYXJhbWV0ZXJzLkVtYWlsVG9Vc2VyfX10cnVle3tlbHNlfX1mYWxzZXt7ZW5kfX0=\"\n                }\n              ]\n            },\n            \"Label\": \"Stop if EmailToUser parameter is empty\"\n          },\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"PathPrefix\\\"}\",\n            \"message\": \"{{$prefix:=\\\"pydiods1\\\"}}|Type|Name|Size|Modified Since|\\n|---|---|---|---|\\n{{range .Input.Nodes}}|{{if eq .Type 1}}File{{else}}Folder{{end}}|{{.Path| trimPrefix \\\"pydiods1/\\\"}}|{{.Size}}|{{.MTime | fromStamp | ago}}|\\n{{end}}\",\n            \"subject\": \"Content listing of {{.JobParameters.Folder}}\",\n            \"to-mail\": \"\",\n            \"to-user\": \"{{.JobParameters.EmailToUser}}\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"Folder\",\n      \"Description\": \"Path to folder where to list contents.\",\n      \"Value\": \"pydiods1\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"CsvPathPrefix\",\n      \"Description\": \"Prefix used to generated CSV. Current date and CSV extension will be appended.\",\n      \"Value\": \"personal/admin/Listing-\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"EmailToUser\",\n      \"Description\": \"Send report by email (enter user Login).\",\n      \"Value\": \"admin\",\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/purge-files-older/","title":"Purge Files Older...","text":"<p>Definitely remove files that were not modified since a given period.</p> <p></p> <p>This Flow automates the task of purging old files to maintain storage size under control. It can either \"Delete\" old files directly, or simply tag them so that user is informed that they are to be removed soon.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/purge-files-older/#how-it-works","title":"How It Works","text":"<p>The Flow works as described below: </p> <ul> <li>Every days at 9PM,</li> <li>List all files inside RootFolder that are older than XX days. This uses the specific modification date search criteria that takes values similar to \"&gt;3d\" or \"&lt;1h\". </li> <li>Double check that file is not a .pydio hidden file (internal stuff)</li> <li>Use a Conditional Filter checking for the job parameter to decide wether to definitely delete files, or to add a preset metadata.</li> </ul> <p>When using the metadata feature (instead of real deletion), another job can be setup to crawl tagged files for actual deletion.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/purge-files-older/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description RootFolder text pydiods1 false Root path where to look for files to purge. FilesOlderThan integer 30 false (days) Look for files older than XX days Action select, possible values: Mark for deletion (tag), Delete (delete) tag false Either mark for deletion with a tag, or permanently delete file. MarkTagValue text to-be-deleted false If Action is \"Mark for deletion\", value of the tag to set."},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/purge-files-older/#trigger-type","title":"Trigger Type","text":"<p>Scheduled</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/purge-files-older/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Purge Files Older...\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Definitely remove files that were not modified since a given period\",\n    \"Icon\": \"mdi mdi-delete-forever\",\n    \"TplCategory\": \"analytics\",\n    \"Usage\": \"This Flow automates the task of purging old files to maintain storage size under control. It can either \\\"Delete\\\" old files directly, or simply tag them so that user is informed that they are to be removed soon.\\n\\n### How It Works\\n\\nThe Flow works as described below: \\n\\n * Every days at 9PM,\\n * List all **files** inside **RootFolder** that are older than **XX days**. This uses the specific modification date search criteria that takes values similar to \\\"\\u003e3d\\\" or \\\"\\u003c1h\\\". \\n * Double check that file is not a .pydio hidden file (internal stuff)\\n * Use a Conditional Filter checking for the job parameter to decide wether to **definitely delete** files, or to **add a preset metadata**.\\n\\nWhen using the metadata feature (instead of real deletion), another job can be setup to crawl tagged files for actual deletion.\"\n  },\n  \"Custom\": true,\n  \"Schedule\": {\n    \"Iso8601Schedule\": \"R/2020-03-03T20:00:00.471Z/PT24H\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Collect Files\",\n      \"NodesSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"Ch17ey5Kb2JQYXJhbWV0ZXJzLlJvb3RGb2xkZXJ9fTABggEjPnt7LkpvYlBhcmFtZXRlcnMuRmlsZXNPbGRlclRoYW59fWQ=\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"List Root Folder\"\n      },\n      \"Parameters\": {\n        \"internalLogger\": \"false\",\n        \"message\": \"{{.Node.Path}}\",\n        \"taskLogger\": \"false\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Additional Filtering\",\n          \"NodesFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"OgYucHlkaW9wAQ==\"\n                }\n              ]\n            },\n            \"Label\": \"Exclude .pydio\",\n            \"Description\": \"Filter out .pydio hidden files from selection.\"\n          },\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"DurationDate\\\"}\",\n            \"message\": \"\",\n            \"taskLogger\": \"false\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.tree.delete\",\n              \"ActionOutputFilter\": {\n                \"Query\": {\n                  \"SubQueries\": [\n                    {\n                      \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                      \"value\": \"akB7e2lmIGVxIC5Kb2JQYXJhbWV0ZXJzLkFjdGlvbiAiZGVsZXRlIn19dHJ1ZXt7ZWxzZX19ZmFsc2V7e2VuZH19\"\n                    }\n                  ]\n                },\n                \"Label\": \"Delete or Tag?\"\n              },\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"FreeCondition\\\"}\",\n                \"ignoreNonExisting\": \"true\"\n              },\n              \"FailedFilterActions\": [\n                {\n                  \"ID\": \"actions.put-meta\",\n                  \"Parameters\": {\n                    \"json\": \"{\\\"usermeta-tags\\\":\\\"{{.JobParameters.MarkTagValue}}\\\"}\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 10,\n  \"Parameters\": [\n    {\n      \"Name\": \"RootFolder\",\n      \"Description\": \"Root path where to look for files to purge.\",\n      \"Value\": \"pydiods1\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"FilesOlderThan\",\n      \"Description\": \"(days) Look for files older than XX days\",\n      \"Value\": \"30\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"Action\",\n      \"Description\": \"Either mark for deletion with a tag, or permanently delete file.\",\n      \"Value\": \"tag\",\n      \"Type\": \"select\",\n      \"JsonChoices\": \"{\\\"tag\\\":\\\"Mark for deletion\\\",\\\"delete\\\":\\\"Delete\\\"}\"\n    },\n    {\n      \"Name\": \"MarkTagValue\",\n      \"Description\": \"If Action is \\\"Mark for deletion\\\", value of the tag to set. \",\n      \"Value\": \"to-be-deleted\",\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/read-license-stats/","title":"Read License Stats","text":"<p>Check current license statistics and send alerts.</p> <p></p> <p>This Flow performs a gRPC request to an internal Cell service and analyze its result to detect current license usage.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/read-license-stats/#how-it-works","title":"How It Works","text":""},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/read-license-stats/#grpc-request","title":"gRPC Request","text":"<p>The first step is sending a gRPC call to the <code>pydio.grpc.license</code> service. The gRPC method is identified by the three parts: <code>{packageName}.{ProtobufService}.{ProtobufMethod}</code>, here <code>cert.LicensingService.LicenseStats</code>. The package name may be ignored but this can lead to conflict if multiple services have the same name in different packages.</p> <p>This requests is performed in JSON and returns JSON as well.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/read-license-stats/#json-evaluation","title":"JSON Evaluation","text":"<p>The combination of Go Template and the <code>gval</code> function allows us to compute the percentage of license usage.  </p> <p>Here is a breakdown of the percentage of users computation:  * <code>.LastOutput.JsonAsValue.Map | gval</code>     - Load JSON as an Object (for Javascript, which means a map[string]interface for GO)    - Feed this Object to the gval evaluator below * <code>\"$[0].ActiveUsers / $[0].License.MaxUsers * 100\"</code>    - Object is always passed as $[0], then keys are access as normal JSONPath    - gval provides basic compute operations (/, +, -, *, etc...)</p> <p>The flow should be expanded with a \"Send Email\" action to alert Administrator that license limits are soon to be reached.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/read-license-stats/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description ExpirationDays integer 30 false Check that license does not expire in less than XX days. UsersUsage integer 90 false Check that less that there are currently less than  XX% of allowed users."},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/read-license-stats/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/read-license-stats/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Read License Stats\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Check current license statistics and send alerts\",\n    \"Icon\": \"mdi mdi-certificate\",\n    \"TplCategory\": \"analytics\",\n    \"Usage\": \"This Flow performs a gRPC request to an internal Cell service and analyze its result to detect current license usage.\\n\\n### How It Works\\n\\n#### gRPC Request\\n\\nThe first step is sending a gRPC call to the `pydio.grpc.license` service. The gRPC method is identified by the three parts:  \\n`{packageName}.{ProtobufService}.{ProtobufMethod}`, here `cert.LicensingService.LicenseStats`. The package name may be ignored but this can lead to conflict if multiple services have the same name in different packages.\\n\\nThis requests is performed in JSON and returns JSON as well.\\n\\n#### JSON Evaluation\\n\\nThe combination of Go Template and the `gval` function allows us to compute the percentage of license usage.  \\n\\nHere is a breakdown of the percentage of users computation: \\n* `.LastOutput.JsonAsValue.Map | gval` \\n   - Load JSON as an Object (for Javascript, which means a map[string]interface for GO)\\n   - Feed this Object to the gval evaluator below\\n* `\\\"$[0].ActiveUsers / $[0].License.MaxUsers * 100\\\"`\\n   - Object is always passed as $[0], then keys are access as normal JSONPath\\n   - gval provides basic compute operations (/, +, -, *, etc...)\\n   \\n\\nThe flow should be expanded with a \\\"Send Email\\\" action to alert Administrator that license limits are soon to be reached.\"\n  },\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"License Stats\",\n      \"Parameters\": {\n        \"method\": \"LicensingService.LicenseStats\",\n        \"request\": \"{}\",\n        \"service\": \"pydio.grpc.license\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Alert #users\",\n          \"ActionOutputFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                  \"value\": \"anR7e2d2YWwgIiRbMF0uQWN0aXZlVXNlcnMgLyAkWzBdLkxpY2Vuc2UuTWF4VXNlcnMgPiAkWzFdLzEwMCIgLkxhc3RPdXRwdXQuSnNvbkFzVmFsdWUuTWFwIC5Kb2JQYXJhbWV0ZXJzLlVzZXJzVXNhZ2V9fQ==\"\n                }\n              ]\n            },\n            \"Label\": \"90% of users\"\n          },\n          \"Parameters\": {\n            \"message\": \"Users usage {{.LastOutput.JsonAsValue.Map | gval \\\"$[0].ActiveUsers / $[0].License.MaxUsers * 100\\\"}}%\",\n            \"taskLogger\": \"true\"\n          }\n        },\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Alert Date\",\n          \"ActionOutputFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                  \"value\": \"atQBe3skaG91cnM6PSBndmFsICIkWzBdKjI0IiAuSm9iUGFyYW1ldGVycy5FeHBpcmF0aW9uRGF5c319e3skbW9kOj0gY2F0ICRob3VycyAiaCIgfCBub3NwYWNlfX17eyRsaW1pdCA6PSBub3d8ZGF0ZV9tb2RpZnkgJG1vZHx1bml4RXBvY2h9fXt7Z3ZhbCAiJFswXS5MaWNlbnNlLkV4cGlyZVRpbWUgPCAkWzFdIiAuTGFzdE91dHB1dC5Kc29uQXNWYWx1ZS5NYXAgJGxpbWl0fX0=\"\n                }\n              ]\n            },\n            \"Label\": \"Check Expiration Date\"\n          },\n          \"Parameters\": {\n            \"message\": \"License will expire in less than {{.JobParameters.ExpirationDays}} days (on {{.LastOutput.JsonAsValue.Map.License.ExpireTime | fromStamp | date \\\"2006-01-02\\\" }})\",\n            \"taskLogger\": \"true\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"ExpirationDays\",\n      \"Description\": \"Check that license does not expire in less than XX days.\",\n      \"Value\": \"30\",\n      \"Type\": \"integer\"\n    },\n    {\n      \"Name\": \"UsersUsage\",\n      \"Description\": \"Check that less that there are currently less than  XX% of allowed users.\",\n      \"Value\": \"90\",\n      \"Type\": \"integer\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/storage-usage/","title":"Storage Usage","text":"<p>Query objects service to get statistics about storage.</p> <p></p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/storage-usage/#how-it-works","title":"How It Works","text":"<p>Like for the License Stats, this flow is a good demonstration of using gRPC request to an internal Cells service, which result is returned in JSON format, then using Go Template with <code>gval</code> function to compute percentage of storage usage. Note that \"storage\" here is seens as Cells \"objects\" service running for each (or shared by) datasources. </p> <p>By default, the \"Send Email\" action at the end (to alert administrator that storage limits are soon to be reached) is in Bypass mode and has to be activated.</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/storage-usage/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description ObjectsService text local1 true Objects service to check. Threshold integer 5 true Threshold in percent."},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/storage-usage/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-analysis-insights-and-reporting/storage-usage/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Storage Usage\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Query objects service to get statistics about storage\",\n    \"Icon\": \"mdi mdi-gauge\",\n    \"TplCategory\": \"analytics\",\n    \"Usage\": \"### How It Works\\n\\nLike for the License Stats, this flow is a good demonstration of using gRPC request to an internal Cells service, which result is returned in JSON format, then using Go Template with `gval` function to compute percentage of storage usage. Note that \\\"storage\\\" here is seens as Cells \\\"objects\\\" service running for each (or shared by) datasources. \\n\\nBy default, the \\\"Send Email\\\" action at the end (to alert administrator that storage limits are soon to be reached) is in Bypass mode and has to be activated.\"\n  },\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.rpc\",\n      \"Label\": \"Stats Request\",\n      \"Parameters\": {\n        \"method\": \"ObjectsEndpoint.StorageStats\",\n        \"request\": \"{}\",\n        \"service\": \"pydio.grpc.data.objects.{{.JobParameters.ObjectsService}}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Storage OK\",\n          \"ActionOutputFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                  \"value\": \"am97e2d2YWwgIiRbMF0uU3RhdHMuRnJlZSAvICRbMF0uU3RhdHMuVG90YWwgKiAxMDAgPiAkWzFdIiAuTGFzdE91dHB1dC5Kc29uQXNWYWx1ZS5NYXAgLkpvYlBhcmFtZXRlcnMuVGhyZXNob2xkfX0=\"\n                }\n              ]\n            },\n            \"Label\": \"Analyze Result\"\n          },\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"FreeCondition\\\"}\",\n            \"message\": \"{{.LastOutput.JsonAsValue.Map.Stats.Free | humanBytes}} /  {{.LastOutput.JsonAsValue.Map.Stats.Total | humanBytes}}\",\n            \"taskLogger\": \"true\"\n          },\n          \"FailedFilterActions\": [\n            {\n              \"ID\": \"actions.scheduler.log-input\",\n              \"Label\": \"Storage Almost FULL\",\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"FreeCondition\\\"}\",\n                \"message\": \"Storage Full ! \\n{{.LastOutput.JsonAsValue.Map.Stats.Free | humanBytes}} /  {{.LastOutput.JsonAsValue.Map.Stats.Total | humanBytes}}\",\n                \"taskLogger\": \"true\"\n              },\n              \"ChainedActions\": [\n                {\n                  \"ID\": \"actions.cmd.sendmail\",\n                  \"Bypass\": true,\n                  \"Parameters\": {\n                    \"fieldname\": \"{\\\"@value\\\":\\\"FreeCondition\\\"}\",\n                    \"message\": \"Storage left is \\u003c {{.JobParameters.Threshold}}% !\\n\\nFree Space is {{.LastOutput.JsonAsValue.Map.Stats.Free | humanBytes}} on a total of  {{.LastOutput.JsonAsValue.Map.Stats.Total | humanBytes}}\",\n                    \"subject\": \"Storage left is \\u003c {{.JobParameters.Threshold}}% ! \",\n                    \"to-mail\": \"\",\n                    \"to-user\": \"admin\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"ObjectsService\",\n      \"Description\": \"Objects service to check.\",\n      \"Value\": \"local1\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"Threshold\",\n      \"Description\": \"Threshold in percent.\",\n      \"Value\": \"5\",\n      \"Mandatory\": true,\n      \"Type\": \"integer\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/workflow-automation/index/","title":"Workflow Automation","text":"<p>Combine multiple actions and steps into a single streamlined workflow that uses automation and human inputs to improve a business process.</p> <ul> <li>Create SmartForm</li> <li>SmartForm Submission</li> <li>Validation Workflow</li> </ul>"},{"location":"cellsflows/preset-flows/workflow-automation/smartform-submission/","title":"SmartForm Submission","text":"<p>Take action when a SmartForm is submitted by user.</p> <p></p> <p>This Flow shows how to read a SmartForm submitted values. This is triggered by a metadata change, assuming the SmartForm is configured to set a metadata value to \"submitted\" on completion.</p>"},{"location":"cellsflows/preset-flows/workflow-automation/smartform-submission/#reading-smartform-values","title":"Reading SmartForm Values","text":"<p>The values of a submitted SmartForm are stored in JSON inside the <code>form.values</code> file. The Flow uses the \"JSON Object as Vars\" feature of the Read File action to directly parse this JSON and assign its keys to runtime variables.</p>"},{"location":"cellsflows/preset-flows/workflow-automation/smartform-submission/#parameters","title":"Parameters","text":"<p>No parameters defined</p>"},{"location":"cellsflows/preset-flows/workflow-automation/smartform-submission/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/workflow-automation/smartform-submission/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"SmartForm Submission\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Take action when a SmartForm is submitted by user\",\n    \"Icon\": \"mdi mdi-playlist-check\",\n    \"TplCategory\": \"workflow\",\n    \"Usage\": \"This Flow shows how to read a SmartForm submitted values. This is triggered by a metadata change, assuming the SmartForm is configured to set a metadata value to \\\"submitted\\\" on completion.\\n\\n### Reading SmartForm Values\\n\\nThe values of a submitted SmartForm are stored in JSON inside the `form.values` file. The Flow uses the \\\"JSON Object as Vars\\\" feature of the Read File action to directly parse this JSON and assign its keys to runtime variables.\"\n  },\n  \"Custom\": true,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.tree.read\",\n      \"Label\": \"SmartForm as Vars\",\n      \"ActionOutputFilter\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n              \"value\": \"aht7e2d0IChsZW4gLklucHV0Lk5vZGVzKSAwfX0=\"\n            }\n          ]\n        },\n        \"Label\": \"Prevent empty trigger\"\n      },\n      \"Parameters\": {\n        \"alt_input\": \"{{.Node.Path}}/form.values\",\n        \"format\": \"vars\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Log form values\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"FileName\\\"}\",\n            \"message\": \"Loaded Runtime Variables : {{.Vars}}\",\n            \"taskLogger\": \"true\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.scheduler.log-input\",\n              \"Label\": \"Submitted files\",\n              \"NodesSelector\": {\n                \"Query\": {\n                  \"SubQueries\": [\n                    {\n                      \"type_url\": \"type.googleapis.com/tree.Query\",\n                      \"value\": \"Cg97ey5Ob2RlLlBhdGh9fS86C2Zvcm0udmFsdWVzcAE=\"\n                    }\n                  ],\n                  \"Operation\": 1\n                },\n                \"Collect\": true,\n                \"Label\": \"Load submitted files\",\n                \"Description\": \"Select all files except .pydio hidden files\"\n              },\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"FileName\\\"}\",\n                \"message\": \"Submitted files\\n{{range .Input.Nodes}}\\n- {{.Path}}\\n{{end}}\",\n                \"taskLogger\": \"true\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"Hooks\": [\n    {\n      \"ApiSlug\": \"submit-smart\",\n      \"Policies\": [\n        {\n          \"Action\": 3,\n          \"Subject\": \"profile:admin\",\n          \"Effect\": 1\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/workflow-automation/validation-workflow/","title":"Validation Workflow","text":"<p>Validation workflow based on metadata and roles.</p> <p></p>"},{"location":"cellsflows/preset-flows/workflow-automation/validation-workflow/#usecase-overview","title":"Usecase Overview","text":"<p>This flow provides a full-featured, customizable validation workflow. It uses files metadata and specific roles to achieve the following approval scenario: </p> <ul> <li>Alert Reviewers: when a file is created, tag it as \"pending\" and send an alert to all users with \"reviewer\" role.</li> <li>Inform Owner: when a reviewer changes its metadata from \"pending\" to another status (\"In Review\" or \"Validated\"), notify the original creator that his file is being looked at.</li> <li>Reminder: A scheduled task look for \"pending\" files that were not reviewed since a specific period, and proactively notify reviewers that they still have some work to do.</li> </ul> <p>At job creation, \"reviewer\" role and specific metadata are created with the correct policies, making sure that only reviewers can manually change the status. </p>"},{"location":"cellsflows/preset-flows/workflow-automation/validation-workflow/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description ReviewersRole text reviewer true Role applied to users in charge of reviewing files (role UUID). ReminderAfter text -5m true Period after which reviewers are reminded of files still pending validation."},{"location":"cellsflows/preset-flows/workflow-automation/validation-workflow/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/workflow-automation/validation-workflow/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Validation Workflow\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Validation workflow based on metadata and roles\",\n    \"Icon\": \"mdi mdi-file-check\",\n    \"TplCategory\": \"workflow\",\n    \"Usage\": \"### Usecase Overview\\n\\nThis flow provides a full-featured, customizable validation workflow. It uses files metadata and specific roles to achieve the following approval scenario: \\n\\n - **Alert Reviewers**: when a file is created, tag it as \\\"pending\\\" and send an alert to all users with \\\"reviewer\\\" role.\\n - **Inform Owner**: when a reviewer changes its metadata from \\\"pending\\\" to another status (\\\"In Review\\\" or \\\"Validated\\\"), notify the original creator that his file is being looked at.\\n - **Reminder**: A scheduled task look for \\\"pending\\\" files that were not reviewed since a specific period, and proactively notify reviewers that they still have some work to do.\\n\\nAt job creation, \\\"reviewer\\\" role and specific metadata are created with the correct policies, making sure that only reviewers can manually change the status. \\n\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:0\",\n    \"NODE_CHANGE:6\"\n  ],\n  \"Schedule\": {\n    \"Iso8601Schedule\": \"R/2012-01-01T07:00:00.828Z/PT1H\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.put-meta\",\n      \"Label\": \"Set Pending\",\n      \"ContextMetaFilter\": {\n        \"Type\": 1,\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n              \"value\": \"QiB7ey5Kb2JQYXJhbWV0ZXJzLlJldmlld2Vyc1JvbGV9fVAB\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"Exclude reviewers\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"File Created\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTow\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"json\": \"{\\\"usermeta-validation\\\":\\\"pending\\\",\\\"usermeta-createdby\\\":\\\"{{.ContextUser.Login}}\\\",\\\"usermeta-validation-changed\\\":\\\"{{now | toStamp}}\\\"}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.idm.user-activity\",\n          \"Label\": \"Notify Reviewers\",\n          \"IdmSelector\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                  \"value\": \"QiB7ey5Kb2JQYXJhbWV0ZXJzLlJldmlld2Vyc1JvbGV9fQ==\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Collect\": true,\n            \"Label\": \"Select reviewers\",\n            \"Description\": \"Select admin user\"\n          },\n          \"Parameters\": {\n            \"Condition\": \"{\\\"@value\\\":\\\"StringNotMatchCondition\\\"}\",\n            \"attachActor\": \"true\",\n            \"attachObject\": \"true\",\n            \"input-users\": \"true\",\n            \"markdown\": \"New file [Object] uploaded by [Actor] is pending validation\",\n            \"title\": \"New file is pending validation\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.idm.user-activity\",\n      \"Label\": \"Notify creator\",\n      \"TriggerFilter\": {\n        \"Label\": \"Status Updated\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTo2\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"Condition\": \"{\\\"@value\\\":\\\"StringNotMatchCondition\\\"}\",\n        \"attachActor\": \"true\",\n        \"attachObject\": \"true\",\n        \"markdown\": \"[Object] is now \\\"{{.Node.GetStringMeta \\\"usermeta-validation\\\"}}\\\" (currently reviewed by [Actor])\",\n        \"targetLogins\": \"{{.Node.GetStringMeta \\\"usermeta-createdby\\\"}}\",\n        \"title\": \"{{.Node.Path | base}} is {{.Node.GetStringMeta \\\"usermeta-validation\\\"}}\"\n      }\n    },\n    {\n      \"ID\": \"actions.put-meta\",\n      \"Label\": \"Update reminder time\",\n      \"NodesSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"SoEBK01ldGEudXNlcm1ldGEtdmFsaWRhdGlvbjpwZW5kaW5nICtNZXRhLnVzZXJtZXRhLXZhbGlkYXRpb24tY2hhbmdlZDo8e3tub3cgfCBkYXRlX21vZGlmeSAuSm9iUGFyYW1ldGVycy5SZW1pbmRlckFmdGVyIHwgdG9TdGFtcH19\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Collect\": true,\n        \"Label\": \"Needs Reminder\",\n        \"Description\": \"Select all files except .pydio hidden files\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Reminder checks\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"CAE=\"\n            },\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"EAE=\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"json\": \"{\\\"usermeta-validation-changed\\\":\\\"{{now | toStamp}}\\\"}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.cmd.sendmail\",\n          \"Label\": \"Notify reviewers\",\n          \"IdmSelector\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n                  \"value\": \"QiB7ey5Kb2JQYXJhbWV0ZXJzLlJldmlld2Vyc1JvbGV9fQ==\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Collect\": true,\n            \"Label\": \"Select reviewers\",\n            \"Description\": \"Select admin user\"\n          },\n          \"Parameters\": {\n            \"Condition\": \"{\\\"@value\\\":\\\"StringNotMatchCondition\\\"}\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"HasProfile\\\"}\",\n            \"input-users\": \"true\",\n            \"message\": \"Warning, there are still {{len .Input.Nodes}} that are pending validation.\\n\\n{{range .Input.Nodes}}\\n - {{.Path | base}}\\n{{end}}\",\n            \"subject\": \"{{len .Input.Nodes}} are still pending validation\",\n            \"to-user\": \"\"\n          }\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 20,\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/tree.Query\",\n          \"value\": \"MAE=\"\n        }\n      ]\n    },\n    \"Label\": \"Files only\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"ReviewersRole\",\n      \"Description\": \"Role applied to users in charge of reviewing files (role UUID).\",\n      \"Value\": \"reviewer\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"ReminderAfter\",\n      \"Description\": \"Period after which reviewers are reminded of files still pending validation.\",\n      \"Value\": \"-5m\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ],\n  \"ResourcesDependencies\": [\n    {\n      \"type_url\": \"type.googleapis.com/idm.UserMetaNamespace\",\n      \"value\": \"ChN1c2VybWV0YS12YWxpZGF0aW9uEhFWYWxpZGF0aW9uIFN0YXR1cyABKt0BeyJ0eXBlIjoiY2hvaWNlIiwiZGF0YSI6eyJpdGVtcyI6W3sia2V5IjoicGVuZGluZyIsInZhbHVlIjoiUGVuZGluZyB2YWxpZGF0aW9uIiwiY29sb3IiOiIjYzY2In0seyJrZXkiOiJyZXZpZXciLCJ2YWx1ZSI6IkluIFJldmlldyIsImNvbG9yIjoiI2ZmOTgwMCJ9LHsia2V5IjoidmFsaWRhdGVkIiwidmFsdWUiOiJWYWxpZGF0ZWQiLCJjb2xvciI6IiM2YzYifV0sInN0ZXBzIjp0cnVlfX0yBxgCIgEqKAEyExgDIg1wcm9maWxlOmFkbWluKAEyExgDIg1yb2xlOnJldmlld2VyKAE=\"\n    },\n    {\n      \"type_url\": \"type.googleapis.com/idm.UserMetaNamespace\",\n      \"value\": \"ChJ1c2VybWV0YS1jcmVhdGVkYnkSCkNyZWF0ZWQgQnkYAyoReyJ0eXBlIjoic3RyaW5nIn0yExgCIg1yb2xlOnJldmlld2VyKAEyExgDIg1yb2xlOnJldmlld2VyKAEyExgCIg1wcm9maWxlOmFkbWluKAEyExgDIg1wcm9maWxlOmFkbWluKAE=\"\n    },\n    {\n      \"type_url\": \"type.googleapis.com/idm.UserMetaNamespace\",\n      \"value\": \"Cht1c2VybWV0YS12YWxpZGF0aW9uLWNoYW5nZWQSGVZhbGlkYXRpb24gU3RhdHVzIENoYW5nZWQYBCABKkB7InR5cGUiOiJkYXRlIiwiZGF0YSI6eyJmb3JtYXQiOiJkYXRlLXRpbWUiLCJkaXNwbGF5Ijoibm9ybWFsIn19MhMYAyINcHJvZmlsZTphZG1pbigBMhMYAiINcHJvZmlsZTphZG1pbigBMhMYAyINcm9sZTpyZXZpZXdlcigBMhMYAiINcm9sZTpyZXZpZXdlcigB\"\n    },\n    {\n      \"type_url\": \"type.googleapis.com/idm.Role\",\n      \"value\": \"CghyZXZpZXdlchIIUmV2aWV3ZXJCFhgCIhBwcm9maWxlOnN0YW5kYXJkKAFCExgDIg1wcm9maWxlOmFkbWluKAE=\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/workflow-automation/create-smartform/","title":"Create SmartForm","text":"<p>Create a SmartForm for each new user, based on a SmartForm template.</p> <p></p> <p>This flow can be used to automatically create a \"SmartForm\" when a user is created. A dedicated location is created in the user personal folder, and a SmartForm is attached to this folder.</p>"},{"location":"cellsflows/preset-flows/workflow-automation/create-smartform/#smartform-definition-and-templates","title":"SmartForm Definition and Templates","text":"<p>Creating a SmartForm is just about defining a form with a specific JSON format, and attaching this JSON to the dedicated metadata. To avoid writing the JSON from scratch, this Flow relies on a SmartForm \"Template UUID\" for creation, that will be loaded from the Cells generic Document Store. As such, you must have previously saved a SmartForm as a template, and use the \"Copy\" button inside the templates list to get the Uuid of this template. You can then use this UUID in the job's parameters.</p>"},{"location":"cellsflows/preset-flows/workflow-automation/create-smartform/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description FolderPath text personal/{{.User.Login}}/On-Boarding true Folder to create and that will display the form. FormTemplateUuid text true Form Builder template identifier."},{"location":"cellsflows/preset-flows/workflow-automation/create-smartform/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/workflow-automation/create-smartform/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Create SmartForm\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Create a SmartForm for each new user, based on a SmartForm template\",\n    \"Icon\": \"mdi mdi-playlist-check\",\n    \"TplCategory\": \"workflow\",\n    \"Usage\": \"This flow can be used to automatically create a \\\"SmartForm\\\" when a user is created. A dedicated location is created in the user personal folder, and a SmartForm is attached to this folder.\\n\\n### SmartForm Definition and Templates\\n\\nCreating a SmartForm is just about defining a form with a specific JSON format, and attaching this JSON to the dedicated metadata. To avoid writing the JSON from scratch, this Flow relies on a SmartForm \\\"Template UUID\\\" for creation, that will be loaded from the Cells generic Document Store. As such, you must have previously saved a SmartForm as a template, and use the \\\"Copy\\\" button inside the templates list to get the Uuid of this template. You can then use this UUID in the job's parameters.\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"IDM_CHANGE:USER:0\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.tree.mkdir\",\n      \"Parameters\": {\n        \"check_exist\": \"true\",\n        \"path\": \"{{.JobParameters.FolderPath}}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.cmd.rpc\",\n          \"Parameters\": {\n            \"method\": \"DocStore.GetDocument\",\n            \"request\": \"{\\n\\\"StoreID\\\":\\\"MetaTemplates\\\", \\n\\\"DocumentID\\\":\\\"{{.JobParameters.FormTemplateUuid}}\\\"\\n}\",\n            \"service\": \"pydio.grpc.docstore\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.scheduler.build-message\",\n              \"Label\": \"Format Response\",\n              \"Parameters\": {\n                \"ctype\": \"json\",\n                \"message\": \"{{index (.LastOutput.JsonAsValue.Map.Document.Data | jsonStringToMap) \\\"Meta\\\" | toJson}}\"\n              },\n              \"ChainedActions\": [\n                {\n                  \"ID\": \"actions.put-meta\",\n                  \"Label\": \"Attach Form\",\n                  \"Parameters\": {\n                    \"json\": \"{\\\"usermeta-cells-formbuilder\\\":\\\"{{.LastOutput.JsonBody | toString | trimQuotes}}\\\"}\"\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"IdmFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/idm.UserSingleQuery\",\n          \"value\": \"aghzdGFuZGFyZA==\"\n        }\n      ],\n      \"Operation\": 1\n    },\n    \"Label\": \"Standard Users Only\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"FolderPath\",\n      \"Description\": \"Folder to create and that will display the form.\",\n      \"Value\": \"personal/{{.User.Login}}/On-Boarding\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"FormTemplateUuid\",\n      \"Description\": \"Form Builder template identifier.\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/index/","title":"Data Formatting and Conversion","text":"<p>Extract file contents for pre-processing, virus detection, format conversion, etc.</p> <ul> <li>Broken Thumbnails</li> <li>Convert Tools</li> <li>PDF Thumbnails</li> <li>Recompute hashes</li> <li>Scan with Antivirus</li> <li>Tika Contents Extraction</li> <li>Users PDF Actions</li> </ul>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/pdf-thumbnails/","title":"PDF Thumbnails","text":"<p>Create image previews from PDF files.</p> <p></p> <p>This Flow generates an image thumbnail from PDF using the command-line tool <code>pdftoppm</code>. </p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/pdf-thumbnails/#important-note","title":"Important Note","text":"<p>As the Flow is using the \"Shell Command\" action, you must make sure to install the pdftoppm binary on the machine, and declare it manually in the Cells configuration to allow Cells Flows user to acces it.  This is done using the configuration key \"defaults/schedulerShellAllowedCommands\", that must contains a {key:Label} object. It will look like :  <pre><code>{\n/// config file\n   \"defaults\":{\n      // other existing keys\n      \"schedulerShellAllowedCommands\":{\n        \"pdftoppm\": \"PDF Converter\"\n      }\n   }\n</code></pre> You can add here any other binary that you wish to use with Cells Flows.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/pdf-thumbnails/#how-it-works","title":"How It Works","text":"<p>The Flow is composed of two branches to handle the complete files lifecycle: </p> <ul> <li>The Create/Update event triggers a call to pdfppm to associate a preview image with the PDF. It is attached to the original file as \"ImagePreview\" metadata.</li> <li>The Delete event will clean the associated thumbnail if it exists.</li> </ul>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/pdf-thumbnails/#parameters","title":"Parameters","text":"<p>No parameters defined</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/pdf-thumbnails/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/pdf-thumbnails/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"PDF Thumbnails\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Create image previews from PDF files\",\n    \"Icon\": \"mdi mdi-image-filter\",\n    \"TplCategory\": \"content-processing\",\n    \"Usage\": \"This Flow generates an image thumbnail from PDF using the command-line tool `pdftoppm`. \\n\\n### Important Note\\n\\nAs the Flow is using the \\\"Shell Command\\\" action, you must make sure to **install** the pdftoppm binary on the machine, **and declare** it manually in the Cells configuration to allow Cells Flows user to acces it. \\nThis is done using the configuration key \\\"defaults/schedulerShellAllowedCommands\\\", that must contains a {key:Label} object. It will look like : \\n```\\n{\\n/// config file\\n   \\\"defaults\\\":{\\n      // other existing keys\\n      \\\"schedulerShellAllowedCommands\\\":{\\n      \\t\\\"pdftoppm\\\": \\\"PDF Converter\\\"\\n      }\\n   }\\n```\\nYou can add here any other binary that you wish to use with Cells Flows.\\n\\n### How It Works\\n\\nThe Flow is composed of two branches to handle the complete files lifecycle: \\n\\n - The Create/Update event triggers a call to pdfppm to associate a preview image with the PDF. It is attached to the original file as \\\"**ImagePreview**\\\" metadata.\\n - The Delete event will clean the associated thumbnail if it exists.\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:0\",\n    \"NODE_CHANGE:3\",\n    \"NODE_CHANGE:5\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.cmd.shell\",\n      \"Label\": \"PDF to Image\",\n      \"TriggerFilter\": {\n        \"Label\": \"Create/Update\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTowGg1OT0RFX0NIQU5HRToz\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"cmd\": \"pdftoppm\",\n        \"inputStream\": \"true\",\n        \"inputTempFile\": \"false\",\n        \"outputBinary\": \"true\",\n        \"outputStream\": \"true\",\n        \"parameters\": \"- -jpeg -jpegopt quality=60 -f 1 -l 1 -r 72 -singlefile\",\n        \"storeOutput\": \"thumbnails/{{.Node.Uuid}}.jpg\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.meta\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n            \"metaJSON\": \"{\\\"ImagePreview\\\":\\\"{{.Node.Uuid}}.jpg\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"NodesSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"ah10aHVtYm5haWxzL3t7Lk5vZGUuVXVpZH19LmpwZw==\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Collect\": true,\n        \"Label\": \"Find Thumbnail\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Clean on Delete\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTo1\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n        \"message\": \"\",\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.delete\",\n          \"NodesFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"Cgp0aHVtYm5haWxz\"\n                }\n              ]\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 10,\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CicKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRIFUgNwZGY=\"\n        },\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CiQKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRICMAEQAQ==\"\n        }\n      ],\n      \"Operation\": 1\n    }\n  }\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/recompute-hashes/","title":"Recompute hashes","text":"<p>Recompute files unique hashes (using Cells custom algorithm).</p> <p></p> <p>This flow can be used to compute (or recompute) files hashes inside a specific folder. </p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/recompute-hashes/#usage","title":"Usage","text":"<p>It was primarily introduced in version 4 to attach a new hash signature to files <code>x-cells-hash</code> metadata. This new algorithm (<code>Cells Internal</code>) was introduced to provide a consistent hashing through the whole application, whatever the upload method (direct PUT, Multipart), the encryption mechanism and the datasource storage.</p> <p>Apart from this <code>x-cells-hash</code> format, The \"Compute Hash\" action can also be used to compute common hashes and attach them to any metadata. Supported algorithm are <code>md4</code>, <code>md5</code>, <code>sha1</code>, <code>sha256</code>, <code>sha512</code>.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/recompute-hashes/#how-it-works","title":"How It Works","text":"<p>This Flow is a good demonstration of the \"Merge Action\" mechanism, that allows running many tasks in parallel, and wait for all of them to be finished before going to next step. In that case, the hash of many files are computed in parallel. The number of actually running tasks is defined by the job \"Max. Parallel Task\" shown at the bottom of the graph. </p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/recompute-hashes/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description SelectionPrefix text true Use a datasource (or a deeper path) to limit the initial selection. ForceRecompute boolean false false Force recomputing hash even if it is found UpdateDSHashing boolean false false Trigger datasource attribute update after all hashes are computed."},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/recompute-hashes/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/recompute-hashes/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Recompute hashes\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Recompute files unique hashes (using Cells custom algorithm)\",\n    \"Icon\": \"mdi mdi-pound-box\",\n    \"TplCategory\": \"content-processing\",\n    \"Usage\": \"This flow can be used to compute (or recompute) files hashes inside a specific folder. \\n\\n### Usage\\n\\nIt was primarily introduced in version 4 to attach a new hash signature to files `x-cells-hash` metadata. This new algorithm (`Cells Internal`) was introduced to provide a consistent hashing through the whole application, whatever the upload method (direct PUT, Multipart), the encryption mechanism and the datasource storage.\\n\\nApart from this `x-cells-hash` format, The \\\"Compute Hash\\\" action can also be used to compute common hashes and attach them to any metadata. Supported algorithm are `md4`, `md5`, `sha1`, `sha256`, `sha512`.\\n\\n### How It Works\\n\\nThis Flow is a good demonstration of the \\\"Merge Action\\\" mechanism, that allows running many tasks in parallel, and wait for all of them to be finished before going to next step. In that case, the hash of many files are computed in parallel. The number of actually running tasks is defined by the job \\\"Max. Parallel Task\\\" shown at the bottom of the graph. \"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.tree.cells-hash\",\n      \"NodesSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"CiJ7ey5Kb2JQYXJhbWV0ZXJzLlNlbGVjdGlvblByZWZpeH19MAE=\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"List Files\"\n      },\n      \"Parameters\": {\n        \"forceRecompute\": \"{{.JobParameters.ForceRecompute}}\"\n      }\n    }\n  ],\n  \"MergeAction\": {\n    \"ID\": \"actions.scheduler.log-input\",\n    \"Label\": \"Wait for all Hashes\",\n    \"Parameters\": {\n      \"message\": \"\",\n      \"taskLogger\": \"false\"\n    },\n    \"ChainedActions\": [\n      {\n        \"ID\": \"actions.tree.ds-attribute\",\n        \"Label\": \"Set DS Attribute\",\n        \"DataSourceSelector\": {\n          \"Query\": {\n            \"SubQueries\": [\n              {\n                \"type_url\": \"type.googleapis.com/object.DataSourceSingleQuery\",\n                \"value\": \"CiJ7ey5Kb2JQYXJhbWV0ZXJzLlNlbGVjdGlvblByZWZpeH19\"\n              }\n            ]\n          }\n        },\n        \"ActionOutputFilter\": {\n          \"Query\": {\n            \"SubQueries\": [\n              {\n                \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                \"value\": \"aiJ7ey5Kb2JQYXJhbWV0ZXJzLlVwZGF0ZURTSGFzaGluZ319\"\n              }\n            ]\n          },\n          \"Label\": \"UpdateDSHashing is True\"\n        },\n        \"Parameters\": {\n          \"attName\": \"hashingVersion\",\n          \"attValue\": \"v4\",\n          \"fieldname\": \"{\\\"@value\\\":\\\"Name\\\"}\"\n        }\n      }\n    ]\n  },\n  \"MaxConcurrency\": 10,\n  \"Parameters\": [\n    {\n      \"Name\": \"SelectionPrefix\",\n      \"Description\": \"Use a datasource (or a deeper path) to limit the initial selection.\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"ForceRecompute\",\n      \"Description\": \"Force recomputing hash even if it is found\",\n      \"Value\": \"false\",\n      \"Type\": \"boolean\"\n    },\n    {\n      \"Name\": \"UpdateDSHashing\",\n      \"Description\": \"Trigger datasource attribute update after all hashes are computed.\",\n      \"Value\": \"false\",\n      \"Type\": \"boolean\"\n    }\n  ],\n  \"Timeout\": \"30m\"\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/scan-with-antivirus/","title":"Scan with Antivirus","text":"<p>Scan files by sending them to a Clamd server.</p> <p></p> <p>Clamd is a de-facto open source standard for antivirus scanning. This Flow assumes a Clamd server is running and can be accessed either locally (unix socket) or remotely (tcp socket). </p> <p>Once scanned, infected files can be put in a dedicated Quarantine folder. If scan fails for other reasons, files are tagged to alert that they could not be scanned properly.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/scan-with-antivirus/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description ServerProtocol select, possible values: unix (unix), tcp (tcp) tcp true Select protocol used to access server. ServerAddress text IP:PORT true Select server address. Use IP:PORT for tcp or file path for unix protocol. QuarantineFolder text pydiods1/QUARANTINE true Folder where to move files when a virus is detected. TagInfected text infected true Tag file with this value when a virus is detected. TagFailed text scan-failed false Tag file when virus detection failed (result is unknown)."},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/scan-with-antivirus/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/scan-with-antivirus/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Scan with Antivirus\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Scan files by sending them to a Clamd server\",\n    \"Icon\": \"mdi mdi-bug\",\n    \"TplCategory\": \"content-processing\",\n    \"Usage\": \"Clamd is a de-facto open source standard for antivirus scanning. This Flow assumes a Clamd server is running and can be accessed\\neither locally (unix socket) or remotely (tcp socket). \\n\\nOnce scanned, infected files can be put in a dedicated Quarantine folder. If scan fails for other reasons, files are tagged to alert that\\nthey could not be scanned properly.\\n\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:0\",\n    \"NODE_CHANGE:3\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.clamd.scan\",\n      \"Label\": \"Send to Clamd\",\n      \"Parameters\": {\n        \"address\": \"{{.JobParameters.ServerProtocol}}://{{.JobParameters.ServerAddress}}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-input\",\n          \"Label\": \"Scan Passed\",\n          \"ActionOutputFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                  \"value\": \"CAE=\"\n                }\n              ]\n            },\n            \"Label\": \"Scan passed\",\n            \"Description\": \"Check if last output string body contains a given text\"\n          },\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"StringBodyRegexp\\\"}\",\n            \"message\": \"Successfully scanned \\\"{{base .Node.Path}}\\\"\",\n            \"protocol\": \"{\\\"@value\\\":\\\"tcp\\\"}\",\n            \"taskLogger\": \"true\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.put-meta\",\n              \"Label\": \"Tag as infected\",\n              \"ActionOutputFilter\": {\n                \"Query\": {\n                  \"SubQueries\": [\n                    {\n                      \"type_url\": \"type.googleapis.com/jobs.ActionOutputSingleQuery\",\n                      \"value\": \"EgVGT1VORA==\"\n                    }\n                  ]\n                },\n                \"Label\": \"Output contains \\\"FOUND\\\"\",\n                \"Description\": \"Check if last output string body contains a given text\"\n              },\n              \"Parameters\": {\n                \"json\": \"{\\\"usermeta-tags\\\":\\\"{{.JobParameters.TagInfected}}\\\"}\"\n              },\n              \"ChainedActions\": [\n                {\n                  \"ID\": \"actions.tree.copymove\",\n                  \"Label\": \"Move to Quarantine\",\n                  \"Parameters\": {\n                    \"create\": \"true\",\n                    \"fieldname\": \"{\\\"@value\\\":\\\"StringBodyRegexp\\\"}\",\n                    \"protocol\": \"{\\\"@value\\\":\\\"tcp\\\"}\",\n                    \"recursive\": \"false\",\n                    \"target\": \"{{.JobParameters.QuarantineFolder}}\",\n                    \"targetParent\": \"true\",\n                    \"type\": \"move\"\n                  }\n                },\n                {\n                  \"ID\": \"actions.cmd.sendmail\",\n                  \"Label\": \"Alert Owner\",\n                  \"Bypass\": true,\n                  \"Parameters\": {\n                    \"fieldname\": \"{\\\"@value\\\":\\\"StringBodyRegexp\\\"}\",\n                    \"message\": \"Virus was found on **{{.Node.Path}}**, uploaded by **{{.ContextUser.Login}}**\",\n                    \"sender\": \"{\\\"@value\\\":\\\"smtp\\\"}\",\n                    \"subject\": \"Virus Found\",\n                    \"to-user\": \"{{.ContextUser.Login}},admin\"\n                  }\n                }\n              ]\n            }\n          ],\n          \"FailedFilterActions\": [\n            {\n              \"ID\": \"actions.put-meta\",\n              \"Label\": \"Tag File\",\n              \"Parameters\": {\n                \"json\": \"{\\\"usermeta-tags\\\":\\\"{{.JobParameters.TagFailed}}\\\"}\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 10,\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CiwKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRIKOgYucHlkaW9wARAB\"\n        },\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CiQKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRICMAEKJwoedHlwZS5nb29nbGVhcGlzLmNvbS90cmVlLlF1ZXJ5EgUYwKjlBBAB\"\n        }\n      ],\n      \"Operation\": 1\n    },\n    \"Label\": \"Files \\u003c 10MB\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"ServerProtocol\",\n      \"Description\": \"Select protocol used to access server.\",\n      \"Value\": \"tcp\",\n      \"Mandatory\": true,\n      \"Type\": \"select\",\n      \"JsonChoices\": \"{\\\"tcp\\\":\\\"tcp\\\",\\\"unix\\\":\\\"unix\\\"}\"\n    },\n    {\n      \"Name\": \"ServerAddress\",\n      \"Description\": \"Select server address. Use IP:PORT for tcp or file path for unix protocol.\",\n      \"Value\": \"IP:PORT\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"QuarantineFolder\",\n      \"Description\": \"Folder where to move files when a virus is detected.\",\n      \"Value\": \"pydiods1/QUARANTINE\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"TagInfected\",\n      \"Description\": \"Tag file with this value when a virus is detected.\",\n      \"Value\": \"infected\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"TagFailed\",\n      \"Description\": \"Tag file when virus detection failed (result is unknown).\",\n      \"Value\": \"scan-failed\",\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/tika-contents-extraction/","title":"Tika Contents Extraction","text":"<p>Extract and index textual contents using Tika service.</p> <p></p> <p>Apache Tika is an independent, open source, content extractor that supports a very wide range of file formats. It can even support OCR for extracting text from images. This flow sends file contents to Tika and gets the textual information to be indexed internally by the Cells search engine.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/tika-contents-extraction/#install-with-docker","title":"Install with Docker","text":"<p>Installing with Docker is as simple as running the following command: <pre><code>docker run -d -p 9998:9998 apache/tika:latest\n</code></pre></p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/tika-contents-extraction/#how-it-works","title":"How It Works","text":"<p>The Flow assumes you have Tika running and available at a specific URL. Once extracted, the textual content is stored on Cells side to avoid having to resend file to Tika on re-indexation. The Flow is also in charge of cleaning associated metadata on file deletion, and can be triggered manually to re-extract contents from all compatible files (can be handy when first enabling job to run on existing files).</p> <p>Tika provides also further metadata extraction, that can be indexed by Cells search engine as well.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/tika-contents-extraction/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description TikaServer text localhost:9998 true TCP address for querying Tika server. Extensions text pdf,doc,docx,html,xls,xlsx,pptx,key false List of extensions to be analyzed by Tika ImagesExtensions text png,jpg,jpeg,bmp false If your tika instance supports OCR, submit these image formats as well."},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/tika-contents-extraction/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/tika-contents-extraction/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Tika Contents Extraction\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Extract and index textual contents using Tika service\",\n    \"Icon\": \"mdi mdi-magnify\",\n    \"TplCategory\": \"content-processing\",\n    \"Usage\": \"[Apache Tika](https://tika.apache.org/) is an independent, open source, content extractor that supports a very wide range of file formats. It can\\neven support OCR for extracting text from images. This flow sends file contents to Tika and gets the textual information to be indexed internally by the Cells search engine.\\n\\n### How It Works\\n\\nThe Flow assumes you have Tika running and available at a specific URL. Once extracted, the textual content is stored on Cells side to avoid having to resend file to Tika on re-indexation. The Flow is also in charge of cleaning associated metadata on file deletion, and can be triggered manually to re-extract contents from all compatible files (can be handy when first enabling job to run on existing files).\\n\\nTika provides also further metadata extraction, that can be indexed by Cells search engine as well.\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:0\",\n    \"NODE_CHANGE:3\",\n    \"NODE_CHANGE:5\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.contents.tika\",\n      \"TriggerFilter\": {\n        \"Label\": \"Create/Update\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTowGg1OT0RFX0NIQU5HRToz\"\n            }\n          ],\n          \"Operation\": 1\n        }\n      },\n      \"Parameters\": {\n        \"additionalMeta\": \"Content-Type\",\n        \"compressContent\": \"true\",\n        \"extractContent\": \"pydio-binaries/tika-{{.Node.Uuid}}.gz\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n        \"serverAddress\": \"{{.JobParameters.TikaServer}}\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.meta\",\n          \"Parameters\": {\n            \"metaJSON\": \"{}\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.script.anko\",\n      \"Label\": \"Find binary name\",\n      \"TriggerFilter\": {\n        \"Label\": \"Delete\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTo1\"\n            }\n          ],\n          \"Operation\": 1\n        }\n      },\n      \"Parameters\": {\n        \"script\": \"output = input\\noutput.Nodes[0].Path = \\\"pydio-binaries/tika-\\\" + input.Nodes[0].Uuid + \\\".gz\\\"\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.delete\",\n          \"Label\": \"Delete Binaries\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"EventNames\\\"}\",\n            \"ignoreNonExisting\": \"true\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Skip internal DS\",\n      \"DataSourceSelector\": {\n        \"Label\": \"Select Datasources\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/object.DataSourceSingleQuery\",\n              \"value\": \"ag1jZWxsc0ludGVybmFsgAEB\"\n            }\n          ]\n        }\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Re-indexation\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"EAE=\"\n            },\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"CAE=\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"taskLogger\": \"true\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.contents.tika\",\n          \"Label\": \"Tika Extractor\",\n          \"NodesSelector\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"ChV7ey5EYXRhU291cmNlLk5hbWV9fS8wAVKSAXt7LkpvYlBhcmFtZXRlcnMuRXh0ZW5zaW9ucyB8IHJlcGxhY2UgIiwiICJ8In19e3tpZiAuSm9iUGFyYW1ldGVycy5JbWFnZXNFeHRlbnNpb25zfX18e3tlbmR9fXt7LkpvYlBhcmFtZXRlcnMuSW1hZ2VzRXh0ZW5zaW9ucyB8IHJlcGxhY2UgIiwiICJ8In19\"\n                }\n              ],\n              \"Operation\": 1\n            },\n            \"Label\": \"Select files with extension\"\n          },\n          \"Parameters\": {\n            \"additionalMeta\": \"Content-Type\",\n            \"compressContent\": \"true\",\n            \"extractContent\": \"pydio-binaries/tika-{{.Node.Uuid}}.gz\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n            \"serverAddress\": \"{{.JobParameters.TikaServer}}\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.tree.meta\",\n              \"Label\": \"Store Internal Meta\",\n              \"Parameters\": {\n                \"metaJSON\": \"{}\"\n              }\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 10,\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CiwKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRIKOgYucHlkaW9wARAB\"\n        },\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CiQKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRICMAEQAQ==\"\n        },\n        {\n          \"type_url\": \"type.googleapis.com/tree.Query\",\n          \"value\": \"Um57ey5Kb2JQYXJhbWV0ZXJzLkV4dGVuc2lvbnN9fXt7aWYgLkpvYlBhcmFtZXRlcnMuSW1hZ2VzRXh0ZW5zaW9uc319LHt7ZW5kfX17ey5Kb2JQYXJhbWV0ZXJzLkltYWdlc0V4dGVuc2lvbnN9fQ==\"\n        }\n      ],\n      \"Operation\": 1\n    },\n    \"Label\": \"Restricted Extensions\",\n    \"Description\": \"Keep only files, excluding .pydio hidden files\"\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"TikaServer\",\n      \"Description\": \"TCP address for querying Tika server.\",\n      \"Value\": \"localhost:9998\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"Extensions\",\n      \"Description\": \"List of extensions to be analyzed by Tika\",\n      \"Value\": \"pdf,doc,docx,html,xls,xlsx,pptx,key\",\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"ImagesExtensions\",\n      \"Description\": \"If your tika instance supports OCR, submit these image formats as well.\",\n      \"Value\": \"png,jpg,jpeg,bmp\",\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/users-pdf-actions/","title":"Users PDF Actions","text":"<p>Webhooks to create Split / Merge PDF actions.</p> <p></p> <p>This Flow uses webhooks to expose the split/merge PDF features to end-users. </p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/users-pdf-actions/#how-it-works","title":"How It Works","text":"<p>Using the job trigger filter, each webhook triggers a different branch. They are configured to match PDF files only, with unique selection only for \"split\" and multiple selection only for \"merge\". </p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/users-pdf-actions/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description SplitPages text, possible values: {\"type\":\"string\",\"data\":{\"mandatory\":false}} false List of Pages - \"1 2 4\" for specific pages,  \"1-4\" for range, or \"1-\" for all JoinTarget text, possible values: {\"type\":\"string\",\"data\":{}} false Target file name - Leave empty to generate a new name"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/users-pdf-actions/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/users-pdf-actions/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Users PDF Actions\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Webhooks to create Split / Merge PDF actions\",\n    \"Icon\": \"mdi mdi-file-pdf-box\",\n    \"TplCategory\": \"content-processing\",\n    \"Usage\": \"This Flow uses webhooks to expose the split/merge PDF features to end-users. \\n\\n### How It Works\\n\\nUsing the job trigger filter, each webhook triggers a different branch. They are configured to match PDF files only, with unique selection only for \\\"split\\\" and multiple selection only for \\\"merge\\\". \"\n  },\n  \"CreatedAt\": 1698679284,\n  \"ModifiedAt\": 1698847421,\n  \"Actions\": [\n    {\n      \"ID\": \"actions.contents.pdf\",\n      \"Label\": \"Split Pages\",\n      \"TriggerFilter\": {\n        \"Label\": \"Hook pdf-split-pages\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Kg9wZGYtc3BsaXQtcGFnZXM=\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"@value\": \"join\",\n        \"command\": \"{\\\"@value\\\":\\\"split\\\",\\\"pages\\\":\\\"{{.JobParameters.SplitPages}}\\\"}\",\n        \"target-name\": \"joined-pages-{{uuidv4}}.pdf\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-advanced\",\n          \"Label\": \"Artifact\",\n          \"Parameters\": {\n            \"artifact_format\": \"object\",\n            \"artifact_label\": \"Result\",\n            \"as_object\": \"false\",\n            \"command\": \"{\\\"@value\\\":\\\"split\\\"}\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"ApiHookSlug\\\"}\",\n            \"is_artifact\": \"string\",\n            \"level\": \"info\",\n            \"zap_key\": \"Pages\",\n            \"zap_value\": \"Extracted pages {{.JobParameters.SplitPages}} from {{.Node.Path}}\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.contents.pdf\",\n      \"Label\": \"Join Pages\",\n      \"TriggerFilter\": {\n        \"Label\": \"Hook pdf-join-pages\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Kg5wZGYtam9pbi1wYWdlcw==\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"@value\": \"join\",\n        \"command\": \"{\\\"@value\\\":\\\"join\\\",\\\"target-name\\\":\\\"{{if .JobParameters.JoinTarget}}{{.JobParameters.JoinTarget}}{{else}}joined-pdf.pdf{{end}}\\\"}\",\n        \"fieldname\": \"{\\\"@value\\\":\\\"ApiHookSlug\\\"}\",\n        \"target-name\": \"joined-pages-{{uuidv4}}.pdf\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.scheduler.log-advanced\",\n          \"Label\": \"Artifact\",\n          \"Parameters\": {\n            \"artifact_format\": \"object\",\n            \"artifact_label\": \"Result\",\n            \"as_object\": \"false\",\n            \"command\": \"{\\\"@value\\\":\\\"split\\\"}\",\n            \"fieldname\": \"{\\\"@value\\\":\\\"ApiHookSlug\\\"}\",\n            \"is_artifact\": \"string\",\n            \"level\": \"info\",\n            \"zap_key\": \"Pages\",\n            \"zap_value\": \"Joined {{.Input.Nodes | len}} pages\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Parameters\": [\n    {\n      \"Name\": \"SplitPages\",\n      \"Description\": \"List of Pages - \\\"1 2 4\\\" for specific pages,  \\\"1-4\\\" for range, or \\\"1-\\\" for all\",\n      \"Type\": \"text\",\n      \"JsonChoices\": \"{\\\"type\\\":\\\"string\\\",\\\"data\\\":{\\\"mandatory\\\":false}}\"\n    },\n    {\n      \"Name\": \"JoinTarget\",\n      \"Description\": \"Target file name - Leave empty to generate a new name\",\n      \"Type\": \"text\",\n      \"JsonChoices\": \"{\\\"type\\\":\\\"string\\\",\\\"data\\\":{}}\"\n    }\n  ],\n  \"Hooks\": [\n    {\n      \"ApiSlug\": \"pdf-split-pages\",\n      \"PresetParameters\": {\n        \"SplitPages\": \"1-\"\n      },\n      \"AllowOverridePresets\": true,\n      \"Metadata\": {\n        \"action\": \"{\\\"name\\\":\\\"pdf-split-pages\\\",\\\"gui\\\":{\\\"iconClass\\\":\\\"mdi mdi-file-pdf-box\\\",\\\"text\\\":\\\"Extract Pages\\\",\\\"title\\\":\\\"pdf-split-pages\\\",\\\"context\\\":{\\\"actionBar\\\":\\\"true\\\",\\\"actionBarGroup\\\":\\\"other\\\",\\\"selection\\\":\\\"true\\\",\\\"contextMenu\\\":\\\"true\\\"},\\\"selectionContext\\\":{\\\"dir\\\":\\\"false\\\",\\\"file\\\":\\\"true\\\",\\\"unique\\\":\\\"true\\\",\\\"multipleOnly\\\":\\\"false\\\",\\\"allowedMimes\\\":\\\"pdf\\\"}},\\\"rightsContext\\\":{\\\"read\\\":\\\"true\\\",\\\"userLogged\\\":\\\"true\\\",\\\"write\\\":\\\"true\\\"}}\",\n        \"formParameters\": \"[{\\\"Type\\\":\\\"text\\\",\\\"Name\\\":\\\"SplitPages\\\",\\\"Description\\\":\\\"List of Pages - \\\\\\\"1 2 4\\\\\\\" for specific pages,  \\\\\\\"1-4\\\\\\\" for range, or \\\\\\\"1-\\\\\\\" for all\\\",\\\"Value\\\":\\\"1-\\\"}]\",\n        \"formPrompt\": \"true\",\n        \"promptMessage\": \"Extract one or more pages from PDF file.\",\n        \"successMessage\": \"Action is triggered in background\",\n        \"useSelectionNodes\": \"true\"\n      },\n      \"Policies\": [\n        {\n          \"Action\": 3,\n          \"Subject\": \"profile:admin\",\n          \"Effect\": 1\n        },\n        {\n          \"Action\": 3,\n          \"Subject\": \"profile:standard\",\n          \"Effect\": 1\n        }\n      ]\n    },\n    {\n      \"ApiSlug\": \"pdf-join-pages\",\n      \"PresetParameters\": {\n        \"JoinTarget\": \"Joined-PDF.pdf\"\n      },\n      \"AllowOverridePresets\": true,\n      \"Metadata\": {\n        \"action\": \"{\\\"name\\\":\\\"pdf-join-pages\\\",\\\"gui\\\":{\\\"iconClass\\\":\\\"mdi mdi-file-pdf-box\\\",\\\"text\\\":\\\"Join PDF Pages\\\",\\\"title\\\":\\\"pdf-join-pages\\\",\\\"context\\\":{\\\"actionBar\\\":\\\"true\\\",\\\"actionBarGroup\\\":\\\"other\\\",\\\"selection\\\":\\\"true\\\",\\\"contextMenu\\\":\\\"true\\\"},\\\"selectionContext\\\":{\\\"dir\\\":\\\"false\\\",\\\"file\\\":\\\"true\\\",\\\"unique\\\":\\\"false\\\",\\\"multipleOnly\\\":\\\"true\\\",\\\"allowedMimes\\\":\\\"pdf\\\"}},\\\"rightsContext\\\":{\\\"read\\\":\\\"true\\\",\\\"userLogged\\\":\\\"true\\\",\\\"write\\\":\\\"true\\\"}}\",\n        \"formParameters\": \"[{\\\"Type\\\":\\\"text\\\",\\\"Name\\\":\\\"JoinTarget\\\",\\\"Description\\\":\\\"Target file name - Leave empty to generate a new name\\\",\\\"Value\\\":\\\"Joined-PDF.pdf\\\"}]\",\n        \"formPrompt\": \"true\",\n        \"promptMessage\": \"\",\n        \"successMessage\": \"Actions triggered in background...\",\n        \"useSelectionNodes\": \"true\"\n      },\n      \"Policies\": [\n        {\n          \"Action\": 3,\n          \"Subject\": \"profile:admin\",\n          \"Effect\": 1\n        },\n        {\n          \"Action\": 3,\n          \"Subject\": \"profile:standard\",\n          \"Effect\": 1\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/broken-thumbnails/","title":"Broken Thumbnails","text":"<p>Find images where thumbnail generation may have failed.</p> <p></p> <p>This flow looks up for image files that are missing the specific <code>is_image</code> metadata and tries to recreate the associated thumbnails.  This can be useful when something wrong happened at first thumbnail generation (at upload time).</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/broken-thumbnails/#how-it-works","title":"How It Works","text":"<p>This is a good example of querying the search engine with a \"FreeString\". The default search here is using: <code>FreeString=\"-Meta.is_image:T* Extension:jpg Extension:jpeg Extension:png Extension:bmp\"</code> </p> <p>A couple of interesting things here:   * Using Meta.{MetaName} to access the nodes internal metadata  * Prefixing search terms with + for \"Must\", - for \"Must Not\", nothing for \"Should\"  * Multiplying the Extension search term to load all files extensions  * Special value <code>T*</code> means <code>True</code> boolean fields </p> <p>Finally, we search all files with jpg,jpeg,png,bmp extension that do not have the metadata \"is_image\".</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/broken-thumbnails/#parameters","title":"Parameters","text":"<p>No parameters defined</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/broken-thumbnails/#trigger-type","title":"Trigger Type","text":"<p>Manual</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/broken-thumbnails/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Broken Thumbnails\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Find images where thumbnail generation may have failed\",\n    \"Icon\": \"mdi mdi-image-broken\",\n    \"TplCategory\": \"content-processing\",\n    \"Usage\": \"This flow looks up for image files that are missing the specific `is_image` metadata and tries\\nto recreate the associated thumbnails. \\nThis can be useful when something wrong happened at first thumbnail generation (at upload time).\\n\\n### How It Works\\n\\nThis is a good example of querying the search engine with a \\\"FreeString\\\". The default search here is using:  \\n`FreeString=\\\"-Meta.is_image:T* Extension:jpg Extension:jpeg Extension:png Extension:bmp\\\"`  \\n\\nA couple of interesting things here: \\n * Using Meta.{MetaName} to access the nodes internal metadata\\n * Prefixing search terms with + for \\\"Must\\\", - for \\\"Must Not\\\", nothing for \\\"Should\\\"\\n * Multiplying the Extension search term to load all files extensions\\n * Special value `T*` means `True` boolean fields \\n \\n Finally, we search all files with jpg,jpeg,png,bmp extension that do **not** have the metadata \\\"is_image\\\".\"\n  },\n  \"Actions\": [\n    {\n      \"ID\": \"actions.images.thumbnails\",\n      \"NodesSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"EAEwAUpLLU1ldGEuaXNfaW1hZ2U6VCogRXh0ZW5zaW9uOmpwZyBFeHRlbnNpb246anBlZyAgRXh0ZW5zaW9uOnBuZyBFeHRlbnNpb246Ym1w\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"Images w/o 'is_image' metadata\"\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/convert-tools/","title":"Convert Tools","text":"<p>Create PDF and Image preview for various formats.</p> <p></p> <p>Cells Convert Tools is a ready-to-use docker image that provides file formats conversion via a REST API. This flow will observes files creation/modification and call Convert Tools API to extract thumbnails.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/convert-tools/#installing-convert-tools","title":"Installing Convert Tools","text":"<p>As it hosted on Docker Hub, you can simply run Cells Convert Tools with the following command: <pre><code>docker run --name cells-convert-tools -it -d -p 9997:9997 pydio/cells-convert-tools\n</code></pre> Once the docker is running, you can configure the action host/port accordingly.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/convert-tools/#supported-conversions","title":"Supported Conversions","text":"<p>This flow currently supports :   - Office to PDF export (unoconv)  - PDF to Image thumbnails (pdf2ppm)  - Movies frame extraction for thumbnails (ffmpeg)  - Other images thumbnails (ImageMagick).</p> <p>This is a great add-on to Cells Enterprise for providing previews for most documents directly inside Cells interface.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/convert-tools/#how-it-works","title":"How It Works","text":"<p>The Flow is composed of multiple branches triggered depending on the file extension. The Cells Convert Tools dedicated Action already implements the internals to call the docker REST API. And additional branch listens for the files deletion to make sure to properly clean the created resources.</p> <p>Note the special \"ImagePreview\" and \"PDFPreview\u201c metadata that are used to reference the created previews. These are handled by the end-user interface to display the preview accordingly.</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/convert-tools/#parameters","title":"Parameters","text":"Name Type Default Mandatory Description ConvertToolsUrl text http://localhost:9997 true Address of the Cells Convert Tools service MetaImagePreview text ImagePreview true Metadata name for reference to image preview. MetaPdfPreview text PDFPreview true Metadata name for reference to PDF preview."},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/convert-tools/#trigger-type","title":"Trigger Type","text":"<p>Event-based</p>"},{"location":"cellsflows/preset-flows/data-formatting-and-conversion/convert-tools/#json-representation","title":"JSON Representation","text":"<pre><code>{\n  \"Label\": \"Convert Tools\",\n  \"Owner\": \"pydio.system.user\",\n  \"Metadata\": {\n    \"Description\": \"Create PDF and Image preview for various formats\",\n    \"Icon\": \"mdi mdi-image-filter\",\n    \"TplCategory\": \"content-processing\",\n    \"Usage\": \"Cells Convert Tools is a ready-to-use docker image that provides file formats conversion via a REST API. This flow will observes files creation/modification and call Convert Tools API to extract thumbnails.\\n\\n### Installing Convert Tools\\n\\nAs it [hosted on Docker Hub](https://hub.docker.com/r/pydio/cells-convert-tools), you can simply run Cells Convert Tools with the following command:\\n```\\ndocker run --name cells-convert-tools -it -d -p 9997:9997 pydio/cells-convert-tools\\n```\\nOnce the docker is running, you can configure the action host/port accordingly.\\n\\n### Supported Conversions\\n\\nThis flow currently supports : \\n - Office to PDF export (unoconv)\\n - PDF to Image thumbnails (pdf2ppm)\\n - Movies frame extraction for thumbnails (ffmpeg)\\n - Other images thumbnails (ImageMagick).\\n\\nThis is a great add-on to Cells Enterprise for providing previews for most documents directly inside Cells interface.\\n\\n### How It Works\\n\\nThe Flow is composed of multiple branches triggered depending on the file extension. The Cells Convert Tools dedicated Action already implements the internals to call the docker REST API. And additional branch listens for the files deletion to make sure to properly clean the created resources.\\n\\nNote the special \\\"ImagePreview\\\" and \\\"PDFPreview\u201c metadata that are used to reference the created previews. These are handled by the end-user interface to display the preview accordingly.\"\n  },\n  \"Custom\": true,\n  \"EventNames\": [\n    \"NODE_CHANGE:0\",\n    \"NODE_CHANGE:3\",\n    \"NODE_CHANGE:5\"\n  ],\n  \"Actions\": [\n    {\n      \"ID\": \"actions.content.convert-tools\",\n      \"Label\": \"PDF to Image\",\n      \"NodesFilter\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"UgNwZGY=\"\n            }\n          ]\n        },\n        \"Label\": \"PDF files\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Create/Update\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTowGg1OT0RFX0NIQU5HRToz\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n        \"limitReader\": \"0\",\n        \"srvUrl\": \"{{.JobParameters.ConvertToolsUrl}}/pdf/image\",\n        \"target_path\": \"thumbnails/{{.Event.Target.Uuid}}.jpg\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.meta\",\n          \"Label\": \"Store Image Meta\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n            \"metaJSON\": \"{\\\"{{.JobParameters.MetaImagePreview}}\\\":\\\"{{.Node.Uuid}}.jpg\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.content.convert-tools\",\n      \"Label\": \"Image Thumbnails\",\n      \"NodesFilter\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"UjBnaWYsdGlmZix0aWYscHNkLGJtcCxkY20sZG90LGRweCxlcHMsc3ZnLGhlaWMscHM=\"\n            }\n          ]\n        },\n        \"Label\": \"Non-standard images\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Create/Update\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTowGg1OT0RFX0NIQU5HRToz\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"limitReader\": \"0\",\n        \"paramName\": \"format\",\n        \"paramName_1\": \"resize\",\n        \"paramValue\": \"jpg\",\n        \"paramValue_1\": \"400\",\n        \"srvUrl\": \"{{.JobParameters.ConvertToolsUrl}}/image/convert\",\n        \"target_path\": \"thumbnails/{{.Event.Target.Uuid}}.jpg\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.meta\",\n          \"Label\": \"Store Image Meta\",\n          \"Parameters\": {\n            \"metaJSON\": \"{\\\"{{.JobParameters.MetaImagePreview}}\\\":\\\"{{.Node.Uuid}}.jpg\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.content.convert-tools\",\n      \"Label\": \"Extract Frame Video\",\n      \"NodesFilter\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"Ugdtb3YsbXA0\"\n            }\n          ]\n        },\n        \"Label\": \"Video files\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Create/Update\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTowGg1OT0RFX0NIQU5HRToz\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n        \"limitReader\": \"5242880\",\n        \"srvUrl\": \"{{.JobParameters.ConvertToolsUrl}}/video/frame\",\n        \"target_path\": \"thumbnails/{{.Event.Target.Uuid}}.jpg\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.meta\",\n          \"Label\": \"Store Image Meta\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n            \"metaJSON\": \"{\\\"{{.JobParameters.MetaImagePreview}}\\\":\\\"{{.Node.Uuid}}.jpg\\\"}\"\n          }\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.content.convert-tools\",\n      \"Label\": \"Office to PDF\",\n      \"NodesFilter\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/service.Query\",\n              \"value\": \"CiYKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRIEUgJtZAooCh50eXBlLmdvb2dsZWFwaXMuY29tL3RyZWUuUXVlcnkSBlIEaHRtbApXCh50eXBlLmdvb2dsZWFwaXMuY29tL3RyZWUuUXVlcnkSNVIzZG9jeCx0eHQscnRmLGZvZHQsZG9jLG9kdCx4bHMseGxzeCxvZHMscHB0LHBwdHgsb2Rw\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"Office, MD, HTML\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Create/Update\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTowGg1OT0RFX0NIQU5HRToz\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"limitReader\": \"0\",\n        \"srvUrl\": \"{{.JobParameters.ConvertToolsUrl}}/office/convert\",\n        \"target_path\": \"thumbnails/{{.Event.Target.Uuid}}.pdf\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.meta\",\n          \"Label\": \"Store PDF Meta\",\n          \"Parameters\": {\n            \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n            \"metaJSON\": \"{\\\"{{.JobParameters.MetaPdfPreview}}\\\":\\\"{{.Node.Uuid}}.pdf\\\"}\"\n          }\n        },\n        {\n          \"ID\": \"actions.script.anko\",\n          \"Label\": \"PDF Node as Input\",\n          \"Parameters\": {\n            \"script\": \"output = input\\noutput.Nodes[0].Uuid = input.Nodes[0].Uuid + \\\".pdf\\\"\\noutput.Nodes[0].Path = \\\"thumbnails/\\\" + output.Nodes[0].Uuid\"\n          },\n          \"ChainedActions\": [\n            {\n              \"ID\": \"actions.content.convert-tools\",\n              \"Label\": \"PDF To Image\",\n              \"Parameters\": {\n                \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n                \"limitReader\": \"0\",\n                \"srvUrl\": \"{{.JobParameters.ConvertToolsUrl}}/pdf/image\",\n                \"target_path\": \"thumbnails/{{.Event.Target.Uuid}}.jpg\"\n              },\n              \"ChainedActions\": [\n                {\n                  \"ID\": \"actions.script.anko\",\n                  \"Label\": \"Event Node as Input\",\n                  \"Parameters\": {\n                    \"paramName\": \"InputPath\",\n                    \"paramName_1\": \"InputUuid\",\n                    \"paramValue\": \"{{.Event.Target.Path}}\",\n                    \"paramValue_1\": \"{{.Event.Target.Uuid}}\",\n                    \"script\": \"output = input\\noutput.Nodes[0].Uuid = Params.InputUuid\\noutput.Nodes[0].Path = Params.InputPath\"\n                  },\n                  \"ChainedActions\": [\n                    {\n                      \"ID\": \"actions.tree.meta\",\n                      \"Label\": \"Store Image Meta\",\n                      \"Parameters\": {\n                        \"fieldname\": \"{\\\"@value\\\":\\\"Extension\\\"}\",\n                        \"metaJSON\": \"{\\\"{{.JobParameters.MetaImagePreview}}\\\":\\\"{{.Event.Target.Uuid}}.jpg\\\"}\"\n                      }\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"ID\": \"actions.scheduler.log-input\",\n      \"Label\": \"Collect Thumbs\",\n      \"NodesSelector\": {\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/tree.Query\",\n              \"value\": \"ah10aHVtYm5haWxzL3t7Lk5vZGUuVXVpZH19LnBkZmoddGh1bWJuYWlscy97ey5Ob2RlLlV1aWR9fS5qcGc=\"\n            }\n          ],\n          \"Operation\": 1\n        },\n        \"Label\": \"Find Previews\"\n      },\n      \"TriggerFilter\": {\n        \"Label\": \"Clean on Delete\",\n        \"Query\": {\n          \"SubQueries\": [\n            {\n              \"type_url\": \"type.googleapis.com/jobs.TriggerFilterQuery\",\n              \"value\": \"Gg1OT0RFX0NIQU5HRTo1\"\n            }\n          ]\n        }\n      },\n      \"Parameters\": {\n        \"fieldname\": \"{\\\"@value\\\":\\\"Paths\\\"}\",\n        \"message\": \"\",\n        \"taskLogger\": \"false\"\n      },\n      \"ChainedActions\": [\n        {\n          \"ID\": \"actions.tree.delete\",\n          \"NodesFilter\": {\n            \"Query\": {\n              \"SubQueries\": [\n                {\n                  \"type_url\": \"type.googleapis.com/tree.Query\",\n                  \"value\": \"Cgp0aHVtYm5haWxz\"\n                }\n              ]\n            },\n            \"Label\": \"Keep only thumbnails\"\n          }\n        }\n      ]\n    }\n  ],\n  \"MaxConcurrency\": 10,\n  \"NodeEventFilter\": {\n    \"Query\": {\n      \"SubQueries\": [\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CiYKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRIEUgJtZAooCh50eXBlLmdvb2dsZWFwaXMuY29tL3RyZWUuUXVlcnkSBlIEaHRtbApXCh50eXBlLmdvb2dsZWFwaXMuY29tL3RyZWUuUXVlcnkSNVIzZG9jeCx0eHQscnRmLGZvZHQsZG9jLG9kdCx4bHMseGxzeCxvZHMscHB0LHBwdHgsb2RwCicKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRIFUgNwZGYKKwoedHlwZS5nb29nbGVhcGlzLmNvbS90cmVlLlF1ZXJ5EglSB21wNCxtb3YKVAoedHlwZS5nb29nbGVhcGlzLmNvbS90cmVlLlF1ZXJ5EjJSMGdpZix0aWZmLHRpZixwc2QsYm1wLGRjbSxkb3QsZHB4LGVwcyxzdmcsaGVpYyxwcw==\"\n        },\n        {\n          \"type_url\": \"type.googleapis.com/service.Query\",\n          \"value\": \"CiQKHnR5cGUuZ29vZ2xlYXBpcy5jb20vdHJlZS5RdWVyeRICMAEQAQ==\"\n        }\n      ],\n      \"Operation\": 1\n    }\n  },\n  \"Parameters\": [\n    {\n      \"Name\": \"ConvertToolsUrl\",\n      \"Description\": \"Address of the Cells Convert Tools service\",\n      \"Value\": \"http://localhost:9997\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"MetaImagePreview\",\n      \"Description\": \"Metadata name for reference to image preview.\",\n      \"Value\": \"ImagePreview\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    },\n    {\n      \"Name\": \"MetaPdfPreview\",\n      \"Description\": \"Metadata name for reference to PDF preview.\",\n      \"Value\": \"PDFPreview\",\n      \"Mandatory\": true,\n      \"Type\": \"text\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cellsflows/actions/index/","title":"Actions","text":"<p>This section lists all actions that can be used in conjunction with others inside any Cells Flows Job.</p> <ul> <li>Files/Folders Operations</li> <li>Archives Operations</li> <li>Scheduler Tools / Internals</li> <li>Upload/Download to External Servers</li> <li>Atomic Commands and Scripts</li> <li>Contents Processing</li> <li>Identity Management</li> <li>Notifications and Emails</li> <li>Extract/Load/Transform</li> <li>Internal Actions</li> </ul>"},{"location":"cellsflows/actions/files-folders-operations/index/","title":"Files/Folders Operations","text":"<ul> <li>User metadata</li> <li>Copy/Move</li> <li>Delete files</li> <li>Resources Exist</li> <li>Store Internal Meta</li> <li>Create Folder</li> <li>Write To File</li> <li>Read from File</li> <li>JSON Snapshot</li> <li>Synchronize Folders</li> </ul>"},{"location":"cellsflows/actions/files-folders-operations/user-metadata/","title":"User metadata","text":"<p>Update user-defined metadata on files/folders. Beware that jsonValue is expected to be a valid JSON, so e.g. even a simple string must be double-quoted.</p>"},{"location":"cellsflows/actions/files-folders-operations/user-metadata/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Values (json) string All metadata values to apply, in JSON format"},{"location":"cellsflows/actions/files-folders-operations/user-metadata/#expected-input","title":"Expected Input","text":"<p>One or more files or folders to update</p>"},{"location":"cellsflows/actions/files-folders-operations/user-metadata/#expected-input_1","title":"Expected Input","text":"<p>Updated files and folders</p>"},{"location":"cellsflows/actions/files-folders-operations/copy-move/","title":"Copy/Move","text":"<p>Recursively copy or move files or folders passed in input</p>"},{"location":"cellsflows/actions/files-folders-operations/copy-move/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Destination (target) string Where to copy or move original files Operation Type (type) select, possible values: Copy (copy),Move (move) copy Copy or move Destination points to parent folder (targetParent) boolean true If set to true, the files are created inside the target folder, otherwise the destination should point to full path of target Create Destination (create) boolean true Whether to automatically create the destination folder or not"},{"location":"cellsflows/actions/files-folders-operations/copy-move/#expected-input","title":"Expected Input","text":"<p>Single-selection of a file or a folder to process</p>"},{"location":"cellsflows/actions/files-folders-operations/copy-move/#expected-input_1","title":"Expected Input","text":"<p>The processed file or folder at its new location</p>"},{"location":"cellsflows/actions/files-folders-operations/delete-files/","title":"Delete files","text":"<p>Recursively delete files or folders passed in input</p>"},{"location":"cellsflows/actions/files-folders-operations/delete-files/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Children Only (childrenOnly) boolean false Delete only the children items from the input node Ignore error if not found (ignoreNonExisting) boolean false Silently skip deletion if target file is not found"},{"location":"cellsflows/actions/files-folders-operations/delete-files/#expected-input","title":"Expected Input","text":"<p>Single-selection of file or folder to delete. Folders are deleted recursively</p>"},{"location":"cellsflows/actions/files-folders-operations/resources-exist/","title":"Resources Exist","text":"<p>Check that files or folders are properly indexed</p>"},{"location":"cellsflows/actions/files-folders-operations/resources-exist/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Retries Maximum time (max) string 10s Leave empty for no retries, or set a maximum time to retry for existence (useful for waiting for new file indexation) Do not break on error (ignoreError) boolean false If resource does not exist, pass a message with Success=false but do not break flow. Path (nodes.path) string File or Folder Path"},{"location":"cellsflows/actions/files-folders-operations/resources-exist/#expected-input","title":"Expected Input","text":"<p>Standard input message</p>"},{"location":"cellsflows/actions/files-folders-operations/resources-exist/#expected-input_1","title":"Expected Input","text":"<p>New message containing a Success flag</p>"},{"location":"cellsflows/actions/files-folders-operations/store-internal-meta/","title":"Store Internal Meta","text":"<p>Update internal metadata on files or folders passed in input</p>"},{"location":"cellsflows/actions/files-folders-operations/store-internal-meta/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Metadata keys/values (metaJSON) textarea {} Metadata to be appended to incoming node, using JSON, e.g. {\"key\":\"value\"}. Leave empty to just save input node meta."},{"location":"cellsflows/actions/files-folders-operations/store-internal-meta/#expected-input","title":"Expected Input","text":"<p>Multiple selection of files or folders</p>"},{"location":"cellsflows/actions/files-folders-operations/store-internal-meta/#expected-input_1","title":"Expected Input","text":"<p>Updated selection of files or folders</p>"},{"location":"cellsflows/actions/files-folders-operations/create-folder/","title":"Create Folder","text":"<p>Create one or more folders</p>"},{"location":"cellsflows/actions/files-folders-operations/create-folder/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Wait for folder to be indexed (check_exist) boolean true Error if folder already exists Path (dirs.path) string Folder Path"},{"location":"cellsflows/actions/files-folders-operations/create-folder/#expected-input","title":"Expected Input","text":"<p>Standard input message</p>"},{"location":"cellsflows/actions/files-folders-operations/create-folder/#expected-input_1","title":"Expected Input","text":"<p>New message containing a Success flag</p>"},{"location":"cellsflows/actions/files-folders-operations/write-to-file/","title":"Write To File","text":"<p>Write contents to file (inside a datasource or locally)</p>"},{"location":"cellsflows/actions/files-folders-operations/write-to-file/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Target File Path (target_file) string Full path of the file to write, either inside a datasource or on local FS. Data Input (reader) Possible Values Below free Select how to load data that will be written. \u00a0\u00a0\u00a0\u2022 Free Content - set below (free) reader \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Free Content (reader_contents) textarea Type in the content to be used \u00a0\u00a0\u00a0\u2022 Input Node (inputNode) reader \u00a0\u00a0\u00a0\u2022 Custom Path (customPath) reader \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Custom Path (reader_alternatePath) string Set path here if you want to override {{.Node.Path}} \u00a0\u00a0\u00a0\u2022 Incoming Data from LastOutput (lastOutput) reader \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- LastOutput Field (reader_lastOutputField) select, possible values: RawBody (rawbody),JsonBody (jsonbody),StringBody (stringbody),ErrorString (errorstring) rawbody Pick one of JsonBody, RawBody, StringBody or ErrorString \u00a0\u00a0\u00a0\u2022 Variable Name (var) reader \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Variable Name (reader_varName) string Name of the variable (will look for {{.Vars.VarName}}). String or numbers will be written as is, other types will be converted to JSON automatically."},{"location":"cellsflows/actions/files-folders-operations/write-to-file/#expected-input","title":"Expected Input","text":"<p>Standard input message</p>"},{"location":"cellsflows/actions/files-folders-operations/write-to-file/#expected-input_1","title":"Expected Input","text":"<p>New message containing a Success flag</p>"},{"location":"cellsflows/actions/files-folders-operations/read-from-file/","title":"Read from File","text":"<p>Read file contents from the node passed as input</p>"},{"location":"cellsflows/actions/files-folders-operations/read-from-file/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Input Path - Leave empty for .Input.Node (alt_input) string This action reads from .Input.Nodes[0] by default, use this field to load a custom path Attach Output To... (output) Possible Values Below raw Method for passing the output to the next action, may depend on the data format \u00a0\u00a0\u00a0\u2022 Raw Body (binary) (raw) output \u00a0\u00a0\u00a0\u2022 String Body (string) output \u00a0\u00a0\u00a0\u2022 Json Body (JSON-encoded Data) (json) output \u00a0\u00a0\u00a0\u2022 Variable (varBinary) output \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Name (varName) string Variable Name \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Data Type (varType) select, possible values: String (dump as string) (string),Object (decode from JSON) (object),Array (decode from JSON) (array),Binary (no conversion) (binary) string Try to decode data \u00a0\u00a0\u00a0\u2022 Map JSON Object to Variables (vars) output"},{"location":"cellsflows/actions/files-folders-operations/read-from-file/#expected-input","title":"Expected Input","text":"<p>Selected Input Node</p>"},{"location":"cellsflows/actions/files-folders-operations/read-from-file/#expected-input_1","title":"Expected Input","text":"<p>Output message with either StringBody, JsonBody, or Variables</p>"},{"location":"cellsflows/actions/files-folders-operations/json-snapshot/","title":"JSON Snapshot","text":"<p>Generate a JSON snapshot of the index, starting at a given path</p>"},{"location":"cellsflows/actions/files-folders-operations/json-snapshot/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Recursive (recursive) boolean true Whether to list one-level deep or fully recursive tree"},{"location":"cellsflows/actions/files-folders-operations/json-snapshot/#expected-input","title":"Expected Input","text":"<p>Single-selection of root node to browse for building the snapshot</p>"},{"location":"cellsflows/actions/files-folders-operations/json-snapshot/#expected-input_1","title":"Expected Input","text":"<p>Fills output JsonBody field with ready to use json</p>"},{"location":"cellsflows/actions/files-folders-operations/synchronize-folders/","title":"Synchronize Folders","text":"<p>Continuously synchronize two folders in the tree</p>"},{"location":"cellsflows/actions/files-folders-operations/synchronize-folders/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Left Folder (leftPath) string Path to first folder to synchronize Right Folder (rightPath) string Path to second folder to synchronize Direction (direction) select, possible values: Left to Right (right),Bi-directional (bi),Right to Left (left) right Synchronization direction Continuous Sync (continuous) boolean false Watch for all changes and copy them in real-time"},{"location":"cellsflows/actions/archives-operations/index/","title":"Archives Operations","text":"<ul> <li>Create Archive</li> <li>Extract Archive</li> </ul>"},{"location":"cellsflows/actions/archives-operations/create-archive/","title":"Create Archive","text":"<p>Create a Zip, Tar or Tar.gz archive from the input</p>"},{"location":"cellsflows/actions/archives-operations/create-archive/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Archive path (target) string FullPath to the new archive Archive format (format) select, possible values: Detect (file extension) (detect),Zip (zip),Tar (tar),TarGz (tar.gz) detect Compression format of the archive"},{"location":"cellsflows/actions/archives-operations/create-archive/#expected-input","title":"Expected Input","text":"<p>Selection of node(s). Folders will be recursively walked through.</p>"},{"location":"cellsflows/actions/archives-operations/create-archive/#expected-input_1","title":"Expected Input","text":"<p>One single node pointing to the created archive file.</p>"},{"location":"cellsflows/actions/archives-operations/extract-archive/","title":"Extract Archive","text":"<p>Extract files and folders from a Zip, Tar or Tar.gz archive</p>"},{"location":"cellsflows/actions/archives-operations/extract-archive/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Extraction path (target) string FullPath used for extracting contents. If left empty, will extract in the same folder. Archive format (format) select, possible values: Detect (from filename) (detect),Zip (zip),Tar (tar),TarGz (tar.gz) detect Compression format of the archive"},{"location":"cellsflows/actions/archives-operations/extract-archive/#expected-input","title":"Expected Input","text":"<p>Single-node selection pointing to an archive to extract</p>"},{"location":"cellsflows/actions/archives-operations/extract-archive/#expected-input_1","title":"Expected Input","text":"<p>One node pointing to the parent folder where all files where extracted.</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/index/","title":"Scheduler Tools / Internals","text":"<ul> <li>Message, Variable, Error</li> <li>Clear Action</li> <li>Trigger Another Flow</li> <li>Advanced Logging, Artifacts</li> <li>Empty Action</li> <li>Sort Input</li> <li>Anko Script</li> <li>JavaScript</li> <li>Sleep</li> </ul>"},{"location":"cellsflows/actions/scheduler-tools-internals/message-variable-error/","title":"Message, Variable, Error","text":"<p>Create a message using templates and pass it to the next actions. Templates can use if/else structures to build different output based on the input.</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/message-variable-error/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Message (message) textarea Message to be appended to the output. You can use templating using the {{.Var}} syntax Output Target (ctype) select, possible values: StringBody (string),JsonBody (json),Trigger Error (error) string Output can be sent as StringBody or JSON Body (then accessed by following actions or filters using {{.LastOutput.XXXBody}}) or trigger an Error. Name (vars.paramName) string Name of the variable, can be used later using {{.Vars.Name}} Value (vars.paramValue) string Value of the variable Variable Type (vars.paramType) select, possible values: String (string),Number (number),Boolean (bool),JSON Object (object),JSON Array (array) string Set a type for this variable"},{"location":"cellsflows/actions/scheduler-tools-internals/clear-action/","title":"Clear Action","text":"<p>Clear message inputs before passing to next action</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/clear-action/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Nodes (nodes) boolean Clear Nodes Users (users) boolean Clear Users Roles (roles) boolean Clear Roles Workspaces (workspaces) boolean Clear Workspaces ACLs (acls) boolean Clear ACLs Activities (activities) boolean Clear Activities DataSources (datasources) boolean Clear DataSources"},{"location":"cellsflows/actions/scheduler-tools-internals/trigger-another-flow/","title":"Trigger Another Flow","text":"<p>Start another Job using its ID and optional parameters</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/trigger-another-flow/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Flow Identifier (jobID) string Unique identifier (uuid) of the job to launch Pass Input to new Flow (copyInput) boolean Pass current Action input (Nodes, Users, etc...) as input to the new Flow Task Identifier (optional) (taskID) string If you need to know the task ID, otherwise generated automatically Name (parameters.paramName) string Name of the parameter Value (parameters.paramValue) string Value of the parameter"},{"location":"cellsflows/actions/scheduler-tools-internals/advanced-logging-artifacts/","title":"Advanced Logging, Artifacts","text":"<p>Build a custom log or metrics published internally</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/advanced-logging-artifacts/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Message (message) textarea Your custom message published to logs Level (level) select, possible values: DEBUG (debug),INFO (info),WARN (warn),ERROR (error) info Select logger level Key (zaps.zap_key) string Use an alphanumerical identifier for this field Value (zaps.zap_value) string Publish a simple string or a json-encoded object. Value is JSON (zaps.as_object) boolean false If set to true, the Value will be decoded from JSON to be properly stored as Zap. Any basic types are allowed (object, array of objects, integers, ...) Publish as Artifact (zaps.is_artifact) select, possible values: Other (object) (object),String (string),Node (node),User (user),Role (role),Acl (acl),Workspace (workspace),Datasource (datasource),Action Output (output) Publishing this field as artifact will 'pin' it to the task global summary. You can specify a type to help with display. Note the artifacts are always published to the 'Task' logger. Artifact Label (zaps.artifact_label) string Give a human-readable label to this artifact Artifact Display (zaps.artifact_format) select, possible values: Object/String (object),Objects List (list),Columnar Data (columns) object Additional formatting hint for better display (is it an object or a list of objects...?) Application Log (internalLogger) boolean false Display message in system logs (command line output and pydio.log file) Audit Log (auditLogger) boolean false Display message in audit log (see Audits in left-hand menu) Task Log (taskLogger) boolean false Display message in task summary Metric Name (use underscores) (metrics.metric_name) string Sensor name published to Prometheus Metric Type (metrics.metric_type) select, possible values: Counter (counter),Gauge (gauge) counter Sensor type, either a Counter (perpetual increment) or a Gauge (varying value). Metric Value (numerical) (metrics.metric_value) string Value to publish, will be converted to Int64 Optional Tags (metrics.metric_tags) string Additional tagging of the sensor, you can use name1:value1,name2:value2, etc."},{"location":"cellsflows/actions/scheduler-tools-internals/empty-action/","title":"Empty Action","text":"<p>Blank action for appending selectors, filters, or simply logging the current content of the input message.</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/empty-action/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Message (message) textarea Create custom message - If left empty, a summary of the input is used instead. Task Log (taskLogger) boolean true Display message in task summary Application Log (internalLogger) boolean false Display message in general application log"},{"location":"cellsflows/actions/scheduler-tools-internals/sort-input/","title":"Sort Input","text":"<p>Apply sorting to Input messages</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/sort-input/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Sorting Direction (dir) select, possible values: Ascending (asc),Descending (desc) asc Whether to sort ascending or descending Input Member (input) Possible Values Below nodes Which data to sort incoming Input message \u00a0\u00a0\u00a0\u2022 Nodes (nodes) input \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Node Field (nodes-field) select, possible values: Uuid (string) (Uuid),Path (string) (Path),Type (int32) (Type),Size (int64) (Size),MTime (int64) (MTime),Mode (int32) (Mode),Etag (string) (Etag) Uuid Apply sorting on the selected field \u00a0\u00a0\u00a0\u2022 Users (users) input \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- User Field (users-field) select, possible values: Uuid (string) (Uuid),GroupPath (string) (GroupPath),Login (string) (Login),Password (string) (Password),OldPassword (string) (OldPassword),IsGroup (bool) (IsGroup),GroupLabel (string) (GroupLabel),LastConnected (int32) (LastConnected),PoliciesContextEditable (bool) (PoliciesContextEditable) Uuid Apply sorting on the selected field \u00a0\u00a0\u00a0\u2022 Workspaces (workspaces) input \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Workspace Field (workspaces-field) select, possible values: UUID (string) (UUID),Label (string) (Label),Description (string) (Description),Slug (string) (Slug),Scope (int32) (Scope),LastUpdated (int32) (LastUpdated),Attributes (string) (Attributes),PoliciesContextEditable (bool) (PoliciesContextEditable) UUID Apply sorting on the selected field \u00a0\u00a0\u00a0\u2022 Roles (roles) input \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Role Field (roles-field) select, possible values: Uuid (string) (Uuid),Label (string) (Label),IsTeam (bool) (IsTeam),GroupRole (bool) (GroupRole),UserRole (bool) (UserRole),LastUpdated (int32) (LastUpdated),PoliciesContextEditable (bool) (PoliciesContextEditable),ForceOverride (bool) (ForceOverride) Uuid Apply sorting on the selected field \u00a0\u00a0\u00a0\u2022 ACLs (acls) input \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- ACL Field (acls-field) select, possible values: ID (string) (ID),RoleID (string) (RoleID),WorkspaceID (string) (WorkspaceID),NodeID (string) (NodeID),ActionName (string) (ActionName),ActionValue (string) (ActionValue) ID Apply sorting on the selected field \u00a0\u00a0\u00a0\u2022 Datasources (datasources) input \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- DataSource Field (datasources-field) select, possible values: Name (string) (Name),Disabled (bool) (Disabled),StorageType (int32) (StorageType),ObjectsServiceName (string) (ObjectsServiceName),ObjectsHost (string) (ObjectsHost),ObjectsPort (int32) (ObjectsPort),ObjectsSecure (bool) (ObjectsSecure),ObjectsBucket (string) (ObjectsBucket),ObjectsBaseFolder (string) (ObjectsBaseFolder),ApiKey (string) (ApiKey),ApiSecret (string) (ApiSecret),PeerAddress (string) (PeerAddress),Watch (bool) (Watch),FlatStorage (bool) (FlatStorage),SkipSyncOnRestart (bool) (SkipSyncOnRestart),EncryptionMode (int32) (EncryptionMode),EncryptionKey (string) (EncryptionKey),VersioningPolicyName (string) (VersioningPolicyName),CreationDate (int32) (CreationDate),LastSynchronizationDate (int32) (LastSynchronizationDate) Name Apply sorting on the selected field \u00a0\u00a0\u00a0\u2022 Activities (activities) input \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Activity Field (activities-field) select, possible values: JsonLdContext (string) (JsonLdContext),Type (int32) (Type),Id (string) (Id),Name (string) (Name),Summary (string) (Summary),Markdown (string) (Markdown),MediaType (string) (MediaType),Href (string) (Href),Rel (string) (Rel),Hreflang (string) (Hreflang),Height (int32) (Height),Width (int32) (Width),FormerType (int32) (FormerType),Accuracy (float32) (Accuracy),Altitude (float32) (Altitude),Latitude (float32) (Latitude),Longitude (float32) (Longitude),Radius (float32) (Radius),Units (string) (Units),TotalItems (int32) (TotalItems) JsonLdContext Apply sorting on the selected field"},{"location":"cellsflows/actions/scheduler-tools-internals/anko-script/","title":"Anko Script","text":"<p>User-defined script for manipulating action inputs</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/anko-script/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Script Content (script) textarea, possible values: content-type:text/go Pseudo-go Anko script Name (script-params.paramName) string Name of the parameter, can be used in script using Params[\"Name\"] Value (script-params.paramValue) string Value of the parameter, can use templating"},{"location":"cellsflows/actions/scheduler-tools-internals/anko-script/#expected-input","title":"Expected Input","text":"<p>Any input is passed and is made available as input variable to the script</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/anko-script/#expected-input_1","title":"Expected Input","text":"<p>Output as updated by the script inside the output variable</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/javascript/","title":"JavaScript","text":"<p>User-defined Javascript code for manipulating action data.</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/javascript/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Script Content (script) textarea, possible values: content-type:text/javascript // Compute Output value using :// + JsonBody: LastOutput.JsonBody unserialized,// + Vars: Runtime variables,// + Params: Action parameters defined belowOutput = JsonBody Javascript Name (script-params.paramName) string Name of the parameter, can be used in script using Params[\"Name\"] Value (script-params.paramValue) string Value of the parameter, can use templating Output Format (output) Possible Values Below jsonbody Where to store output \u00a0\u00a0\u00a0\u2022 JsonBody (jsonbody) output \u00a0\u00a0\u00a0\u2022 Variable (variable) output \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Variable Name (outputVar) string Name of the variable to store"},{"location":"cellsflows/actions/scheduler-tools-internals/javascript/#expected-input","title":"Expected Input","text":"<p>Any input is passed and is made available as input variable to the script</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/javascript/#expected-input_1","title":"Expected Input","text":"<p>Output as updated by the script inside the output variable</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/sleep/","title":"Sleep","text":"<p>Use as a waiter, or simulate a long-running process with progress</p>"},{"location":"cellsflows/actions/scheduler-tools-internals/sleep/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Total time (timer) integer 10 Total task time in seconds Ticks (ticker) integer 3 Time between each ticks for incrementing progress, in seconds"},{"location":"cellsflows/actions/upload-download-to-external-servers/index/","title":"Upload/Download to External Servers","text":"<ul> <li>Http Get</li> <li>FTP Put</li> <li>Scp put</li> <li>Webhook</li> </ul>"},{"location":"cellsflows/actions/upload-download-to-external-servers/http-get/","title":"Http Get","text":"<p>Download a remote file or binary, equivalent to wget command</p>"},{"location":"cellsflows/actions/upload-download-to-external-servers/http-get/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description URL (url) string Source HTTP URL to download from Target Path (targetPath) string TargetPath of the file to write"},{"location":"cellsflows/actions/upload-download-to-external-servers/ftp-put/","title":"FTP Put","text":"<p>Upload selection to a remote server using FTP protocol</p>"},{"location":"cellsflows/actions/upload-download-to-external-servers/ftp-put/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Host (host) string Host of the FTP remote server Port (port) string Port of the FTP remote server Username (username) string Username for the FTP remote server Password (password) password Password for the FTP remote server Remote Path (remotePath) string Remote Path Recursive (recursive) boolean Recursive upload"},{"location":"cellsflows/actions/upload-download-to-external-servers/ftp-put/#expected-input","title":"Expected Input","text":"<p>Selection of Nodes</p>"},{"location":"cellsflows/actions/upload-download-to-external-servers/ftp-put/#expected-input_1","title":"Expected Input","text":"<p>Same Nodes selected from the input</p>"},{"location":"cellsflows/actions/upload-download-to-external-servers/scp-put/","title":"Scp put","text":"<p>Upload a file to a remote server using SCP (copy over SSH) protocol</p>"},{"location":"cellsflows/actions/upload-download-to-external-servers/scp-put/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Host (host) string Hostname of the remote server Port (port) integer 22 Ssh port of the remote server Username (username) string Username of the remote server Password (password) password Password of the remote server Remote Path (remotePath) string / Target of the SCP command"},{"location":"cellsflows/actions/upload-download-to-external-servers/webhook/","title":"Webhook","text":"<p>Transfer data input to an external WebHook like IFTTT or Zapier. Build your own Json body using templating and send using GET, PUT or POST request.</p>"},{"location":"cellsflows/actions/upload-download-to-external-servers/webhook/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Webhook URL (url) string The WebHook full URL, including http[s]:// protocol. Method (method) select, possible values: GET (get),PUT (put),POST (post),POST MULTIPART (post-multi) HTTP Method used for the Request Body: valid JSON or @content. For GET, JSON key/values are transformed to QueryString. (jsonBody) textarea JsonBody with the key:value sent to the webhook File Contents (content-source) select, possible values: .Input.Node (input),.LastOutput.StringBody (stringBody),.LastOutput.RawBody (rawBody),.LastOutput.JsonBody (jsonBody) input Source to be used as file contents either in multiparts or as request body Read Response From (responseFrom) select, possible values: HTTP Body (body),HTTP Headers (headers) body Whether to get response data from response.Body or response.Headers Name (multipart-fields.mpart-name) string Name of the multipart Value (multipart-fields.mpart-value) string Value of the multipart - Use @file to use Input as file upload Type (multipart-fields.mpart-ctype) select, possible values: String (key/value) (string),File Contents (see below - declare filename in value) (content),File Path (read contents - use base as filename) (path) string Parameter type Header Name (headers.header-name) string Header Name Header Value (headers.header-value) string Header Value Handle Response (responseTarget) Possible Values Below Attach response to... (leave empty to discard) \u00a0\u00a0\u00a0\u2022 Json Body (JSON-encoded Data) (json) responseTarget \u00a0\u00a0\u00a0\u2022 Raw Body (binary) (raw) responseTarget \u00a0\u00a0\u00a0\u2022 String Body (string) responseTarget \u00a0\u00a0\u00a0\u2022 Variable (varBinary) responseTarget \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Name (varName) string Variable Name \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Data Type (varType) select, possible values: String (dump as string) (string),Object (decode from JSON) (object),Array (decode from JSON) (array),Binary (no conversion) (binary) string Try to decode data"},{"location":"cellsflows/actions/atomic-commands-and-scripts/index/","title":"Atomic Commands and Scripts","text":"<ul> <li>Capture Datasource</li> <li>Resynchronize</li> <li>gRPC Request</li> <li>Shell Command</li> </ul>"},{"location":"cellsflows/actions/atomic-commands-and-scripts/capture-datasource/","title":"Capture Datasource","text":"<p>Capture datasource index/s3 into JSON or BoltDB for debugging purpose. Warning, this action expects a unique item to be passed in Input.DataSources (use a selector).</p>"},{"location":"cellsflows/actions/atomic-commands-and-scripts/capture-datasource/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Target Folder (target) string Target path where to store the generated snapshot files. File name prefix (prefix) string snapshot- Prefix for the snapshots. Resulting name is prefix-dsName-source.format Format (format) select, possible values: JSON (json),BoltDB (bolt) json Output format, either JSON or BoltDB. Capture source/target endpoints (sides) select, possible values: S3 and Index (both),S3 only (s3),Index only (index) both Capture both sides or only of them."},{"location":"cellsflows/actions/atomic-commands-and-scripts/resynchronize/","title":"Resynchronize","text":"<p>Trigger a Resync command on a SyncProvider microservice endpoint</p>"},{"location":"cellsflows/actions/atomic-commands-and-scripts/resynchronize/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Service Name (service) string Full name of the cells micro service Path (path) string / Internal path on which to trigger the resync Dry Run (dry-run) boolean For services supporting this, perform a dry-run, no changes are applied"},{"location":"cellsflows/actions/atomic-commands-and-scripts/grpc-request/","title":"gRPC Request","text":"<p>Perform a valid JSON-encoded call to any micro-service</p>"},{"location":"cellsflows/actions/atomic-commands-and-scripts/grpc-request/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Service Name (service) string Full name of the cells micro service Method (method) string Name of the RPC method JSON Request (request) textarea {} JSON-encoded body to be sent as request Request Timeout (timeout) string Set a duration (10s, 10m, 1h...)"},{"location":"cellsflows/actions/atomic-commands-and-scripts/shell-command/","title":"Shell Command","text":"<p>Perform a console command on the underlying server. If applied to a Cells file, data will be temporarily copied on the server file system to be processed.</p>"},{"location":"cellsflows/actions/atomic-commands-and-scripts/shell-command/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Shell Command (cmd) select Command to be called directly on server underlying OS. Authorized values must be set manually in the application configuration inside defaults/schedulerShellAllowedCommands key. Parameters (parameters) string List of space-separated parameters to be appended to the command Store command output (storeOutput) string Path where to store command output Use temporary folder for input or output (inputTempFile) boolean Pipe file to/from the filesystem inside a temporary folder. Used in conjunction with an input Node, the command parameters can use PYDIO_INPUT_FILE to apply shell command on this file, and PYDIO_OUTPUT_FILE to read an output back to Cells. Send file to input stream (inputStream) boolean Pipe the input file content to the subprocess STDIN Read file from output stream (outputStream) boolean Pipe the subprocess STDOUT to retrieve the output file content"},{"location":"cellsflows/actions/contents-processing/index/","title":"Contents Processing","text":"<ul> <li>Docx Replacement</li> <li>ClamAV Scan</li> <li>Cells Convert Tools</li> <li>Gotenberg PDF Previews</li> <li>Doconv Extractor</li> <li>Markdown Actions</li> <li>PDF Actions</li> <li>Tika Extractor</li> <li>Clean Thumbs</li> <li>Extract EXIF</li> <li>Create Thumbs</li> <li>Compute Hash</li> </ul>"},{"location":"cellsflows/actions/contents-processing/docx-replacement/","title":"Docx Replacement","text":"<p>Replace placeholders inside DOCX document</p>"},{"location":"cellsflows/actions/contents-processing/docx-replacement/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Break on Error (breakOnError) boolean true Whether to break or ignore DOCX-specific errors Input Data or Node (reader) Possible Values Below lastOutputRaw Input must be valid DOCX data \u00a0\u00a0\u00a0\u2022 Incoming Data from LastOutput.RawBody (lastOutputRaw) reader \u00a0\u00a0\u00a0\u2022 Input Node (inputNode) reader \u00a0\u00a0\u00a0\u2022 Custom Path (customPath) reader \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Custom Path (reader_alternatePath) string Set path here if you want to override {{.Node.Path}} Placeholder Key (fields.key) string This key will be searched inside the document as Placeholder Value (fields.value) string This is the final value that will be updated inside the document Attach Output To... (output) Possible Values Below raw Method for passing the output to the next action, may depend on the data format \u00a0\u00a0\u00a0\u2022 Raw Body (binary) (raw) output \u00a0\u00a0\u00a0\u2022 Variable (varBinary) output \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Name (varName) string Variable Name \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Data Type (varType) select, possible values: String (dump as string) (string),Object (decode from JSON) (object),Array (decode from JSON) (array),Binary (no conversion) (binary) string Try to decode data"},{"location":"cellsflows/actions/contents-processing/docx-replacement/#expected-input","title":"Expected Input","text":"<p>Docx valid data or file</p>"},{"location":"cellsflows/actions/contents-processing/docx-replacement/#expected-input_1","title":"Expected Input","text":"<p>Updated docx data</p>"},{"location":"cellsflows/actions/contents-processing/create-thumbs/","title":"Create Thumbs","text":"<p>Create thumbnails on image creation/modification</p>"},{"location":"cellsflows/actions/contents-processing/create-thumbs/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Sizes (ThumbSizes) textarea A JSON map describing each thumbnail to be created"},{"location":"cellsflows/actions/contents-processing/create-thumbs/#expected-input","title":"Expected Input","text":"<p>Single-selection of file. Temporary and zero-bytes will be ignored</p>"},{"location":"cellsflows/actions/contents-processing/create-thumbs/#expected-input_1","title":"Expected Input","text":"<p>Input file with updated metadata</p>"},{"location":"cellsflows/actions/contents-processing/compute-hash/","title":"Compute Hash","text":"<p>Compute file signature using Cells internal algorithm</p>"},{"location":"cellsflows/actions/contents-processing/compute-hash/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Hashing Algorithm (hashType) select, possible values: Cells Internal (cells),MD4 (md4),MD5 (md5),SHA1 (sha1),SHA256 (sha256),SHA512 (sha512) cells Algorithm applied to file contents Metadata Name (metaName) string x-cells-hash Force Recompute (forceRecompute) boolean false Recompute X-Cells-Hash even if it already exists"},{"location":"cellsflows/actions/contents-processing/compute-hash/#expected-input","title":"Expected Input","text":"<p>Multiple selection of files</p>"},{"location":"cellsflows/actions/contents-processing/compute-hash/#expected-input_1","title":"Expected Input","text":"<p>Updated selection of files</p>"},{"location":"cellsflows/actions/contents-processing/clamav-scan/","title":"ClamAV Scan","text":"<p>Performs an antivirus scan using ClamAV</p>"},{"location":"cellsflows/actions/contents-processing/clamav-scan/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Address (address) string Address of the ClamAV instance"},{"location":"cellsflows/actions/contents-processing/clamav-scan/#expected-input","title":"Expected Input","text":"<p>Selection of Nodes</p>"},{"location":"cellsflows/actions/contents-processing/clamav-scan/#expected-input_1","title":"Expected Input","text":"<p>Same Nodes</p>"},{"location":"cellsflows/actions/contents-processing/cells-convert-tools/","title":"Cells Convert Tools","text":"<p>Use Cells Convert Tools remote service to extract thumbnails</p>"},{"location":"cellsflows/actions/contents-processing/cells-convert-tools/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Convert Tools Endpoint (srvUrl) string http://localhost:9997 Full URL to a running instance of Convert Tools (including http) Read from RawBody (input_raw) boolean false Read data from RawBody instead of reading .Input.Node content Send to RawBody (output_raw) boolean false Send to RawBody instead of direct writing to file (next field is ignored) Store converted data to file (with expected extension) (target_path) string thumbnails/{{.Node.Uuid}}.jpg Where to store conversion output HTTP Method (method) select, possible values: POST (POST),PUT (PUT) POST Restrict stream size (for big files, send only a part) (limitReader) integer-bytes Name (Parameters.paramName) string Parameter Name Value (Parameters.paramValue) string Parameter Value"},{"location":"cellsflows/actions/contents-processing/gotenberg-pdf-previews/","title":"Gotenberg PDF Previews","text":"<p>Create PDF previews using Gotenberg docker image</p>"},{"location":"cellsflows/actions/contents-processing/gotenberg-pdf-previews/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Gotenberg V6 Address (srvUrl) string http://localhost:3000 Full URL to running Gotenberg instance. Warning, we currently only support Gotenberg &lt;= v6, use thecodingmachine/gotenberg:6 docker (v7 has a different API). Read from RawBody (input_raw) boolean false Read data from RawBody instead of reading .Input.Node content Send to RawBody (output_raw) boolean false Send to RawBody instead of direct writing to file (next field is ignored) Store converted data to file (with expected extension) (target_path) string thumbnails/{{.Node.Uuid}}.pdf Where to store conversion output"},{"location":"cellsflows/actions/contents-processing/doconv-extractor/","title":"Doconv Extractor","text":"<p>Extract files contents using Doconv</p>"},{"location":"cellsflows/actions/contents-processing/doconv-extractor/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Extract and store textual content (extractContent) string pydio-binaries/doconv-{{.Node.Uuid}}.gz Doconv can extract content from many files types, that can be indexed by search server. Extracted content is stored to the specified file, and the url of this file is attached to the 'content ref' metadata. Content Reference Metadata (contentRef) string pydio:ContentRef Where to attach textual file content Compress extracted contents (compressContent) boolean true If switched on, extracted content is compressed before storing Additional metadata fields (additionalMeta) string Try to find additional known keys in metadata extracted by Doconv. Use comma separated list of field names"},{"location":"cellsflows/actions/contents-processing/markdown-actions/","title":"Markdown Actions","text":"<p>Markdown Actions: convert MD to HTML or PDF</p>"},{"location":"cellsflows/actions/contents-processing/markdown-actions/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Additional Header (header) textarea Additional Header printed after title and before contents, in Markdown (will be converted as content) Additional Footer (footer) textarea Additional Header printed after contents, in Markdown (will be converted as content) Base URL (baseURL) string For images or links, prepend this BaseURL if it is defined Markdown Source (source) Possible Values Below lastOutputRaw Where to get markdown content from. Output is always sent as RawBinary and must be written to file with another action. \u00a0\u00a0\u00a0\u2022 Incoming Data from LastOutput.RawBody (lastOutputRaw) source \u00a0\u00a0\u00a0\u2022 Input Node (inputNode) source \u00a0\u00a0\u00a0\u2022 Custom Path (customPath) source \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Custom Path (reader_alternatePath) string Set path here if you want to override {{.Node.Path}} \u00a0\u00a0\u00a0\u2022 Variable Name (var) source \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Variable Name (reader_varName) string Name of the variable (will look for {{.Vars.VarName}}). String or numbers will be written as is, other types will be converted to JSON automatically. \u00a0\u00a0\u00a0\u2022 Free Content - set below (free) source \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Free Content (reader_contents) textarea Type in the content to be used Command (command) Possible Values Below html Operation to apply \u00a0\u00a0\u00a0\u2022 Convert To HTML (html) command \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Complete HTML Page (complete) boolean true Print a full HTML document, otherwise only the converted markdown part \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- HTML Title (title) string HTML Title of the Page (not printed in the document, use the Header bloc if you wish to do so) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Generate ToC (printTOC) boolean Generate a Table Of Contents and append it after the title \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Custom CSS (customCSS) textarea Replace embedded default CSS \u00a0\u00a0\u00a0\u2022 Convert To PDF (pdf) command"},{"location":"cellsflows/actions/contents-processing/pdf-actions/","title":"PDF Actions","text":"<p>PDF Actions: split pages, merge pages, create from markdown</p>"},{"location":"cellsflows/actions/contents-processing/pdf-actions/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Break on Error (breakOnError) boolean false Whether to break or ignore PDF-specific errors Single Input Data (singleInput) Possible Values Below inputNode Source for the PDF raw data, applicable only for 'Split' and 'Watermark' commands \u00a0\u00a0\u00a0\u2022 Input Node (inputNode) singleInput \u00a0\u00a0\u00a0\u2022 Custom Path (customPath) singleInput \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Custom Path (reader_alternatePath) string Set path here if you want to override {{.Node.Path}} \u00a0\u00a0\u00a0\u2022 Incoming Data from LastOutput.RawBody (lastOutputRaw) singleInput Command (command) Possible Values Below PDF Operation to apply \u00a0\u00a0\u00a0\u2022 Split Pages (split) command \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Optional list of pages (pages) string List of Pages - \"1 2 4\" for specific pages,  \"1-4\" for range, or \"1-\" for all \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Directory where to place extracted pages (split-target-dir) string {{.Node.Path  or  dir}} Name of the resulting file, inside the origin folder \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Page Prefix (split-target-prefix) string {{.Node.Path  or  base  or  replace \".pdf\" \"\"}} Prefix used for naming extracted pages, like prefix-{number}.pdf (inferred from the filename by default) \u00a0\u00a0\u00a0\u2022 Join Pages (join) command \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Write To Target (see below) (writeToFile) boolean true Write to file or just keep data in-memory and pass to next action via RawBody \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Name of the resulting file (target-name) string {{.Node.Path  or  dir}}/joined-pages.pdf Name of the resulting file, inside the origin folder \u00a0\u00a0\u00a0\u2022 Add Watermark (watermark) command \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Type of the Watermark (wType) select, possible values: Text (text),Image (image) text Either Text or Image \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Text or Path to Image (wContent) string Depending on the 'Type' chosen enter watermark text or a full path to an image here \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Watermark On Top (wTop) boolean false Whether to put watermark on top or behind content \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Additional Watermark Description (wDescription) string Please check https://pdfcpu.io/core/watermark for detailed description flags \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Optional list of pages (wPages) string 1- List of Pages - \"1 2 4\" for specific pages,  \"1-4\" for range, or \"1-\" for all \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Write To Target (set below) (writeToFile) boolean true Write to file or just keep data in-memory and pass to next action via RawBody \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Target PDF (original file by default) (wTarget) string Leave empty to override original document, put an alternative path"},{"location":"cellsflows/actions/contents-processing/tika-extractor/","title":"Tika Extractor","text":"<p>Extract files contents by querying a running Apache Tika server</p>"},{"location":"cellsflows/actions/contents-processing/tika-extractor/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Tika Service Address (serverAddress) string localhost:9998 Use HOSTNAME or IP:PORT, http://host:port will be used to query Tika server Extract and store textual content (extractContent) string pydio-binaries/tika-{{.Node.Uuid}}.gz Tika can extract content from many files types, that can be indexed by search server. Extracted content is stored to the specified file, and the url of this file is attached to the 'content ref' metadata. Content Reference Metadata (contentRef) string pydio:ContentRef Where to attach textual file content Compress extracted contents (compressContent) boolean true If switched on, extracted content is compressed before storing Additional metadata fields (additionalMeta) string Content-Type Try to find additional known keys in metadata extracted by Tika. Use comma separated list of field names"},{"location":"cellsflows/actions/contents-processing/clean-thumbs/","title":"Clean Thumbs","text":"<p>Remove thumbnails associated to deleted images</p>"},{"location":"cellsflows/actions/contents-processing/extract-exif/","title":"Extract EXIF","text":"<p>Extract EXIF data from jpeg images and store them as indexed metadata</p>"},{"location":"cellsflows/actions/contents-processing/extract-exif/#expected-input","title":"Expected Input","text":"<p>Single-selection of file. Temporary and zero-bytes will be ignored</p>"},{"location":"cellsflows/actions/contents-processing/extract-exif/#expected-input_1","title":"Expected Input","text":"<p>Input file with updated metadata</p>"},{"location":"cellsflows/actions/identity-management/index/","title":"Identity Management","text":"<ul> <li>User Permissions</li> <li>Load or Create Cell</li> <li>Modify Cell</li> <li>Save/Delete Cell</li> <li>Context User</li> <li>Delete Identity Data</li> <li>Create Link</li> <li>Delete Link</li> <li>Persist Identity Data</li> <li>Add/remove user role</li> <li>Set user attribute</li> <li>Remove Users</li> <li>Workspace Roots</li> <li>Modify Workspace</li> </ul>"},{"location":"cellsflows/actions/identity-management/user-permissions/","title":"User Permissions","text":"<p>Compute a list of accessible workspaces for one user</p>"},{"location":"cellsflows/actions/identity-management/user-permissions/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Output Export and Formatting (outputFormat) select, possible values: JSON attached to Output.JsonBody (json-body),Users attributes - One user copy per workspace (expand-wsp),User unique attribute - All permissions joined (join-attribute) json-body How permissions are exported for further processing Filter with Workspaces from Input (inputWorkspacesFilter) boolean false Export only workspaces that are in the Input. Otherwise export all workspaces Ignore UX Internals (homepage, directory, etc) (ignoreWorkspacesInternal) boolean true Do not show internal fake workspaces Attribute Prefix when Storing in User Attributes (attributePrefix) string permission: When storing in User Attributes, prefix for all attribute key(s) Delimiter used for building unique string (delimiter) string ; Delimiter used for building unique string"},{"location":"cellsflows/actions/identity-management/set-user-attribute/","title":"Set user attribute","text":"<p>Add arbitrary attribute on input users (to be chained with a Persist Identity action). Lease value empty for clear attribute, or use +/- symbols if attribute handles multiple values.</p>"},{"location":"cellsflows/actions/identity-management/set-user-attribute/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Attribute Name (attributeName) string Name of the attribute, can use template Attribute Value (attributeValue) string Value to set (can use templates). Leave empty to delete attribute Multiple values (attributeMultiple) boolean If attribute is expected to support multiple values (like locks), use leading + or - in value"},{"location":"cellsflows/actions/identity-management/set-user-attribute/#expected-input","title":"Expected Input","text":"<p>Users</p>"},{"location":"cellsflows/actions/identity-management/set-user-attribute/#expected-input_1","title":"Expected Input","text":"<p>Users</p>"},{"location":"cellsflows/actions/identity-management/remove-users/","title":"Remove Users","text":"<p>Batch-delete users and groups, based on login or group path. Use one of the parameters.</p>"},{"location":"cellsflows/actions/identity-management/remove-users/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Login (login) string Specific user login groupPath (groupPath) string Path to group (all users and groups will be deleted)"},{"location":"cellsflows/actions/identity-management/workspace-roots/","title":"Workspace Roots","text":"<p>Load workspaces root nodes from ACLs. Optionally attach result to output message.</p>"},{"location":"cellsflows/actions/identity-management/workspace-roots/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Input (input) select, possible values: Input workspaces (workspaces),Contextual Workspace (context) workspaces Select input Output (output) select, possible values: Fill workspaces RootNodes field (workspaces),Pass found nodes to message Output.Nodes (output) workspaces Output Nodes to..."},{"location":"cellsflows/actions/identity-management/workspace-roots/#expected-input","title":"Expected Input","text":"<p>Workspaces</p>"},{"location":"cellsflows/actions/identity-management/workspace-roots/#expected-input_1","title":"Expected Input","text":"<p>Workspaces</p>"},{"location":"cellsflows/actions/identity-management/modify-workspace/","title":"Modify Workspace","text":"<p>Update input workspace fields or attribute(s). This action does not persist changes.</p>"},{"location":"cellsflows/actions/identity-management/modify-workspace/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Label (label) string {{.Workspace.Label}} Workspace Label Description (description) string {{.Workspace.Description}} Workspace Label Slug (slug) string {{.Workspace.Slug}} Workspace Slug Scope (scope) string {{.Workspace.Scope.String}} Workspace Scope Updated (updated) integer Last Updated (timestamp) Name (attributes.attribute_name) string JSON Value (attributes.attribute_value) string JSON-encoded value (e.g. quoted string) or empty to remove"},{"location":"cellsflows/actions/identity-management/modify-workspace/#expected-input","title":"Expected Input","text":"<p>Workspaces</p>"},{"location":"cellsflows/actions/identity-management/modify-workspace/#expected-input_1","title":"Expected Input","text":"<p>Workspaces</p>"},{"location":"cellsflows/actions/identity-management/load-or-create-cell/","title":"Load or Create Cell","text":"<p>Load or Create a Cell from scratch - Use Modify action to attach roots or users</p>"},{"location":"cellsflows/actions/identity-management/load-or-create-cell/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Output Variable Name (outputVar) string Cell Object is stored in a variable for the next action Load from inputs or create new (behavior) select, possible values: Find Cell on input Node or create one (node-create),Find Cell on input Node or fail (node-fail),Create blank Cell with Label/Description (no roots) (create),Load Cell from a specific UUID (set below) (uuid) node-create Choose how to load/create the Cell object New Cell Label (create-label) string Automated Cell Set a Label for this new Cell New Cell Description (create-description) string Set a description for this new Cell Load from UUID (uuid) string Pass an UUID to find Cell Expiration Date (expirationDate) integer Protect Cell with auto-expiration at a given date, use a timestamp"},{"location":"cellsflows/actions/identity-management/modify-cell/","title":"Modify Cell","text":"<p>Attach or remove resources (root nodes, users) to/from a Cell</p>"},{"location":"cellsflows/actions/identity-management/modify-cell/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Variable Name (inputVar) string Cell Cell object stored in variable by previous actions Resource Type (op) Possible Values Below roots Resource to modify \u00a0\u00a0\u00a0\u2022 Cell Root Nodes (roots) op \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Operation Type (rootOp) select, possible values: Add node to roots (a),Delete node from roots (d) a Roots Operations (read from Input.Nodes) \u00a0\u00a0\u00a0\u2022 Cell Users (acls) op \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Operation Type (aclOp) select, possible values: Add - Read only (r),Add - Read/Write (rw),Add - Write only (w),Remove (d) r Users Operations (read from Input.Users) \u00a0\u00a0\u00a0\u2022 Update Expiration Date (date) op \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Expiration Date (Timestamp) (expirationDate) integer Disable Cell after this date"},{"location":"cellsflows/actions/identity-management/save-delete-cell/","title":"Save/Delete Cell","text":"<p>Persist a Cell after previous modifications or just delete it.</p>"},{"location":"cellsflows/actions/identity-management/save-delete-cell/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Variable Name (inputVar) string Cell Cell object stored in variable by previous actions Delete this cell (!destructive) (del) boolean false"},{"location":"cellsflows/actions/identity-management/context-user/","title":"Context User","text":"<p>Extract current user from request context and add it to message output</p>"},{"location":"cellsflows/actions/identity-management/context-user/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description User to load if system user (systemUser) string If operation is triggered by the system, use an alternative login instead."},{"location":"cellsflows/actions/identity-management/context-user/#expected-input","title":"Expected Input","text":"<p>No input</p>"},{"location":"cellsflows/actions/identity-management/context-user/#expected-input_1","title":"Expected Input","text":"<p>User extracted from context is put inside the Users selection</p>"},{"location":"cellsflows/actions/identity-management/delete-identity-data/","title":"Delete Identity Data","text":"<p>Delete users, roles, workspaces or acls passed in input</p>"},{"location":"cellsflows/actions/identity-management/delete-identity-data/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Object Type (objectTypes) select, possible values: Users (User),Workspaces (Workspace),ACLs (Acl),Roles (Role) Users Type of objects to extract from input and delete from system"},{"location":"cellsflows/actions/identity-management/delete-identity-data/#expected-input","title":"Expected Input","text":"<p>One or more selection of Roles, Workspaces, ACLs or Users</p>"},{"location":"cellsflows/actions/identity-management/delete-identity-data/#expected-input_1","title":"Expected Input","text":"<p>Selected objects have their selection emptied as they are deleted</p>"},{"location":"cellsflows/actions/identity-management/create-link/","title":"Create Link","text":"<p>Create a public link for the selected node and under a specific user</p>"},{"location":"cellsflows/actions/identity-management/create-link/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description If a link already exists... (onExistsBehavior) select, possible values: load existing link without changes (use),Update existing link with parameters (update),Remove and create a new link (remove),Create a second link (ignore),Output an error (error) use What to do if a link exists on resource Allow Read (accessTypeDownload) boolean true Should be true most of the time Allow Write (accessTypeUpload) boolean true Let a shared file be editable or a shared folder be writeable. Custom Label (label) string {{RefLabel}} Leave {{RefLabel}} to use node name Custom Description (description) string Leave empty to use share date Password (password) string Protect link with a password Maximum Downloads (maxDownloads) integer Protect link with maximum number of downloads Reset Downloads (resetDownloads) boolean When using max download, if link exists, reset downloads number Expiration Date (expirationDate) integer Protect link with auto-expiration at a given date, use a timestamp Template for Folders (foldersTemplateName) select, possible values: Standard (file list with application header) (pydio_shared_folder),Images Gallery (best for photos) (pydio_film_strip),Drop Files Here (for upload-enabled minisites) (pydio_dropbox_template) pydio_shared_folder Default view when creating link on folder"},{"location":"cellsflows/actions/identity-management/delete-link/","title":"Delete Link","text":"<p>Delete link(s) either by Uuid or owned by a user on an node</p>"},{"location":"cellsflows/actions/identity-management/delete-link/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description If no link is found... (onNotExists) select, possible values: Silently Ignore (ignore),Raise an error (error) ignore Do we expect links or not Explicit Link UUID (linkUUID) string Delete a link by its UUID"},{"location":"cellsflows/actions/identity-management/persist-identity-data/","title":"Persist Identity Data","text":"<p>Create or update users, workspaces, roles or ACLs passed in input</p>"},{"location":"cellsflows/actions/identity-management/persist-identity-data/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Object Type (objectTypes) select, possible values: Users (User),Workspaces (Workspace),ACLs (Acl),Roles (Role) Users Type of objects to extract from input and persist to system. Break on error (breakOnError) boolean true If persistence fails for one item, break immediately. Defaults to true for backward compatibility"},{"location":"cellsflows/actions/identity-management/persist-identity-data/#expected-input","title":"Expected Input","text":"<p>One or more selection of Roles, Workspaces, ACLs or Users</p>"},{"location":"cellsflows/actions/identity-management/persist-identity-data/#expected-input_1","title":"Expected Input","text":"<p>Updated selection of objects that have been saved (created or updated)</p>"},{"location":"cellsflows/actions/identity-management/add-remove-user-role/","title":"Add/remove user role","text":"<p>Add or remove a role on input users</p>"},{"location":"cellsflows/actions/identity-management/add-remove-user-role/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Modification Type (operation) select, possible values: Add (add),Remove (remove) add Add or Remove Role Input (roleInput) select, possible values: Action Input (input),Custom Uuid (custom) input Custom Uuid or action Roles input Role Identifier (customUuid) string Set a specific role Uuid to be added/removed"},{"location":"cellsflows/actions/identity-management/add-remove-user-role/#expected-input","title":"Expected Input","text":"<p>Users</p>"},{"location":"cellsflows/actions/identity-management/add-remove-user-role/#expected-input_1","title":"Expected Input","text":"<p>Users</p>"},{"location":"cellsflows/actions/notifications-and-emails/index/","title":"Notifications and Emails","text":"<ul> <li>Send Email</li> <li>Send Notification</li> <li>Email Digest</li> </ul>"},{"location":"cellsflows/actions/notifications-and-emails/send-email/","title":"Send Email","text":"<p>Send an arbitrary email. Make sure to set up a subject, a message and at least one value for email or login recipients.</p>"},{"location":"cellsflows/actions/notifications-and-emails/send-email/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Subject (subject) string Subject used for email Message (message) textarea Message to be added to the output. Recipients list can use email addresses, user logins or template computed values. Collect users from input (input-users) boolean Send message to users collected in input Email Addresses (to-mail) string Set a comma-separated list of recipientsMails for this email. User Logins (to-user) string Set a comma-separated list of user logins to be used as recipient."},{"location":"cellsflows/actions/notifications-and-emails/send-email/#expected-input","title":"Expected Input","text":"<p>StringBody of the LastOutput</p>"},{"location":"cellsflows/actions/notifications-and-emails/send-email/#expected-input_1","title":"Expected Input","text":"<p>Output.Success</p>"},{"location":"cellsflows/actions/notifications-and-emails/send-notification/","title":"Send Notification","text":"<p>Send an arbitrary notification in the user's feed</p>"},{"location":"cellsflows/actions/notifications-and-emails/send-notification/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Title (title) string Title used for notification Message (markdown) textarea Markdown message used to build notification. Collect users from input (input-users) boolean Send notification to users collected in input User Logins (targetLogins) string Set a comma-separated list of user logins to be used as recipient. Attach input Node as [Object] (attachObject) boolean Replace [Object] in markdown with a link to the incoming node Attach context user as [Actor] (attachActor) boolean Replace [Actor] in markdown with a link to the incoming contextual object"},{"location":"cellsflows/actions/notifications-and-emails/send-notification/#expected-input","title":"Expected Input","text":"<p>StringBody of the LastOutput</p>"},{"location":"cellsflows/actions/notifications-and-emails/send-notification/#expected-input_1","title":"Expected Input","text":"<p>Output.Success</p>"},{"location":"cellsflows/actions/notifications-and-emails/email-digest/","title":"Email Digest","text":"<p>Compute a summary of last notifications and send to user</p>"},{"location":"cellsflows/actions/notifications-and-emails/email-digest/#expected-input","title":"Expected Input","text":"<p>Single-selection of one user</p>"},{"location":"cellsflows/actions/notifications-and-emails/email-digest/#expected-input_1","title":"Expected Input","text":"<p>Returns unchanged input</p>"},{"location":"cellsflows/actions/extract-load-transform/index/","title":"Extract/Load/Transform","text":"<ul> <li>DocStore Query</li> <li>Data Transformation</li> <li>Sync. Directories</li> <li>Import from CSV</li> <li>Load SQL Schema</li> <li>Flush SQL Schema</li> <li>Select SQL Data</li> <li>Modify SQL Data</li> </ul>"},{"location":"cellsflows/actions/extract-load-transform/docstore-query/","title":"DocStore Query","text":"<p>Perform a document query on Docstore service and prepare JSON output as {\"ID\":\"\",\"Owner\":\"\", \"Data\":{}} or a slice of these.</p>"},{"location":"cellsflows/actions/extract-load-transform/docstore-query/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Store ID (storeId) string Docstore Store Identifier Search Query (metaQuery) string Bleve-style search query on document JSON Document Owner (owner) string Restrict search to a given owner name Return Data Only (dataOnly) boolean true Directly returns the document data, without keeping docstore ID and Owner. Unique Result Expected (unique) boolean false Check if you want only one document, otherwise output will be an array of documents. Fail if Result is Empty (emptyFails) boolean false If no document are found, fail this step on error, otherwise just Warn and continue."},{"location":"cellsflows/actions/extract-load-transform/docstore-query/#expected-input","title":"Expected Input","text":"<p>JSON Body</p>"},{"location":"cellsflows/actions/extract-load-transform/data-transformation/","title":"Data Transformation","text":"<p>Transform data (input, JSON, or CSV) into JSON, XLSX or CSV</p>"},{"location":"cellsflows/actions/extract-load-transform/data-transformation/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Data input (input) select, possible values: Main Input (use selector for e.g $.Users...) (input),JsonBody (jsonbody),Raw Data / json-encoded (raw/json),Raw Data / csv-encoded (raw/csv),StringBody / json-encoded (stringbody) jsonbody Source used to compute input data. Must be directly a slice, or you can use a Selector to point to a slice. Use Main Input and Root Selector $.Vars.VarName to access a runtime variable. Root Selector (jsonpath) (selector) string If the input is not already a list (slice), use this selector to point to a list inside the input object. **** () legend [XLSX Only] Sheet and Formulas Sheet Name (sheet) string Data Excel Sheet Name **** () legend [CSV Only] Formatting CSV separator (csv-separator) string , Separator character for CSV input / output Output Format (format) Possible Values Below json Format for saving after transformation \u00a0\u00a0\u00a0\u2022 JSON (JsonBody) (json) format \u00a0\u00a0\u00a0\u2022 Object (Variable) (jsonvar) format \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Variable Name (varName) string Name of the output variable \u00a0\u00a0\u00a0\u2022 CSV (RawBody) (csv) format \u00a0\u00a0\u00a0\u2022 XLSX (RawBody) (xlsx) format Column Name (columns.name) string Column Name Selector (jsonpath or template) (columns.jsonpath) string Jsonpath Selector (applied to input) Data Format (columns.dataformat) select, possible values: String (string),Integer (int64) (number),Float (float64) (float),Date (string) (date),Date (timestamp) (stamp),Boolean (true/false) (bool) Make sure output is in the correct format Expander (columns.expand) string Apply this selector on the expanded values [XSLX] Cell Width (columns.cellwidth) integer Specify cell width Column Letter and $.Current or $.Next for row (formulas.formula_column) string Cell Position Formula (use $.First, $.Last, $.Length) (formulas.formula) string Formula Compute In-Place and Export As... (formulas.compute) string Compute"},{"location":"cellsflows/actions/extract-load-transform/data-transformation/#expected-input","title":"Expected Input","text":"<p>JSON, Raw or CSV Body</p>"},{"location":"cellsflows/actions/extract-load-transform/data-transformation/#expected-input_1","title":"Expected Input","text":"<p>JSON, XLSX or CSV Body</p>"},{"location":"cellsflows/actions/extract-load-transform/sync-directories/","title":"Sync. Directories","text":"<p>Synchronize external directories with Cells database</p>"},{"location":"cellsflows/actions/extract-load-transform/sync-directories/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Left store (left) string Type of left users store Right store (right) string Type of right users store Split users and roles (splitUserRoles) string Sequentially import users then roles Cells admin (cellAdmin) string Login of cells administrator"},{"location":"cellsflows/actions/extract-load-transform/import-from-csv/","title":"Import from CSV","text":"<p>Import users list from a CSV file</p>"},{"location":"cellsflows/actions/extract-load-transform/import-from-csv/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Use fields below to create mapping between columns headers and Pydio Cells internal attributes. (legend) legend Use fields below to create mapping between columns headers and Pydio Cells internal attributes. Group Base (group) string csvstore Default group users list will be synced with (leave blank to use root group) Comma (comma) string , Char used as a separator in a comma-separated value file Comment (comment) string # Char used as a comment separator in a comma-separated value file Trim Leading Space (trimLeadingSpace) boolean true Remove leading space from line if any CSV Column (mappings.csv) string Name of the CSV Column User attribute (mappings.attribute) select, possible values: Login (Login),Password (Password),Name (Attributes.displayName),Profile (Attributes.profile),Avatar (Attributes.avatar),Email (Attributes.email),HasEmail (Attributes.hasEmail),AuthSource (Attributes.AuthSource),GroupPath (GroupPath),IsGroup (IsGroup),GroupLabel (GroupLabel),Roles (separated with pipe symbol) (Roles) Cells user attribute to be mapped"},{"location":"cellsflows/actions/extract-load-transform/load-sql-schema/","title":"Load SQL Schema","text":"<p>Load a DB-like schema inferred from data structure</p>"},{"location":"cellsflows/actions/extract-load-transform/load-sql-schema/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Output Variable Name (var) string DbDescriptor Name of the variable where schema is stored for further usage. Use {{.Vars.YourVarName}} in next steps Path of the DB file (load) string Leave empty for an ephemeral DB, it will create a temporary file that will last for this run only. If a path is specified but does not exists, a new DB is created. Table Name (tableName) string Name of the SQL table Existing Schema (JSON) (jsonSchema) textarea Load Schema description from an existing JSON (use Go template to target a VarName or JSONBody) Infer from input (infer) string Use JSONPath to evaluate incoming data. Root object ($) contains $.JsonBody, $.Vars and $.Input Name (columns.col_name) string Column Name Sample Value (columns.col_type) string \"string\" Use a JSON value (e.g. strings are quoted) to force type detection Default Value (columns.col_default) string Use a JSON value similar to the Sample Type Additional Tags (columns.col_tags) string Additional information for the SQL column, e.g, index:index_name,unique;primaryKey;not null... See Gorm models definition. To create composite indexes (or uniques) use same index name in multiple columns."},{"location":"cellsflows/actions/extract-load-transform/flush-sql-schema/","title":"Flush SQL Schema","text":"<p>Close temporary handle to DB and optionally flush to file</p>"},{"location":"cellsflows/actions/extract-load-transform/flush-sql-schema/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Schema Variable Name (var) string DbDescriptor Name of the variable where schema is stored. Flush to... (target) string Use a path to file, for example {{.Input.Node.Path}} of {{.JobParameters.OutputDB}} Clean ephemeral file (clean) boolean true Remove temporary DB from temp folder, should be always done at the end of the job"},{"location":"cellsflows/actions/extract-load-transform/select-sql-data/","title":"Select SQL Data","text":"<p>Perform select queries in SQL schema</p>"},{"location":"cellsflows/actions/extract-load-transform/select-sql-data/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Schema Variable Name (var) string DbDescriptor Name of the variable where schema is stored. SQL SELECT query (select_sql) textarea SQL SELECT Query. Expected Format (format) Possible Values Below object Try to map request output to a specific format \u00a0\u00a0\u00a0\u2022 Generic Object (object) format \u00a0\u00a0\u00a0\u2022 Known Schema (schema) format \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Table Name (tableName) string Table schema for parsing rows selection. \u00a0\u00a0\u00a0\u2022 Integer for count(*) queries (int64) format Output Format (output) Possible Values Below jsonbody How to store output \u00a0\u00a0\u00a0\u2022 JsonBody (jsonbody) output \u00a0\u00a0\u00a0\u2022 Variable (variable) output \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Variable Name (outputVar) string Name of the variable to store"},{"location":"cellsflows/actions/extract-load-transform/modify-sql-data/","title":"Modify SQL Data","text":"<p>Insert/Update/Delete data in structured schema</p>"},{"location":"cellsflows/actions/extract-load-transform/modify-sql-data/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Schema Variable Name (var) string DbDescriptor Name of the variable where schema is stored. Table Name (tableName) string Default table name used for manipulating rows. Free SQL queries can use other defined tables names Input Data (input) string $ Use JSONPath to select input data from .Vars or .JsonBody (as a slice) Free SQL query (global_sql) textarea Free SQL Query. It is fed with the input data first value if there is one. Per-Row Command (command) Possible Values Below SQL Command to apply on each row of input data \u00a0\u00a0\u00a0\u2022 Insert Row (insert) command \u00a0\u00a0\u00a0\u2022 Upsert Row - Update on insertion conflict (upsert) command \u00a0\u00a0\u00a0\u2022 Update - specify WHERE clause below (update) command \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Keys (keys) string List of keys to use for updating, if input value does not have a primary key \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Additional Where (where) string Additional where clause to restrict update data, use {{.Vars.Row.FieldName}} to access current loop value. \u00a0\u00a0\u00a0\u2022 Delete Row (delete) command \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Keys (keys) string List of keys to use for updating, if input value does not have a primary key \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- Additional Where (where) string Additional where clause to restrict update data \u00a0\u00a0\u00a0\u2022 Free SQL query (sql) command \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- SQL (free) textarea Free SQL Query"},{"location":"cellsflows/actions/internal-actions/index/","title":"Internal Actions","text":"<ul> <li>Prune tokens</li> <li>Sync. Directories</li> <li>Global meta from P8</li> <li>Legacy meta from P8</li> <li>Sync. workspaces</li> <li>Sync. Shares</li> <li>Expired ACLs clean up</li> <li>User-data clean up</li> <li>Prune Jobs</li> <li>Set Datasource Attribute</li> <li>Write To File (v1)</li> <li>Read from File (v1)</li> <li>Reset policies</li> <li>File versioning</li> <li>Backup Versions</li> <li>Prune Versions</li> <li>Upgrade DataSource Format</li> <li>Fake Users</li> </ul>"},{"location":"cellsflows/actions/internal-actions/prune-tokens/","title":"Prune tokens","text":"<p>[Internal] Delete expired and revoked token from internal registry</p>"},{"location":"cellsflows/actions/internal-actions/write-to-file-v1/","title":"Write To File (v1)","text":"<p>[Internal] Write contents to file (inside a datasource or locally)</p>"},{"location":"cellsflows/actions/internal-actions/write-to-file-v1/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Data input (input) select, possible values: Free Contents (below) (contents),LastOutput.JsonBody (jsonbody),LastOutput.RawBody (rawbody),LastOutput.StringBody (stringbody) contents Read data from input message or from contents below Contents (contents) textarea Contents to write to file - Use templating if necessary Local FS (is_local) boolean If set, target file is expected to be an absolute path on the server Target File (target_file) string Full name of the file to write, either inside a datasource or on local FS. If not specified, will be written in application temporary directory"},{"location":"cellsflows/actions/internal-actions/write-to-file-v1/#expected-input","title":"Expected Input","text":"<p>Standard input message</p>"},{"location":"cellsflows/actions/internal-actions/write-to-file-v1/#expected-input_1","title":"Expected Input","text":"<p>New message containing a Success flag</p>"},{"location":"cellsflows/actions/internal-actions/read-from-file-v1/","title":"Read from File (v1)","text":"<p>[Internal] Read file contents from the node passed as input</p>"},{"location":"cellsflows/actions/internal-actions/read-from-file-v1/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Expected Format (format) select, possible values: String (string),Raw Binary (raw),JSON (binary),JSON Object as Variables (vars) string Expected format for file content Alternative Input (replace and keep .Input.Node) (alt_input) string Select a custom input node by path"},{"location":"cellsflows/actions/internal-actions/read-from-file-v1/#expected-input","title":"Expected Input","text":"<p>Selected Input Node</p>"},{"location":"cellsflows/actions/internal-actions/read-from-file-v1/#expected-input_1","title":"Expected Input","text":"<p>Output message with either StringBody, JsonBody, or Variables</p>"},{"location":"cellsflows/actions/internal-actions/reset-policies/","title":"Reset policies","text":"<p>[Internal] This action recompute all users policies based on the group tenancy configuration</p>"},{"location":"cellsflows/actions/internal-actions/file-versioning/","title":"File versioning","text":"<p>[Internal] Create a copy of file on each content change</p>"},{"location":"cellsflows/actions/internal-actions/file-versioning/#expected-input","title":"Expected Input","text":"<p>Single node from event</p>"},{"location":"cellsflows/actions/internal-actions/backup-versions/","title":"Backup Versions","text":"<p>[Internal] Backup versions for deleted files inside a specific folder</p>"},{"location":"cellsflows/actions/internal-actions/backup-versions/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Backup Folder (rootFolder) string $DELETED Folder where to backup versions for deleted files"},{"location":"cellsflows/actions/internal-actions/prune-versions/","title":"Prune Versions","text":"<p>[Internal] Apply versioning policies to keep only a limited number of versions.</p>"},{"location":"cellsflows/actions/internal-actions/upgrade-datasource-format/","title":"Upgrade DataSource Format","text":"<p>[Internal] Specific task written for version upgrade</p>"},{"location":"cellsflows/actions/internal-actions/fake-users/","title":"Fake Users","text":"<p>[Internal] For debugging purpose, create many users using a remote API for generating names</p>"},{"location":"cellsflows/actions/internal-actions/fake-users/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Number of users (number) integer 100 Total number of users to create Prefix (prefix) string user- Optional prefix to use for users logins"},{"location":"cellsflows/actions/internal-actions/sync-directories/","title":"Sync. Directories","text":"<p>[Internal] Synchronize external directories with Cells database (alias of actions.etl.users for backward compatibility)</p>"},{"location":"cellsflows/actions/internal-actions/sync-directories/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Left store (left) string Type of left users store Right store (right) string Type of right users store Split users and roles (splitUserRoles) string Sequentially import users then roles Cells admin (cellAdmin) string Login of cells administrator"},{"location":"cellsflows/actions/internal-actions/global-meta-from-p8/","title":"Global meta from P8","text":"<p>[Internal] Pydio 8 migration specific task (do not use manually).</p>"},{"location":"cellsflows/actions/internal-actions/legacy-meta-from-p8/","title":"Legacy meta from P8","text":"<p>[Internal] Pydio 8 migration specific task (do not use manually).</p>"},{"location":"cellsflows/actions/internal-actions/sync-workspaces/","title":"Sync. workspaces","text":"<p>[Internal] Diff and merge workspaces from stores</p>"},{"location":"cellsflows/actions/internal-actions/sync-workspaces/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Left store (left) string Type of left users store Right store (right) string Type of right users store Split users and roles (splitUserRoles) string Sequentially import users then roles Cells admin (cellAdmin) string Login of cells administrator"},{"location":"cellsflows/actions/internal-actions/sync-shares/","title":"Sync. Shares","text":"<p>[Internal] Diff and merge shares from two stores.</p>"},{"location":"cellsflows/actions/internal-actions/expired-acls-clean-up/","title":"Expired ACLs clean up","text":"<p>[Internal] Definitely remove Expired ACLs</p>"},{"location":"cellsflows/actions/internal-actions/expired-acls-clean-up/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Selection Start (expiredAfter) string Timestamp, or duration subtracted from current time Selection End (expiredBefore) string Timestamp, or duration subtracted from current time"},{"location":"cellsflows/actions/internal-actions/user-data-clean-up/","title":"User-data clean up","text":"<p>[Internal] Clean user data on deletion. Personal resources are moved to folder suffixed with the user UUID.</p>"},{"location":"cellsflows/actions/internal-actions/user-data-clean-up/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Data copy destination (targetParent) string Where to copy or move original files (sibling folder by default)"},{"location":"cellsflows/actions/internal-actions/user-data-clean-up/#expected-input","title":"Expected Input","text":"<p>Single-selection of one user, provided by the delete user event.</p>"},{"location":"cellsflows/actions/internal-actions/prune-jobs/","title":"Prune Jobs","text":"<p>[Internal] Delete finished scheduler jobs marked as AutoClean</p>"},{"location":"cellsflows/actions/internal-actions/prune-jobs/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Maximum tasks (number) integer 50 Maximum number of tasks to keep Maximum running time per task (in seconds) (maxRunningTime) integer 3600 Clean tasks that have been running for more than ... (seconds)"},{"location":"cellsflows/actions/internal-actions/set-datasource-attribute/","title":"Set Datasource Attribute","text":"<p>[Internal] Update a datasource attribute in configs</p>"},{"location":"cellsflows/actions/internal-actions/set-datasource-attribute/#parameters","title":"Parameters","text":"Label (internal name) Type Default Description Attribute Name (attName) string Name of the attribute to update Attribute Value (attValue) string Leave empty to clear attribute"},{"location":"cellsflows/filters-queries/index/","title":"Filters & Queries","text":"<p>Filters and Queries modules are the components used to either filter a message content or dynamically load contents from Cells internals data to feed Actions inputs. </p> <p>As explained in the Data Types section, these blocks are \"typed\" and use combination of criteria to build filtering or loading conditions. Below are describe the low-level blocks used for building conditions. When they are named \"Selectors\", it means that they can be used either in Filters or Queries components.</p> <ul> <li>Files/Folders Selector</li> <li>Users Selector</li> <li>Roles Selector</li> <li>Workspaces Selector</li> <li>ACL Selector</li> <li>Task Message Filter</li> <li>Request Metadata Filter</li> <li>Arbitrary Data Selector</li> <li>Job Trigger Filter</li> <li>DataSource Selector</li> </ul>"},{"location":"cellsflows/filters-queries/datasource-selector/","title":"DataSource Selector","text":"<p>DataSource selector can be used to filter some actions based on a specific aspect of a datasource, or to load a list of DataSources with special criteria.</p>"},{"location":"cellsflows/filters-queries/datasource-selector/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Name Name string Lookup DataSource by Name Is Disabled IsDisabled boolean Check if DataSource is Disabled or not Storage Type StorageType Any (ANY),Local (LOCALFS),Remote (REMOTE) Restrict to a specific Storage Type Peer Address PeerAddress string Restrict to a specific PeerAddress Flat Storage FlatStorage boolean Flat datasources (appeared at version 3) store the files in an \"object storage\" way, instead of keeping the folders structure Skip sync on restart SkipSyncOnRestart boolean Check if this flag is set Is Versioned IsVersioned boolean Restrict to DataSource where versioning is enabled Is Encrypted IsEncrypted boolean Restrict to DataSource where encryption is enabled Encryption Mode EncryptionMode Clear (CLEAR),Master-key (MASTER),User-key (USER),User-pwd (USER_PWD) Along with IsEncrypted, restrict EncryptionMode Encryption Key EncryptionKey string Along with IsEncrypted, lookup by encryption key Id Versioning Policy VersioningPolicyName string Along with IsVersioned, lookup by versioning policy name Configuration Key StorageConfigurationName string Lookup a key in the StorageConfiguration map. Frequently used keys: cellsInternal, folder, normalize (refer to the low-level configuration) Configuration Value StorageConfigurationValue string Combined with StorageConfigurationName, value used for comparison Object Service ObjectServiceName string Restrict datasource attached to a specific Object service (see Services list) Not Not boolean Internal - Negate the query result"},{"location":"cellsflows/filters-queries/files-folders-selector/","title":"Files/Folders Selector","text":"<p>Files/Folders selector is the building block used to build either Queries or Filters on Nodes. Node types can be either \"File\" (LEAF) or \"Folder\" (COLLECTION). </p> <p>In the Queries case, depending on the complexity of the query, underlying data loader may directly send request to the internal TreeService or to the Search Engine if metadata are involved. Typically, using bleve-like queries will request the Search Engine, these queries can be built by observing the requests sent by the browser in the main interface Search Engine.</p>"},{"location":"cellsflows/filters-queries/files-folders-selector/#notes","title":"Notes","text":"<p>When querying/filtering a structured DataSource, do not forget to filter out \".pydio\" hidden files from your queries (using the Basename filter).</p>"},{"location":"cellsflows/filters-queries/files-folders-selector/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Absolute Paths Paths string List of nodes paths, exactly matching Path Prefix PathPrefix string Recursive listing of nodes below a given path. Combine with the PathDepth parameter to limit request results Size greater than MinSize integer Range for file size - size bigger than MaxSize MaxSize integer Range for file size - size is smaller than Modified since MinDate integer Range for modification date - node was modified after this date Modified before MaxDate integer Range for modification date - node was modified before this date Modification date (use comparison) DurationDate string Compute MinDate/MaxDate with a Golang duration with a leading comparator (&gt; or &lt;) Duration may contain \"s\" second, \"m\" minute, \"d\" day. Example: \"&gt;10m\" for files modified before 10minutes ago Type Type Any (UNKNOWN),File (LEAF),Folder (COLLECTION) Limit to a given node type (file or folder) File name FileName string Lookup by file basename Content Content string Search in textual content (if search engine has this feature enabled) File name or Content FileNameOrContent string Search in either filename or content (if search engine has this feature enabled) Bleve-like search string FreeString string Bleve-like search query to search for a specific metadata value. When querying nodes, this will redirect this query to the Search Engine. When filtering an input, this will load an in-memory bleve engine to evaluate the node. Bleve query string format is a space separated list of <code>[+-]key:value</code>, where node meta keys must be prepended with \"Meta.\" For Example, for tags: <code>+Meta.usermeta-tags:myvalue</code> ETag ETag string Look for a specific ETag value, may only be useful to lookup for files with temporary ETag File Extension Extension string Search files by their extension, use pipe symbol Path Depth PathDepth integer Restrict recursive listing to a given level of the tree starting from root. Special value \"-1\" should list only one level in the folder defined by PathPrefix Node UUIDs UUIDs string Preset list of specific node defined by their UUIDs Not Not boolean Negate this query"},{"location":"cellsflows/filters-queries/users-selector/","title":"Users Selector","text":"<p>Users selector is the building block used to build either Queries or Filters on Users.</p> <p>Users can be of type \"User\" or \"Groups\". To filter or look for a specific attribute value, use both AttributeName and AttributeValue combined. </p>"},{"location":"cellsflows/filters-queries/users-selector/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Uuid Uuid string Lookup a user by its Uuid Login Login string Lookup a user by Login Password Password string Lookup by hashed password, probably never used Group Path GroupPath string List users below a specific on group path Recursive Recursive boolean When searching on group path, load all users and groups recursively Full Path FullPath string Search one specific Group by its path Attribute Name AttributeName string Search on attribute, to be combined with AttributeValue Attribute Value AttributeValue string Value used for comparison Has any value AttributeAnyValue boolean Search for the existence of the AttributeName, whatever its value Has Role HasRole string Search users having a specific role UUID Object Type NodeType Any (UNKNOWN),User (USER),Group (GROUP) Filter/Search by NodeType (generally user or group) Has Profile HasProfile string Lookup by profile name (e.g. admin, standard, shared). This is a shortcut for searching on the pydio:profile attribute Connected Since ConnectedSince string Lookup by last connection date. Must be a timestamp with a leading comparison symbol ('&lt;' or '&gt;') not not boolean Internal - Negate the query/filter result"},{"location":"cellsflows/filters-queries/roles-selector/","title":"Roles Selector","text":"<p>Roles Selector is the building block used to build either Queries or Filters on Roles.</p> <p>As a reminder, Roles are flexible permissions containers that are combined together for a given user to compute a runtime set of permissions. Users typically always have a personal role (IsUserRole=true), inherit from their current groups roles (IsGroupRole=true) and user-defined teams are defined a roles as well (IsTeamRole=true).</p>"},{"location":"cellsflows/filters-queries/roles-selector/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Uuid Uuid string Look for roles by Uuid Label Label string Look for roles by label, eventually using \"wildchar\" Is Team IsTeam boolean Look up for roles associated with a Team Is Group Role IsGroupRole boolean Look for roles associated with a Group Is User Role IsUserRole boolean Look for roles associated with a User Has AutoApply HasAutoApply boolean Look for roles that have any value in the autoApplies field not not boolean Internal - Negate the query"},{"location":"cellsflows/filters-queries/workspaces-selector/","title":"Workspaces Selector","text":"<p>Workspaces Selector is the building block used to build either Queries or Filters on Workspaces.</p> <p>Workspaces have an important \"Scope\" attribute: it can be either \"ADMIN\" (standard workspaces created by admin), \"ROOM\" (Cells created by users) or \"LINK\" (public links created by users).</p> <p>The LastUpdated field takes a comparator value composed of a comparator and a Golang-like duration (e.g. \"&gt;10d\", \"&lt;30d\" where d is for days\").</p>"},{"location":"cellsflows/filters-queries/workspaces-selector/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Uuid uuid string Lookup by workspace Uuid Label label string Lookup by workspace Label Description description string Lookup by description Slug slug string Select workspace by slug Workspace Type scope Any (ANY),Workspace (ADMIN),Cell (ROOM),Public Link (LINK) Restrict to a specific workspace type Last updated LastUpdated string Compared to workspace update date (Golang duration with a leading comparator &lt; or &gt;) Has Attribute HasAttribute string Lookup for the presence of a specific attribute, whatever its value Attribute Name AttributeName string Lookup for an attribute, to be used in combination with AttributeValue Attribute Value AttributeValue string Value used for comparison not not boolean Internal - Negate the query result"},{"location":"cellsflows/filters-queries/acl-selector/","title":"ACL Selector","text":"<p>ACL Selector is the building block used to build either Queries or Filters on ACL.</p> <p>ACLs are Access Control flags that bind together a Node UUID, a Role UUID, a Workspace UUID and an ACLAction.</p>"},{"location":"cellsflows/filters-queries/acl-selector/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Role Identifiers RoleIDs string Filter by one or more role UUID Workspace Identifiers WorkspaceIDs string Filter by one or more workspace UUID Node Identifiers NodeIDs string Filter by one or more node UUID not not boolean Internal - Negate query Name Name string"},{"location":"cellsflows/filters-queries/task-message-filter/","title":"Task Message Filter","text":"<p>Between each step of a Flow, messages are passed from one action to another inside an ActionMessage, that contains a stack of ActionOutput (in the OutputChain field). This filter is the building block used to discriminate messages based on the values of the last ActionOutput of the stack.</p> <p>By looking up for a Regular Expression in the ActionOutput StringBody, or a specific JSON key, you can create breaking or conditional filters to take specific action based on the previous step results. </p> <p>If the available fields do not provide you enough flexibility, you can simply use the FreeCondition to evaluate any template to the \"true\" or \"false\" value.</p>"},{"location":"cellsflows/filters-queries/task-message-filter/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Is Success IsSuccess boolean Check if ActionOutput has success Search on String body (regexp) StringBodyRegexp string Occurrence of string in StringBody or JsonBody (as string) Size of string body is greater than StringBodySizeGreaterThan integer StringBody or JsonBody size bigger than Size of string body is smaller than StringBodySizeSmallerThan integer StringBody or JsonBody size smaller than Search on Json body (regexp) JsonBodyRegexp string Exact match of StringBody or JsonBody (as string) Json body has key... JsonBodyHasKey string Check existence of key in json body Size of Json body is greater than JsonBodySizeGreaterThan integer StringBody or JsonBody size bigger than Size of Json body is smaller than JsonBodySizeSmallerThan integer StringBody or JsonBody size smaller than Task time greater than TaskTimeGt integer Time taken greater than Task time lower than TaskTimeLt integer Time taken shorter than Search on error string (regexp) ErrorStringRegexp string Check occurrence on error string Free Condition FreeCondition string FreeCondition can be built using templates or gval Not Not boolean Invert condition"},{"location":"cellsflows/filters-queries/request-metadata-filter/","title":"Request Metadata Filter","text":"<p>Request Metadata Filter is the building block used to build Filters on request Metadata.</p> <p>Request filtering can be useful for jobs triggered by events, that will carry the initial metadata of the request that triggered the action.</p> <p>Conditions use the same syntax as security policies.</p>"},{"location":"cellsflows/filters-queries/request-metadata-filter/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Field Name FieldName Remote Address (RemoteAddress),User Agent (UserAgent),Content Type (ContentType),HTTP Protocol (HttpProtocol),Request Host (RequestHost),Request Hostname (RequestHostname),Request Port (RequestPort),Request Method (RequestMethod),Request URI (RequestURI),Cookies String (CookiesString),Server Time (ServerTime) Field on which the Condition test will be applied Condition Condition Date after (DateAfterCondition),StringPairs equals (StringPairsEqualCondition),String matches (StringMatchCondition),Office Hours (OfficeHoursCondition),Glob Matcher (PathGlobCondition),Date period (WithinPeriodCondition),String does not match (StringNotMatchCondition),String equals (StringEqualCondition),CIDRCondition (CIDRCondition),Subject equals (EqualsSubjectCondition),Resource contains (ResourceContainsCondition),Boolean Value (BooleanCondition) One of the available conditions as defined for Security Policies"},{"location":"cellsflows/filters-queries/arbitrary-data-selector/","title":"Arbitrary Data Selector","text":"<p>DataSelector provides a way to fan out arbitrary data to messages. Typically, it comes handy when after loading some JSON as an array, you wish to loop over each row as you would on Nodes or Users. </p> <p>The rows are selected using JSONPath, where root data exposes \"$.JsonBody\" and \"$.Vars\". The resulting data chunk is set to the next output JsonBody by default, but you can store it in a variable by using the following syntax in the JSONPath field : <code>$.JsonBody.Rows =&gt; Loop</code> (where Loop would be the target variable).</p>"},{"location":"cellsflows/filters-queries/arbitrary-data-selector/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment JSON Path JsonPath string Perform a JsonPath query. Input data exposes JsonBody and Vars."},{"location":"cellsflows/filters-queries/job-trigger-filter/","title":"Job Trigger Filter","text":"<p>Trigger Filter is useful to group similar tasks under one job and decide what to do based on how the job was triggered.</p> <p>For example, the thumbnails task will trigger thumbs extraction on Create/Update events, and remove thumbnails on Delete event.</p>"},{"location":"cellsflows/filters-queries/job-trigger-filter/#parameters","title":"Parameters","text":"Label Identifier Type / Allowed Values Comment Scheduled Trigger IsSchedule boolean Event was triggered by a programed schedule Manual Trigger IsManual boolean Event was triggered manually in the CellsFlows/Scheduler console Triggered by Webhook IsApiHook boolean Event was triggered by a WebHook (can be in the user space) Webhook Api Slug ApiHookSlug string Event was triggered by a specific WebHook (by its unique slug) Run Parameter Name RunParameterName string Filter by a name/value on a runtime defined parameter Run Parameter Value RunParameterValue string Combined with RunParameterName, value used for comparison Events EventNames string Event was trigger by one of these Events"},{"location":"cellsflows/template-functions/index/","title":"Template Functions","text":"<p>Advanced scripting capabilities are provided by using the Golant Templating syntax. These templates expose a list of useful functions to dynamically transform inputs into various formats.</p> <p>These functions are listed below (generated documentation).</p> <ul> <li>cells</li> <li>go</li> <li>gval</li> <li>humanize</li> <li>sprig</li> </ul>"},{"location":"cellsflows/template-functions/cells/","title":"cells","text":"<p>Utility functions provided by Cells framework.</p>"},{"location":"cellsflows/template-functions/cells/#asstamp","title":"asStamp","text":"<p>Generate a unix timestamp from a date. To be used in conjunction with sprig date functions.</p> <p>Example : </p> <pre><code>{{now | toStamp}}\n=&gt; 1603361826\n</code></pre>"},{"location":"cellsflows/template-functions/cells/#fromstamp","title":"fromStamp","text":"<p>Parses a unix timestamp to a date. Can be used in conjunction with sprig date functions. Inputs as string or number are supported.</p> <p>Example : </p> <pre><code>{{.Node.MTime | fromStamp | date \"2006-02-01\" }}\n=&gt; \"2020-11-19\"\n</code></pre>"},{"location":"cellsflows/template-functions/cells/#jsonbytestomap","title":"jsonBytesToMap","text":"<p>Unmarshal a json-encoded []bytes representation as a map[string]interface{}</p>"},{"location":"cellsflows/template-functions/cells/#jsonbytestoslice","title":"jsonBytesToSlice","text":"<p>Unmarshal a json-encoded []bytes representation as a slice []interface{}</p>"},{"location":"cellsflows/template-functions/cells/#jsonstringtomap","title":"jsonStringToMap","text":"<p>Unmarshal a json-encoded string as a map[string]interface{}</p>"},{"location":"cellsflows/template-functions/cells/#jsonstringtoslice","title":"jsonStringToSlice","text":"<p>Unmarshal a json-encoded string as a slice []interface{}</p>"},{"location":"cellsflows/template-functions/cells/#publiclink","title":"publicLink","text":"<p>Loads a generated public link from a workspace that has \"LINK\" scope. </p> <p>Example : </p> <pre><code>{{.Workspace | publicLink}}\n=&gt; \"/public/aa23d4f4f4f\"\n</code></pre>"},{"location":"cellsflows/template-functions/cells/#tojsonmap","title":"toJsonMap","text":"<p>Json encode input and returns it as a map[string]interface{}. Can be handy to be used in conjunction with gvals+jsonpath features.</p> <p>Example : </p> <pre><code>{{.Node | toJsonMap | gval \"$[0].Size * 200\"}}\n=&gt; 2420420\n</code></pre> <p>See also <code>gval</code> functions    </p>"},{"location":"cellsflows/template-functions/cells/#tostamp","title":"toStamp","text":"<p>Generate a unix timestamp from a date. To be used in conjunction with sprig date functions.</p> <p>Example : </p> <pre><code>{{now | toStamp}}\n=&gt; 1603361826\n</code></pre>"},{"location":"cellsflows/template-functions/cells/#trimquotes","title":"trimQuotes","text":"<p>Trims single and double-quotes off a string.</p> <p>Example :</p> <pre><code>{{\"Test String\" | trimQuotes}}\n=&gt; Test String\n</code></pre> <p>This can be handy when manipulating strings from/to json values.</p>"},{"location":"cellsflows/template-functions/go/","title":"go","text":"<p>These are the very basic tools provided by goland templates package. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#and","title":"and","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#call","title":"call","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#eq","title":"eq","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#ge","title":"ge","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#gt","title":"gt","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#html","title":"html","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#index","title":"index","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#js","title":"js","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#le","title":"le","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#len","title":"len","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#lt","title":"lt","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#ne","title":"ne","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#not","title":"not","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#or","title":"or","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#print","title":"print","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#printf","title":"printf","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#println","title":"println","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#slice","title":"slice","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/go/#urlquery","title":"urlquery","text":"<p>Standard Golang internals available in the templating library. </p> <p>See Go code repository for more infos.</p>"},{"location":"cellsflows/template-functions/gval/","title":"gval","text":"<p>Gval (Go eVALuate) provides support for evaluating arbitrary expressions, in particular Go-like expressions.</p> <p>Gval can evaluate expressions with parameters, arimethetic, logical, and string operations:</p> <ul> <li>basic expression: 10 &gt; 0</li> <li>parameterized expression: foo &gt; 0</li> <li>nested parameterized expression: foo.bar &gt; 0</li> <li>arithmetic expression: (requests_made * requests_succeeded / 100) &gt;= 90</li> <li>string expression: http_response_body == \"service is ok\"</li> <li>float64 expression: (mem_used / total_mem) * 100</li> </ul> <p>It also provides support for JSON Path support, allowing you  to look inside JSON structures.</p>"},{"location":"cellsflows/template-functions/gval/#gval","title":"gval","text":"<p>Gval can evaluate expressions with parameters, arimethetic, logical, and string operations:</p> <ul> <li>basic expression: 10 &gt; 0</li> <li>parameterized expression: foo &gt; 0</li> <li>nested parameterized expression: foo.bar &gt; 0</li> <li>arithmetic expression: (requests_made * requests_succeeded / 100) &gt;= 90</li> <li>string expression: http_response_body == \"service is ok\"</li> <li>float64 expression: (mem_used / total_mem) * 100</li> </ul> <p>The normal Go-standard order of operators is respected. When writing an expression, be sure that you either order the operators correctly, or use parentheses to clarify which portions of an expression should be run first.</p> <p>Strings, numbers, and booleans can be used like in Go:</p> <ul> <li>(7 &lt; \"47\" == true ? \"hello world!\\n\\u263a\") + ` more text`</li> </ul>"},{"location":"cellsflows/template-functions/gval/#parameters","title":"Parameters","text":"<p>CellsFlows uses gval/gvals in conjunction with golang templates. It expects one ore more parameters, that are passed as an array (<code>[]interface{}</code>). This array is accessed using <code>jsonpath</code> syntax, e.g. <code>$[0]</code>, <code>$[1]</code>, etc.</p> <p>To be used with one variable, you can use piping</p> <pre><code>{{.Node.Size | gval \"$[0] &gt; 100\"}}\n</code></pre> <p>Or with multiple parameters : <code>gval expr, param1, param2</code> </p> <pre><code>{{gval \"$[0] &gt; 100\" .Node.Size .JobParameters.CompareSize}}\n</code></pre>"},{"location":"cellsflows/template-functions/gval/#default-language","title":"Default Language","text":"<p>The default language is in serveral sub languages like text, arithmetic or propositional logic defined. See Godoc for details. All sub languages are merged into gval.Full which contains the following elements:</p> <ul> <li>Modifiers: <code>+</code> <code>-</code> <code>/</code> <code>*</code> <code>&amp;</code> <code>|</code> <code>^</code> <code>**</code> <code>%</code> <code>&gt;&gt;</code> <code>&lt;&lt;</code></li> <li>Comparators: <code>&gt;</code> <code>&gt;=</code> <code>&lt;</code> <code>&lt;=</code> <code>==</code> <code>!=</code> <code>=~</code> <code>!~</code></li> <li>Logical ops: <code>||</code> <code>&amp;&amp;</code></li> <li>Numeric constants, as 64-bit floating point (<code>12345.678</code>)</li> <li>String constants (double quotes: <code>\"foobar\"</code>)</li> <li>Date function 'Date(x)', using any permutation of RFC3339, ISO8601, ruby date, or unix date</li> <li>Boolean constants: <code>true</code> <code>false</code></li> <li>Parentheses to control order of evaluation <code>(</code> <code>)</code></li> <li>Json Arrays : <code>[1, 2, \"foo\"]</code></li> <li>Json Objects : <code>{\"a\":1, \"b\":2, \"c\":\"foo\"}</code></li> <li>Prefixes: <code>!</code> <code>-</code> <code>~</code></li> <li>Ternary conditional: <code>?</code> <code>:</code></li> <li>Null coalescence: <code>??</code></li> </ul>"},{"location":"cellsflows/template-functions/gval/#gvals","title":"gvals","text":"<p>See <code>gval</code> definition. <code>gvals</code> is to be used when jsonpath expression expects an array of results instead of a single value.</p>"},{"location":"cellsflows/template-functions/humanize/","title":"humanize","text":"<p>Template functions used to make numbers mor human-friendly, from the nice Go-humanize package.</p>"},{"location":"cellsflows/template-functions/humanize/#humanbytes","title":"humanBytes","text":"<p>Produces a human readable representation of an SI size.</p> <pre><code>{{82854982 || humanBytes}} \n =&gt; 83 MB\n</code></pre>"},{"location":"cellsflows/template-functions/humanize/#humancomma","title":"humanComma","text":"<p>Produces a string form of the given number in base 10 with commas after every three orders of magnitude.</p> <pre><code>{{834142 | humanComma}}\n=&gt; 834,142\n</code></pre>"},{"location":"cellsflows/template-functions/humanize/#humancommaf","title":"humanCommaf","text":"<p>Produces a string form of the given floating number in base 10 with commas after every three orders of magnitude.</p> <pre><code>{{834142.32 | humanCommaf}}\n=&gt; 834,142.32\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/","title":"sprig","text":"<p>Sprig provides tons of utilitary functions to be used inside templates.</p>"},{"location":"cellsflows/template-functions/sprig/#abbrev","title":"abbrev","text":"<p>Truncate a string with ellipses (<code>...</code>)</p> <p>Parameters:</p> <ul> <li>max length</li> <li>the string</li> </ul> <pre><code>abbrev 5 \"hello world\"\n</code></pre> <p>The above returns <code>he...</code>, since it counts the width of the ellipses against the maximum length.</p>"},{"location":"cellsflows/template-functions/sprig/#abbrevboth","title":"abbrevboth","text":"<p>Abbreviate both sides:</p> <pre><code>abbrevboth 5 10 \"1234 5678 9123\"\n</code></pre> <p>the above produces <code>...5678...</code></p> <p>It takes:</p> <ul> <li>left offset</li> <li>max length</li> <li>the string</li> </ul>"},{"location":"cellsflows/template-functions/sprig/#add","title":"add","text":"<p>Sum numbers with <code>add</code>. Accepts two or more inputs.</p> <pre><code>add 1 2 3\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#add1","title":"add1","text":"<p>To increment by 1, use <code>add1</code></p>"},{"location":"cellsflows/template-functions/sprig/#add1f","title":"add1f","text":"<p>To increment a float by 1, use <code>add1f</code></p>"},{"location":"cellsflows/template-functions/sprig/#addf","title":"addf","text":"<p>Sum floats with <code>addf</code>. Accepts two or more inputs.</p> <pre><code>addf 1.0 2.1 3.4\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#adler32sum","title":"adler32sum","text":"<p>Computes adler32 checksum</p>"},{"location":"cellsflows/template-functions/sprig/#ago","title":"ago","text":"<p>The <code>ago</code> function returns duration from time.Now in seconds resolution.</p> <pre><code>ago .CreatedAt\"\n</code></pre> <p>returns in <code>time.Duration</code> String() format</p> <pre><code>2h34m7s\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#all","title":"all","text":"<p><code>all</code> returns true if <code>empty(x)</code> is false for all values x in the list. If the list is empty, return true.</p>"},{"location":"cellsflows/template-functions/sprig/#any","title":"any","text":"<p><code>any</code> returns true if <code>empty(x)</code> is false for any x in the list. If the list is empty, return false.</p>"},{"location":"cellsflows/template-functions/sprig/#append","title":"append","text":"<p>Append a new item to an existing list, creating a new list.</p> <pre><code>$new = append $myList 6\n</code></pre> <p>The above would set <code>$new</code> to <code>[1 2 3 4 5 6]</code>. <code>$myList</code> would remain unaltered.</p> <p><code>append</code> panics if there is a problem while <code>mustAppend</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#atoi","title":"atoi","text":"<p><code>atoi</code>: Convert a string to an integer.</p> <p>Only <code>atoi</code> requires that the input be a specific type. The others will attempt to convert from any type to the destination type. For example, <code>int64</code> can convert floats to ints, and it can also convert strings to ints.</p>"},{"location":"cellsflows/template-functions/sprig/#b32dec","title":"b32dec","text":"<p>Sprig has the following encoding and decoding functions:</p> <ul> <li><code>b32enc</code>/<code>b32dec</code>: Encode or decode with Base32</li> </ul>"},{"location":"cellsflows/template-functions/sprig/#b32enc","title":"b32enc","text":"<p>Sprig has the following encoding and decoding functions:</p> <ul> <li><code>b32enc</code>/<code>b32dec</code>: Encode or decode with Base32</li> </ul>"},{"location":"cellsflows/template-functions/sprig/#b64dec","title":"b64dec","text":"<p>Sprig has the following encoding and decoding functions:</p> <ul> <li><code>b64enc</code>/<code>b64dec</code>: Encode or decode with Base64</li> </ul>"},{"location":"cellsflows/template-functions/sprig/#b64enc","title":"b64enc","text":"<p>Sprig has the following encoding and decoding functions:</p> <ul> <li><code>b64enc</code>/<code>b64dec</code>: Encode or decode with Base64</li> </ul>"},{"location":"cellsflows/template-functions/sprig/#base","title":"base","text":"<p>Return the last element of a path.</p> <pre><code>base \"foo/bar/baz\"\n</code></pre> <p>The above prints \"baz\"</p>"},{"location":"cellsflows/template-functions/sprig/#bcrypt","title":"bcrypt","text":"<p><code>bcrypt</code> returns the bcrypt hash of a password using bcrypt library with the DefaultCost.</p>"},{"location":"cellsflows/template-functions/sprig/#biggest","title":"biggest","text":"<p>No documentation for this function</p>"},{"location":"cellsflows/template-functions/sprig/#buildcustomcert","title":"buildCustomCert","text":"<p>The <code>buildCustomCert</code> function allows customizing the certificate.</p> <p>It takes the following string parameters:</p> <ul> <li>A base64 encoded PEM format certificate</li> <li>A base64 encoded PEM format private key</li> </ul> <p>It returns a certificate object with the following attributes:</p> <ul> <li><code>Cert</code>: A PEM-encoded certificate</li> <li><code>Key</code>: A PEM-encoded private key</li> </ul> <p>Example:</p> <pre><code>$ca := buildCustomCert \"base64-encoded-ca-crt\" \"base64-encoded-ca-key\"\n</code></pre> <p>Note that the returned object can be passed to the <code>genSignedCert</code> function to sign a certificate using this CA.</p>"},{"location":"cellsflows/template-functions/sprig/#camelcase","title":"camelcase","text":"<p>Convert string from snake_case to CamelCase</p> <pre><code>camelcase \"http_server\"\n</code></pre> <p>This above will produce <code>HttpServer</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#cat","title":"cat","text":"<p>The <code>cat</code> function concatenates multiple strings together into one, separating them with spaces:</p> <pre><code>cat \"hello\" \"beautiful\" \"world\"\n</code></pre> <p>The above produces <code>hello beautiful world</code></p>"},{"location":"cellsflows/template-functions/sprig/#ceil","title":"ceil","text":"<p>Returns the greatest float value greater than or equal to input value</p> <p><code>ceil 123.001</code> will return <code>124.0</code></p>"},{"location":"cellsflows/template-functions/sprig/#chunk","title":"chunk","text":"<p>To split a list into chunks of given size, use <code>chunk size list</code>. This is useful for pagination.</p> <pre><code>chunk 3 (list 1 2 3 4 5 6 7 8)\n</code></pre> <p>This produces list of lists <code>[ [ 1 2 3 ] [ 4 5 6 ] [ 7 8 ] ]</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#clean","title":"clean","text":"<p>Clean up a path.</p> <pre><code>clean \"foo/bar/../baz\"\n</code></pre> <p>The above resolves the <code>..</code> and returns <code>foo/baz</code></p>"},{"location":"cellsflows/template-functions/sprig/#coalesce","title":"coalesce","text":"<p>The <code>coalesce</code> function takes a list of values and returns the first non-empty one.</p> <pre><code>coalesce 0 1 2\n</code></pre> <p>The above returns <code>1</code>.</p> <p>This function is useful for scanning through multiple variables or values:</p> <pre><code>coalesce .name .parent.name \"Matt\"\n</code></pre> <p>The above will first check to see if <code>.name</code> is empty. If it is not, it will return that value. If it is empty, <code>coalesce</code> will evaluate <code>.parent.name</code> for emptiness. Finally, if both <code>.name</code> and <code>.parent.name</code> are empty, it will return <code>Matt</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#compact","title":"compact","text":"<p>Accepts a list and removes entries with empty values.</p> <pre><code>$list := list 1 \"a\" \"foo\" \"\"\n$copy := compact $list\n</code></pre> <p><code>compact</code> will return a new list with the empty (i.e., \"\") item removed.</p> <p><code>compact</code> panics if there is a problem and <code>mustCompact</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#concat","title":"concat","text":"<p>Concatenate arbitrary number of lists into one.</p> <pre><code>concat $myList ( list 6 7 ) ( list 8 )\n</code></pre> <p>The above would produce <code>[1 2 3 4 5 6 7 8]</code>. <code>$myList</code> would remain unaltered.</p>"},{"location":"cellsflows/template-functions/sprig/#contains","title":"contains","text":"<p>Test to see if one string is contained inside of another:</p> <pre><code>contains \"cat\" \"catch\"\n</code></pre> <p>The above returns <code>true</code> because <code>catch</code> contains <code>cat</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#date","title":"date","text":"<p>The <code>date</code> function formats a date.</p> <p>Format the date to YEAR-MONTH-DAY:</p> <pre><code>now | date \"2006-01-02\"\n</code></pre> <p>Date formatting in Go is a little bit different.</p> <p>In short, take this as the base date:</p> <pre><code>Mon Jan 2 15:04:05 MST 2006\n</code></pre> <p>Write it in the format you want. Above, <code>2006-01-02</code> is the same date, but in the format we want.</p>"},{"location":"cellsflows/template-functions/sprig/#dateinzone","title":"dateInZone","text":"<p>Same as <code>date</code>, but with a timezone.</p> <pre><code>dateInZone \"2006-01-02\" (now) \"UTC\"\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#datemodify","title":"dateModify","text":"<p>The <code>dateModify</code> takes a modification and a date and returns the timestamp.</p> <p>Subtract an hour and thirty minutes from the current time:</p> <pre><code>now | date_modify \"-1.5h\"\n</code></pre> <p>If the modification format is wrong <code>dateModify</code> will return the date unmodified. <code>mustDateModify</code> will return an error otherwise.</p>"},{"location":"cellsflows/template-functions/sprig/#date_in_zone","title":"date_in_zone","text":"<p>Same as <code>date</code>, but with a timezone.</p> <pre><code>dateInZone \"2006-01-02\" (now) \"UTC\"\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#date_modify","title":"date_modify","text":"<p>The <code>dateModify</code> takes a modification and a date and returns the timestamp.</p> <p>Subtract an hour and thirty minutes from the current time:</p> <pre><code>now | date_modify \"-1.5h\"\n</code></pre> <p>If the modification format is wrong <code>dateModify</code> will return the date unmodified. <code>mustDateModify</code> will return an error otherwise.</p>"},{"location":"cellsflows/template-functions/sprig/#decryptaes","title":"decryptAES","text":"<p>The <code>decryptAES</code> function receives a base64 string encoded by the AES-256 CBC algorithm and returns the decoded text.</p> <pre><code>\"30tEfhuJSVRhpG97XCuWgz2okj7L8vQ1s6V9zVUPeDQ=\" | decryptAES \"secretkey\"\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#deepcopy","title":"deepCopy","text":"<p>The <code>deepCopy</code> and <code>mustDeepCopy</code> functions takes a value and makes a deep copy of the value. This includes dicts and other structures. <code>deepCopy</code> panics when there is a problem while <code>mustDeepCopy</code> returns an error to the template system when there is an error.</p> <pre><code>dict \"a\" 1 \"b\" 2 | deepCopy\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#deepequal","title":"deepEqual","text":"<p><code>deepEqual</code> returns true if two values are \"deeply equal\"</p> <p>Works for non-primitive types as well (compared to the built-in <code>eq</code>).</p> <pre><code>deepEqual (list 1 2 3) (list 1 2 3)\n</code></pre> <p>The above will return <code>true</code></p>"},{"location":"cellsflows/template-functions/sprig/#default","title":"default","text":"<p>To set a simple default value, use <code>default</code>:</p> <pre><code>default \"foo\" .Bar\n</code></pre> <p>In the above, if <code>.Bar</code> evaluates to a non-empty value, it will be used. But if it is empty, <code>foo</code> will be returned instead.</p> <p>The definition of \"empty\" depends on type:</p> <ul> <li>Numeric: 0</li> <li>String: \"\"</li> <li>Lists: <code>[]</code></li> <li>Dicts: <code>{}</code></li> <li>Boolean: <code>false</code></li> <li>And always <code>nil</code> (aka null)</li> </ul> <p>For structs, there is no definition of empty, so a struct will never return the default.</p>"},{"location":"cellsflows/template-functions/sprig/#derivepassword","title":"derivePassword","text":"<p>The <code>derivePassword</code> function can be used to derive a specific password based on some shared \"master password\" constraints. The algorithm for this is well specified.</p> <pre><code>derivePassword 1 \"long\" \"password\" \"user\" \"example.com\"\n</code></pre> <p>Note that it is considered insecure to store the parts directly in the template.</p>"},{"location":"cellsflows/template-functions/sprig/#dict","title":"dict","text":"<p>Creating dictionaries is done by calling the <code>dict</code> function and passing it a list of pairs.</p> <p>The following creates a dictionary with three items:</p> <pre><code>$myDict := dict \"name1\" \"value1\" \"name2\" \"value2\" \"name3\" \"value 3\"\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#dig","title":"dig","text":"<p>The <code>dig</code> function traverses a nested set of dicts, selecting keys from a list of values. It returns a default value if any of the keys are not found at the associated dict.</p> <pre><code>dig \"user\" \"role\" \"humanName\" \"guest\" $dict\n</code></pre> <p>Given a dict structured like <pre><code>{\n  user: {\n    role: {\n      humanName: \"curator\"\n    }\n  }\n}\n</code></pre></p> <p>the above would return <code>\"curator\"</code>. If the dict lacked even a <code>user</code> field, the result would be <code>\"guest\"</code>.</p> <p>Dig can be very useful in cases where you'd like to avoid guard clauses, especially since Go's template package's <code>and</code> doesn't shortcut. For instance <code>and a.maybeNil a.maybeNil.iNeedThis</code> will always evaluate <code>a.maybeNil.iNeedThis</code>, and panic if <code>a</code> lacks a <code>maybeNil</code> field.)</p> <p><code>dig</code> accepts its dict argument last in order to support pipelining. For instance: <pre><code>merge a b c | dig \"one\" \"two\" \"three\" \"&lt;missing&gt;\"\n\n## dir\n\n Compute dirname of a path. It uses internal `path` library, expecting forward slashes.\n\nExample : \n\n    # Assuming node path is pydiods1/folder/filename.txt\n    {{.Node.Path | dir}}\n    =&gt; \"pydiods1/folder\"\n\n## div\n\n Perform integer division with `div`\n\n## divf\n\n Floats division\n\n## duration\n\n Formats a given amount of seconds as a `time.Duration`.\n\nThis returns 1m35s\n</code></pre> duration \"95\" <pre><code>## durationRound\n\n Rounds a given duration to the most significant unit. Strings and `time.Duration`\ngets parsed as a duration, while a `time.Time` is calculated as the duration since.\n\nThis return 2h\n</code></pre> durationRound \"2h10m5s\" <pre><code>This returns 3mo\n</code></pre> durationRound \"2400h10m5s\" <pre><code>## empty\n\n The `empty` function returns `true` if the given value is considered empty, and\n`false` otherwise. The empty values are listed in the `default` section.\n</code></pre> empty .Foo <pre><code>Note that in Go template conditionals, emptiness is calculated for you. Thus,\nyou rarely need `if empty .Foo`. Instead, just use `if .Foo`.\n\n\n## encryptAES\n\n The `encryptAES` function encrypts text with AES-256 CBC and returns a base64 encoded string.\n</code></pre> encryptAES \"secretkey\" \"plaintext\" <pre><code>## ext\n\n Return the file extension.\n</code></pre> ext \"foo.bar\" <pre><code>The above returns `.bar`.\n\n## fail\n\n Unconditionally returns an empty `string` and an `error` with the specified\ntext. This is useful in scenarios where other conditionals have determined that\ntemplate rendering should fail.\n</code></pre> fail \"Please accept the end user license agreement\" <pre><code>## first\n\n To get the head item on a list, use `first`.\n\n`first $myList` returns `1`\n\n`first` panics if there is a problem while `mustFirst` returns an error to the\ntemplate engine if there is a problem.\n\n## float64\n\n `float64`: Convert to a `float64`.\n\n## floor\n\n Returns the greatest float value less than or equal to input value\n\n`floor 123.9999` will return `123.0`\n\n## fromJson\n\n `fromJson` decodes a JSON document into a structure. If the input cannot be decoded as JSON the function will return an empty string.\n`mustFromJson` will return an error in case the JSON is invalid.\n</code></pre> fromJson \"{\\\"foo\\\": 55}\" <pre><code>## genCA\n\n The `genCA` function generates a new, self-signed x509 certificate authority using a\n2048-bit RSA private key.\n\nIt takes the following parameters:\n\n- Subject's common name (cn)\n- Cert validity duration in days\n\nIt returns an object with the following attributes:\n\n- `Cert`: A PEM-encoded certificate\n- `Key`: A PEM-encoded private key\n\nExample:\n</code></pre> $ca := genCA \"foo-ca\" 365 <pre><code>Note that the returned object can be passed to the `genSignedCert` function\nto sign a certificate using this CA.\n\n\n## genCAWithKey\n\n The `genCAWithKey` function generates a new, self-signed x509 certificate authority using a\ngiven private key.\n\nIt takes the following parameters:\n\n- Subject's common name (cn)\n- Cert validity duration in days\n- Private key (PEM-encoded); DSA keys are not supported\n\nIt returns an object with the following attributes:\n\n- `Cert`: A PEM-encoded certificate\n- `Key`: A PEM-encoded private key\n\nExample:\n</code></pre> $ca := genCAWithKey \"foo-ca\" 365 (genPrivateKey \"rsa\") <pre><code>Note that the returned object can be passed to the `genSignedCert` function\nto sign a certificate using this CA.\n\n\n## genPrivateKey\n\n\nThe `genPrivateKey` function generates a new private key encoded into a PEM\nblock.\n\nIt takes one of the values for its first param:\n\n- `ecdsa`: Generate an elliptic curve DSA key (P256)\n- `dsa`: Generate a DSA key (L2048N256)\n- `rsa`: Generate an RSA 4096 key\n\n## genSelfSignedCert\n\n The `genSelfSignedCert` function generates a new, self-signed x509 certificate using a\n2048-bit RSA private key.\n\nIt takes the following parameters:\n\n- Subject's common name (cn)\n- Optional list of IPs; may be nil\n- Optional list of alternate DNS names; may be nil\n- Cert validity duration in days\n\nIt returns an object with the following attributes:\n\n- `Cert`: A PEM-encoded certificate\n- `Key`: A PEM-encoded private key\n\nExample:\n</code></pre> $cert := genSelfSignedCert \"foo.com\" (list \"10.0.0.1\" \"10.0.0.2\") (list \"bar.com\" \"bat.com\") 365 <pre><code>## genSelfSignedCertWithKey\n\n The `genSelfSignedCertWithKey` function generates a new, self-signed x509 certificate using a\ngiven private key.\n\nIt takes the following parameters:\n\n- Subject's common name (cn)\n- Optional list of IPs; may be nil\n- Optional list of alternate DNS names; may be nil\n- Cert validity duration in days\n- Private key (PEM-encoded); DSA keys are not supported\n\nIt returns an object with the following attributes:\n\n- `Cert`: A PEM-encoded certificate\n- `Key`: A PEM-encoded private key\n\nExample:\n</code></pre> $cert := genSelfSignedCertWithKey \"foo.com\" (list \"10.0.0.1\" \"10.0.0.2\") (list \"bar.com\" \"bat.com\") 365 (genPrivateKey \"ecdsa\") <pre><code>## genSignedCert\n\n The `genSignedCert` function generates a new, x509 certificate signed by the\nspecified CA, using a 2048-bit RSA private key.\n\nIt takes the following parameters:\n\n- Subject's common name (cn)\n- Optional list of IPs; may be nil\n- Optional list of alternate DNS names; may be nil\n- Cert validity duration in days\n- CA (see `genCA`)\n\nExample:\n</code></pre> $ca := genCA \"foo-ca\" 365 $cert := genSignedCert \"foo.com\" (list \"10.0.0.1\" \"10.0.0.2\") (list \"bar.com\" \"bat.com\") 365 $ca <pre><code>## genSignedCertWithKey\n\n The `genSignedCertWithKey` function generates a new, x509 certificate signed by the\nspecified CA, using a given private key.\n\nIt takes the following parameters:\n\n- Subject's common name (cn)\n- Optional list of IPs; may be nil\n- Optional list of alternate DNS names; may be nil\n- Cert validity duration in days\n- CA (see `genCA`)\n- Private key (PEM-encoded); DSA keys are not supported\n\nExample:\n</code></pre> $ca := genCA \"foo-ca\" 365 $cert := genSignedCert \"foo.com\" (list \"10.0.0.1\" \"10.0.0.2\") (list \"bar.com\" \"bat.com\") 365 $ca (genPrivateKey \"ed25519\") <pre><code>## get\n\n `get` finds a key inside a map[string]interface{}, similar to `index` core function. Only works for this type, not map[string]string.\n\nGiven a map and a key, get the value from the map.\n</code></pre> get $myDict \"key1\" <pre><code>The above returns `\"value1\"`\n\nNote that if the key is not found, this operation will simply return `\"\"`. No error\nwill be generated.\n\n## getHostByName\n\n The `getHostByName` receives a domain name and returns the ip address.\n</code></pre> getHostByName \"www.google.com\" would return the corresponding ip address of www.google.com <pre><code>## has\n\n Test to see if a list has a particular element.\n</code></pre> has 4 $myList <pre><code>The above would return `true`, while `has \"hello\" $myList` would return false.\n\n`has` panics if there is a problem while `mustHas` returns an error to the\ntemplate engine if there is a problem.\n\n## hasKey\n\n The `hasKey` function returns `true` if the given dict contains the given key.\n</code></pre> hasKey $myDict \"name1\" <pre><code>If the key is not found, this returns `false`.\n\n## hasPrefix\n\n The `hasPrefix` and `hasSuffix` functions test whether a string has a given\nprefix or suffix:\n</code></pre> hasPrefix \"cat\" \"catch\" <pre><code>The above returns `true` because `catch` has the prefix `cat`.\n\n## hasSuffix\n\n The `hasPrefix` and `hasSuffix` functions test whether a string has a given\nprefix or suffix:\n</code></pre> hasPrefix \"cat\" \"catch\" <pre><code>The above returns `true` because `catch` has the prefix `cat`.\n\n## hello\n\n No documentation for this function\n\n## htmlDate\n\n The `htmlDate` function formats a date for inserting into an HTML date picker\ninput field.\n</code></pre> now | htmlDate <pre><code>## htmlDateInZone\n\n Same as htmlDate, but with a timezone.\n</code></pre> htmlDateInZone (now) \"UTC\" <pre><code>## htpasswd\n\n The `htpasswd` function takes a `username` and `password` and generates a `bcrypt` hash of the password. The result can be used for basic authentication on an [Apache HTTP Server](https://httpd.apache.org/docs/2.4/misc/password_encryptions.html#basic).\n</code></pre> htpasswd \"myUser\" \"myPassword\" <pre><code>Note that it is insecure to store the password directly in the template.\n\n\n## indent\n\n The `indent` function indents every line in a given string to the specified\nindent width. This is useful when aligning multi-line strings:\n</code></pre> indent 4 $lots_of_text <pre><code>The above will indent every line of text by 4 space characters.\n\n## initial\n\n This compliments `last` by returning all _but_ the last element.\n`initial $myList` returns `[1 2 3 4]`.\n\n`initial` panics if there is a problem while `mustInitial` returns an error to the\ntemplate engine if there is a problem.\n\n## initials\n\n Given multiple words, take the first letter of each word and combine.\n</code></pre> initials \"First Try\" <pre><code>The above returns `FT`\n\n## int\n\n `int`: Convert to an `int` at the system's width.\n\n## int64\n\n int64`: Convert to an `int64`.\n\n## isAbs\n\n To check whether a file path is absolute, use `isAbs`.\n\n## join\n\n Join a list of strings into a single string, with the given separator.\n</code></pre> list \"hello\" \"world\" | join \"_\" <pre><code>The above will produce `hello_world`\n\n`join` will try to convert non-strings to a string value:\n</code></pre> list 1 2 3 | join \"+\" <pre><code>The above will produce `1+2+3`\n\n## kebabcase\n\n Convert string from camelCase to kebab-case.\n</code></pre> kebabcase \"FirstName\" <pre><code>This above will produce `first-name`.\n\n## keys\n\n The `keys` function will return a `list` of all of the keys in one or more `dict`\ntypes. Since a dictionary is _unordered_, the keys will not be in a predictable order.\nThey can be sorted with `sortAlpha`.\n</code></pre> keys $myDict | sortAlpha <pre><code>When supplying multiple dictionaries, the keys will be concatenated. Use the `uniq`\nfunction along with `sortAlpha` to get a unqiue, sorted list of keys.\n</code></pre> keys $myDict $myOtherDict | uniq | sortAlpha</p>"},{"location":"cellsflows/template-functions/sprig/#kindis","title":"kindIs","text":"<p>There are two Kind functions: <code>kindOf</code> returns the kind of an object.</p> <pre><code>kindOf \"hello\"\n</code></pre> <p>The above would return <code>string</code>. For simple tests (like in <code>if</code> blocks), the <code>isKind</code> function will let you verify that a value is a particular kind:</p> <pre><code>kindIs \"int\" 123\n</code></pre> <p>The above will return <code>true</code></p>"},{"location":"cellsflows/template-functions/sprig/#kindof","title":"kindOf","text":"<p>There are two Kind functions: <code>kindOf</code> returns the kind of an object.</p> <pre><code>kindOf \"hello\"\n</code></pre> <p>The above would return <code>string</code>. For simple tests (like in <code>if</code> blocks), the <code>isKind</code> function will let you verify that a value is a particular kind:</p> <pre><code>kindIs \"int\" 123\n</code></pre> <p>The above will return <code>true</code></p>"},{"location":"cellsflows/template-functions/sprig/#last","title":"last","text":"<p>To get the last item on a list, use <code>last</code>:</p> <p><code>last $myList</code> returns <code>5</code>. This is roughly analogous to reversing a list and then calling <code>first</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#list","title":"list","text":"<p>No documentation for this function</p>"},{"location":"cellsflows/template-functions/sprig/#lower","title":"lower","text":"<p>Convert the entire string to lowercase:</p> <pre><code>lower \"HELLO\"\n</code></pre> <p>The above returns <code>hello</code></p>"},{"location":"cellsflows/template-functions/sprig/#max","title":"max","text":"<p>Return the largest of a series of integers:</p> <p>This will return <code>3</code>:</p> <pre><code>max 1 2 3\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#maxf","title":"maxf","text":"<p>Floats version of <code>max</code></p>"},{"location":"cellsflows/template-functions/sprig/#merge","title":"merge","text":"<p>Merge two or more dictionaries into one, giving precedence to the dest dictionary:</p> <pre><code>$newdict := merge $dest $source1 $source2\n</code></pre> <p>This is a deep merge operation but not a deep copy operation. Nested objects that are merged are the same instance on both dicts. If you want a deep copy along with the merge than use the <code>deepCopy</code> function along with merging. For example,</p> <pre><code>deepCopy $source | merge $dest\n</code></pre> <p><code>mustMerge</code> will return an error in case of unsuccessful merge.</p>"},{"location":"cellsflows/template-functions/sprig/#mergeoverwrite","title":"mergeOverwrite","text":"<p>Merge two or more dictionaries into one, giving precedence from right to left, effectively overwriting values in the dest dictionary:</p> <p>Given:</p> <pre><code>dst:\n  default: default\n  overwrite: me\n  key: true\n\nsrc:\n  overwrite: overwritten\n  key: false\n</code></pre> <p>will result in:</p> <pre><code>newdict:\n  default: default\n  overwrite: overwritten\n  key: false\n</code></pre> <pre><code>$newdict := mergeOverwrite $dest $source1 $source2\n</code></pre> <p>This is a deep merge operation but not a deep copy operation. Nested objects that are merged are the same instance on both dicts. If you want a deep copy along with the merge than use the <code>deepCopy</code> function along with merging. For example,</p> <pre><code>deepCopy $source | mergeOverwrite $dest\n</code></pre> <p><code>mustMergeOverwrite</code> will return an error in case of unsuccessful merge.</p>"},{"location":"cellsflows/template-functions/sprig/#min","title":"min","text":"<p>Return the smallest of a series of integers.</p> <p><code>min 1 2 3</code> will return <code>1</code></p>"},{"location":"cellsflows/template-functions/sprig/#minf","title":"minf","text":"<p>Floats version of <code>min</code></p>"},{"location":"cellsflows/template-functions/sprig/#mod","title":"mod","text":"<p>Modulo with <code>mod</code></p>"},{"location":"cellsflows/template-functions/sprig/#mul","title":"mul","text":"<p>Multiply with <code>mul</code>. Accepts two or more inputs.</p> <pre><code>mul 1 2 3\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#mulf","title":"mulf","text":"<p>Floats version of <code>mul</code></p>"},{"location":"cellsflows/template-functions/sprig/#mustappend","title":"mustAppend","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustchunk","title":"mustChunk","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustcompact","title":"mustCompact","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustdatemodify","title":"mustDateModify","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustdeepcopy","title":"mustDeepCopy","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustfirst","title":"mustFirst","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustfromjson","title":"mustFromJson","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#musthas","title":"mustHas","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustinitial","title":"mustInitial","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustlast","title":"mustLast","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustmerge","title":"mustMerge","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustmergeoverwrite","title":"mustMergeOverwrite","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustprepend","title":"mustPrepend","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustpush","title":"mustPush","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustregexfind","title":"mustRegexFind","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustregexfindall","title":"mustRegexFindAll","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustregexmatch","title":"mustRegexMatch","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustregexreplaceall","title":"mustRegexReplaceAll","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustregexreplaceallliteral","title":"mustRegexReplaceAllLiteral","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustregexsplit","title":"mustRegexSplit","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustrest","title":"mustRest","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustreverse","title":"mustReverse","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustslice","title":"mustSlice","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#musttodate","title":"mustToDate","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#musttojson","title":"mustToJson","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#musttoprettyjson","title":"mustToPrettyJson","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#musttorawjson","title":"mustToRawJson","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustuniq","title":"mustUniq","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#mustwithout","title":"mustWithout","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#must_date_modify","title":"must_date_modify","text":"<p>\"mustXXX\" function returns an error while original XXX functions panics if something goes wrong</p>"},{"location":"cellsflows/template-functions/sprig/#nindent","title":"nindent","text":"<p>The <code>nindent</code> function is the same as the indent function, but prepends a new line to the beginning of the string.</p> <pre><code>nindent 4 $lots_of_text\n</code></pre> <p>The above will indent every line of text by 4 space characters and add a new line to the beginning.</p>"},{"location":"cellsflows/template-functions/sprig/#nospace","title":"nospace","text":"<p>Remove all whitespace from a string.</p> <pre><code>nospace \"hello w o r l d\"\n</code></pre> <p>The above returns <code>helloworld</code></p>"},{"location":"cellsflows/template-functions/sprig/#now","title":"now","text":"<p>The current date/time. Use this in conjunction with other date functions.</p>"},{"location":"cellsflows/template-functions/sprig/#omit","title":"omit","text":"<p>The <code>omit</code> function is similar to <code>pick</code>, except it returns a new <code>dict</code> with all the keys that do not match the given keys.</p> <pre><code>$new := omit $myDict \"name1\" \"name3\"\n</code></pre> <p>The above returns <code>{name2: value2}</code></p>"},{"location":"cellsflows/template-functions/sprig/#osbase","title":"osBase","text":"<p>Return the last element of a filepath.</p> <pre><code>osBase \"/foo/bar/baz\"\nosBase \"C:\\\\foo\\\\bar\\\\baz\"\n</code></pre> <p>The above prints \"baz\" on Linux and Windows, respectively.</p>"},{"location":"cellsflows/template-functions/sprig/#osclean","title":"osClean","text":"<p>Clean up a path.</p> <pre><code>osClean \"/foo/bar/../baz\"\nosClean \"C:\\\\foo\\\\bar\\\\..\\\\baz\"\n</code></pre> <p>The above resolves the <code>..</code> and returns <code>foo/baz</code> on Linux and <code>C:\\\\foo\\\\baz</code> on Windows.</p>"},{"location":"cellsflows/template-functions/sprig/#osdir","title":"osDir","text":"<p>Return the directory, stripping the last part of the path. So <code>osDir \"/foo/bar/baz\"</code> returns <code>/foo/bar</code> on Linux, and <code>osDir \"C:\\\\foo\\\\bar\\\\baz\"</code> returns <code>C:\\\\foo\\\\bar</code> on Windows.</p>"},{"location":"cellsflows/template-functions/sprig/#osext","title":"osExt","text":"<p>Return the file extension.</p> <pre><code>osExt \"/foo.bar\"\nosExt \"C:\\\\foo.bar\"\n</code></pre> <p>The above returns <code>.bar</code> on Linux and Windows, respectively.</p>"},{"location":"cellsflows/template-functions/sprig/#osisabs","title":"osIsAbs","text":"<p>To check whether a file path is absolute, use <code>osIsAbs</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#pick","title":"pick","text":"<p>The <code>pick</code> function selects just the given keys out of a dictionary, creating a new <code>dict</code>.</p> <pre><code>$new := pick $myDict \"name1\" \"name2\"\n</code></pre> <p>The above returns <code>{name1: value1, name2: value2}</code></p>"},{"location":"cellsflows/template-functions/sprig/#pluck","title":"pluck","text":"<p>The <code>pluck</code> function makes it possible to give one key and multiple maps, and get a list of all of the matches:</p> <pre><code>pluck \"name1\" $myDict $myOtherDict\n</code></pre> <p>The above will return a <code>list</code> containing every found value (<code>[value1 otherValue1]</code>).</p> <p>If the give key is not found in a map, that map will not have an item in the list (and the length of the returned list will be less than the number of dicts in the call to <code>pluck</code>.</p> <p>If the key is found but the value is an empty value, that value will be inserted.</p> <p>A common idiom in Sprig templates is to uses <code>pluck... | first</code> to get the first matching key out of a collection of dictionaries.</p>"},{"location":"cellsflows/template-functions/sprig/#plural","title":"plural","text":"<p>Pluralize a string.</p> <pre><code>len $fish | plural \"one anchovy\" \"many anchovies\"\n</code></pre> <p>In the above, if the length of the string is 1, the first argument will be printed (<code>one anchovy</code>). Otherwise, the second argument will be printed (<code>many anchovies</code>).</p> <p>The arguments are:</p> <ul> <li>singular string</li> <li>plural string</li> <li>length integer</li> </ul> <p>NOTE: Sprig does not currently support languages with more complex pluralization rules. And <code>0</code> is considered a plural because the English language treats it as such (<code>zero anchovies</code>). The Sprig developers are working on a solution for better internationalization.</p>"},{"location":"cellsflows/template-functions/sprig/#prepend","title":"prepend","text":"<p>Push an element onto the front of a list, creating a new list.</p> <pre><code>prepend $myList 0\n</code></pre> <p>The above would produce <code>[0 1 2 3 4 5]</code>. <code>$myList</code> would remain unaltered.</p> <p><code>prepend</code> panics if there is a problem while <code>mustPrepend</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#push","title":"push","text":"<p>No documentation for this function</p>"},{"location":"cellsflows/template-functions/sprig/#quote","title":"quote","text":"<p>These functions wrap a string in double quotes (<code>quote</code>) or single quotes (<code>squote</code>).</p>"},{"location":"cellsflows/template-functions/sprig/#cat_1","title":"cat","text":"<p>The <code>cat</code> function concatenates multiple strings together into one, separating them with spaces:</p> <pre><code>cat \"hello\" \"beautiful\" \"world\"\n</code></pre> <p>The above produces <code>hello beautiful world</code></p>"},{"location":"cellsflows/template-functions/sprig/#randalpha","title":"randAlpha","text":"<p>These four functions generate cryptographically secure (uses <code>crypto/rand</code>) random strings, but with different base character sets:</p> <ul> <li><code>randAlphaNum</code> uses <code>0-9a-zA-Z</code></li> <li><code>randAlpha</code> uses <code>a-zA-Z</code></li> <li><code>randNumeric</code> uses <code>0-9</code></li> <li><code>randAscii</code> uses all printable ASCII characters</li> </ul> <p>Each of them takes one parameter: the integer length of the string.</p> <pre><code>randNumeric 3\n</code></pre> <p>The above will produce a random string with three digits.</p>"},{"location":"cellsflows/template-functions/sprig/#randalphanum","title":"randAlphaNum","text":"<p>These four functions generate cryptographically secure (uses <code>crypto/rand</code>) random strings, but with different base character sets:</p> <ul> <li><code>randAlphaNum</code> uses <code>0-9a-zA-Z</code></li> <li><code>randAlpha</code> uses <code>a-zA-Z</code></li> <li><code>randNumeric</code> uses <code>0-9</code></li> <li><code>randAscii</code> uses all printable ASCII characters</li> </ul> <p>Each of them takes one parameter: the integer length of the string.</p> <pre><code>randNumeric 3\n</code></pre> <p>The above will produce a random string with three digits.</p>"},{"location":"cellsflows/template-functions/sprig/#randascii","title":"randAscii","text":"<p>These four functions generate cryptographically secure (uses <code>crypto/rand</code>) random strings, but with different base character sets:</p> <ul> <li><code>randAlphaNum</code> uses <code>0-9a-zA-Z</code></li> <li><code>randAlpha</code> uses <code>a-zA-Z</code></li> <li><code>randNumeric</code> uses <code>0-9</code></li> <li><code>randAscii</code> uses all printable ASCII characters</li> </ul> <p>Each of them takes one parameter: the integer length of the string.</p> <pre><code>randNumeric 3\n</code></pre> <p>The above will produce a random string with three digits.</p>"},{"location":"cellsflows/template-functions/sprig/#randbytes","title":"randBytes","text":"<p>The <code>randBytes</code> function accepts a count <code>N</code> and generates a cryptographically secure (uses <code>crypto/rand</code>) random sequence of <code>N</code> bytes. The sequence is returned as a base64 encoded string.</p> <pre><code>randBytes 24\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#randint","title":"randInt","text":"<p>Returns a random integer value from min (inclusive) to max (exclusive). <pre><code>randInt 12 30\n</code></pre></p>"},{"location":"cellsflows/template-functions/sprig/#randnumeric","title":"randNumeric","text":"<p>These four functions generate cryptographically secure (uses <code>crypto/rand</code>) random strings, but with different base character sets:</p> <ul> <li><code>randAlphaNum</code> uses <code>0-9a-zA-Z</code></li> <li><code>randAlpha</code> uses <code>a-zA-Z</code></li> <li><code>randNumeric</code> uses <code>0-9</code></li> <li><code>randAscii</code> uses all printable ASCII characters</li> </ul> <p>Each of them takes one parameter: the integer length of the string.</p> <pre><code>randNumeric 3\n</code></pre> <p>The above will produce a random string with three digits.</p>"},{"location":"cellsflows/template-functions/sprig/#regexfind","title":"regexFind","text":"<p>Return the first (left most) match of the regular expression in the input string</p> <pre><code>regexFind \"[a-zA-Z][1-9]\" \"abcd1234\"\n</code></pre> <p>The above produces <code>d1</code></p> <p><code>regexFind</code> panics if there is a problem and <code>mustRegexFind</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#regexfindall","title":"regexFindAll","text":"<p>Returns a slice of all matches of the regular expression in the input string. The last parameter n determines the number of substrings to return, where -1 means return all matches</p> <pre><code>regexFindAll \"[2,4,6,8]\" \"123456789\" -1\n</code></pre> <p>The above produces <code>[2 4 6 8]</code></p> <p><code>regexFindAll</code> panics if there is a problem and <code>mustRegexFindAll</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#regexmatch","title":"regexMatch","text":"<p>Returns true if the input string contains any match of the regular expression.</p> <pre><code>regexMatch \"^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\\\.[A-Za-z]{2,}$\" \"test@acme.com\"\n</code></pre> <p>The above produces <code>true</code></p> <p><code>regexMatch</code> panics if there is a problem and <code>mustRegexMatch</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#regexquotemeta","title":"regexQuoteMeta","text":"<p>Returns a string that escapes all regular expression metacharacters inside the argument text; the returned string is a regular expression matching the literal text.</p> <pre><code>regexQuoteMeta \"1.2.3\"\n</code></pre> <p>The above produces <code>1\\.2\\.3</code></p>"},{"location":"cellsflows/template-functions/sprig/#regexreplaceall","title":"regexReplaceAll","text":"<p>Returns a copy of the input string, replacing matches of the Regexp with the replacement string replacement. Inside string replacement, $ signs are interpreted as in Expand, so for instance $1 represents the text of the first submatch</p> <pre><code>regexReplaceAll \"a(x*)b\" \"-ab-axxb-\" \"${1}W\"\n</code></pre> <p>The above produces <code>-W-xxW-</code></p> <p><code>regexReplaceAll</code> panics if there is a problem and <code>mustRegexReplaceAll</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#regexreplaceallliteral","title":"regexReplaceAllLiteral","text":"<p>Returns a copy of the input string, replacing matches of the Regexp with the replacement string replacement The replacement string is substituted directly, without using Expand</p> <pre><code>regexReplaceAllLiteral \"a(x*)b\" \"-ab-axxb-\" \"${1}\"\n</code></pre> <p>The above produces <code>-${1}-${1}-</code></p> <p><code>regexReplaceAllLiteral</code> panics if there is a problem and <code>mustRegexReplaceAllLiteral</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#regexsplit","title":"regexSplit","text":"<p>Slices the input string into substrings separated by the expression and returns a slice of the substrings between those expression matches. The last parameter <code>n</code> determines the number of substrings to return, where <code>-1</code> means return all matches</p> <pre><code>regexSplit \"z+\" \"pizza\" -1\n</code></pre> <p>The above produces <code>[pi a]</code></p> <p><code>regexSplit</code> panics if there is a problem and <code>mustRegexSplit</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#repeat","title":"repeat","text":"<p>Repeat a string multiple times:</p> <pre><code>repeat 3 \"hello\"\n</code></pre> <p>The above returns <code>hellohellohello</code></p>"},{"location":"cellsflows/template-functions/sprig/#replace","title":"replace","text":"<p>Perform simple string replacement.</p> <p>It takes three arguments:</p> <ul> <li>string to replace</li> <li>string to replace with</li> <li>source string</li> </ul> <pre><code>\"I Am Henry VIII\" | replace \" \" \"-\"\n</code></pre> <p>The above will produce <code>I-Am-Henry-VIII</code></p>"},{"location":"cellsflows/template-functions/sprig/#rest","title":"rest","text":"<p>To get the tail of the list (everything but the first item), use <code>rest</code>.</p> <p><code>rest $myList</code> returns <code>[2 3 4 5]</code></p> <p><code>rest</code> panics if there is a problem while <code>mustRest</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#reverse","title":"reverse","text":"<p>Produce a new list with the reversed elements of the given list.</p> <pre><code>reverse $myList\n</code></pre> <p>The above would generate the list <code>[5 4 3 2 1]</code>.</p> <p><code>reverse</code> panics if there is a problem while <code>mustReverse</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#round","title":"round","text":"<p>Returns a float value with the remainder rounded to the given number to digits after the decimal point.</p> <p><code>round 123.555555 3</code> will return <code>123.556</code></p>"},{"location":"cellsflows/template-functions/sprig/#semver","title":"semver","text":"<p>The <code>semver</code> function parses a string into a Semantic Version:</p> <pre><code>$version := semver \"1.2.3-alpha.1+123\"\n</code></pre> <p>If the parser fails, it will cause template execution to halt with an error.</p> <p>At this point, <code>$version</code> is a pointer to a <code>Version</code> object with the following properties:</p> <ul> <li><code>$version.Major</code>: The major number (<code>1</code> above)</li> <li><code>$version.Minor</code>: The minor number (<code>2</code> above)</li> <li><code>$version.Patch</code>: The patch number (<code>3</code> above)</li> <li><code>$version.Prerelease</code>: The prerelease (<code>alpha.1</code> above)</li> <li><code>$version.Metadata</code>: The build metadata (<code>123</code> above)</li> <li><code>$version.Original</code>: The original version as a string</li> </ul> <p>Additionally, you can compare a <code>Version</code> to another <code>version</code> using the <code>Compare</code> function:</p> <pre><code>semver \"1.4.3\" | (semver \"1.2.3\").Compare\n</code></pre> <p>The above will return <code>-1</code>.</p> <p>The return values are:</p> <ul> <li><code>-1</code> if the given semver is greater than the semver whose <code>Compare</code> method was called</li> <li><code>1</code> if the version who's <code>Compare</code> function was called is greater.</li> <li><code>0</code> if they are the same version</li> </ul> <p>(Note that in SemVer, the <code>Metadata</code> field is not compared during version comparison operations.)</p>"},{"location":"cellsflows/template-functions/sprig/#semvercompare","title":"semverCompare","text":"<p>A more robust comparison function is provided as <code>semverCompare</code>. This version supports version ranges:</p> <ul> <li><code>semverCompare \"1.2.3\" \"1.2.3\"</code> checks for an exact match</li> <li><code>semverCompare \"^1.2.0\" \"1.2.3\"</code> checks that the major and minor versions match, and that the patch    number of the second version is greater than or equal to the first parameter.</li> </ul> <p>The SemVer functions use the Masterminds semver library, from the creators of Sprig.</p>"},{"location":"cellsflows/template-functions/sprig/#basic-comparisons","title":"Basic Comparisons","text":"<p>There are two elements to the comparisons. First, a comparison string is a list of space or comma separated AND comparisons. These are then separated by || (OR) comparisons. For example, <code>\"&gt;= 1.2 &lt; 3.0.0 || &gt;= 4.2.3\"</code> is looking for a comparison that's greater than or equal to 1.2 and less than 3.0.0 or is greater than or equal to 4.2.3.</p> <p>The basic comparisons are:</p> <ul> <li><code>=</code>: equal (aliased to no operator)</li> <li><code>!=</code>: not equal</li> <li><code>&gt;</code>: greater than</li> <li><code>&lt;</code>: less than</li> <li><code>&gt;=</code>: greater than or equal to</li> <li><code>&lt;=</code>: less than or equal to</li> </ul> <p>Note, according to the Semantic Version specification pre-releases may not be API compliant with their release counterpart. It says,</p>"},{"location":"cellsflows/template-functions/sprig/#working-with-prerelease-versions","title":"Working With Prerelease Versions","text":"<p>Pre-releases, for those not familiar with them, are used for software releases prior to stable or generally available releases. Examples of prereleases include development, alpha, beta, and release candidate releases. A prerelease may be a version such as <code>1.2.3-beta.1</code> while the stable release would be <code>1.2.3</code>. In the order of precedence, prereleases come before their associated releases. In this example <code>1.2.3-beta.1 &lt; 1.2.3</code>.</p> <p>According to the Semantic Version specification prereleases may not be API compliant with their release counterpart. It says,</p> <p>A pre-release version indicates that the version is unstable and might not satisfy the intended compatibility requirements as denoted by its associated normal version.</p> <p>SemVer comparisons using constraints without a prerelease comparator will skip prerelease versions. For example, <code>&gt;=1.2.3</code> will skip prereleases when looking at a list of releases while <code>&gt;=1.2.3-0</code> will evaluate and find prereleases.</p> <p>The reason for the <code>0</code> as a pre-release version in the example comparison is because pre-releases can only contain ASCII alphanumerics and hyphens (along with <code>.</code> separators), per the spec. Sorting happens in ASCII sort order, again per the spec. The lowest character is a <code>0</code> in ASCII sort order (see an ASCII Table)</p> <p>Understanding ASCII sort ordering is important because A-Z comes before a-z. That means <code>&gt;=1.2.3-BETA</code> will return <code>1.2.3-alpha</code>. What you might expect from case sensitivity doesn't apply here. This is due to ASCII sort ordering which is what the spec specifies.</p>"},{"location":"cellsflows/template-functions/sprig/#hyphen-range-comparisons","title":"Hyphen Range Comparisons","text":"<p>There are multiple methods to handle ranges and the first is hyphens ranges. These look like:</p> <ul> <li><code>1.2 - 1.4.5</code> which is equivalent to <code>&gt;= 1.2 &lt;= 1.4.5</code></li> <li><code>2.3.4 - 4.5</code> which is equivalent to <code>&gt;= 2.3.4 &lt;= 4.5</code></li> </ul>"},{"location":"cellsflows/template-functions/sprig/#wildcards-in-comparisons","title":"Wildcards In Comparisons","text":"<p>The <code>x</code>, <code>X</code>, and <code>*</code> characters can be used as a wildcard character. This works for all comparison operators. When used on the <code>=</code> operator it falls back to the patch level comparison (see tilde below). For example,</p> <ul> <li><code>1.2.x</code> is equivalent to <code>&gt;= 1.2.0, &lt; 1.3.0</code></li> <li><code>&gt;= 1.2.x</code> is equivalent to <code>&gt;= 1.2.0</code></li> <li><code>&lt;= 2.x</code> is equivalent to <code>&lt; 3</code></li> <li><code>*</code> is equivalent to <code>&gt;= 0.0.0</code></li> </ul>"},{"location":"cellsflows/template-functions/sprig/#tilde-range-comparisons-patch","title":"Tilde Range Comparisons (Patch)","text":"<p>The tilde (<code>~</code>) comparison operator is for patch level ranges when a minor version is specified and major level changes when the minor number is missing. For example,</p> <ul> <li><code>~1.2.3</code> is equivalent to <code>&gt;= 1.2.3, &lt; 1.3.0</code></li> <li><code>~1</code> is equivalent to <code>&gt;= 1, &lt; 2</code></li> <li><code>~2.3</code> is equivalent to <code>&gt;= 2.3, &lt; 2.4</code></li> <li><code>~1.2.x</code> is equivalent to <code>&gt;= 1.2.0, &lt; 1.3.0</code></li> <li><code>~1.x</code> is equivalent to <code>&gt;= 1, &lt; 2</code></li> </ul>"},{"location":"cellsflows/template-functions/sprig/#caret-range-comparisons-major","title":"Caret Range Comparisons (Major)","text":"<p>The caret (<code>^</code>) comparison operator is for major level changes once a stable (1.0.0) release has occurred. Prior to a 1.0.0 release the minor versions acts as the API stability level. This is useful when comparisons of API versions as a major change is API breaking. For example,</p> <ul> <li><code>^1.2.3</code> is equivalent to <code>&gt;= 1.2.3, &lt; 2.0.0</code></li> <li><code>^1.2.x</code> is equivalent to <code>&gt;= 1.2.0, &lt; 2.0.0</code></li> <li><code>^2.3</code> is equivalent to <code>&gt;= 2.3, &lt; 3</code></li> <li><code>^2.x</code> is equivalent to <code>&gt;= 2.0.0, &lt; 3</code></li> <li><code>^0.2.3</code> is equivalent to <code>&gt;=0.2.3 &lt;0.3.0</code></li> <li><code>^0.2</code> is equivalent to <code>&gt;=0.2.0 &lt;0.3.0</code></li> <li><code>^0.0.3</code> is equivalent to <code>&gt;=0.0.3 &lt;0.0.4</code></li> <li><code>^0.0</code> is equivalent to <code>&gt;=0.0.0 &lt;0.1.0</code></li> <li><code>^0</code> is equivalent to <code>&gt;=0.0.0 &lt;1.0.0</code></li> </ul>"},{"location":"cellsflows/template-functions/sprig/#seq","title":"seq","text":"<p>Works like the bash <code>seq</code> command. * 1 parameter  (end) - will generate all counting integers between 1 and <code>end</code> inclusive. * 2 parameters (start, end) - will generate all counting integers between <code>start</code> and <code>end</code> inclusive incrementing or decrementing by 1. * 3 parameters (start, step, end) - will generate all counting integers between <code>start</code> and <code>end</code> inclusive incrementing or decrementing by <code>step</code>.</p> <pre><code>seq 5       =&gt; 1 2 3 4 5\nseq -3      =&gt; 1 0 -1 -2 -3\nseq 0 2     =&gt; 0 1 2\nseq 2 -2    =&gt; 2 1 0 -1 -2\nseq 0 2 10  =&gt; 0 2 4 6 8 10\nseq 0 -2 -5 =&gt; 0 -2 -4\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#set","title":"set","text":"<p>Use <code>set</code> to add a new key/value pair to a dictionary.</p> <pre><code>$_ := set $myDict \"name4\" \"value4\"\n</code></pre> <p>Note that <code>set</code> returns the dictionary (a requirement of Go template functions), so you may need to trap the value as done above with the <code>$_</code> assignmen</p>"},{"location":"cellsflows/template-functions/sprig/#sha1sum","title":"sha1sum","text":"<p>The <code>sha1sum</code> function receives a string, and computes it's SHA1 digest.</p> <pre><code>sha1sum \"Hello world!\"\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#sha256sum","title":"sha256sum","text":"<p>The <code>sha256sum</code> function receives a string, and computes it's SHA256 digest.</p> <pre><code>sha256sum \"Hello world!\"\n</code></pre> <p>The above will compute the SHA 256 sum in an \"ASCII armored\" format that is safe to print.</p>"},{"location":"cellsflows/template-functions/sprig/#shuffle","title":"shuffle","text":"<p>Shuffle a string.</p> <pre><code>shuffle \"hello\"\n</code></pre> <p>The above will randomize the letters in <code>hello</code>, perhaps producing <code>oelhl</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#slice","title":"slice","text":"<p>To get partial elements of a list, use <code>slice list [n] [m]</code>. It is equivalent of <code>list[n:m]</code>.</p> <ul> <li><code>slice $myList</code> returns <code>[1 2 3 4 5]</code>. It is same as <code>myList[:]</code>.</li> <li><code>slice $myList 3</code> returns <code>[4 5]</code>. It is same as <code>myList[3:]</code>.</li> <li><code>slice $myList 1 3</code> returns <code>[2 3]</code>. It is same as <code>myList[1:3]</code>.</li> <li><code>slice $myList 0 3</code> returns <code>[1 2 3]</code>. It is same as <code>myList[:3]</code>.</li> </ul> <p><code>slice</code> panics if there is a problem while <code>mustSlice</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#snakecase","title":"snakecase","text":"<p>Convert string from camelCase to snake_case.</p> <pre><code>snakecase \"FirstName\"\n</code></pre> <p>This above will produce <code>first_name</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#sortalpha","title":"sortAlpha","text":"<p>The <code>sortAlpha</code> function sorts a list of strings into alphabetical (lexicographical) order.</p> <p>It does not sort in place, but returns a sorted copy of the list, in keeping with the immutability of lists.</p>"},{"location":"cellsflows/template-functions/sprig/#split","title":"split","text":"<p>Split a string into a list of strings:</p> <pre><code>splitList \"$\" \"foo$bar$baz\"\n</code></pre> <p>The above will return <code>[foo bar baz]</code></p> <p>The older <code>split</code> function splits a string into a <code>dict</code>. It is designed to make it easy to use template dot notation for accessing members:</p> <pre><code>$a := split \"$\" \"foo$bar$baz\"\n</code></pre> <p>The above produces a map with index keys. <code>{_0: foo, _1: bar, _2: baz}</code></p> <pre><code>$a._0\n</code></pre> <p>The above produces <code>foo</code></p>"},{"location":"cellsflows/template-functions/sprig/#splitlist","title":"splitList","text":"<p>Split a string into a list of strings:</p> <pre><code>splitList \"$\" \"foo$bar$baz\"\n</code></pre> <p>The above will return <code>[foo bar baz]</code></p> <p>The older <code>split</code> function splits a string into a <code>dict</code>. It is designed to make it easy to use template dot notation for accessing members:</p> <pre><code>$a := split \"$\" \"foo$bar$baz\"\n</code></pre> <p>The above produces a map with index keys. <code>{_0: foo, _1: bar, _2: baz}</code></p> <pre><code>$a._0\n</code></pre> <p>The above produces <code>foo</code></p>"},{"location":"cellsflows/template-functions/sprig/#splitn","title":"splitn","text":"<p><code>splitn</code> function splits a string into a <code>dict</code>. It is designed to make it easy to use template dot notation for accessing members:</p> <pre><code>$a := splitn \"$\" 2 \"foo$bar$baz\"\n</code></pre> <p>The above produces a map with index keys. <code>{_0: foo, _1: bar$baz}</code></p> <pre><code>$a._0\n</code></pre> <p>The above produces <code>foo</code></p>"},{"location":"cellsflows/template-functions/sprig/#squote","title":"squote","text":"<p>These functions wrap a string in double quotes (<code>quote</code>) or single quotes (<code>squote</code>).</p>"},{"location":"cellsflows/template-functions/sprig/#sub","title":"sub","text":"<p>To subtract, use <code>sub</code></p>"},{"location":"cellsflows/template-functions/sprig/#subf","title":"subf","text":"<p>Floats version of <code>sub</code></p>"},{"location":"cellsflows/template-functions/sprig/#substr","title":"substr","text":"<p>Get a substring from a string. It takes three parameters:</p> <ul> <li>start (int)</li> <li>end (int)</li> <li>string (string)</li> </ul> <pre><code>substr 0 5 \"hello world\"\n</code></pre> <p>The above returns <code>hello</code></p>"},{"location":"cellsflows/template-functions/sprig/#swapcase","title":"swapcase","text":"<p>Swap the case of a string using a word based algorithm.</p> <p>Conversion algorithm:</p> <ul> <li>Upper case character converts to Lower case</li> <li>Title case character converts to Lower case</li> <li>Lower case character after Whitespace or at start converts to Title case</li> <li>Other Lower case character converts to Upper case</li> <li>Whitespace is defined by unicode.IsSpace(char)</li> </ul> <pre><code>swapcase \"This Is A.Test\"\n</code></pre> <p>This above will produce <code>tHIS iS a.tEST</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#ternary","title":"ternary","text":"<p>The <code>ternary</code> function takes two values, and a test value. If the test value is true, the first value will be returned. If the test value is empty, the second value will be returned. This is similar to the c ternary operator.</p> <pre><code>ternary \"foo\" \"bar\" true\n</code></pre> <p>or</p> <pre><code>true | ternary \"foo\" \"bar\"\n</code></pre> <p>The above returns <code>\"foo\"</code>.</p> <pre><code>ternary \"foo\" \"bar\" false\n</code></pre> <p>or</p> <pre><code>false | ternary \"foo\" \"bar\"\n</code></pre> <p>The above returns <code>\"bar\"</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#title","title":"title","text":"<p>Convert to title case:</p> <pre><code>title \"hello world\"\n</code></pre> <p>The above returns <code>Hello World</code></p>"},{"location":"cellsflows/template-functions/sprig/#todate","title":"toDate","text":"<p><code>toDate</code> converts a string to a date. The first argument is the date layout and the second the date string. If the string can't be convert it returns the zero value. <code>mustToDate</code> will return an error in case the string cannot be converted.</p> <p>This is useful when you want to convert a string date to another format (using pipe). The example below converts \"2017-12-31\" to \"31/12/2017\".</p> <pre><code>toDate \"2006-01-02\" \"2017-12-31\" | date \"02/01/2006\"\n</code></pre>"},{"location":"cellsflows/template-functions/sprig/#todecimal","title":"toDecimal","text":"<p>Given a unix octal permission, produce a decimal.</p> <pre><code>\"0777\" | toDecimal\n</code></pre> <p>The above converts <code>0777</code> to <code>511</code> and returns the value as an int64.</p>"},{"location":"cellsflows/template-functions/sprig/#tojson","title":"toJson","text":"<p>The <code>toJson</code> function encodes an item into a JSON string. If the item cannot be converted to JSON the function will return an empty string. <code>mustToJson</code> will return an error in case the item cannot be encoded in JSON.</p> <pre><code>toJson .Item\n</code></pre> <p>The above returns JSON string representation of <code>.Item</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#toprettyjson","title":"toPrettyJson","text":"<p>The <code>toPrettyJson</code> function encodes an item into a pretty (indented) JSON string.</p> <pre><code>toPrettyJson .Item\n</code></pre> <p>The above returns indented JSON string representation of <code>.Item</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#torawjson","title":"toRawJson","text":"<p>The <code>toRawJson</code> function encodes an item into JSON string with HTML characters unescaped.</p> <pre><code>toRawJson .Item\n</code></pre> <p>The above returns unescaped JSON string representation of <code>.Item</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#tostring","title":"toString","text":"<p><code>toString</code>: Convert to a string.</p>"},{"location":"cellsflows/template-functions/sprig/#tostrings","title":"toStrings","text":"<p>Given a list-like collection, produce a slice of strings.</p> <pre><code>list 1 2 3 | toStrings\n</code></pre> <p>The above converts <code>1</code> to <code>\"1\"</code>, <code>2</code> to <code>\"2\"</code>, and so on, and then returns them as a list.</p>"},{"location":"cellsflows/template-functions/sprig/#trim","title":"trim","text":"<p>The <code>trim</code> function removes space from either side of a string:</p> <pre><code>trim \"   hello    \"\n</code></pre> <p>The above produces <code>hello</code></p>"},{"location":"cellsflows/template-functions/sprig/#trimall","title":"trimAll","text":"<p>No documentation for this function</p>"},{"location":"cellsflows/template-functions/sprig/#trimprefix","title":"trimPrefix","text":"<p>Trim just the prefix from a string:</p> <pre><code>trimPrefix \"-\" \"-hello\"\n</code></pre> <p>The above returns <code>hello</code></p>"},{"location":"cellsflows/template-functions/sprig/#trimsuffix","title":"trimSuffix","text":"<p>Trim just the suffix from a string:</p> <pre><code>trimSuffix \"-\" \"hello-\"\n</code></pre> <p>The above returns <code>hello</code></p>"},{"location":"cellsflows/template-functions/sprig/#trimall_1","title":"trimall","text":"<p>No documentation for this function</p>"},{"location":"cellsflows/template-functions/sprig/#trunc","title":"trunc","text":"<p>Truncate a string (and add no suffix)</p> <pre><code>trunc 5 \"hello world\"\n</code></pre> <p>The above produces <code>hello</code>.</p> <pre><code>trunc -5 \"hello world\"\n</code></pre> <p>The above produces <code>world</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#tuple","title":"tuple","text":"<p>No documentation for this function</p>"},{"location":"cellsflows/template-functions/sprig/#typeis","title":"typeIs","text":"<p><code>typeIs</code> is like <code>kindIs</code>, but for types: <code>typeIs \"*io.Buffer\" $myVal</code></p> <p>Note: None of these can test whether or not something implements a given interface, since doing so would require compiling the interface in ahead of time.</p>"},{"location":"cellsflows/template-functions/sprig/#typeislike","title":"typeIsLike","text":"<p><code>typeIsLike</code> works as <code>typeIs</code>, except that it also dereferences pointers.</p> <p>Note: None of these can test whether or not something implements a given interface, since doing so would require compiling the interface in ahead of time.</p>"},{"location":"cellsflows/template-functions/sprig/#typeof","title":"typeOf","text":"<p>typeOf<code>returns the underlying type of a value:</code>typeOf $foo`</p> <p>Note: None of these can test whether or not something implements a given interface, since doing so would require compiling the interface in ahead of time.</p>"},{"location":"cellsflows/template-functions/sprig/#uniq","title":"uniq","text":"<p>Generate a list with all of the duplicates removed.</p> <pre><code>list 1 1 1 2 | uniq\n</code></pre> <p>The above would produce <code>[1 2]</code></p> <p><code>uniq</code> panics if there is a problem while <code>mustUniq</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#unixepoch","title":"unixEpoch","text":"<p>Returns the seconds since the unix epoch for a <code>time.Time</code>.</p> <p><pre><code>now | unixEpoch\n\n## unset\n\n Given a map and a key, delete the key from the map.\n</code></pre> $_ := unset $myDict \"name4\" <pre><code>As with `set`, this returns the dictionary.\n\nNote that if the key is not found, this operation will simply return. No error\nwill be generated.\n\n## until\n\n The `until` function builds a range of integers.\n</code></pre> until 5 <pre><code>The above generates the list `[0, 1, 2, 3, 4]`.\n\nThis is useful for looping with `range $i, $e := until 5`.\n\n## untilStep\n\n Like `until`, `untilStep` generates a list of counting integers. But it allows\nyou to define a start, stop, and step:\n</code></pre> untilStep 3 6 2 <pre><code>The above will produce `[3 5]` by starting with 3, and adding 2 until it is equal\nor greater than 6. This is similar to Python's `range` function.\n\n## untitle\n\n Remove title casing. `untitle \"Hello World\"` produces `hello world`.\n\n## upper\n\n Convert the entire string to uppercase:\n</code></pre> upper \"hello\" <pre><code>The above returns `HELLO`\n\n## urlJoin\n\n Joins map (produced by `urlParse`) to produce URL string\n</code></pre> urlJoin (dict \"fragment\" \"fragment\" \"host\" \"host:80\" \"path\" \"/path\" \"query\" \"query\" \"scheme\" \"http\") <pre><code>The above returns the following string:\n</code></pre> proto://host:80/path?query#fragment <pre><code>## urlParse\n\n Parses string for URL and produces dict with URL parts\n</code></pre> urlParse \"http://admin:secret@server.com:8080/api?list=false#anchor\" <pre><code>The above returns a dict, containing URL object:\n```yaml\nscheme:   'http'\nhost:     'server.com:8080'\npath:     '/api'\nquery:    'list=false'\nopaque:   nil\nfragment: 'anchor'\nuserinfo: 'admin:secret'\n</code></pre></p> <p>For more info, check https://golang.org/pkg/net/url/#URL</p>"},{"location":"cellsflows/template-functions/sprig/#uuidv4","title":"uuidv4","text":"<p>Sprig can generate UUID v4 universally unique IDs.</p> <pre><code>uuidv4\n</code></pre> <p>The above returns a new UUID of the v4 (randomly generated) type.</p>"},{"location":"cellsflows/template-functions/sprig/#values","title":"values","text":"<p>The <code>values</code> function is similar to <code>keys</code>, except it returns a new <code>list</code> with all the values of the source <code>dict</code> (only one dictionary is supported).</p> <pre><code>$vals := values $myDict\n</code></pre> <p>The above returns <code>list[\"value1\", \"value2\", \"value 3\"]</code>. Note that the <code>values</code> function gives no guarantees about the result ordering- if you care about this, then use <code>sortAlpha</code>.</p>"},{"location":"cellsflows/template-functions/sprig/#without","title":"without","text":"<p>The <code>without</code> function filters items out of a list.</p> <pre><code>without $myList 3\n</code></pre> <p>The above would produce <code>[1 2 4 5]</code></p> <p>Without can take more than one filter:</p> <pre><code>without $myList 1 3 5\n</code></pre> <p>That would produce <code>[2 4]</code></p> <p><code>without</code> panics if there is a problem while <code>mustWithout</code> returns an error to the template engine if there is a problem.</p>"},{"location":"cellsflows/template-functions/sprig/#wrap","title":"wrap","text":"<p>Wrap text at a given column count:</p> <pre><code>wrap 80 $someText\n</code></pre> <p>The above will wrap the string in <code>$someText</code> at 80 columns.</p>"},{"location":"cellsflows/template-functions/sprig/#wrapwith","title":"wrapWith","text":"<p><code>wrapWith</code> works as <code>wrap</code>, but lets you specify the string to wrap with. (<code>wrap</code> uses <code>\\n</code>)</p> <pre><code>wrapWith 5 \"\\t\" \"Hello World\"\n</code></pre> <p>The above produces <code>hello world</code> (where the whitespace is an ASCII tab character)</p>"},{"location":"developer-guide/introduction/index/","title":"Index","text":"<p>Welcome to the Cells v2 APIs and tooling references.</p>"},{"location":"developer-guide/introduction/index/#audience","title":"Audience","text":"<p>This is a good start if you wich to :</p> <ul> <li>Programmatically interact with a Cells instance, for deployment automation, workflows, etc.</li> <li>Learn more about the available Rest APIs and command line tools</li> <li>Develop your own extensions to Cells</li> <li>Fix bugs and submit pull requests to the project</li> </ul> <p>For regular users, the Cells distribution comes in the form of precompiled binaries for Linux, MacOS X and Windows and there is no need to re-compile the code nor to understand the concepts that are presented in the current document.</p>"},{"location":"developer-guide/introduction/index/#references","title":"References","text":"<p>The current document is not exhaustive and the reader might also refer to other Pydio Cells documentation sources to get a complete understanding of the application, namely:</p> <ul> <li>The admin guide: this is a must-read to understand the application before starting to hack.</li> <li>The in-line documentation within the User Interface: we always try to have a self-explanatory and intuitive UI, with a lot of hints directly visible in the interface. Furthermore, a complete documentation of the REST APIs and services is accessible from the admin dashboard under All Plugins <code>&gt;&gt;</code> REST APIs. It is automatically generated with Swagger.</li> <li>The code on Github.</li> <li>The on-line Go Documentation.</li> <li>The Pydio forum: if your question is not answered in any of the documentation, somebody might have already asked it in the forum.</li> </ul>"},{"location":"developer-guide/introduction/main-apis-presentation/","title":"Main APIs presentation","text":"<p>In Pydio Cells, APIs are first-class citizen that you can use to automate task on your server. These APIs are tested, consistent, and used by all official Cells client applications (Web UX, mobile applications, sync clients). We will focus here on the two API that are useful for the day-to-day operations like managing the files and folders and their various metadata, provisioning configurations, etc.</p>"},{"location":"developer-guide/introduction/main-apis-presentation/#rest-api","title":"Rest API","text":"<p>The main set of available API's are a list of REST endpoints, accessible using HTTP/1.1 protocol at https://yourcells.tld/a/, and protected using the OAuth2 protocol (see next section).</p> <p>These API's provide all the necessary tools for:</p> <ul> <li>Provisioning : manipulating configuration data, workspaces, etc.</li> <li>Authorization : reading/writing information about users and their permissions.</li> <li>Files : Getting information about the files (metadata), triggering files/folders background operations, etc. This API is NOT used for uploading or downloading files contents (see below)</li> </ul> <p>REST API is documented in the OpenAPI JSON Document format, the de-facto standard that can be used to generate documentations or generate client SDK or servers stubs. It is documented in the next chapter \"Rest API\", and you can also consult a more detailed version of the documentation hosted on the Swagger Hub.</p>"},{"location":"developer-guide/introduction/main-apis-presentation/#s3-api","title":"S3 API","text":"<p>For manipulating the file contents in a consistent way (uploads/downloads), Cells provides an S3-compatible API. The root of your installation can be used as an s3-compatible storage in a third party software that supports such feature. There is only one bucket available, named <code>io</code>.</p> <p>This endpoint requires the standard S3-Signature headers, which can be fairly complex to generate, so we recommend using one of the numerous libraries available out there to communicate with S3. To connect to the Cells, an S3 Client will require the following settings:</p> <ul> <li>Custom URL : your Cells URL.</li> <li>Data Bucket : <code>io</code></li> <li>Access key and secret : use the JWT (see Authentication section) as the API Key, and <code>gatewaysecret</code> as a fixed API Secret.</li> </ul> <p>Please note: make sure the library handles bucket name as path and not as subdomain.</p>"},{"location":"developer-guide/introduction/main-apis-presentation/#node-paths","title":"Node paths","text":"<p>When manipulating files through the APIs, the nodes (files or folders) are identified by their path, that are slash-separated segments similar to file paths (always using forward slash, even if Cells is running on Windows).</p>"},{"location":"developer-guide/introduction/main-apis-presentation/#user-context","title":"User Context","text":"<p>In most cases, a typical path looks like <code>/workspace-slug/path/to/file.txt</code>.</p> <p>The very first segment is always composed of the workspace slug, locating the resource inside a given workspace (or Cell). For example, listing files under the <code>/</code> root path will result in listing the workspaces visible to the currently logged user :</p> <pre><code>POST https://SERVER_NAME/a/tree/stats {\"NodePaths\":[\"/*\"]}\n{\n    \"Nodes\": [\n        {\n            \"Path\": \"personal-files\", // WORKSPACE SLUG\n            \"Type\": \"COLLECTION\",\n            \"MetaStore\": {...}\n        },\n        {\n            \"Path\": \"common-files\", // WORKSPACE SLUG\n            \"Type\": \"COLLECTION\",\n            \"MetaStore\": {...}\n        }\n    ]\n}\n</code></pre>"},{"location":"developer-guide/introduction/main-apis-presentation/#admin-context","title":"Admin Context","text":"<p>Some specific admin-oriented APIs (like AdminTreeService) will list the paths starting at the very root of the server internal tree, which means displaying the datasources ids as its first level:</p> <pre><code>POST https://SERVER_NAME/a/tree/admin/list {\"Node\":{\"Path\":\"/\"}}}\n\n{\n    \"Parent\": {\n        \"Uuid\": \"ROOT\",\n        \"Path\": \"/\"\n    },\n    \"Children\": [\n        {\n            \"Uuid\": \"DATASOURCE:cellsdata\",\n            \"Path\": \"cellsdata\", // DATASOURCE NAME\n            \"MetaStore\": {...}\n        },\n        {\n            \"Uuid\": \"DATASOURCE:personal\",\n            \"Path\": \"personal\", // DATASOURCE NAME\n            \"MetaStore\": {...}\n        },\n        {\n            \"Uuid\": \"DATASOURCE:pydiods1\",\n            \"Path\": \"pydiods1\", // DATASOURCE NAME\n            \"MetaStore\": {\n                \"name\": \"\\\"pydiods1\\\"\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"developer-guide/introduction/authentication/","title":"Authentication","text":"<p>The core authentication mechanism used in Cells is OpenID Connect, an identity layer on top of OAuth2.  OpenID Connect carries OAuth2 authorizations in the JWT (JSON Web Tokens) format. It is used and maintained by major actors like Google or Facebook, and has the advantage of providing an authentication token to third party apps without needing to request the user id/password.</p> <p>Pydio Cells contains an OIDC server for authentication operations. It produces Access Tokens used by various clients to query the services. Pydio Cells frontend itself is seen as an OAuth Client application. Once you get a valid Access Token, you will pass it along any API Calls using the <code>Authorization: Bearer ${token}</code> header.</p> <p>As an alternative, Personal Access Token can be generated server-side to avoid OAuth2 process implementation (see Method 2).</p>"},{"location":"developer-guide/introduction/authentication/#method-1-oauth2-protocol","title":"Method 1: OAuth2 Protocol","text":"<p>If your desired integration is users-facing, you need to properly implement the OAuth2 protocol. The great advantage is that your application will redirect to Cells for authentication and never see users credentials. The drawback is that implementation is more complex, although most languages provide SDK or libraries for OAuth2 protocol. Resources below should provide you the necessary information to configure an OAuth2 client library.</p> <p>OIDC / OAuth2 Endpoints</p> <p>Cells provides the following endpoints for standard OIDC / OAuth2 operations</p> Endpoint Value OIDC Configuration URL http(s)://your-cells.com/oidc/.well-known/openid-configuration OAuth2 Auth URL http(s)://your-cells.com/oidc/oauth2/auth OAuth2 Token URL http(s)://your-cells.com/oidc/oauth2/token <p>OAuth2 Default Clients</p> <p>As any OAuth2 provider, Cells require clients to be registered before they can connect. The server ships with 3 default clients respectively for Sync, Mobile, and CellsClient applications. The latest is a good choice if you wish to use the APIs.</p> <p>As part of the OAuth2 authentication checks, the clients registered must declare the Redirect URIs that are allowed to be used during the authentication workflow. Below is a summary of the default clients and their authorized Redirect URIs.</p> Client ID Public Redirect URIs cells-sync Yes <code>http://localhost:[3636-3666]</code> (a range of ports)http://localhost:3000 (used during CellsSync development process) cells-mobile Yes cellsauth://serverName (custom scheme that can be registered by mobile applications for reopening after authentication) cells-client Yes http://localhost:3636http://serverName/oauth/oob (Out of Band endpoint that redirects to Cells web interface and display the token in a copy/paste interface)"},{"location":"developer-guide/introduction/authentication/#method-2-personal-access-token","title":"Method 2: Personal Access Token","text":"<p>For a fully automatized integration, implementing OAuth2 may be cumbersome and even blocking. For example, writing a server-side tool to communicate with Cells may prevent you from initiating browser-based authentication session. For this case, Cells provides a \"Personal Access Token\" mechanism, that you can simply generate for a given user with a given expiration time.</p> <p>Logged on the Cells server, use the <code>cells admin user token</code> command to easily generate an authentication token. Note that Cells must be running on the server.</p> <pre><code>$ ./cells admin user token\n\nDESCRIPTION\n\n  Generate a personal authentication token for a user. \n\n  Expiration can be either a \"hard\" limit, by using the -e flag and a golang duration, or a \"sliding window\" \n  defined in seconds using the -a flag. \n\nEXAMPLES\n\n  Generate a token that lasts 24 hours for user admin\n  $ ./cells user token -u admin -e 24h\n\n  Generate a token that lasts by default 10mn, but which expiration is refreshed to the next 10mn each time \n  token is used.\n  $ ./cells user token -u admin -a 600\n\nTOKEN USAGE\n\n  These token can be used in replacement of an OAuth2-based access token : they can replace the \"Bearer\" access \n  token when calling any REST API. They can also be used as the password (in conjunction with username) for all \n  basic-auth based APIs (e.g. webDAV).\n\nTOKEN SCOPE\n\n  By default, generated tokens grant the same level of access as a standard login operation. To improve security, \n  it is possible to restrict these accesses to a specific file or folder (given it is accessible by the user in \n  first place) with a \"scope\" in the format \"node:NODE_UUID:PERMISSION\" where PERMISSION string contains either \"r\"\n  (read) or \"w\" (write) or both.\n\nUsage:\n  ./cells admin user token [flags]\n\nFlags:\n  -a, --auto int        Auto-refresh (number of seconds, see help)\n  -e, --expire string   Expire after (golang duration format)...\n  -h, --help            help for token\n  -s, --scope strings   Optional scopes\n  -u, --user string     User login (mandatory)\n</code></pre>"},{"location":"developer-guide/introduction/other-apis/","title":"Other APIs","text":"<p>Apart from REST and S3 APIs, there are a couple of other accessible endpoints in your Cells Server:</p> <ul> <li>WebDAV</li> <li>gRPC</li> <li>Websocket</li> <li>WOPI</li> </ul>"},{"location":"developer-guide/introduction/other-apis/#webdav","title":"WebDAV","text":"<p>By default, Pydio Cells exposes a WebDAV protocol endpoint accessible at the following address: <code>&lt;public-URL&gt;/dav/</code>. It is protected by a Basic-Auth authentication, using user/password credentials.</p> <p>This webdav access can be used to \u201cmount\u201d any accessible workspace as a network drive on the user\u2019s desktops (Windows / Mac / Linux).</p>"},{"location":"developer-guide/introduction/other-apis/#grpc","title":"gRPC","text":"<p>Currently only used by the CellsSync client, a dedicated gRPC gateway provides a fast HTTP/2 access to the tree operations.</p> <p>Depending on the TLS configuration:</p> <ul> <li>If TLS is enabled, gRPC is exposed at the same URL as your Cells server (root serves both HTTP/1.1 and HTTP/2).</li> <li>If TLS is not enabled, or gRPC is forced to use an alternative port using the PYDIO_GRPC_EXTERNAL environment variable, this gateway is exposed on a dedicated port. This port is exposed in the /a/config/discovery API endpoint response.</li> </ul>"},{"location":"developer-guide/introduction/other-apis/#websocket","title":"WebSocket","text":"<p>Pydio Cells exposes two authenticated websocket endpoints sending various PUSH messages from the server. It is currently used by the WebUI Javascript client.</p> <p>Endpoints are:</p> <ul> <li>/ws/events: sends most events regarding the tree (nodes added / modified / removed), reflecting the state of the files and folders in real time in the frontend, as well as ACLs/Permissions changes (for e.g. refreshing Workspaces list in real time).</li> <li>/ws/chats: this websocket point is used for the chat applications embedded in the frontend. It uses the underlying chat microservice along with the internal event bus to broadcast messages to users registered on a given room.  </li> </ul>"},{"location":"developer-guide/introduction/other-apis/#wopi","title":"Wopi","text":"<p>For supporting online MSOffice Documents edition, Pydio exposes a WOPI interface for reading/writing documents. A dedicated micro service is used for that, see the WOPI specification to learn more.</p>"},{"location":"developer-guide/introduction/consumers-examples/index/","title":"Consumers Examples","text":"<p>In this section, we provide some real-life examples for making API calls to Cells using standard tools. Examples will go through the necessary authentication step, some basic calls to the Rest API, and the usage of the S3 API.</p> <p>Curl is typically helpful when you are diagnosing a buggy setup from the command line.</p> <p>Postman can be use to better understand the various API requests.</p> <p>If you want to directly talk to your Cells Server Instance from the command line, typically to perform cron jobs or in your CICD pipe, you most probably want to rather user the Cells Client, otherwise we also provide already packaged SDKs</p> <ul> <li>Using Postman</li> <li>Using cURL</li> </ul>"},{"location":"developer-guide/introduction/consumers-examples/using-postman/","title":"Using Postman","text":"<p>Postman is a powerful client side application that can be used to debug and test communication with a server over TCP. See GetPostman.com to download the application.</p>"},{"location":"developer-guide/introduction/consumers-examples/using-postman/#oauth-2","title":"OAuth 2","text":"<p>Available OAuth 2 default parameters to use for Cells:</p> Parameter Value Callback URL http://localhost:3000/servers/callback Auth URL http(s)://your-cells.com/oidc/oauth2/auth Access Token URL http(s)://your-cells.com/oidc/oauth2/token Client ID cells-sync, cells-client, cells-mobile Scope openid email profile pydio offline"},{"location":"developer-guide/introduction/consumers-examples/using-postman/#authenticate-with-postman","title":"Authenticate with Postman","text":"<p>Add authentication on Postman:</p> <ul> <li>Type: select OAuth 2.0</li> <li>Then press Get New Access Token</li> </ul> <p></p> name value Token Name the token name on postman Grant Type Authorization Code Callback URL http://localhost:3000/servers/callback Auth URL https://cells-test/oidc/oauth2/auth Access Token URL https://cells-test/oidc/oauth2/token Client ID cells-sync Client Secret omit (you can let the field empty) Scope openid email profile pydio offline State you can put whatever you want (minimum 8 characters) Client Authentication Send as Basic Auth header <p>Once you Press Request Token, you will be invited to log in with your Credentials on your Cells instance,</p> <p>after that you will be redirected on postman with a token.</p> <p></p> <p>Once you have your Token:</p> <ul> <li>Select the Token from the list.</li> </ul> <p>You can now query any endpoint that you have access to.</p>"},{"location":"developer-guide/introduction/consumers-examples/using-postman/#api-call","title":"API Call","text":"<p>This example calls the TreeService endpoint POST /a/tree/stats, that provides a way to list files and folders (\"nodes\") on the server.</p> <p>Example:</p> type value description endpoint /a/tree/stats Endpoint that list all the Nodes authorization OAuth2 Access token Access Token retrieved from the previous Step body json JSON body of the request <p>This is the modified body that will query all the children.</p> <pre><code>{\n  \"AllMetaProviders\": true,\n  \"Limit\": 0,\n  \"NodePaths\": [\n    \"/*\"\n  ],\n  \"Offset\": 0,\n  \"Versions\": true\n}\n</code></pre> <p></p>"},{"location":"developer-guide/introduction/consumers-examples/using-postman/#s3-call","title":"S3 Call","text":"<p>Below is an sample URL for accessing data from the object file <code>Document Office Sample</code> in the personal workspace of a user in the demo:</p> <p><code>https://demo.pydio.com/io/personal-files/Document Office Sample</code></p> <p>This URL is composed of the following components :  </p> <ul> <li><code>/io</code> : the bucket name where data is exposed  </li> <li><code>/personal-files</code> : the \"slug\" of the workspace where the file is located.</li> <li><code>/Document Office Sample</code> : path to the file inside the workspace</li> </ul> <p>Using Postman, you can use this URL to interact with this object. In order to be properly identified, you have to use the \"Authorization\" tab, choose AWS Signature and enter:</p> name value AccessKey you can copy and paste the Access token retrieved previously with OAuth2 SecretKey <code>gatewaysecret</code> (this is a fixed value). Service Name In the authorization tab &gt; Advanced &gt; Service Name add <code>s3</code> (see screenshot below) <p>For the AccessKey you can also use the Personal Access Token <code>./cells admin user token</code></p> <p></p> <p>Then using the appropriate HTTP method, you can:</p> <ul> <li>GET download this file</li> <li>PUT upload data inside this file</li> </ul>"},{"location":"developer-guide/introduction/consumers-examples/using-curl/","title":"Using cURL","text":""},{"location":"developer-guide/introduction/consumers-examples/using-curl/#oauth2-authentication-process","title":"OAuth2 Authentication Process","text":"<p>It is recommended to use the Authorization Flow Grant.</p> <p>The Authorization flow first requires you to request a temporary authorization code that you later exchange for an access token. As we create CSRF cookies to validate the flow, the code needs to be retrieved via a browser. In this document we are redirecting to a Pydio Cells page created to display an authorization code but you can also prefer to use your own page, as long as the URL is added to the list of callback urls allowed for this client.</p> <p></p>"},{"location":"developer-guide/introduction/consumers-examples/using-curl/#client-parameters","title":"Client Parameters","text":"<p>We assume here that you have created a dedicated Client inside Cells. Check Create OAuth2 Client for more info.</p> Parameter value Client Name cells-curl Client ID cells-curl Client Secret password Callback URLs http://mypydio.localhost:8080/oauth2/oob Grant Types Authorization Code Response Types Code, Token, IDToken <p>You can also use the default client(which is Public) see:</p> Parameter value Client Name <code>cells-client</code> Client ID <code>cells-client</code> Client Secret <code>&lt;empty&gt;</code> Callback URLs http://mypydio.localhost:8080/oauth2/oob Grant Types <code>authorization_code</code> Response Types <code>code</code>, <code>token</code>, <code>id_token</code> <p>You can also add, edit the default clients directly in your <code>pydio.json</code> file.</p>"},{"location":"developer-guide/introduction/consumers-examples/using-curl/#quick-bash-setup","title":"Quick bash setup","text":"<pre><code>DOMAIN=\"http(s)://yourpydio.com\"\nAUTHORIZATION_ENDPOINT=`curl --silent $DOMAIN/oidc/.well-known/openid-configuration | jq --raw-output '.authorization_endpoint'`\nTOKEN_ENDPOINT=`curl --silent $DOMAIN/oidc/.well-known/openid-configuration | jq --raw-output '.token_endpoint'`\n</code></pre>"},{"location":"developer-guide/introduction/consumers-examples/using-curl/#request-authorization","title":"Request Authorization","text":"<p>This will open a browser window if you have a default browser setup. If you don't, then echo and copy and paste this url in your preferred browser</p> <pre><code>open \"$AUTHORIZATION_ENDPOINT?response_type=code&amp;client_id=cells-curl&amp;cells_secret=password&amp;redirect_uri=$DOMAIN/oauth2/oob&amp;state=12345678\"\n</code></pre> <p>Copy the code generated in the clipboard</p>"},{"location":"developer-guide/introduction/consumers-examples/using-curl/#exchange-the-code-for-an-access-token","title":"Exchange the code for an access token","text":"<pre><code>CODE=&lt;paste here&gt;\nACCESS_TOKEN=`curl --silent -u \"cells-curl:password\" -X POST -d \"grant_type=authorization_code&amp;code=$CODE&amp;redirect_uri=$DOMAIN/oauth2/oob\" $TOKEN_ENDPOINT | jq --raw-output '.access_token'`\n</code></pre>"},{"location":"developer-guide/introduction/consumers-examples/using-curl/#api-call","title":"API Call","text":"<p>Below is a sample API call using the Authorization header with the Access Token you have previously retrieved.</p> <pre><code>curl -H \"Authorization: Bearer $ACCESS_TOKEN\" $DOMAIN/a/config/ctl\n</code></pre>"},{"location":"developer-guide/introduction/consumers-examples/using-curl/#s3-call","title":"S3 Call","text":"<p>Performing S3 calls using curl is quite complex, as the S3 Authorization mechanism requires specific signatures computation based on each request sent to S3. We suggest using a dedicated command line S3 tool instead, using the <code>ACCESS_TOKEN</code> as Api Key and the string <code>gatewaysecret</code> as password.</p>"},{"location":"developer-guide/clients-sdks/index/","title":"Clients / SDKs","text":"<p>During the full rewrite of the legacy Pydio8 (that used PHP) in the Go language, we put a strong focus on standards: all models have been described using protobuf and the API is fully described with a single swagger file.</p> <p>As a result, clients in various languages can be easily generated, we already maintain SDKs in Go, Javascript and Java.</p> <ul> <li>Cells Client</li> <li>Cells SDK for Go</li> <li>Cells SDK for JavaScript</li> <li>Cells SDK for Java</li> </ul>"},{"location":"developer-guide/clients-sdks/cells-client/","title":"Cells Client","text":"<p>Cells Client provides an easy way to communicate with a Pydio Cells server instance from the command line (or from automation scripts). It uses the Cells SDK for Go and the REST API under the hood.</p> <p>Cells Client a.k.a <code>cec</code> works like standard command line tools like ls, scp, etc.  Using the <code>cec</code> command, you can list, download and upload directly to your remote Cells server.</p> <p>The v4 version of this tools is meant to be used with a remote Cells server that is also at version v4+, please rather use cells-client v2 if your server is older (but you really should update your Cells server!).</p>"},{"location":"developer-guide/clients-sdks/cells-client/#usage","title":"Usage","text":"<p>Use the <code>cec --help</code> command to know about available commands. You can also find the complete documentation for each command on our website</p> <p>Below are a few interesting commands for manipulating files:</p> <ul> <li><code>cec ls</code>: List files and folders on the server, when no path is provided, it lists the workspaces that the current user can access.</li> <li><code>cec scp</code>: Upload/Download file to/from a remote server.</li> <li><code>cec cp</code>, <code>cec mv</code> and <code>cec rm</code>: Copy, move, rename and delete files within the server.</li> <li><code>cec mkdir</code>: Create a folder on the remote server</li> <li><code>cec clear</code>: Clear authentication tokens stored in your keychain.</li> </ul> <p>For your convenience, here are a few examples, assuming that your client is connected to a server (see Section below for connecting) :</p>"},{"location":"developer-guide/clients-sdks/cells-client/#1-listing-the-content-of-the-personal-files-workspace","title":"1/ Listing the content of the personal-files workspace","text":"<pre><code>$ cec ls personal-files\n+--------+--------------------------+\n|  TYPE  |           NAME           |\n+--------+--------------------------+\n| Folder | personal-files           |\n....\n| Folder | recycle_bin              |\n| File   | test_crud-1545206846.txt |\n| File   | test_file2.txt           |\n+--------+--------------------------+\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#2-showing-details-about-a-file","title":"2/ Showing details about a file","text":"<pre><code>$ cec ls personal-files/P5021040.jpg -d\nListing: 1 results for personal-files/P5021040.jpg\n+------+--------------------------------------+-----------------------------+--------+------------+\n| TYPE |                 UUID                 |            NAME             |  SIZE  |  MODIFIED  |\n+------+--------------------------------------+-----------------------------+--------+------------+\n| File | 98bbd86c-acb9-4b56-a6f3-837609155ba6 | personal-files/P5021040.jpg | 3.1 MB | 5 days ago |\n+------+--------------------------------------+-----------------------------+--------+------------+\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#3-uploading-a-file-to-server","title":"3/ Uploading a file to server","text":"<pre><code>$ cec scp ./README.md cells://common-files/\nCopying ./README.md to cells://common-files/\n ## Waiting for file to be indexed...\n ## File correctly indexed\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#4-download-a-file-from-server","title":"4/ Download a file from server","text":"<pre><code>$ cec scp cells://personal-files/IMG_9723.JPG ./\nCopying cells://personal-files/IMG_9723.JPG to ./\nWritten 822601 bytes to file\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#installation","title":"Installation","text":"<p>Cells Client is a single self-contained binary file and is easy to install.</p>"},{"location":"developer-guide/clients-sdks/cells-client/#1-download-cec","title":"1 - Download cec","text":"<p>Grab the built version for your corresponding amd64 architectures:</p> <ul> <li>Linux</li> <li>MacOS</li> <li>Windows</li> </ul>"},{"location":"developer-guide/clients-sdks/cells-client/#2-make-it-executable","title":"2 - Make it executable","text":"<p>Give execution permissions to the binary file, typically on Linux: <code>chmod u+x cec</code>.</p>"},{"location":"developer-guide/clients-sdks/cells-client/#3-add-it-to-the-path-optional","title":"3 - Add it to the PATH (optional)","text":"<p>Add the command to your <code>PATH</code> environment variable, to makes it easy to call the command from anywhere in the system. On Linux, you can for instance add a symlink to the binary location (replace below with correct path):</p> <pre><code>sudo ln -s /path/to/your/binary/cec /usr/local/bin/cec\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#4-check-for-correct-installation","title":"4 - Check for correct installation","text":"<p>To verify that <code>cec</code> is correctly installed, simply run for instance:</p> <pre><code>$ cec version\n# Should output something like below\nCells Client\n Version:       4.0.0\n Git commit:    f8ad2c9b23977e344da6fa241a297926b697d71c\n Timestamp:     2023-10-11T17:09:07Z\n OS/Arch:       linux/amd64\n Go version:    go1.21.3\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#connecting-to-cells","title":"Connecting To Cells","text":"<p>Cells Client requires an authenticated connection to the target Cells server. For a given user, read/write permissions are applied in the same way as what you see in the web interface.</p> <p>Once a valid user is available, there are 2 options:</p> <ul> <li>Go through an interactive configuration and persist necessary information on the client machine (Persistent Mode)</li> <li>Pass the necessary connection information at each call (Non Persistent Mode)</li> </ul>"},{"location":"developer-guide/clients-sdks/cells-client/#persistent-mode","title":"Persistent Mode","text":"<p>Connections can be configured and persisted locally on the client machine. As from version v2.2.0, you can configure multiple accounts on the client side and switch between them as necessary. Last used connection is persisted locally in the main configuration file and will be re-used the next time you call the <code>cec</code> command.</p> <p>To switch between accounts, simply call <code>cec config use</code>. </p> <p>Calling the <code>cec config add</code> command offers various authentication mechanisms. For persistent mode, we advise to use the default OAuth Authorization Code flow.</p> <pre><code>cec config add oauth\n</code></pre> <p>You will be guided through a few steps to configure and persist your connection:</p> <ul> <li>Enter your server address: the full URL to access your Cells instance, e.g.: <code>https://files.example.com/</code></li> <li>Choose OAuth2 process either by opening a browser or copy/pasting the URL in your browser to get a valid token</li> <li>Test and validate the connection.</li> </ul> <p>The token is saved locally and will be refreshed automatically as required. If a keyring mechanism is available on the machine, it is used to store sensitive information. You can verify this with the following command:</p> <pre><code>cec config check-keyring \n</code></pre> <p>Supported keyrings are MacOSX Keychain, Linux DBUS and Windows Credential Manager API.</p>"},{"location":"developer-guide/clients-sdks/cells-client/#troubleshooting","title":"Troubleshooting","text":"<p>When launching the Cells Client, following error is thrown:</p> <pre><code>2022/10/14 17:33:07 unexpected error during initialisation phase: exec: \"dbus-launch\": executable file not found in $PATH\n</code></pre> <p>This mostly happens when Cells Client cannot find the keyring it expects to store credentials. Under Debian/Ubuntu Linux, you can install necessary software with (even if you do not use GNOME):</p> <pre><code>sudo apt install dbus-launch libpam-gnome-keyring gnome-keyring-pkcs11\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#non-persistent-mode","title":"Non Persistent Mode","text":"<p>This mode can be useful to use the Cells Client in a CI/CD pipe or via cron jobs. In such case, we strongly advise you to create a Personal Access Token on the server and use this.</p> <p>To create a token that is valid for user <code>robot</code> for 90 days, log via SSH into your server as <code>pydio</code> (a.k.a. as the user that runs the <code>cells</code> service) and execute:</p> <pre><code>$ cells admin user token -u robot -e 90d\n\u2714 This token for robot will expire on Tuesday, 01-Jun-21 16:46:40 CEST.\n\u2714 d-_-x3N8jg9VYegwf5KpKFTlYnQIzCrvbXHzS24uB7k.mibFBN2bGy3TUVzJvcrnUlI9UuM3-kzB1OekrPLLd4U\n\u26a0 Make sure to secure it as it grants access to the user resources!\n</code></pre> <p>Note: if you have the Enterprise Edition, you can also manage Personal Access Token via the web GUI:</p> <ul> <li>Go to <code>Cells Admin Console &gt;&gt; Identity Management &gt;&gt; People</code></li> <li>Edit the user you want to create a token for</li> <li>Go to the <code>Personal Access Token</code> page.</li> </ul> <p>Then use environment variables (or the corresponding command flags) to pass connection information:</p> <pre><code>export CEC_URL=https://files.example.com\nexport CEC_TOKEN=d-_-x3N8jg9VYegwf5KpKFTlYnQIzCrvbXHzS24uB7k.mibFBN2bGy3TUVzJvcrnUlI9UuM3-kzB1OekrPLLd4U\n</code></pre> <p>You can now directly talk to your server, for instance:</p> <pre><code>cec ls common-files \n</code></pre> <p>Note that environment variables take the precedence as soon as you have the <code>CEC_URL</code> variable defined. In such case please insure you have the necessary variables defined depending on your target authentication mode. </p>"},{"location":"developer-guide/clients-sdks/cells-client/#command-completion","title":"Command Completion","text":"<p>Cells Client provides a handy feature that provides completion on commands and paths; both on local and remote machines.</p> <p>NOTE: you must add <code>cec</code> to you local <code>PATH</code> if you want to configure the completion helper (see above).</p>"},{"location":"developer-guide/clients-sdks/cells-client/#bash-completion","title":"Bash completion","text":"<p>To enable this feature, you must have <code>bash-completion</code> third party add-on installed on your workstation.</p> <pre><code># on Debian / Ubuntu\nsudo apt install bash-completion\n\n# on RHEL / Rocky Linux\nsudo dnf install bash-completion\n\n# on MacOS (make sure to follow the instructions displayed by Homebrew)\nbrew install bash-completion\n</code></pre> <p>MacOS latest release changed the default shell to ZSH.</p> <p>Then, to add the completion in a persistent manner:</p> <pre><code># Linux users\ncec completion bash | sudo tee /etc/bash_completion.d/cec\n# MacOS users \ncec completion bash | sudo tee /usr/local/etc/bash_completion.d/cec\n</code></pre> <p>You can also only source the file in current session, the feature will be gone when you start a new shell.</p> <pre><code>source &lt;(cec completion bash)\n</code></pre> <p>Note: if you want to use completion for remote paths while using <code>scp</code> sub command, you have to prefix the remote path with <code>cells//</code> rather than <code>cells://</code>; that is to omit the column character before the double slash. Typically:</p> <pre><code>cec scp ./README.md cells//com &lt;press the tab key&gt;\n# Completes the path to\ncec scp ./README.md cells//common-files/\n...\n</code></pre> <p>Note: when you update the Cells Client, you also have to update the completion file, typically on Linux machines:</p> <pre><code>cec completion bash | sudo tee /etc/bash_completion.d/cec\nsource /etc/bash_completion.d/cec\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-client/#build-from-source","title":"Build from source","text":"<p>If you rather want to directly compile the source code on your workstation, you require:</p> <ul> <li>Go language 1.20 or higher (tested with latest 1.20 &amp; 1.21), with a correctly configured Go toolchain,</li> <li>The necessary build utils (typically <code>make</code>, <code>gcc</code>, ...)</li> <li>A git client</li> </ul> <p>You can then retrieve the source code and use the <code>Makefile</code> to compile a binary for your OS:</p> <pre><code>git clone https://github.com/pydio/cells-client.git\ncd ./cells-client\nmake dev\n</code></pre> <p>Cells Client uses the Go Modules mechanism to manage dependencies: you can checkout the code anywhere in your local machine, it does not have to be within your <code>GOPATH</code>.</p>"},{"location":"developer-guide/clients-sdks/cells-client/#license","title":"License","text":"<p>This project is licensed under the Apache V2 License - see the LICENSE file for details.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-go/","title":"Cells SDK for Go","text":"<p>We provide and maintain a Go SDK that provides a convenient way to implement Go clients for Pydio Cells. It is hosted on Github at https://github.com/pydio/cells-sdk-go.</p> <p>The repository also contains a bunch of basic examples that use the SDK to perform simple actions on a running Pydio Cells server instance.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-go/#generation","title":"Generation","text":"<p>The SDK is generated by the go-swagger project. For the record, we use two \u201ctricks\u201d during the SDK generation process:</p> <ul> <li>Use <code>--skip-validation</code> flag to avoid circular issues with object that make reference to same type of objects, typically activities and jobs. See issue #957 in go-swagger repository for more details.</li> <li>Patch all default json tags that are generated for all fields with type <code>int64</code> to workaround the int64 serialisation issue between protobuf and swagger.</li> </ul>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-javascript/","title":"Cells SDK for JavaScript","text":"<p>The Javascript SDK for communicating with Cells server is hosted on https://github.com/pydio/cells-sdk-js and published on NPM as the cells-sdk module.</p> <p>This SDK is generated automatically using <code>swagger-codegen</code> tool from the OpenAPI specification of Cells Rest API. It does not rely on any framework and uses superagent internally for performing HTTP requests.</p> <p>Since Cells v3, it is used internally by the official Pydio Cells web interface (written in React).</p> <p>Please note that this SDK only provides tooling for connecting to REST APIs (see below). If you wish to transfer actual data to/from files, you have to use the javascript AWS S3 library to perform PutObject/GetObject (or Multipart uploads) requests on Cells S3 Gateway.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-javascript/#usage","title":"Usage","text":""},{"location":"developer-guide/clients-sdks/cells-sdk-for-javascript/#installation","title":"Installation","text":"<p>Use <code>npm install --save cells-sdk</code> to append the latest version to your package.json.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-javascript/#authentication","title":"Authentication","text":"<p>Authentication is passed via the <code>Authorization: Bearer $TOKEN</code> header, where <code>$TOKEN</code> can be a Personal Access Token, or retrieved dynamically by the frontend login process.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-javascript/#endpoints","title":"Endpoints","text":"<p>All APIs described in Cells official documentation are supported. Below are listed the main services available :</p> <ul> <li>ACLService</li> <li>ActivityService</li> <li>AdminTreeService</li> <li>ConfigService</li> <li>FrontendService</li> <li>GraphService</li> <li>InstallService</li> <li>JobsService</li> <li>LogService</li> <li>MailerService</li> <li>MetaService</li> <li>PolicyService</li> <li>RoleService</li> <li>SearchService</li> <li>ShareService</li> <li>TemplatesService</li> <li>TokenService</li> <li>TreeService</li> <li>UpdateService</li> <li>UserMetaService</li> <li>UserService</li> <li>WorkspaceService</li> </ul> <p>Please refer to the docs for more information.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-javascript/#example","title":"Example","text":"<p>A sample application is available in example/app.js</p> <p>Basic tree listing looks like :</p> <pre><code>    var api = new TreeServiceApi(client);\n    var request = new RestGetBulkMetaRequest();\n    request.NodePaths = ['/folder/*'];\n    api.bulkStatNodes(request).then(res =&gt; {\n        // Read array res.Nodes with all nodes\n    });\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-javascript/#enterprise-sdk","title":"Enterprise SDK","text":"<p>Cells Enterprise specific APIs can be accessed using its counterpart Cells Enterprise SDK for Javascript.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/","title":"Cells SDK for Java","text":"<p>The Pydio Cells Java SDK wraps a standard OpenAPI client to communicate with a Pydio Cells server via its REST API. It is available at https://github.com/pydio/cells-sdk-java.</p> <p>The client classes are generated with Swagger for Cells 3.x release train and we provide a transport layer to ease implementation of client application in Java.</p> <p>This library also provides a Java implementation of a simplified client that can communicate with both a Cells and a legacy Pydio 8 server. We rely on this implementation to develop the Cells Client for Android.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#build","title":"Build","text":"<p>We use gradle as a build and publication tool and we ship the wrapper with the code, simply use <code>./gradlew &lt;your command&gt;</code> from within the root folder of the repository.</p> <p>Main version of the code is maintained for the time being in the main <code>build.gradle</code> file.</p> <p>Useful commands:</p> <pre><code># Build the project\n./gradlew build\n\n# Publish to local maven repo\n./gradlew publishToMavenLocal\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#remote-server","title":"Remote server","text":"<p>A remote server is completely defined by a ServerURL. It wraps the validated URL of a remote server and is also in charge of managing TLS. Typically, it holds a skipVerify flag to skip all TLS layers, that is useful if you are using a sel-signed certificate.</p> <p>A successfull call to the <code>ServerURL.ping()</code> method insure we perform HTTP requests to this address, with no SSL issue and have a valid ServerURL.</p> <p>Given a valid ServerURL, the ServerFactory:</p> <ul> <li>checks various well-known endpoints to determinate the server type (P8 or Cells)</li> <li>instantiates the correct implementation of the server.</li> </ul>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#authentication","title":"Authentication","text":"<p>Authentication is managed at the transport layer. When you call <code>transport.getToken()</code>:</p> <ul> <li>a token is retrieved from its internal cache</li> <li>it is refreshed if necessary</li> <li>if no token have been found, the transport looks for persisted credentials and tries to get a token.</li> </ul> <p>To retrieve a transport, you must first register an account via the ServerFactory by providing a valid ServerURL and credentials, that can be:</p> <ul> <li>JWTCredentials: wraps a JWT Token</li> <li>LegacyPasswordCredentials: wraps a valid password of a Cells user (warning: this is dangerous)</li> <li>P8Credentials: wraps a valid password and optionally a user entered captcha</li> </ul>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#file-transfer","title":"File Transfer","text":"<p>Pydio Cells relies on the S3 protocol to effectively transfer files. To ease dependency management, we do not provide implementation of the necessary S3Client at this layer, only an interface.</p> <p>Thus, you can instantiate a Client from within the SDK-Java but it will not be able to get the files themselves, only the metadata.</p> <p>To see some sample code on how to manage this, please refer to the cells-java-client or the cells-android-client repository depending on your setup.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#example","title":"Example","text":"<pre><code>TestClientFactory factory = new TestClientFactory();\nServerURL serverURL = ServerURLImpl.fromAddress(\"https://localhost:8080\", true);\nCredentials credentials = new LegacyPasswordCredentials(\"user\", \"password\");\n\nString accountID = factory.registerAccountCredentials(serverURL, credentials);\nTransport transport = factory.getTransport(accountID);\n\n/* Use the simplified client*/\n\nClient client = factory.getClient(transport);\nclient.mkdir(\"common-files\", \"/parent\", \"child\");\n\n\n/* Directly use the generated API (Cells only) */\n\n// Authentication is auto-magically handled by the transport \n// as long as it has been previously registered\nApiClient apiClient = ((CellsTransport) transport).authenticatedClient();\nTreeServiceApi api = new TreeServiceApi(apiClient);\n// Build the request\nRestGetBulkMetaRequest request = new RestGetBulkMetaRequest();\nrequest.addNodePathsItem(\"common-files/parent/child\");\nrequest.setAllMetaProviders(true);\n// Performs the request and handle result\nRestBulkMetaResponse response = api.bulkStatNodes(request);\nTreeNode node = response.getNodes().get(0); \n</code></pre> <p>Refer to the included tests for more examples.</p>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#testing","title":"Testing","text":"<p>At this layer, we only provide basic unit tests for the few classes that need it most, typically to insure encoding / decoding of the StateID is OK.</p> <p>We have also implemented basic integration tests that need a target server. You can configure the various <code>src/test/resources/accounts</code> property files to point toward your test instances. Then simply run:</p> <pre><code>./gradlew test -Dtest.profile=integration\n</code></pre>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#references","title":"References","text":"<p>A list of random resources on the WWW that have helped along the way and are kept here for reference.</p> <ul> <li>A must read to understand how we manage authentication when target remote server is a Pydio Cells instance.</li> </ul>"},{"location":"developer-guide/clients-sdks/cells-sdk-for-java/#legacy-note","title":"Legacy note","text":"<p>This repository has been forked from this legacy repo in Pydio's code base.</p>"},{"location":"developer-guide/rest-api/index/","title":"Rest API","text":"<ul> <li>ACL Service</li> <li>Activity Service</li> <li>Admin Tree Service</li> <li>Config Service</li> <li>Frontend Service</li> <li>Graph Service</li> <li>Install Service</li> <li>Jobs Service</li> <li>Log Service</li> <li>Mailer Service</li> <li>Meta Service</li> <li>Policy Service</li> <li>Role Service</li> <li>Search Service</li> <li>Share Service</li> <li>Templates Service</li> <li>Token Service</li> <li>Tree Service</li> <li>Update Service</li> <li>UserMeta Service</li> <li>Users Service</li> <li>Workspace Service</li> <li>[Enterprise] Audit Service</li> <li>[Enterprise] Config Service</li> <li>[Enterprise] Front Service</li> <li>[Enterprise] License Service</li> <li>[Enterprise] Log Service</li> <li>[Enterprise] Policy Service</li> <li>[Enterprise] Scheduler Service</li> <li>[Enterprise] Templates Service</li> <li>[Enterprise] Token Service</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/acl-service/index/","title":"ACL Service","text":"<p>This service provides all endpoints for CRUD-ing the ACLs.</p> <ul> <li>POST /a/acl</li> <li>POST /a/acl/bulk/delete</li> <li>PUT /a/acl</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/acl-service/post-a-acl/","title":"POST /a/acl","text":"<p>Search Acls  </p>"},{"location":"developer-guide/rest-api/acl-service/post-a-acl/#body-parameters","title":"Body Parameters","text":"Name Description Type Required CountOnly Return counts only, no actual results boolean GroupBy Group results integer Limit Limit the number of results string Offset Start listing at a given position string Operation Single queries will be combined using this operation AND or OR logic #/definitions/serviceOperationType Queries Atomic queries that will be combined using the OperationType (AND or OR) array"},{"location":"developer-guide/rest-api/acl-service/post-a-acl/#body-example","title":"Body Example","text":"<pre><code>{\n  \"CountOnly\": true,\n  \"GroupBy\": 10,\n  \"Limit\": \"string\",\n  \"Offset\": \"string\",\n  \"Operation\": \"string\",\n  \"Queries\": [\n    {\n      \"Actions\": [\n        {\n          \"Name\": \"string\",\n          \"Value\": \"string\"\n        }\n      ],\n      \"NodeIDs\": [\n        \"string\"\n      ],\n      \"RoleIDs\": [\n        \"string\"\n      ],\n      \"WorkspaceIDs\": [\n        \"string\"\n      ],\n      \"not\": true\n    }\n  ]\n}\n</code></pre>"},{"location":"developer-guide/rest-api/acl-service/post-a-acl/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restACLCollection</p> <pre><code>{\n  \"ACLs\": [\n    {\n      \"Action\": {\n        \"Name\": \"string\",\n        \"Value\": \"string\"\n      },\n      \"ID\": \"string\",\n      \"NodeID\": \"string\",\n      \"RoleID\": \"string\",\n      \"WorkspaceID\": \"string\"\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/acl-service/post-a-acl-bulk-delete/","title":"POST /a/acl/bulk/delete","text":"<p>Delete one or more ACLs  </p>"},{"location":"developer-guide/rest-api/acl-service/post-a-acl-bulk-delete/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Action Action on which this ACL provides control #/definitions/idmACLAction ID Unique ID of this ACL string NodeID Associated Node string RoleID Associated Role string WorkspaceID Associated Workspace string"},{"location":"developer-guide/rest-api/acl-service/post-a-acl-bulk-delete/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Action\": {\n    \"Name\": \"string\",\n    \"Value\": \"string\"\n  },\n  \"ID\": \"string\",\n  \"NodeID\": \"string\",\n  \"RoleID\": \"string\",\n  \"WorkspaceID\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/acl-service/post-a-acl-bulk-delete/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteResponse</p> <pre><code>{\n  \"NumRows\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/acl-service/put-a-acl/","title":"PUT /a/acl","text":"<p>Store an ACL  </p>"},{"location":"developer-guide/rest-api/acl-service/put-a-acl/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Action Action on which this ACL provides control #/definitions/idmACLAction ID Unique ID of this ACL string NodeID Associated Node string RoleID Associated Role string WorkspaceID Associated Workspace string"},{"location":"developer-guide/rest-api/acl-service/put-a-acl/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Action\": {\n    \"Name\": \"string\",\n    \"Value\": \"string\"\n  },\n  \"ID\": \"string\",\n  \"NodeID\": \"string\",\n  \"RoleID\": \"string\",\n  \"WorkspaceID\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/acl-service/put-a-acl/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmACL</p> <pre><code>{\n  \"Action\": {\n    \"Name\": \"string\",\n    \"Value\": \"string\"\n  },\n  \"ID\": \"string\",\n  \"NodeID\": \"string\",\n  \"RoleID\": \"string\",\n  \"WorkspaceID\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/activity-service/index/","title":"Activity Service","text":"<p>This service provides listing to the AS2 feeds for various objects (users activities, user alerts, files/folders activities, etc...)</p> <ul> <li>POST /a/activity/stream</li> <li>POST /a/activity/subscribe</li> <li>POST /a/activity/subscriptions</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-stream/","title":"POST /a/activity/stream","text":"<p>Load the the feeds of the currently logged user  </p>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-stream/#body-parameters","title":"Body Parameters","text":"Name Description Type Required AsDigest Compute a digest of all unread activities boolean BoxName Target inbox or outbox for the given object string Context Define the context of the stream #/definitions/activityStreamContext ContextData Value for the context (e.g. User Id, Node Id) string Language string Limit Limit the number of results string Offset Start listing at a given position string PointOfView Provide context for building the human-readable strings of each activity #/definitions/activitySummaryPointOfView StreamFilter Json-encoded filter string UnreadCountOnly Count last activities that were not loaded yet boolean"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-stream/#body-example","title":"Body Example","text":"<pre><code>{\n  \"AsDigest\": true,\n  \"BoxName\": \"string\",\n  \"Context\": \"string\",\n  \"ContextData\": \"string\",\n  \"Language\": \"string\",\n  \"Limit\": \"string\",\n  \"Offset\": \"string\",\n  \"PointOfView\": \"string\",\n  \"StreamFilter\": \"string\",\n  \"UnreadCountOnly\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-stream/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/activityObject</p> <pre><code>{\n  \"@context\": \"string\",\n  \"accuracy\": \"[Unknown Type number]\",\n  \"actor\": \"[Recursive structure]\",\n  \"altitude\": \"[Unknown Type number]\",\n  \"anyOf\": \"[Recursive structure]\",\n  \"attachment\": \"[Recursive structure]\",\n  \"attributedTo\": \"[Recursive structure]\",\n  \"audience\": \"[Recursive structure]\",\n  \"bcc\": \"[Recursive structure]\",\n  \"bto\": \"[Recursive structure]\",\n  \"cc\": \"[Recursive structure]\",\n  \"closed\": \"string\",\n  \"content\": \"[Recursive structure]\",\n  \"context\": \"[Recursive structure]\",\n  \"current\": \"[Recursive structure]\",\n  \"deleted\": \"string\",\n  \"duration\": \"string\",\n  \"endTime\": \"string\",\n  \"first\": \"[Recursive structure]\",\n  \"formerType\": \"string\",\n  \"generator\": \"[Recursive structure]\",\n  \"height\": 10,\n  \"href\": \"string\",\n  \"hreflang\": \"string\",\n  \"icon\": \"[Recursive structure]\",\n  \"id\": \"string\",\n  \"image\": \"[Recursive structure]\",\n  \"inReplyTo\": \"[Recursive structure]\",\n  \"instrument\": \"[Recursive structure]\",\n  \"items\": [\n    \"[Recursive structure]\"\n  ],\n  \"last\": \"[Recursive structure]\",\n  \"latitude\": \"[Unknown Type number]\",\n  \"location\": \"[Recursive structure]\",\n  \"longitude\": \"[Unknown Type number]\",\n  \"markdown\": \"string\",\n  \"mediaType\": \"string\",\n  \"name\": \"string\",\n  \"next\": \"[Recursive structure]\",\n  \"object\": \"[Recursive structure]\",\n  \"oneOf\": \"[Recursive structure]\",\n  \"origin\": \"[Recursive structure]\",\n  \"partOf\": \"[Recursive structure]\",\n  \"prev\": \"[Recursive structure]\",\n  \"preview\": \"[Recursive structure]\",\n  \"published\": \"string\",\n  \"radius\": \"[Unknown Type number]\",\n  \"rel\": \"string\",\n  \"relationship\": \"[Recursive structure]\",\n  \"replies\": \"[Recursive structure]\",\n  \"result\": \"[Recursive structure]\",\n  \"startTime\": \"string\",\n  \"subject\": \"[Recursive structure]\",\n  \"summary\": \"string\",\n  \"tag\": \"[Recursive structure]\",\n  \"target\": \"[Recursive structure]\",\n  \"to\": \"[Recursive structure]\",\n  \"totalItems\": 10,\n  \"type\": \"string\",\n  \"units\": \"string\",\n  \"updated\": \"string\",\n  \"url\": \"[Recursive structure]\",\n  \"width\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscribe/","title":"POST /a/activity/subscribe","text":"<p>Manage subscriptions to other users/nodes feeds  </p>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscribe/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Events List of events to listen to array ObjectId If of the owner string ObjectType Type of owner #/definitions/activityOwnerType UserId Id of the user for this subscription string"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscribe/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Events\": [\n    \"string\"\n  ],\n  \"ObjectId\": \"string\",\n  \"ObjectType\": \"string\",\n  \"UserId\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscribe/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/activitySubscription</p> <pre><code>{\n  \"Events\": [\n    \"string\"\n  ],\n  \"ObjectId\": \"string\",\n  \"ObjectType\": \"string\",\n  \"UserId\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscriptions/","title":"POST /a/activity/subscriptions","text":"<p>Load subscriptions to other users/nodes feeds  </p>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscriptions/#body-parameters","title":"Body Parameters","text":"Name Description Type Required ObjectIds Filter by object Ids array ObjectTypes Filter by type of objects array UserIds List of UserIds for which we want to list array"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscriptions/#body-example","title":"Body Example","text":"<pre><code>{\n  \"ObjectIds\": [\n    \"string\"\n  ],\n  \"ObjectTypes\": [\n    \"string\"\n  ],\n  \"UserIds\": [\n    \"string\"\n  ]\n}\n</code></pre>"},{"location":"developer-guide/rest-api/activity-service/post-a-activity-subscriptions/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restSubscriptionsCollection</p> <pre><code>{\n  \"subscriptions\": [\n    {\n      \"Events\": [\n        \"string\"\n      ],\n      \"ObjectId\": \"string\",\n      \"ObjectType\": \"string\",\n      \"UserId\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/admin-tree-service/index/","title":"Admin Tree Service","text":"<p>This service is an entry point for admin operations in the internal tree. Unlike the standard 'user' tree operations, that must be always prefixed with a workspace slug, admins can list all data starting from the root of all datasources.</p> <ul> <li>POST /a/tree/admin/list</li> <li>POST /a/tree/admin/stat</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-list/","title":"POST /a/tree/admin/list","text":"<p>List files and folders starting at the root (first level lists the datasources)  </p>"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-list/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Ancestors Send back a list of parent nodes, until the root, including the original node boolean FilterType Filter by node type (LEAF / COLLECTION) #/definitions/treeNodeType Limit Limit the number of results string Node Main node used as a parent #/definitions/treeNode Offset Start listing at a given position string Recursive Send back all children of the node boolean SortDirDesc Sort descending (otherwise ascending) boolean SortField Remote Sort on specific field string StatFlags Generic Details Flags array WithCommits Sends the list of commits for a given node (Deprecated) boolean WithVersions Sends the list of versions for a given node boolean"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-list/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Ancestors\": true,\n  \"FilterType\": \"string\",\n  \"Limit\": \"string\",\n  \"Node\": {\n    \"Path\": \"string\"\n  },\n  \"Offset\": \"string\",\n  \"Recursive\": true,\n  \"SortDirDesc\": true,\n  \"SortField\": \"string\",\n  \"StatFlags\": [\n    10\n  ],\n  \"WithCommits\": true,\n  \"WithVersions\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-list/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restNodesCollection</p> <pre><code>{\n  \"Children\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Parent\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-stat/","title":"POST /a/tree/admin/stat","text":"<p>Read a node information inside the admin tree  </p>"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-stat/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Node Input node #/definitions/treeNode ObjectStats Used internally for the router ReadNode request, stat the datasource instead of index boolean StatFlags Generic Details Flags array WithCommits Gather commit information - This is Deprecated boolean WithExtendedStats Get extended stats - For folders, computes ChildrenCount - Depreacted, use StatFlags instead boolean"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-stat/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Node\": {\n    \"Path\": \"string\"\n  },\n  \"ObjectStats\": true,\n  \"StatFlags\": [\n    10\n  ],\n  \"WithCommits\": true,\n  \"WithExtendedStats\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/admin-tree-service/post-a-tree-admin-stat/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/treeReadNodeResponse</p> <pre><code>{\n  \"Node\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  },\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-audit-service/index/","title":"Index","text":"<p>This service provides endpoints for auditing shares across the whole application.</p> <ul> <li>GET /a/audit/data/reports</li> <li>POST /a/audit/data/shares</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-audit-service/get-a-audit-data-reports/","title":"GET /a/audit/data/reports","text":"<p>[Enterprise Only] Audit all shares across the application  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-audit-service/get-a-audit-data-reports/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/reportsListReportsResponse</p> <pre><code>{\n  \"ReportDates\": [\n    10\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-audit-service/post-a-audit-data-shares/","title":"POST /a/audit/data/shares","text":"<p>[Enterprise Only] Audit all shares across the application  </p>"},{"location":"developer-guide/rest-api/enterprise-audit-service/post-a-audit-data-shares/#body-parameters","title":"Body Parameters","text":"Name Description Type Required LastUpdatedBefore integer LastUpdatedSince integer Limit integer NodeSizeMin integer NodeType #/definitions/treeNodeType Offset Listing options integer OwnerUUID string ReportDate integer RolesReadAND boolean RolesReadUUIDs array RootPath Filter by root path string ShareType #/definitions/reportsSharedResourceShareType UsersReadCountMax integer UsersReadCountMin integer"},{"location":"developer-guide/rest-api/enterprise-audit-service/post-a-audit-data-shares/#body-example","title":"Body Example","text":"<pre><code>{\n  \"LastUpdatedBefore\": 10,\n  \"LastUpdatedSince\": 10,\n  \"Limit\": 10,\n  \"NodeSizeMin\": 10,\n  \"NodeType\": \"string\",\n  \"Offset\": 10,\n  \"OwnerUUID\": \"string\",\n  \"ReportDate\": 10,\n  \"RolesReadAND\": true,\n  \"RolesReadUUIDs\": [\n    \"string\"\n  ],\n  \"RootPath\": \"string\",\n  \"ShareType\": \"string\",\n  \"UsersReadCountMax\": 10,\n  \"UsersReadCountMin\": 10\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-audit-service/post-a-audit-data-shares/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/reportsSharedResourcesResponse</p> <pre><code>{\n  \"Facets\": {},\n  \"Limit\": 10,\n  \"Offset\": 10,\n  \"Resources\": [\n    {\n      \"ChildrenSharedResources\": 10,\n      \"Node\": {\n        \"AppearsIn\": [\n          {\n            \"Path\": \"string\",\n            \"WsLabel\": \"string\",\n            \"WsScope\": \"string\",\n            \"WsSlug\": \"string\",\n            \"WsUuid\": \"string\"\n          }\n        ],\n        \"Commits\": [\n          {\n            \"Data\": \"string\",\n            \"Description\": \"string\",\n            \"Event\": {\n              \"Metadata\": {},\n              \"Optimistic\": true,\n              \"Silent\": true,\n              \"Source\": \"[Recursive structure]\",\n              \"Target\": \"[Recursive structure]\",\n              \"Type\": \"string\"\n            },\n            \"Location\": \"[Recursive structure]\",\n            \"MTime\": \"string\",\n            \"OwnerUuid\": \"string\",\n            \"Size\": \"string\",\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"Etag\": \"string\",\n        \"MTime\": \"string\",\n        \"MetaStore\": {},\n        \"Mode\": 10,\n        \"Path\": \"string\",\n        \"Size\": \"string\",\n        \"Type\": \"string\",\n        \"Uuid\": \"string\"\n      },\n      \"ReportDate\": 10,\n      \"Workspaces\": [\n        {\n          \"BrokenLink\": true,\n          \"BrokenWorkspace\": true,\n          \"OwnerUser\": {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          },\n          \"RolesRead\": [\n            {\n              \"AutoApplies\": [\n                \"string\"\n              ],\n              \"ForceOverride\": true,\n              \"GroupRole\": true,\n              \"IsTeam\": true,\n              \"Label\": \"string\",\n              \"LastUpdated\": 10,\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"UserRole\": true,\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"RolesWrite\": [\n            {\n              \"AutoApplies\": [\n                \"string\"\n              ],\n              \"ForceOverride\": true,\n              \"GroupRole\": true,\n              \"IsTeam\": true,\n              \"Label\": \"string\",\n              \"LastUpdated\": 10,\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"UserRole\": true,\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"UsersReadCount\": 10,\n          \"UsersWriteCount\": 10,\n          \"Workspace\": {\n            \"Attributes\": \"string\",\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"LastUpdated\": 10,\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"RootNodes\": {},\n            \"RootUUIDs\": [\n              \"string\"\n            ],\n            \"Scope\": \"string\",\n            \"Slug\": \"string\",\n            \"UUID\": \"string\"\n          }\n        }\n      ]\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/index/","title":"Config Service","text":"<p>This service provides mostly admin endpoint for listing/managing the internal configuration. Mostly mapped to the installation pydio.json file.</p> <ul> <li>DELETE /a/config/datasource/{Name}</li> <li>GET /a/config/ctl</li> <li>GET /a/config/datasource</li> <li>GET /a/config/datasource/{Name}</li> <li>GET /a/config/discovery</li> <li>GET /a/config/discovery/forms/{ServiceName}</li> <li>GET /a/config/discovery/openapi</li> <li>GET /a/config/peers</li> <li>GET /a/config/scheduler/actions</li> <li>GET /a/config/scheduler/actions/{ActionName}</li> <li>GET /a/config/sites/{Filter}</li> <li>GET /a/config/versioning</li> <li>GET /a/config/versioning/{Uuid}</li> <li>GET /a/config/virtualnodes</li> <li>GET /a/config/{FullPath}</li> <li>POST /a/config/buckets</li> <li>POST /a/config/ctl</li> <li>POST /a/config/datasource/{Name}</li> <li>POST /a/config/encryption/create</li> <li>POST /a/config/encryption/delete</li> <li>POST /a/config/encryption/export</li> <li>POST /a/config/encryption/list</li> <li>POST /a/config/peers/{PeerAddress}</li> <li>POST /a/config/processes</li> <li>POST /a/config/registry</li> <li>PUT /a/config/buckets/{BucketName}</li> <li>PUT /a/config/encryption/import</li> <li>PUT /a/config/peers/{PeerAddress}</li> <li>PUT /a/config/{FullPath}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/delete-a-config-datasource-name/","title":"DELETE /a/config/datasource/{Name}","text":"<p>Delete a datasource  </p>"},{"location":"developer-guide/rest-api/config-service/delete-a-config-datasource-name/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>Name (string, required) Name of the data source (max length 34)</p> </li> <li> <p>Disabled (boolean) Whether this data source is disabled or running</p> </li> <li> <p>StorageType (string) Type of underlying storage (LOCAL, S3, AZURE, GCS)</p> </li> <li> <p>ObjectsServiceName (string) Corresponding objects service name (underlying s3 service)</p> </li> <li> <p>ObjectsHost (string) Corresponding objects service host</p> </li> <li> <p>ObjectsPort (integer) Corresponding objects service port</p> </li> <li> <p>ObjectsSecure (boolean) Corresponding objects service connection type</p> </li> <li> <p>ObjectsBucket (string) Corresponding objects service bucket</p> </li> <li> <p>ObjectsBaseFolder (string) Corresponding objects service base folder inside the bucket</p> </li> <li> <p>ApiKey (string) Corresponding objects service api key</p> </li> <li> <p>ApiSecret (string) Corresponding objects service api secret</p> </li> <li> <p>PeerAddress (string) Peer address of the data source</p> </li> <li> <p>Watch (boolean) Not implemented, whether to watch for underlying changes on the FS</p> </li> <li> <p>FlatStorage (boolean) Store data in flat format (object-storage like)</p> </li> <li> <p>SkipSyncOnRestart (boolean) Do not trigger resync at start</p> </li> <li> <p>EncryptionMode (string) Type of encryption applied before sending data to storage</p> </li> <li> <p>EncryptionKey (string) Encryption key used for encrypting data</p> </li> <li> <p>VersioningPolicyName (string) Versioning policy describes how files are kept in the versioning queue</p> </li> <li> <p>CreationDate (integer) Data Source creation date</p> </li> <li> <p>LastSynchronizationDate (integer) Data Source last synchronization date</p> </li> </ul>"},{"location":"developer-guide/rest-api/config-service/delete-a-config-datasource-name/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteDataSourceResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-ctl/","title":"GET /a/config/ctl","text":"<p>List all services and their status  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-ctl/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restServiceCollection</p> <pre><code>{\n  \"Services\": [\n    {\n      \"Controllable\": true,\n      \"Description\": \"string\",\n      \"Metadata\": {},\n      \"Name\": \"string\",\n      \"RunningPeers\": [\n        {\n          \"Address\": \"string\",\n          \"Id\": \"string\",\n          \"Metadata\": {},\n          \"Port\": 10\n        }\n      ],\n      \"Status\": \"string\",\n      \"Tag\": \"string\",\n      \"Version\": \"string\"\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-datasource/","title":"GET /a/config/datasource","text":"<p>List all defined datasources  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-datasource/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDataSourceCollection</p> <pre><code>{\n  \"DataSources\": [\n    {\n      \"ApiKey\": \"string\",\n      \"ApiSecret\": \"string\",\n      \"CreationDate\": 10,\n      \"Disabled\": true,\n      \"EncryptionKey\": \"string\",\n      \"EncryptionMode\": \"string\",\n      \"FlatStorage\": true,\n      \"LastSynchronizationDate\": 10,\n      \"Name\": \"string\",\n      \"ObjectsBaseFolder\": \"string\",\n      \"ObjectsBucket\": \"string\",\n      \"ObjectsHost\": \"string\",\n      \"ObjectsPort\": 10,\n      \"ObjectsSecure\": true,\n      \"ObjectsServiceName\": \"string\",\n      \"PeerAddress\": \"string\",\n      \"SkipSyncOnRestart\": true,\n      \"StorageConfiguration\": {},\n      \"StorageType\": \"string\",\n      \"VersioningPolicyName\": \"string\",\n      \"Watch\": true\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-datasource-name/","title":"GET /a/config/datasource/{Name}","text":"<p>Load datasource information  </p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-datasource-name/#path-parameters","title":"Path Parameters","text":"<ul> <li>Name (string, required) Name of the data source (max length 34)</li> </ul>"},{"location":"developer-guide/rest-api/config-service/get-a-config-datasource-name/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/objectDataSource</p> <pre><code>{\n  \"ApiKey\": \"string\",\n  \"ApiSecret\": \"string\",\n  \"CreationDate\": 10,\n  \"Disabled\": true,\n  \"EncryptionKey\": \"string\",\n  \"EncryptionMode\": \"string\",\n  \"FlatStorage\": true,\n  \"LastSynchronizationDate\": 10,\n  \"Name\": \"string\",\n  \"ObjectsBaseFolder\": \"string\",\n  \"ObjectsBucket\": \"string\",\n  \"ObjectsHost\": \"string\",\n  \"ObjectsPort\": 10,\n  \"ObjectsSecure\": true,\n  \"ObjectsServiceName\": \"string\",\n  \"PeerAddress\": \"string\",\n  \"SkipSyncOnRestart\": true,\n  \"StorageConfiguration\": {},\n  \"StorageType\": \"string\",\n  \"VersioningPolicyName\": \"string\",\n  \"Watch\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-discovery/","title":"GET /a/config/discovery","text":"<p>Publish available endpoints  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-discovery/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDiscoveryResponse</p> <pre><code>{\n  \"BuildRevision\": \"string\",\n  \"BuildStamp\": 10,\n  \"Endpoints\": {},\n  \"PackageLabel\": \"string\",\n  \"PackageType\": \"string\",\n  \"Version\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-discovery-forms-servicename/","title":"GET /a/config/discovery/forms/{ServiceName}","text":"<p>Publish Forms definition for building screens in frontend  </p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-discovery-forms-servicename/#path-parameters","title":"Path Parameters","text":"<ul> <li>ServiceName (string, required) Retrieve a configuration form for a given service</li> </ul>"},{"location":"developer-guide/rest-api/config-service/get-a-config-discovery-forms-servicename/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDiscoveryResponse</p> <pre><code>{\n  \"BuildRevision\": \"string\",\n  \"BuildStamp\": 10,\n  \"Endpoints\": {},\n  \"PackageLabel\": \"string\",\n  \"PackageType\": \"string\",\n  \"Version\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-discovery-openapi/","title":"GET /a/config/discovery/openapi","text":"<p>Publish available REST APIs  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-discovery-openapi/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restOpenApiResponse</p> <pre><code>{\n  \"Data\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-peers/","title":"GET /a/config/peers","text":"<p>List all detected peers (servers on which the app is running)  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-peers/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restListPeersAddressesResponse</p> <pre><code>{\n  \"PeerAddresses\": [\n    \"string\"\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-scheduler-actions/","title":"GET /a/config/scheduler/actions","text":"<p>Publish scheduler registered actions  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-scheduler-actions/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restSchedulerActionsResponse</p> <pre><code>{\n  \"Actions\": {}\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-scheduler-actions-actionname/","title":"GET /a/config/scheduler/actions/{ActionName}","text":"<p>Publish scheduler action XML form for building screens in frontend  </p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-scheduler-actions-actionname/#path-parameters","title":"Path Parameters","text":"<ul> <li>ActionName (string, required) Name of the action to load</li> </ul>"},{"location":"developer-guide/rest-api/config-service/get-a-config-scheduler-actions-actionname/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restSchedulerActionFormResponse</p> <pre><code>{\n  \"ActionName\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-sites-filter/","title":"GET /a/config/sites/{Filter}","text":"<p>List configured sites  </p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-sites-filter/#path-parameters","title":"Path Parameters","text":"<ul> <li>Filter (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/config-service/get-a-config-sites-filter/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restListSitesResponse</p> <pre><code>{\n  \"Sites\": [\n    {\n      \"Binds\": [\n        \"string\"\n      ],\n      \"Certificate\": {\n        \"CellsRootCA\": \"string\",\n        \"CertFile\": \"string\",\n        \"KeyFile\": \"string\"\n      },\n      \"LetsEncrypt\": {\n        \"AcceptEULA\": true,\n        \"Email\": \"string\",\n        \"StagingCA\": true\n      },\n      \"Maintenance\": true,\n      \"MaintenanceConditions\": [\n        \"string\"\n      ],\n      \"ReverseProxyURL\": \"string\",\n      \"SSLRedirect\": true,\n      \"SelfSigned\": {\n        \"Hostnames\": [\n          \"string\"\n        ]\n      }\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-versioning/","title":"GET /a/config/versioning","text":"<p>List all defined versioning policies  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-versioning/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restVersioningPolicyCollection</p> <pre><code>{\n  \"Policies\": [\n    {\n      \"Description\": \"string\",\n      \"IgnoreFilesGreaterThan\": \"string\",\n      \"KeepPeriods\": [\n        {\n          \"IntervalStart\": \"string\",\n          \"MaxNumber\": 10\n        }\n      ],\n      \"MaxSizePerFile\": \"string\",\n      \"MaxTotalSize\": \"string\",\n      \"Name\": \"string\",\n      \"NodeDeletedStrategy\": \"string\",\n      \"Uuid\": \"string\",\n      \"VersionsDataSourceBucket\": \"string\",\n      \"VersionsDataSourceName\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-versioning-uuid/","title":"GET /a/config/versioning/{Uuid}","text":"<p>Load a given versioning policy  </p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-versioning-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>Uuid (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/config-service/get-a-config-versioning-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/treeVersioningPolicy</p> <pre><code>{\n  \"Description\": \"string\",\n  \"IgnoreFilesGreaterThan\": \"string\",\n  \"KeepPeriods\": [\n    {\n      \"IntervalStart\": \"string\",\n      \"MaxNumber\": 10\n    }\n  ],\n  \"MaxSizePerFile\": \"string\",\n  \"MaxTotalSize\": \"string\",\n  \"Name\": \"string\",\n  \"NodeDeletedStrategy\": \"string\",\n  \"Uuid\": \"string\",\n  \"VersionsDataSourceBucket\": \"string\",\n  \"VersionsDataSourceName\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-virtualnodes/","title":"GET /a/config/virtualnodes","text":"<p>List all defined virtual nodes  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-virtualnodes/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restNodesCollection</p> <pre><code>{\n  \"Children\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Parent\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-fullpath/","title":"GET /a/config/{FullPath}","text":"<p>Generic config Get using a full path in the config tree  </p>"},{"location":"developer-guide/rest-api/config-service/get-a-config-fullpath/#path-parameters","title":"Path Parameters","text":"<ul> <li>FullPath (string, required) Full slash-separated path to the config key</li> </ul>"},{"location":"developer-guide/rest-api/config-service/get-a-config-fullpath/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restConfiguration</p> <pre><code>{\n  \"Data\": \"string\",\n  \"FullPath\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-buckets/","title":"POST /a/config/buckets","text":"<p>List Buckets on a given object storage  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-buckets/#body-parameters","title":"Body Parameters","text":"Name Description Type Required BucketsRegexp string DataSource #/definitions/objectDataSource"},{"location":"developer-guide/rest-api/config-service/post-a-config-buckets/#body-example","title":"Body Example","text":"<pre><code>{\n  \"BucketsRegexp\": \"string\",\n  \"DataSource\": {\n    \"ApiKey\": \"string\",\n    \"ApiSecret\": \"string\",\n    \"CreationDate\": 10,\n    \"Disabled\": true,\n    \"EncryptionKey\": \"string\",\n    \"EncryptionMode\": \"string\",\n    \"FlatStorage\": true,\n    \"LastSynchronizationDate\": 10,\n    \"Name\": \"string\",\n    \"ObjectsBaseFolder\": \"string\",\n    \"ObjectsBucket\": \"string\",\n    \"ObjectsHost\": \"string\",\n    \"ObjectsPort\": 10,\n    \"ObjectsSecure\": true,\n    \"ObjectsServiceName\": \"string\",\n    \"PeerAddress\": \"string\",\n    \"SkipSyncOnRestart\": true,\n    \"StorageConfiguration\": {},\n    \"StorageType\": \"string\",\n    \"VersioningPolicyName\": \"string\",\n    \"Watch\": true\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-buckets/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restNodesCollection</p> <pre><code>{\n  \"Children\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Parent\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-ctl/","title":"POST /a/config/ctl","text":"<p>[Not Implemented]  Start/Stop a service  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-ctl/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Command Command to apply (START or STOP) #/definitions/ctlServiceCommand NodeName Name of the node string ServiceName Name of the service to stop string"},{"location":"developer-guide/rest-api/config-service/post-a-config-ctl/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Command\": \"string\",\n  \"NodeName\": \"string\",\n  \"ServiceName\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-ctl/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/ctlService</p> <pre><code>{\n  \"Controllable\": true,\n  \"Description\": \"string\",\n  \"Metadata\": {},\n  \"Name\": \"string\",\n  \"RunningPeers\": [\n    {\n      \"Address\": \"string\",\n      \"Id\": \"string\",\n      \"Metadata\": {},\n      \"Port\": 10\n    }\n  ],\n  \"Status\": \"string\",\n  \"Tag\": \"string\",\n  \"Version\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-datasource-name/","title":"POST /a/config/datasource/{Name}","text":"<p>Create or update a datasource  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-datasource-name/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/config-service/post-a-config-datasource-name/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/objectDataSource</p> <pre><code>{\n  \"ApiKey\": \"string\",\n  \"ApiSecret\": \"string\",\n  \"CreationDate\": 10,\n  \"Disabled\": true,\n  \"EncryptionKey\": \"string\",\n  \"EncryptionMode\": \"string\",\n  \"FlatStorage\": true,\n  \"LastSynchronizationDate\": 10,\n  \"Name\": \"string\",\n  \"ObjectsBaseFolder\": \"string\",\n  \"ObjectsBucket\": \"string\",\n  \"ObjectsHost\": \"string\",\n  \"ObjectsPort\": 10,\n  \"ObjectsSecure\": true,\n  \"ObjectsServiceName\": \"string\",\n  \"PeerAddress\": \"string\",\n  \"SkipSyncOnRestart\": true,\n  \"StorageConfiguration\": {},\n  \"StorageType\": \"string\",\n  \"VersioningPolicyName\": \"string\",\n  \"Watch\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-create/","title":"POST /a/config/encryption/create","text":"<p>Create a new master key  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-create/#body-parameters","title":"Body Parameters","text":"Name Description Type Required KeyID Create a key with this ID string Label Provide label for the newly created key string"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-create/#body-example","title":"Body Example","text":"<pre><code>{\n  \"KeyID\": \"string\",\n  \"Label\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-create/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/encryptionAdminCreateKeyResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-delete/","title":"POST /a/config/encryption/delete","text":"<p>Delete an existing master key  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-delete/#body-parameters","title":"Body Parameters","text":"Name Description Type Required KeyID Id of the key to delete string"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-delete/#body-example","title":"Body Example","text":"<pre><code>{\n  \"KeyID\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-delete/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/encryptionAdminDeleteKeyResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-export/","title":"POST /a/config/encryption/export","text":"<p>Export a master key for backup purpose, protected with a password  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-export/#body-parameters","title":"Body Parameters","text":"Name Description Type Required KeyID Id of the key to export string StrPassword Associated password as string string"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-export/#body-example","title":"Body Example","text":"<pre><code>{\n  \"KeyID\": \"string\",\n  \"StrPassword\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-export/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/encryptionAdminExportKeyResponse</p> <pre><code>{\n  \"Key\": {\n    \"Content\": \"string\",\n    \"CreationDate\": 10,\n    \"ID\": \"string\",\n    \"Info\": {\n      \"Exports\": [\n        {\n          \"By\": \"string\",\n          \"Date\": 10\n        }\n      ],\n      \"Imports\": [\n        {\n          \"By\": \"string\",\n          \"Date\": 10\n        }\n      ]\n    },\n    \"Label\": \"string\",\n    \"Owner\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-list/","title":"POST /a/config/encryption/list","text":"<p>List registered master keys  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-list/#body-parameters","title":"Body Parameters","text":"Name Description Type Required All boolean"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-list/#body-example","title":"Body Example","text":"<pre><code>{\n  \"All\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-encryption-list/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/encryptionAdminListKeysResponse</p> <pre><code>{\n  \"Keys\": [\n    {\n      \"Content\": \"string\",\n      \"CreationDate\": 10,\n      \"ID\": \"string\",\n      \"Info\": {\n        \"Exports\": [\n          {\n            \"By\": \"string\",\n            \"Date\": 10\n          }\n        ],\n        \"Imports\": [\n          {\n            \"By\": \"string\",\n            \"Date\": 10\n          }\n        ]\n      },\n      \"Label\": \"string\",\n      \"Owner\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-peers-peeraddress/","title":"POST /a/config/peers/{PeerAddress}","text":"<p>List folders on a peer, starting from root  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-peers-peeraddress/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/config-service/post-a-config-peers-peeraddress/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restNodesCollection</p> <pre><code>{\n  \"Children\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Parent\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-processes/","title":"POST /a/config/processes","text":"<p>List running Processes, with option PeerId or ServiceName filter  </p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-processes/#body-parameters","title":"Body Parameters","text":"Name Description Type Required PeerId Id of the peer node string ServiceName Look for a service name string"},{"location":"developer-guide/rest-api/config-service/post-a-config-processes/#body-example","title":"Body Example","text":"<pre><code>{\n  \"PeerId\": \"string\",\n  \"ServiceName\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-processes/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restListProcessesResponse</p> <pre><code>{\n  \"Processes\": [\n    {\n      \"ID\": \"string\",\n      \"MetricsPort\": 10,\n      \"ParentID\": \"string\",\n      \"PeerAddress\": \"string\",\n      \"PeerId\": \"string\",\n      \"Services\": [\n        \"string\"\n      ],\n      \"StartTag\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/post-a-config-registry/","title":"POST /a/config/registry","text":""},{"location":"developer-guide/rest-api/config-service/post-a-config-registry/#body-parameters","title":"Body Parameters","text":"Name Description Type Required adjacentsOptions #/definitions/registryOptions options #/definitions/registryOptions"},{"location":"developer-guide/rest-api/config-service/post-a-config-registry/#body-example","title":"Body Example","text":"<pre><code>{\n  \"adjacentsOptions\": {\n    \"actions\": [\n      \"string\"\n    ],\n    \"ids\": [\n      \"string\"\n    ],\n    \"metaName\": \"string\",\n    \"metaValue\": \"string\",\n    \"names\": [\n      \"string\"\n    ],\n    \"ttl\": \"string\",\n    \"types\": [\n      \"string\"\n    ]\n  },\n  \"options\": {\n    \"actions\": [\n      \"string\"\n    ],\n    \"ids\": [\n      \"string\"\n    ],\n    \"metaName\": \"string\",\n    \"metaValue\": \"string\",\n    \"names\": [\n      \"string\"\n    ],\n    \"ttl\": \"string\",\n    \"types\": [\n      \"string\"\n    ]\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/post-a-config-registry/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/registryListResponse</p> <pre><code>{\n  \"items\": [\n    {\n      \"adjacents\": [\n        \"[Recursive structure]\"\n      ],\n      \"dao\": {\n        \"driver\": \"string\",\n        \"dsn\": \"string\"\n      },\n      \"edge\": {\n        \"vertices\": [\n          \"string\"\n        ]\n      },\n      \"generic\": {\n        \"type\": \"string\"\n      },\n      \"id\": \"string\",\n      \"metadata\": {},\n      \"name\": \"string\",\n      \"node\": {\n        \"advertiseIp\": \"string\",\n        \"hostname\": \"string\",\n        \"ips\": [\n          \"string\"\n        ],\n        \"machine\": \"string\"\n      },\n      \"server\": {\n        \"protocol\": \"string\"\n      },\n      \"service\": {\n        \"options\": {\n          \"actions\": [\n            \"string\"\n          ],\n          \"ids\": [\n            \"string\"\n          ],\n          \"metaName\": \"string\",\n          \"metaValue\": \"string\",\n          \"names\": [\n            \"string\"\n          ],\n          \"ttl\": \"string\",\n          \"types\": [\n            \"string\"\n          ]\n        },\n        \"tags\": [\n          \"string\"\n        ],\n        \"version\": \"string\"\n      }\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-buckets-bucketname/","title":"PUT /a/config/buckets/{BucketName}","text":"<p>List Buckets on a given object storage  </p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-buckets-bucketname/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/config-service/put-a-config-buckets-bucketname/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restCreateStorageBucketResponse</p> <pre><code>{\n  \"BucketName\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-encryption-import/","title":"PUT /a/config/encryption/import","text":"<p>Import a previously exported master key, requires the password created at export time  </p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-encryption-import/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Key Imported key data #/definitions/encryptionKey Override Whether to override if a key with same ID already exists boolean StrPassword Key password string"},{"location":"developer-guide/rest-api/config-service/put-a-config-encryption-import/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Key\": {\n    \"Content\": \"string\",\n    \"CreationDate\": 10,\n    \"ID\": \"string\",\n    \"Info\": {\n      \"Exports\": [\n        {\n          \"By\": \"string\",\n          \"Date\": 10\n        }\n      ],\n      \"Imports\": [\n        {\n          \"By\": \"string\",\n          \"Date\": 10\n        }\n      ]\n    },\n    \"Label\": \"string\",\n    \"Owner\": \"string\"\n  },\n  \"Override\": true,\n  \"StrPassword\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/config-service/put-a-config-encryption-import/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/encryptionAdminImportKeyResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-peers-peeraddress/","title":"PUT /a/config/peers/{PeerAddress}","text":"<p>Create a folder on a given path for a given peer (filesystem)  </p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-peers-peeraddress/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/config-service/put-a-config-peers-peeraddress/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restCreatePeerFolderResponse</p> <pre><code>{\n  \"Node\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  },\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-fullpath/","title":"PUT /a/config/{FullPath}","text":"<p>Generic config Put, using a full path in the config tree  </p>"},{"location":"developer-guide/rest-api/config-service/put-a-config-fullpath/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/config-service/put-a-config-fullpath/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restConfiguration</p> <pre><code>{\n  \"Data\": \"string\",\n  \"FullPath\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/index/","title":"Index","text":"<p>This service provides endpoints for managing enterprise only configurations, including versioning policies, template paths, external directories, etc.</p> <ul> <li>DELETE /a/config/directories/{ConfigId}</li> <li>DELETE /a/config/oauth2clients/{ClientID}</li> <li>DELETE /a/config/oauth2clients/{client_id}</li> <li>DELETE /a/config/oauth2connectors/{id}</li> <li>DELETE /a/config/versioning/{Uuid}</li> <li>DELETE /a/config/virtualnodes/{Uuid}</li> <li>GET /a/config/directories</li> <li>GET /a/config/oauth2clients</li> <li>GET /a/config/oauth2connectors</li> <li>GET /a/config/sites</li> <li>POST /a/config/directories-test/ping</li> <li>POST /a/config/directories-test/search</li> <li>POST /a/config/versioning/{Uuid}</li> <li>POST /a/config/virtualnodes/{Uuid}</li> <li>PUT /a/config/directories/{ConfigId}</li> <li>PUT /a/config/oauth2clients/{ClientID}</li> <li>PUT /a/config/oauth2clients/{client_id}</li> <li>PUT /a/config/oauth2connectors</li> <li>PUT /a/config/oauth2connectors/{id}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-directories-configid/","title":"DELETE /a/config/directories/{ConfigId}","text":"<p>[Enterprise Only] Delete external directory  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-directories-configid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>ConfigId (string, required) Id of the external directory</p> </li> <li> <p>Config.ConfigId (string) </p> </li> <li> <p>Config.DomainName (string) </p> </li> <li> <p>Config.Host (string) </p> </li> <li> <p>Config.Connection (string) </p> </li> <li> <p>Config.BindDN (string) </p> </li> <li> <p>Config.BindPW (string) </p> </li> <li> <p>Config.BindAnonymous (boolean) </p> </li> <li> <p>Config.SkipVerifyCertificate (boolean) </p> </li> <li> <p>Config.RootCA (string) </p> </li> <li> <p>Config.RootCAData (string) To be converted to []byte</p> </li> <li> <p>Config.PageSize (integer) </p> </li> <li> <p>Config.User.DNs (array) </p> </li> <li> <p>Config.User.Filter (string) </p> </li> <li> <p>Config.User.IDAttribute (string) </p> </li> <li> <p>Config.User.DisplayAttribute (string) </p> </li> <li> <p>Config.User.Scope (string) </p> </li> <li> <p>Config.MemberOfMapping.Mapping.LeftAttribute (string) </p> </li> <li> <p>Config.MemberOfMapping.Mapping.RightAttribute (string) </p> </li> <li> <p>Config.MemberOfMapping.Mapping.RuleString (string) </p> </li> <li> <p>Config.MemberOfMapping.Mapping.RolePrefix (string) </p> </li> <li> <p>Config.MemberOfMapping.GroupFilter.DNs (array) </p> </li> <li> <p>Config.MemberOfMapping.GroupFilter.Filter (string) </p> </li> <li> <p>Config.MemberOfMapping.GroupFilter.IDAttribute (string) </p> </li> <li> <p>Config.MemberOfMapping.GroupFilter.DisplayAttribute (string) </p> </li> <li> <p>Config.MemberOfMapping.GroupFilter.Scope (string) </p> </li> <li> <p>Config.MemberOfMapping.SupportNestedGroup (boolean) </p> </li> <li> <p>Config.MemberOfMapping.RealMemberOf (boolean) </p> </li> <li> <p>Config.MemberOfMapping.RealMemberOfAttribute (string) </p> </li> <li> <p>Config.MemberOfMapping.RealMemberOfValueFormat (string) </p> </li> <li> <p>Config.MemberOfMapping.PydioMemberOfAttribute (string) </p> </li> <li> <p>Config.MemberOfMapping.PydioMemberOfValueFormat (string) </p> </li> <li> <p>Config.RolePrefix (string) </p> </li> <li> <p>Config.Schedule (string) </p> </li> <li> <p>Config.SchedulerDetails (string) </p> </li> <li> <p>Config.SyncOnly (boolean) </p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-directories-configid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entExternalDirectoryResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2clients-clientid/","title":"DELETE /a/config/oauth2clients/{ClientID}","text":"<p>[Enterprise Only] Delete an oauth2 client  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2clients-clientid/#path-parameters","title":"Path Parameters","text":"<ul> <li>ClientID (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2clients-clientid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ClientResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v3.0.9 on 8-Jul-2022</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2clients-client-id/","title":"DELETE /a/config/oauth2clients/{client_id}","text":"<p>[Enterprise Only] Delete an oauth2 client  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2clients-client-id/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>client_id (string, required) </p> </li> <li> <p>client_name (string) </p> </li> <li> <p>client_secret (string) </p> </li> <li> <p>redirect_uris (array) </p> </li> <li> <p>grant_types (array) </p> </li> <li> <p>response_types (array) </p> </li> <li> <p>scope (string) </p> </li> <li> <p>audience (array) </p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2clients-client-id/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ClientResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2connectors-id/","title":"DELETE /a/config/oauth2connectors/{id}","text":"<p>[Enterprise Only] Delete an oauth2 client  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2connectors-id/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>id (string, required) </p> </li> <li> <p>type (string) </p> </li> <li> <p>name (string) </p> </li> <li> <p>configoidc.issuer (string) </p> </li> <li> <p>configoidc.clientID (string) </p> </li> <li> <p>configoidc.clientSecret (string) </p> </li> <li> <p>configoidc.redirectURI (string) </p> </li> <li> <p>configoidc.basicAuthUnsupported (boolean) </p> </li> <li> <p>configoidc.hostedDomains (array) </p> </li> <li> <p>configoidc.scopes (array) </p> </li> <li> <p>configoidc.insecureSkipEmailVerified (boolean) </p> </li> <li> <p>configoidc.getUserInfo (boolean) </p> </li> <li> <p>configoidc.userIDKey (string) </p> </li> <li> <p>configoidc.userNameKey (string) </p> </li> <li> <p>configsaml.ssoURL (string) </p> </li> <li> <p>configsaml.ca (string) </p> </li> <li> <p>configsaml.redirectURI (string) </p> </li> <li> <p>configsaml.usernameAttr (string) </p> </li> <li> <p>configsaml.emailAttr (string) </p> </li> <li> <p>configsaml.groupsAttr (string) </p> </li> <li> <p>configsaml.caData (string) </p> </li> <li> <p>configsaml.insecureSkipSignatureValidation (boolean) </p> </li> <li> <p>configsaml.entityIssuer (string) </p> </li> <li> <p>configsaml.ssoIssuer (string) </p> </li> <li> <p>configsaml.groupsDelim (string) </p> </li> <li> <p>configsaml.nameIDPolicyFormat (string) </p> </li> <li> <p>configbitbucket.clientID (string) </p> </li> <li> <p>configbitbucket.clientSecret (string) </p> </li> <li> <p>configbitbucket.redirectURI (string) </p> </li> <li> <p>configbitbucket.teams (array) </p> </li> <li> <p>configgithub.clientID (string) </p> </li> <li> <p>configgithub.clientSecret (string) </p> </li> <li> <p>configgithub.redirectURI (string) </p> </li> <li> <p>configgithub.loadAllGroups (boolean) </p> </li> <li> <p>configgithub.teamNameField (string) </p> </li> <li> <p>configgithub.useLoginAsID (boolean) </p> </li> <li> <p>configgithub.hostName (string) For GitHub enterprise</p> </li> <li> <p>configgithub.rootCA (string) </p> </li> <li> <p>configgitlab.baseURL (string) </p> </li> <li> <p>configgitlab.clientID (string) </p> </li> <li> <p>configgitlab.clientSecret (string) </p> </li> <li> <p>configgitlab.redirectURI (string) </p> </li> <li> <p>configgitlab.groups (array) </p> </li> <li> <p>configgitlab.userLoginAsID (boolean) </p> </li> <li> <p>configlinkedin.clientID (string) </p> </li> <li> <p>configlinkedin.clientSecret (string) </p> </li> <li> <p>configlinkedin.redirectURI (string) </p> </li> <li> <p>configmicrosoft.clientID (string) </p> </li> <li> <p>configmicrosoft.clientSecret (string) </p> </li> <li> <p>configmicrosoft.redirectURI (string) </p> </li> <li> <p>configmicrosoft.tenant (string) </p> </li> <li> <p>configmicrosoft.groups (array) </p> </li> <li> <p>configmicrosoft.onlySecurityGroups (boolean) </p> </li> <li> <p>configmicrosoft.groupNameFormat (string) </p> </li> <li> <p>configmicrosoft.useGroupsAsWhitelist (boolean) </p> </li> <li> <p>configldap.ConfigId (string) </p> </li> <li> <p>configldap.DomainName (string) </p> </li> <li> <p>configldap.Host (string) </p> </li> <li> <p>configldap.Connection (string) </p> </li> <li> <p>configldap.BindDN (string) </p> </li> <li> <p>configldap.BindPW (string) </p> </li> <li> <p>configldap.BindAnonymous (boolean) </p> </li> <li> <p>configldap.SkipVerifyCertificate (boolean) </p> </li> <li> <p>configldap.RootCA (string) </p> </li> <li> <p>configldap.RootCAData (string) To be converted to []byte</p> </li> <li> <p>configldap.PageSize (integer) </p> </li> <li> <p>configldap.User.DNs (array) </p> </li> <li> <p>configldap.User.Filter (string) </p> </li> <li> <p>configldap.User.IDAttribute (string) </p> </li> <li> <p>configldap.User.DisplayAttribute (string) </p> </li> <li> <p>configldap.User.Scope (string) </p> </li> <li> <p>configldap.MemberOfMapping.Mapping.LeftAttribute (string) </p> </li> <li> <p>configldap.MemberOfMapping.Mapping.RightAttribute (string) </p> </li> <li> <p>configldap.MemberOfMapping.Mapping.RuleString (string) </p> </li> <li> <p>configldap.MemberOfMapping.Mapping.RolePrefix (string) </p> </li> <li> <p>configldap.MemberOfMapping.GroupFilter.DNs (array) </p> </li> <li> <p>configldap.MemberOfMapping.GroupFilter.Filter (string) </p> </li> <li> <p>configldap.MemberOfMapping.GroupFilter.IDAttribute (string) </p> </li> <li> <p>configldap.MemberOfMapping.GroupFilter.DisplayAttribute (string) </p> </li> <li> <p>configldap.MemberOfMapping.GroupFilter.Scope (string) </p> </li> <li> <p>configldap.MemberOfMapping.SupportNestedGroup (boolean) </p> </li> <li> <p>configldap.MemberOfMapping.RealMemberOf (boolean) </p> </li> <li> <p>configldap.MemberOfMapping.RealMemberOfAttribute (string) </p> </li> <li> <p>configldap.MemberOfMapping.RealMemberOfValueFormat (string) </p> </li> <li> <p>configldap.MemberOfMapping.PydioMemberOfAttribute (string) </p> </li> <li> <p>configldap.MemberOfMapping.PydioMemberOfValueFormat (string) </p> </li> <li> <p>configldap.RolePrefix (string) </p> </li> <li> <p>configldap.Schedule (string) </p> </li> <li> <p>configldap.SchedulerDetails (string) </p> </li> <li> <p>configldap.SyncOnly (boolean) </p> </li> <li> <p>configoauth.baseURL (string) </p> </li> <li> <p>configoauth.authorizeURL (string) </p> </li> <li> <p>configoauth.tokenURL (string) </p> </li> <li> <p>configoauth.userInfoURL (string) </p> </li> <li> <p>configoauth.clientID (string) </p> </li> <li> <p>configoauth.clientSecret (string) </p> </li> <li> <p>configoauth.redirectURI (string) </p> </li> <li> <p>configoauth.groups (array) </p> </li> <li> <p>configoauth.useLoginAsID (boolean) </p> </li> <li> <p>configoauth.useBrokenAuthHeaderProvider (boolean) </p> </li> <li> <p>configmock.jsonIdentity (string) </p> </li> <li> <p>sites (array) </p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-oauth2connectors-id/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ConnectorResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-versioning-uuid/","title":"DELETE /a/config/versioning/{Uuid}","text":"<p>[Enterprise Only] Delete a versioning policy  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-versioning-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>Uuid (string, required) </p> </li> <li> <p>Name (string) </p> </li> <li> <p>Description (string) </p> </li> <li> <p>VersionsDataSourceName (string) </p> </li> <li> <p>VersionsDataSourceBucket (string) </p> </li> <li> <p>MaxTotalSize (string) </p> </li> <li> <p>MaxSizePerFile (string) </p> </li> <li> <p>IgnoreFilesGreaterThan (string) </p> </li> <li> <p>NodeDeletedStrategy (string) </p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-versioning-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteVersioningPolicyResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-virtualnodes-uuid/","title":"DELETE /a/config/virtualnodes/{Uuid}","text":"<p>[Enterprise Only] Delete a virtual node  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-virtualnodes-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>Uuid (string, required) ------------------------------------ Core identification of the node</li> </ul> <ul> <li> <p>Path (string) </p> </li> <li> <p>Type (string) </p> </li> <li> <p>Size (string) Size of the file, or cumulated size of folder</p> </li> <li> <p>MTime (string) Last modification Timestamp</p> </li> <li> <p>Mode (integer) Permission mode, like 0777</p> </li> <li> <p>Etag (string) Hash of the content if node is a LEAF, Uuid or</p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-config-service/delete-a-config-virtualnodes-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteVirtualNodeResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-directories/","title":"GET /a/config/directories","text":"<p>[Enterprise Only] List additional user directories  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-directories/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entExternalDirectoryCollection</p> <pre><code>{\n  \"Directories\": [\n    {\n      \"BindAnonymous\": true,\n      \"BindDN\": \"string\",\n      \"BindPW\": \"string\",\n      \"ConfigId\": \"string\",\n      \"Connection\": \"string\",\n      \"DomainName\": \"string\",\n      \"Host\": \"string\",\n      \"MappingRules\": [\n        {\n          \"LeftAttribute\": \"string\",\n          \"RightAttribute\": \"string\",\n          \"RolePrefix\": \"string\",\n          \"RuleString\": \"string\"\n        }\n      ],\n      \"MemberOfMapping\": {\n        \"GroupFilter\": {\n          \"DNs\": [\n            \"string\"\n          ],\n          \"DisplayAttribute\": \"string\",\n          \"Filter\": \"string\",\n          \"IDAttribute\": \"string\",\n          \"Scope\": \"string\"\n        },\n        \"Mapping\": {\n          \"LeftAttribute\": \"string\",\n          \"RightAttribute\": \"string\",\n          \"RolePrefix\": \"string\",\n          \"RuleString\": \"string\"\n        },\n        \"PydioMemberOfAttribute\": \"string\",\n        \"PydioMemberOfValueFormat\": \"string\",\n        \"RealMemberOf\": true,\n        \"RealMemberOfAttribute\": \"string\",\n        \"RealMemberOfValueFormat\": \"string\",\n        \"SupportNestedGroup\": true\n      },\n      \"PageSize\": 10,\n      \"RolePrefix\": \"string\",\n      \"RootCA\": \"string\",\n      \"RootCAData\": \"string\",\n      \"Schedule\": \"string\",\n      \"SchedulerDetails\": \"string\",\n      \"SkipVerifyCertificate\": true,\n      \"SyncOnly\": true,\n      \"User\": {\n        \"DNs\": [\n          \"string\"\n        ],\n        \"DisplayAttribute\": \"string\",\n        \"Filter\": \"string\",\n        \"IDAttribute\": \"string\",\n        \"Scope\": \"string\"\n      }\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-oauth2clients/","title":"GET /a/config/oauth2clients","text":"<p>[Enterprise Only] List oauth2 clients  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-oauth2clients/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ClientCollection</p> <pre><code>{\n  \"staticClients\": [\n    {\n      \"audience\": [\n        \"string\"\n      ],\n      \"client_id\": \"string\",\n      \"client_name\": \"string\",\n      \"client_secret\": \"string\",\n      \"grant_types\": [\n        \"string\"\n      ],\n      \"redirect_uris\": [\n        \"string\"\n      ],\n      \"response_types\": [\n        \"string\"\n      ],\n      \"scope\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-oauth2connectors/","title":"GET /a/config/oauth2connectors","text":"<p>[Enterprise Only] List oauth2 connectors  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-oauth2connectors/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ConnectorCollection</p> <pre><code>{\n  \"connectors\": [\n    {\n      \"configbitbucket\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"redirectURI\": \"string\",\n        \"teams\": [\n          \"string\"\n        ]\n      },\n      \"configgithub\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"hostName\": \"string\",\n        \"loadAllGroups\": true,\n        \"orgs\": [\n          {\n            \"name\": \"string\",\n            \"teams\": [\n              \"string\"\n            ]\n          }\n        ],\n        \"redirectURI\": \"string\",\n        \"rootCA\": \"string\",\n        \"teamNameField\": \"string\",\n        \"useLoginAsID\": true\n      },\n      \"configgitlab\": {\n        \"baseURL\": \"string\",\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"groups\": [\n          \"string\"\n        ],\n        \"redirectURI\": \"string\",\n        \"userLoginAsID\": true\n      },\n      \"configldap\": {\n        \"BindAnonymous\": true,\n        \"BindDN\": \"string\",\n        \"BindPW\": \"string\",\n        \"ConfigId\": \"string\",\n        \"Connection\": \"string\",\n        \"DomainName\": \"string\",\n        \"Host\": \"string\",\n        \"MappingRules\": [\n          {\n            \"LeftAttribute\": \"string\",\n            \"RightAttribute\": \"string\",\n            \"RolePrefix\": \"string\",\n            \"RuleString\": \"string\"\n          }\n        ],\n        \"MemberOfMapping\": {\n          \"GroupFilter\": {\n            \"DNs\": [\n              \"string\"\n            ],\n            \"DisplayAttribute\": \"string\",\n            \"Filter\": \"string\",\n            \"IDAttribute\": \"string\",\n            \"Scope\": \"string\"\n          },\n          \"Mapping\": {\n            \"LeftAttribute\": \"string\",\n            \"RightAttribute\": \"string\",\n            \"RolePrefix\": \"string\",\n            \"RuleString\": \"string\"\n          },\n          \"PydioMemberOfAttribute\": \"string\",\n          \"PydioMemberOfValueFormat\": \"string\",\n          \"RealMemberOf\": true,\n          \"RealMemberOfAttribute\": \"string\",\n          \"RealMemberOfValueFormat\": \"string\",\n          \"SupportNestedGroup\": true\n        },\n        \"PageSize\": 10,\n        \"RolePrefix\": \"string\",\n        \"RootCA\": \"string\",\n        \"RootCAData\": \"string\",\n        \"Schedule\": \"string\",\n        \"SchedulerDetails\": \"string\",\n        \"SkipVerifyCertificate\": true,\n        \"SyncOnly\": true,\n        \"User\": {\n          \"DNs\": [\n            \"string\"\n          ],\n          \"DisplayAttribute\": \"string\",\n          \"Filter\": \"string\",\n          \"IDAttribute\": \"string\",\n          \"Scope\": \"string\"\n        }\n      },\n      \"configlinkedin\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"redirectURI\": \"string\"\n      },\n      \"configmicrosoft\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"groupNameFormat\": \"string\",\n        \"groups\": [\n          \"string\"\n        ],\n        \"onlySecurityGroups\": true,\n        \"redirectURI\": \"string\",\n        \"tenant\": \"string\",\n        \"useGroupsAsWhitelist\": true\n      },\n      \"configmock\": {\n        \"jsonIdentity\": \"string\"\n      },\n      \"configoauth\": {\n        \"authorizeURL\": \"string\",\n        \"baseURL\": \"string\",\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"groups\": [\n          \"string\"\n        ],\n        \"redirectURI\": \"string\",\n        \"tokenURL\": \"string\",\n        \"useBrokenAuthHeaderProvider\": true,\n        \"useLoginAsID\": true,\n        \"userInfoURL\": \"string\"\n      },\n      \"configoidc\": {\n        \"basicAuthUnsupported\": true,\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"getUserInfo\": true,\n        \"hostedDomains\": [\n          \"string\"\n        ],\n        \"insecureSkipEmailVerified\": true,\n        \"issuer\": \"string\",\n        \"redirectURI\": \"string\",\n        \"scopes\": [\n          \"string\"\n        ],\n        \"userIDKey\": \"string\",\n        \"userNameKey\": \"string\"\n      },\n      \"configpydio\": {\n        \"pydioconnectors\": [\n          {\n            \"id\": 10,\n            \"name\": \"string\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"configsaml\": {\n        \"ca\": \"string\",\n        \"caData\": \"string\",\n        \"emailAttr\": \"string\",\n        \"entityIssuer\": \"string\",\n        \"groupsAttr\": \"string\",\n        \"groupsDelim\": \"string\",\n        \"insecureSkipSignatureValidation\": true,\n        \"nameIDPolicyFormat\": \"string\",\n        \"redirectURI\": \"string\",\n        \"ssoIssuer\": \"string\",\n        \"ssoURL\": \"string\",\n        \"usernameAttr\": \"string\"\n      },\n      \"id\": \"string\",\n      \"mappingRules\": [\n        {\n          \"LeftAttribute\": \"string\",\n          \"LeftSplit\": \"string\",\n          \"NoUpdate\": true,\n          \"RightAttribute\": \"string\",\n          \"RightValueTemplate\": \"string\",\n          \"RuleString\": \"string\"\n        }\n      ],\n      \"name\": \"string\",\n      \"sites\": [\n        \"string\"\n      ],\n      \"type\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-sites/","title":"GET /a/config/sites","text":"<p>[Enterprise Only] List configured sites  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/get-a-config-sites/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entListSitesResponse</p> <pre><code>{\n  \"Sites\": [\n    {\n      \"Binds\": [\n        \"string\"\n      ],\n      \"Certificate\": {\n        \"CellsRootCA\": \"string\",\n        \"CertFile\": \"string\",\n        \"KeyFile\": \"string\"\n      },\n      \"LetsEncrypt\": {\n        \"AcceptEULA\": true,\n        \"Email\": \"string\",\n        \"StagingCA\": true\n      },\n      \"Maintenance\": true,\n      \"MaintenanceConditions\": [\n        \"string\"\n      ],\n      \"ReverseProxyURL\": \"string\",\n      \"SSLRedirect\": true,\n      \"SelfSigned\": {\n        \"Hostnames\": [\n          \"string\"\n        ]\n      }\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-ping/","title":"POST /a/config/directories-test/ping","text":"<p>[Enterprise Only] Sends an arbitrary config and try to ping the server and bind  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-ping/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Bind boolean Config #/definitions/authLdapServerConfig"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-ping/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Bind\": true,\n  \"Config\": {\n    \"BindAnonymous\": true,\n    \"BindDN\": \"string\",\n    \"BindPW\": \"string\",\n    \"ConfigId\": \"string\",\n    \"Connection\": \"string\",\n    \"DomainName\": \"string\",\n    \"Host\": \"string\",\n    \"MappingRules\": [\n      {\n        \"LeftAttribute\": \"string\",\n        \"RightAttribute\": \"string\",\n        \"RolePrefix\": \"string\",\n        \"RuleString\": \"string\"\n      }\n    ],\n    \"MemberOfMapping\": {\n      \"GroupFilter\": {\n        \"DNs\": [\n          \"string\"\n        ],\n        \"DisplayAttribute\": \"string\",\n        \"Filter\": \"string\",\n        \"IDAttribute\": \"string\",\n        \"Scope\": \"string\"\n      },\n      \"Mapping\": {\n        \"LeftAttribute\": \"string\",\n        \"RightAttribute\": \"string\",\n        \"RolePrefix\": \"string\",\n        \"RuleString\": \"string\"\n      },\n      \"PydioMemberOfAttribute\": \"string\",\n      \"PydioMemberOfValueFormat\": \"string\",\n      \"RealMemberOf\": true,\n      \"RealMemberOfAttribute\": \"string\",\n      \"RealMemberOfValueFormat\": \"string\",\n      \"SupportNestedGroup\": true\n    },\n    \"PageSize\": 10,\n    \"RolePrefix\": \"string\",\n    \"RootCA\": \"string\",\n    \"RootCAData\": \"string\",\n    \"Schedule\": \"string\",\n    \"SchedulerDetails\": \"string\",\n    \"SkipVerifyCertificate\": true,\n    \"SyncOnly\": true,\n    \"User\": {\n      \"DNs\": [\n        \"string\"\n      ],\n      \"DisplayAttribute\": \"string\",\n      \"Filter\": \"string\",\n      \"IDAttribute\": \"string\",\n      \"Scope\": \"string\"\n    }\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-ping/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entExternalDirectoryTestResponse</p> <pre><code>{\n  \"DirectoryResponseJSON\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-search/","title":"POST /a/config/directories-test/search","text":"<p>[Enterprise Only] Sends an arbitrary config and try to ldapsearch using a given SearchFilter  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-search/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Config #/definitions/authLdapServerConfig Filter #/definitions/authLdapSearchFilter Limit integer Offset integer"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-search/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Config\": {\n    \"BindAnonymous\": true,\n    \"BindDN\": \"string\",\n    \"BindPW\": \"string\",\n    \"ConfigId\": \"string\",\n    \"Connection\": \"string\",\n    \"DomainName\": \"string\",\n    \"Host\": \"string\",\n    \"MappingRules\": [\n      {\n        \"LeftAttribute\": \"string\",\n        \"RightAttribute\": \"string\",\n        \"RolePrefix\": \"string\",\n        \"RuleString\": \"string\"\n      }\n    ],\n    \"MemberOfMapping\": {\n      \"GroupFilter\": {\n        \"DNs\": [\n          \"string\"\n        ],\n        \"DisplayAttribute\": \"string\",\n        \"Filter\": \"string\",\n        \"IDAttribute\": \"string\",\n        \"Scope\": \"string\"\n      },\n      \"Mapping\": {\n        \"LeftAttribute\": \"string\",\n        \"RightAttribute\": \"string\",\n        \"RolePrefix\": \"string\",\n        \"RuleString\": \"string\"\n      },\n      \"PydioMemberOfAttribute\": \"string\",\n      \"PydioMemberOfValueFormat\": \"string\",\n      \"RealMemberOf\": true,\n      \"RealMemberOfAttribute\": \"string\",\n      \"RealMemberOfValueFormat\": \"string\",\n      \"SupportNestedGroup\": true\n    },\n    \"PageSize\": 10,\n    \"RolePrefix\": \"string\",\n    \"RootCA\": \"string\",\n    \"RootCAData\": \"string\",\n    \"Schedule\": \"string\",\n    \"SchedulerDetails\": \"string\",\n    \"SkipVerifyCertificate\": true,\n    \"SyncOnly\": true,\n    \"User\": {\n      \"DNs\": [\n        \"string\"\n      ],\n      \"DisplayAttribute\": \"string\",\n      \"Filter\": \"string\",\n      \"IDAttribute\": \"string\",\n      \"Scope\": \"string\"\n    }\n  },\n  \"Filter\": {\n    \"DNs\": [\n      \"string\"\n    ],\n    \"DisplayAttribute\": \"string\",\n    \"Filter\": \"string\",\n    \"IDAttribute\": \"string\",\n    \"Scope\": \"string\"\n  },\n  \"Limit\": 10,\n  \"Offset\": 10\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-directories-test-search/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entExternalDirectoryTestResponse</p> <pre><code>{\n  \"DirectoryResponseJSON\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-versioning-uuid/","title":"POST /a/config/versioning/{Uuid}","text":"<p>[Enterprise Only] Create or update a versioning policy  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-versioning-uuid/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-versioning-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/treeVersioningPolicy</p> <pre><code>{\n  \"Description\": \"string\",\n  \"IgnoreFilesGreaterThan\": \"string\",\n  \"KeepPeriods\": [\n    {\n      \"IntervalStart\": \"string\",\n      \"MaxNumber\": 10\n    }\n  ],\n  \"MaxSizePerFile\": \"string\",\n  \"MaxTotalSize\": \"string\",\n  \"Name\": \"string\",\n  \"NodeDeletedStrategy\": \"string\",\n  \"Uuid\": \"string\",\n  \"VersionsDataSourceBucket\": \"string\",\n  \"VersionsDataSourceName\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-virtualnodes-uuid/","title":"POST /a/config/virtualnodes/{Uuid}","text":"<p>[Enterprise Only] Create or update a virtual node  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-virtualnodes-uuid/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-config-service/post-a-config-virtualnodes-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/treeNode</p> <pre><code>{\n  \"AppearsIn\": [\n    {\n      \"Path\": \"string\",\n      \"WsLabel\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsSlug\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ],\n  \"Commits\": [\n    {\n      \"Data\": \"string\",\n      \"Description\": \"string\",\n      \"Event\": {\n        \"Metadata\": {},\n        \"Optimistic\": true,\n        \"Silent\": true,\n        \"Source\": \"[Recursive structure]\",\n        \"Target\": \"[Recursive structure]\",\n        \"Type\": \"string\"\n      },\n      \"Location\": \"[Recursive structure]\",\n      \"MTime\": \"string\",\n      \"OwnerUuid\": \"string\",\n      \"Size\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Etag\": \"string\",\n  \"MTime\": \"string\",\n  \"MetaStore\": {},\n  \"Mode\": 10,\n  \"Path\": \"string\",\n  \"Size\": \"string\",\n  \"Type\": \"string\",\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-directories-configid/","title":"PUT /a/config/directories/{ConfigId}","text":"<p>[Enterprise Only] Add/Create an external directory  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-directories-configid/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-directories-configid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entExternalDirectoryResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2clients-clientid/","title":"PUT /a/config/oauth2clients/{ClientID}","text":"<p>[Enterprise Only] Add/Create a new oauth2 client  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2clients-clientid/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Audience array ClientID string GrantTypes array Name string RedirectURIs array ResponseTypes array Scope string Secret string"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2clients-clientid/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Audience\": [\n    \"string\"\n  ],\n  \"ClientID\": \"string\",\n  \"GrantTypes\": [\n    \"string\"\n  ],\n  \"Name\": \"string\",\n  \"RedirectURIs\": [\n    \"string\"\n  ],\n  \"ResponseTypes\": [\n    \"string\"\n  ],\n  \"Scope\": \"string\",\n  \"Secret\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2clients-clientid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ClientResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v3.0.9 on 8-Jul-2022</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2clients-client-id/","title":"PUT /a/config/oauth2clients/{client_id}","text":"<p>[Enterprise Only] Add/Create a new oauth2 client  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2clients-client-id/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2clients-client-id/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ClientResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2connectors/","title":"PUT /a/config/oauth2connectors","text":"<p>[Enterprise Only] Add/Create a new oauth2 client  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2connectors/#body-parameters","title":"Body Parameters","text":"Name Description Type Required connectors array"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2connectors/#body-example","title":"Body Example","text":"<pre><code>{\n  \"connectors\": [\n    {\n      \"configbitbucket\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"redirectURI\": \"string\",\n        \"teams\": [\n          \"string\"\n        ]\n      },\n      \"configgithub\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"hostName\": \"string\",\n        \"loadAllGroups\": true,\n        \"orgs\": [\n          {\n            \"name\": \"string\",\n            \"teams\": [\n              \"string\"\n            ]\n          }\n        ],\n        \"redirectURI\": \"string\",\n        \"rootCA\": \"string\",\n        \"teamNameField\": \"string\",\n        \"useLoginAsID\": true\n      },\n      \"configgitlab\": {\n        \"baseURL\": \"string\",\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"groups\": [\n          \"string\"\n        ],\n        \"redirectURI\": \"string\",\n        \"userLoginAsID\": true\n      },\n      \"configldap\": {\n        \"BindAnonymous\": true,\n        \"BindDN\": \"string\",\n        \"BindPW\": \"string\",\n        \"ConfigId\": \"string\",\n        \"Connection\": \"string\",\n        \"DomainName\": \"string\",\n        \"Host\": \"string\",\n        \"MappingRules\": [\n          {\n            \"LeftAttribute\": \"string\",\n            \"RightAttribute\": \"string\",\n            \"RolePrefix\": \"string\",\n            \"RuleString\": \"string\"\n          }\n        ],\n        \"MemberOfMapping\": {\n          \"GroupFilter\": {\n            \"DNs\": [\n              \"string\"\n            ],\n            \"DisplayAttribute\": \"string\",\n            \"Filter\": \"string\",\n            \"IDAttribute\": \"string\",\n            \"Scope\": \"string\"\n          },\n          \"Mapping\": {\n            \"LeftAttribute\": \"string\",\n            \"RightAttribute\": \"string\",\n            \"RolePrefix\": \"string\",\n            \"RuleString\": \"string\"\n          },\n          \"PydioMemberOfAttribute\": \"string\",\n          \"PydioMemberOfValueFormat\": \"string\",\n          \"RealMemberOf\": true,\n          \"RealMemberOfAttribute\": \"string\",\n          \"RealMemberOfValueFormat\": \"string\",\n          \"SupportNestedGroup\": true\n        },\n        \"PageSize\": 10,\n        \"RolePrefix\": \"string\",\n        \"RootCA\": \"string\",\n        \"RootCAData\": \"string\",\n        \"Schedule\": \"string\",\n        \"SchedulerDetails\": \"string\",\n        \"SkipVerifyCertificate\": true,\n        \"SyncOnly\": true,\n        \"User\": {\n          \"DNs\": [\n            \"string\"\n          ],\n          \"DisplayAttribute\": \"string\",\n          \"Filter\": \"string\",\n          \"IDAttribute\": \"string\",\n          \"Scope\": \"string\"\n        }\n      },\n      \"configlinkedin\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"redirectURI\": \"string\"\n      },\n      \"configmicrosoft\": {\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"groupNameFormat\": \"string\",\n        \"groups\": [\n          \"string\"\n        ],\n        \"onlySecurityGroups\": true,\n        \"redirectURI\": \"string\",\n        \"tenant\": \"string\",\n        \"useGroupsAsWhitelist\": true\n      },\n      \"configmock\": {\n        \"jsonIdentity\": \"string\"\n      },\n      \"configoauth\": {\n        \"authorizeURL\": \"string\",\n        \"baseURL\": \"string\",\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"groups\": [\n          \"string\"\n        ],\n        \"redirectURI\": \"string\",\n        \"tokenURL\": \"string\",\n        \"useBrokenAuthHeaderProvider\": true,\n        \"useLoginAsID\": true,\n        \"userInfoURL\": \"string\"\n      },\n      \"configoidc\": {\n        \"basicAuthUnsupported\": true,\n        \"clientID\": \"string\",\n        \"clientSecret\": \"string\",\n        \"getUserInfo\": true,\n        \"hostedDomains\": [\n          \"string\"\n        ],\n        \"insecureSkipEmailVerified\": true,\n        \"issuer\": \"string\",\n        \"redirectURI\": \"string\",\n        \"scopes\": [\n          \"string\"\n        ],\n        \"userIDKey\": \"string\",\n        \"userNameKey\": \"string\"\n      },\n      \"configpydio\": {\n        \"pydioconnectors\": [\n          {\n            \"id\": 10,\n            \"name\": \"string\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"configsaml\": {\n        \"ca\": \"string\",\n        \"caData\": \"string\",\n        \"emailAttr\": \"string\",\n        \"entityIssuer\": \"string\",\n        \"groupsAttr\": \"string\",\n        \"groupsDelim\": \"string\",\n        \"insecureSkipSignatureValidation\": true,\n        \"nameIDPolicyFormat\": \"string\",\n        \"redirectURI\": \"string\",\n        \"ssoIssuer\": \"string\",\n        \"ssoURL\": \"string\",\n        \"usernameAttr\": \"string\"\n      },\n      \"id\": \"string\",\n      \"mappingRules\": [\n        {\n          \"LeftAttribute\": \"string\",\n          \"LeftSplit\": \"string\",\n          \"NoUpdate\": true,\n          \"RightAttribute\": \"string\",\n          \"RightValueTemplate\": \"string\",\n          \"RuleString\": \"string\"\n        }\n      ],\n      \"name\": \"string\",\n      \"sites\": [\n        \"string\"\n      ],\n      \"type\": \"string\"\n    }\n  ]\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2connectors/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ConnectorResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2connectors-id/","title":"PUT /a/config/oauth2connectors/{id}","text":"<p>[Enterprise Only] Add/Create a new oauth2 client  </p>"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2connectors-id/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-config-service/put-a-config-oauth2connectors-id/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entOAuth2ConnectorResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-front-service/index/","title":"Index","text":"<p>This service provides endpoints for enterprise specific features like external connectors.</p> <ul> <li>GET /a/frontend/auth/state</li> <li>GET /a/frontend/login/connectors</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-front-service/get-a-frontend-auth-state/","title":"GET /a/frontend/auth/state","text":"<p>[Enterprise Only] Handle Login Connectors state  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-front-service/get-a-frontend-auth-state/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entFrontAuthStateResponse</p> <pre><code>{\n  \"ConnectorID\": \"string\",\n  \"RequestID\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v2.2.12 on 21-Sep-2021</p>"},{"location":"developer-guide/rest-api/enterprise-front-service/get-a-frontend-login-connectors/","title":"GET /a/frontend/login/connectors","text":"<p>[Enterprise Only] Handle Login Connectors  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-front-service/get-a-frontend-login-connectors/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entFrontLoginConnectorsResponse</p> <pre><code>{\n  \"Connectors\": [\n    {\n      \"Id\": \"string\",\n      \"Name\": \"string\",\n      \"Type\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-log-service/index/","title":"Index","text":"<p>This service provides endpoints for extracting logs in various formats and auditing internal data.</p> <ul> <li>POST /a/log/audit</li> <li>POST /a/log/audit/chartdata</li> <li>POST /a/log/audit/export</li> <li>POST /a/log/sys/export</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit/","title":"POST /a/log/audit","text":"<p>[Enterprise Only] Auditable Logs, in Json or CSV format  </p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Format #/definitions/ListLogRequestLogFormat Page Start at page integer Query Bleve-type Query stsring string Size Number of results integer"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Format\": \"string\",\n  \"Page\": 10,\n  \"Query\": \"string\",\n  \"Size\": 10\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restLogMessageCollection</p> <pre><code>{\n  \"Logs\": [\n    {\n      \"GroupPath\": \"string\",\n      \"HttpProtocol\": \"string\",\n      \"JsonZaps\": \"string\",\n      \"Level\": \"string\",\n      \"Logger\": \"string\",\n      \"Msg\": \"string\",\n      \"MsgId\": \"string\",\n      \"NodePath\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"OperationLabel\": \"string\",\n      \"OperationUuid\": \"string\",\n      \"Profile\": \"string\",\n      \"RemoteAddress\": \"string\",\n      \"RoleUuids\": [\n        \"string\"\n      ],\n      \"SchedulerJobUuid\": \"string\",\n      \"SchedulerTaskActionPath\": \"string\",\n      \"SchedulerTaskUuid\": \"string\",\n      \"SpanParentUuid\": \"string\",\n      \"SpanRootUuid\": \"string\",\n      \"SpanUuid\": \"string\",\n      \"TransferSize\": \"string\",\n      \"Ts\": 10,\n      \"UserAgent\": \"string\",\n      \"UserName\": \"string\",\n      \"UserUuid\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-chartdata/","title":"POST /a/log/audit/chartdata","text":"<p>[Enterprise Only] Retrieves aggregated audit logs to generate charts  </p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-chartdata/#body-parameters","title":"Body Parameters","text":"Name Description Type Required MsgId Type of event we are auditing string RefTime Upper bound for our request integer TimeRangeType Known types: H, D, W, M or Y string"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-chartdata/#body-example","title":"Body Example","text":"<pre><code>{\n  \"MsgId\": \"string\",\n  \"RefTime\": 10,\n  \"TimeRangeType\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-chartdata/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restTimeRangeResultCollection</p> <pre><code>{\n  \"Links\": [\n    {\n      \"Count\": 10,\n      \"RefTime\": 10,\n      \"Rel\": \"string\"\n    }\n  ],\n  \"Results\": [\n    {\n      \"Count\": 10,\n      \"End\": 10,\n      \"Name\": \"string\",\n      \"Relevance\": 10,\n      \"Start\": 10\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-export/","title":"POST /a/log/audit/export","text":"<p>[Enterprise Only] Auditable Logs, in Json or CSV format  </p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-export/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Format #/definitions/ListLogRequestLogFormat Page Start at page integer Query Bleve-type Query stsring string Size Number of results integer"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-export/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Format\": \"string\",\n  \"Page\": 10,\n  \"Query\": \"string\",\n  \"Size\": 10\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-audit-export/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restLogMessageCollection</p> <pre><code>{\n  \"Logs\": [\n    {\n      \"GroupPath\": \"string\",\n      \"HttpProtocol\": \"string\",\n      \"JsonZaps\": \"string\",\n      \"Level\": \"string\",\n      \"Logger\": \"string\",\n      \"Msg\": \"string\",\n      \"MsgId\": \"string\",\n      \"NodePath\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"OperationLabel\": \"string\",\n      \"OperationUuid\": \"string\",\n      \"Profile\": \"string\",\n      \"RemoteAddress\": \"string\",\n      \"RoleUuids\": [\n        \"string\"\n      ],\n      \"SchedulerJobUuid\": \"string\",\n      \"SchedulerTaskActionPath\": \"string\",\n      \"SchedulerTaskUuid\": \"string\",\n      \"SpanParentUuid\": \"string\",\n      \"SpanRootUuid\": \"string\",\n      \"SpanUuid\": \"string\",\n      \"TransferSize\": \"string\",\n      \"Ts\": 10,\n      \"UserAgent\": \"string\",\n      \"UserName\": \"string\",\n      \"UserUuid\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-sys-export/","title":"POST /a/log/sys/export","text":"<p>[Enterprise Only] Technical Logs, in Json or CSV format  </p>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-sys-export/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Format #/definitions/ListLogRequestLogFormat Page Start at page integer Query Bleve-type Query stsring string Size Number of results integer"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-sys-export/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Format\": \"string\",\n  \"Page\": 10,\n  \"Query\": \"string\",\n  \"Size\": 10\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-log-service/post-a-log-sys-export/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restLogMessageCollection</p> <pre><code>{\n  \"Logs\": [\n    {\n      \"GroupPath\": \"string\",\n      \"HttpProtocol\": \"string\",\n      \"JsonZaps\": \"string\",\n      \"Level\": \"string\",\n      \"Logger\": \"string\",\n      \"Msg\": \"string\",\n      \"MsgId\": \"string\",\n      \"NodePath\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"OperationLabel\": \"string\",\n      \"OperationUuid\": \"string\",\n      \"Profile\": \"string\",\n      \"RemoteAddress\": \"string\",\n      \"RoleUuids\": [\n        \"string\"\n      ],\n      \"SchedulerJobUuid\": \"string\",\n      \"SchedulerTaskActionPath\": \"string\",\n      \"SchedulerTaskUuid\": \"string\",\n      \"SpanParentUuid\": \"string\",\n      \"SpanRootUuid\": \"string\",\n      \"SpanUuid\": \"string\",\n      \"TransferSize\": \"string\",\n      \"Ts\": 10,\n      \"UserAgent\": \"string\",\n      \"UserName\": \"string\",\n      \"UserUuid\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/index/","title":"Index","text":"<p>This service provides endpoints for security policies.</p> <ul> <li>DELETE /a/policy/{Uuid}</li> <li>GET /a/policy/ipbans</li> <li>GET /a/policy/iplists/{Name}</li> <li>POST /a/policy/ipbans</li> <li>POST /a/policy/iplists</li> <li>PUT /a/policy</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/delete-a-policy-uuid/","title":"DELETE /a/policy/{Uuid}","text":"<p>[Enterprise Only] Delete a security policy  </p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/delete-a-policy-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>Uuid (string, required) </p> </li> <li> <p>Name (string) </p> </li> <li> <p>Description (string) </p> </li> <li> <p>OwnerUuid (string) </p> </li> <li> <p>ResourceGroup (string) </p> </li> <li> <p>LastUpdated (integer) </p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-policy-service/delete-a-policy-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteResponse</p> <pre><code>{\n  \"NumRows\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/get-a-policy-ipbans/","title":"GET /a/policy/ipbans","text":"<p>[Enterprise Only] List banned IPs  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/get-a-policy-ipbans/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/ipbanListBansCollection</p> <pre><code>{\n  \"Bans\": [\n    {\n      \"BanExpire\": \"string\",\n      \"History\": [\n        {\n          \"Details\": {},\n          \"IP\": \"string\",\n          \"IsSuccess\": true,\n          \"connectionTime\": \"string\"\n        }\n      ],\n      \"IP\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/get-a-policy-iplists-name/","title":"GET /a/policy/iplists/{Name}","text":"<p>[Enterprise Only] List white/black lists  </p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/get-a-policy-iplists-name/#path-parameters","title":"Path Parameters","text":"<ul> <li>Name (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-policy-service/get-a-policy-iplists-name/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/ipbanIPsCollection</p> <pre><code>{\n  \"IPs\": [\n    \"string\"\n  ],\n  \"Name\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-ipbans/","title":"POST /a/policy/ipbans","text":"<p>[Enterprise Only] List banned IPs  </p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-ipbans/#body-parameters","title":"Body Parameters","text":"Name Description Type Required IP string"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-ipbans/#body-example","title":"Body Example","text":"<pre><code>{\n  \"IP\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-ipbans/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/ipbanUnbanResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-iplists/","title":"POST /a/policy/iplists","text":"<p>[Enterprise Only] Update white/black lists  </p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-iplists/#body-parameters","title":"Body Parameters","text":"Name Description Type Required IPs array Name string"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-iplists/#body-example","title":"Body Example","text":"<pre><code>{\n  \"IPs\": [\n    \"string\"\n  ],\n  \"Name\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-policy-service/post-a-policy-iplists/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/ipbanIPsCollection</p> <pre><code>{\n  \"IPs\": [\n    \"string\"\n  ],\n  \"Name\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/put-a-policy/","title":"PUT /a/policy","text":"<p>[Enterprise Only] Update or create a security policy  </p>"},{"location":"developer-guide/rest-api/enterprise-policy-service/put-a-policy/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Description string LastUpdated integer Name string OwnerUuid string Policies array ResourceGroup #/definitions/idmPolicyResourceGroup Uuid string"},{"location":"developer-guide/rest-api/enterprise-policy-service/put-a-policy/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Description\": \"string\",\n  \"LastUpdated\": 10,\n  \"Name\": \"string\",\n  \"OwnerUuid\": \"string\",\n  \"Policies\": [\n    {\n      \"actions\": [\n        \"string\"\n      ],\n      \"conditions\": {},\n      \"description\": \"string\",\n      \"effect\": \"string\",\n      \"id\": \"string\",\n      \"resources\": [\n        \"string\"\n      ],\n      \"subjects\": [\n        \"string\"\n      ]\n    }\n  ],\n  \"ResourceGroup\": \"string\",\n  \"Uuid\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-policy-service/put-a-policy/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmPolicyGroup</p> <pre><code>{\n  \"Description\": \"string\",\n  \"LastUpdated\": 10,\n  \"Name\": \"string\",\n  \"OwnerUuid\": \"string\",\n  \"Policies\": [\n    {\n      \"actions\": [\n        \"string\"\n      ],\n      \"conditions\": {},\n      \"description\": \"string\",\n      \"effect\": \"string\",\n      \"id\": \"string\",\n      \"resources\": [\n        \"string\"\n      ],\n      \"subjects\": [\n        \"string\"\n      ]\n    }\n  ],\n  \"ResourceGroup\": \"string\",\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/index/","title":"Index","text":"<p>This service provides endpoints for users to create/update their own custom files/folders templates.</p> <ul> <li>DELETE /a/templates/meta/{TemplateUuid}</li> <li>DELETE /a/templates/node/{TemplateUuid}</li> <li>GET /a/templates/meta</li> <li>POST /a/templates/node</li> <li>PUT /a/templates/meta</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/delete-a-templates-meta-templateuuid/","title":"DELETE /a/templates/meta/{TemplateUuid}","text":"<p>Delete an arbitrary metadata template  </p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/delete-a-templates-meta-templateuuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>TemplateUuid (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-templates-service/delete-a-templates-meta-templateuuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteMetaTemplateResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/delete-a-templates-node-templateuuid/","title":"DELETE /a/templates/node/{TemplateUuid}","text":"<p>Create a template from a specific node  </p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/delete-a-templates-node-templateuuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>TemplateUuid (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-templates-service/delete-a-templates-node-templateuuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteNodeTemplateResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/get-a-templates-meta/","title":"GET /a/templates/meta","text":"<p>Store an arbitrary metadata template  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/get-a-templates-meta/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entListMetaTemplateResponse</p> <pre><code>{\n  \"Templates\": [\n    {\n      \"Label\": \"string\",\n      \"Meta\": \"string\",\n      \"Namespace\": \"string\",\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/post-a-templates-node/","title":"POST /a/templates/node","text":"<p>Create a template from a specific node  </p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/post-a-templates-node/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Policies Optional policies array RefNodeUuid string TplLabel string"},{"location":"developer-guide/rest-api/enterprise-templates-service/post-a-templates-node/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"RefNodeUuid\": \"string\",\n  \"TplLabel\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-templates-service/post-a-templates-node/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entCreateNodeTemplateResponse</p> <pre><code>{\n  \"Success\": true,\n  \"TemplateUuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/put-a-templates-meta/","title":"PUT /a/templates/meta","text":"<p>Store an arbitrary metadata template  </p>"},{"location":"developer-guide/rest-api/enterprise-templates-service/put-a-templates-meta/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Template #/definitions/entMetaTemplate Uuid string"},{"location":"developer-guide/rest-api/enterprise-templates-service/put-a-templates-meta/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Template\": {\n    \"Label\": \"string\",\n    \"Meta\": \"string\",\n    \"Namespace\": \"string\",\n    \"Policies\": [\n      {\n        \"Action\": \"string\",\n        \"Effect\": \"string\",\n        \"JsonConditions\": \"string\",\n        \"Resource\": \"string\",\n        \"Subject\": \"string\",\n        \"id\": \"string\"\n      }\n    ],\n    \"Uuid\": \"string\"\n  },\n  \"Uuid\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-templates-service/put-a-templates-meta/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entPutMetaTemplateResponse</p> <pre><code>{\n  \"Template\": {\n    \"Label\": \"string\",\n    \"Meta\": \"string\",\n    \"Namespace\": \"string\",\n    \"Policies\": [\n      {\n        \"Action\": \"string\",\n        \"Effect\": \"string\",\n        \"JsonConditions\": \"string\",\n        \"Resource\": \"string\",\n        \"Subject\": \"string\",\n        \"id\": \"string\"\n      }\n    ],\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-token-service/index/","title":"Index","text":"<p>This service provides endpoints for managing users personal access tokens.</p> <ul> <li>DELETE /a/auth/tokens/{TokenId}</li> <li>POST /a/auth/token/impersonate</li> <li>POST /a/auth/token/personal</li> <li>POST /a/auth/tokens</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-token-service/delete-a-auth-tokens-tokenid/","title":"DELETE /a/auth/tokens/{TokenId}","text":"<p>Delete a personal access token based on its Uuid  </p>"},{"location":"developer-guide/rest-api/enterprise-token-service/delete-a-auth-tokens-tokenid/#path-parameters","title":"Path Parameters","text":"<ul> <li>TokenId (string, required) Pass a specific Token ID to be revoked. If empty, request will use current JWT</li> </ul>"},{"location":"developer-guide/rest-api/enterprise-token-service/delete-a-auth-tokens-tokenid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restRevokeResponse</p> <pre><code>{\n  \"Message\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-impersonate/","title":"POST /a/auth/token/impersonate","text":"<p>Generate a personal access token  </p>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-impersonate/#body-parameters","title":"Body Parameters","text":"Name Description Type Required AutoRefresh integer ExpiresAt string Label string Scopes array UserLogin string"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-impersonate/#body-example","title":"Body Example","text":"<pre><code>{\n  \"AutoRefresh\": 10,\n  \"ExpiresAt\": \"string\",\n  \"Label\": \"string\",\n  \"Scopes\": [\n    \"string\"\n  ],\n  \"UserLogin\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-impersonate/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entPersonalAccessTokenResponse</p> <pre><code>{\n  \"AccessToken\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-personal/","title":"POST /a/auth/token/personal","text":"<p>Generate a personal access token  </p>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-personal/#body-parameters","title":"Body Parameters","text":"Name Description Type Required AutoRefresh integer ExpiresAt string Label string Scopes array UserLogin string"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-personal/#body-example","title":"Body Example","text":"<pre><code>{\n  \"AutoRefresh\": 10,\n  \"ExpiresAt\": \"string\",\n  \"Label\": \"string\",\n  \"Scopes\": [\n    \"string\"\n  ],\n  \"UserLogin\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-token-personal/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entPersonalAccessTokenResponse</p> <pre><code>{\n  \"AccessToken\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-tokens/","title":"POST /a/auth/tokens","text":"<p>List generated personal access tokens, eventually filtering by user  </p>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-tokens/#body-parameters","title":"Body Parameters","text":"Name Description Type Required ByUser string"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-tokens/#body-example","title":"Body Example","text":"<pre><code>{\n  \"ByUser\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-token-service/post-a-auth-tokens/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/authPatListResponse</p> <pre><code>{\n  \"Tokens\": [\n    {\n      \"AutoRefreshWindow\": 10,\n      \"CreatedAt\": \"string\",\n      \"CreatedBy\": \"string\",\n      \"ExpiresAt\": \"string\",\n      \"Label\": \"string\",\n      \"Scopes\": [\n        \"string\"\n      ],\n      \"Type\": \"string\",\n      \"UpdatedAt\": \"string\",\n      \"UserLogin\": \"string\",\n      \"UserUuid\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/index/","title":"Frontend Service","text":"<p>This service serves the JS user-interface. Some endpoints require additional Cookie management.</p> <ul> <li>GET /a/frontend/binaries/{BinaryType}/{Uuid}</li> <li>GET /a/frontend/bootconf</li> <li>GET /a/frontend/messages/{Lang}</li> <li>GET /a/frontend/plugins/{Lang}</li> <li>GET /a/frontend/settings-menu</li> <li>GET /a/frontend/state</li> <li>POST /a/frontend/binaries/{BinaryType}/{Uuid}</li> <li>POST /a/frontend/enroll</li> <li>POST /a/frontend/session</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-binaries-binarytype-uuid/","title":"GET /a/frontend/binaries/{BinaryType}/{Uuid}","text":"<p>Serve frontend binaries directly (avatars / logos / bg images)  </p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-binaries-binarytype-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>BinaryType (string, required) Currently supported values are USER and GLOBAL</p> </li> <li> <p>Uuid (string, required) Id of the binary</p> </li> </ul>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-binaries-binarytype-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontBinaryResponse</p> <pre><code>{\n  \"Data\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-bootconf/","title":"GET /a/frontend/bootconf","text":"<p>Add some data to the initial set of parameters loaded by the frontend  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-bootconf/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontBootConfResponse</p> <pre><code>{\n  \"JsonData\": {}\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-messages-lang/","title":"GET /a/frontend/messages/{Lang}","text":"<p>Serve list of I18n messages  </p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-messages-lang/#path-parameters","title":"Path Parameters","text":"<ul> <li>Lang (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-messages-lang/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontMessagesResponse</p> <pre><code>{\n  \"Messages\": {}\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-plugins-lang/","title":"GET /a/frontend/plugins/{Lang}","text":"<p>Serve list of I18n messages  </p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-plugins-lang/#path-parameters","title":"Path Parameters","text":"<ul> <li>Lang (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-plugins-lang/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontPluginsResponse</p> <pre><code>{\n  \"Data\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-settings-menu/","title":"GET /a/frontend/settings-menu","text":"<p>Sends a tree of nodes to be used a menu in the Settings panel  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-settings-menu/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restSettingsMenuResponse</p> <pre><code>{\n  \"Sections\": [\n    {\n      \"CHILDREN\": [\n        {\n          \"ALIAS\": \"string\",\n          \"Accesses\": {},\n          \"DESCRIPTION\": \"string\",\n          \"Feature\": \"string\",\n          \"Key\": \"string\",\n          \"LABEL\": \"string\",\n          \"MANAGER\": \"string\",\n          \"METADATA\": {\n            \"advanced\": true,\n            \"component\": \"string\",\n            \"icon_class\": \"string\",\n            \"indexed\": [\n              \"string\"\n            ],\n            \"props\": \"string\"\n          }\n        }\n      ],\n      \"DESCRIPTION\": \"string\",\n      \"Key\": \"string\",\n      \"LABEL\": \"string\"\n    }\n  ],\n  \"__metadata__\": {\n    \"advanced\": true,\n    \"component\": \"string\",\n    \"icon_class\": \"string\",\n    \"indexed\": [\n      \"string\"\n    ],\n    \"props\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-state/","title":"GET /a/frontend/state","text":"<p>Send XML state registry  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/frontend-service/get-a-frontend-state/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontStateResponse</p> <pre><code>{\n  \"Data\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-binaries-binarytype-uuid/","title":"POST /a/frontend/binaries/{BinaryType}/{Uuid}","text":"<p>Upload frontend binaries (avatars / logos / bg images)  </p>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-binaries-binarytype-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>BinaryType (string, required) Currently supported values are USER and GLOBAL</p> </li> <li> <p>Uuid (string, required) Id of the binary</p> </li> </ul>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-binaries-binarytype-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontBinaryResponse</p> <pre><code>{\n  \"Data\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-enroll/","title":"POST /a/frontend/enroll","text":"<p>Generic endpoint that can be implemented by 2FA systems for enrollment  </p>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-enroll/#body-parameters","title":"Body Parameters","text":"Name Description Type Required EnrollInfo object EnrollType string"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-enroll/#body-example","title":"Body Example","text":"<pre><code>{\n  \"EnrollInfo\": {},\n  \"EnrollType\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-enroll/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontEnrollAuthResponse</p> <pre><code>{\n  \"Info\": {}\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-session/","title":"POST /a/frontend/session","text":"<p>Handle JWT  </p>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-session/#body-parameters","title":"Body Parameters","text":"Name Description Type Required AuthInfo Data sent back by specific auth steps object ClientTime Time reference for computing jwt expiry integer Logout Kill session now boolean"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-session/#body-example","title":"Body Example","text":"<pre><code>{\n  \"AuthInfo\": {},\n  \"ClientTime\": 10,\n  \"Logout\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/frontend-service/post-a-frontend-session/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restFrontSessionResponse</p> <pre><code>{\n  \"Error\": \"string\",\n  \"ExpireTime\": 10,\n  \"JWT\": \"string\",\n  \"RedirectTo\": \"string\",\n  \"Token\": {\n    \"AccessToken\": \"string\",\n    \"ExpiresAt\": \"string\",\n    \"IDToken\": \"string\",\n    \"RefreshToken\": \"string\"\n  },\n  \"Trigger\": \"string\",\n  \"TriggerInfo\": {}\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/graph-service/index/","title":"Graph Service","text":"<p>This service provides endpoints for getting rich schemas of relations between users (shared data, teams belonging, etc.).</p> <ul> <li>GET /a/graph/relation/{UserId}</li> <li>GET /a/graph/state/{Segment}</li> <li>POST /a/graph/recommend</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/graph-service/get-a-graph-relation-userid/","title":"GET /a/graph/relation/{UserId}","text":"<p>Compute relation of context user with another user  </p>"},{"location":"developer-guide/rest-api/graph-service/get-a-graph-relation-userid/#path-parameters","title":"Path Parameters","text":"<ul> <li>UserId (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/graph-service/get-a-graph-relation-userid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restRelationResponse</p> <pre><code>{\n  \"BelongsToTeams\": [\n    {\n      \"AutoApplies\": [\n        \"string\"\n      ],\n      \"ForceOverride\": true,\n      \"GroupRole\": true,\n      \"IsTeam\": true,\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"UserRole\": true,\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"SharedCells\": [\n    {\n      \"Attributes\": \"string\",\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"RootNodes\": {},\n      \"RootUUIDs\": [\n        \"string\"\n      ],\n      \"Scope\": \"string\",\n      \"Slug\": \"string\",\n      \"UUID\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/graph-service/get-a-graph-state-segment/","title":"GET /a/graph/state/{Segment}","text":"<p>Compute accessible workspaces for a given user  </p>"},{"location":"developer-guide/rest-api/graph-service/get-a-graph-state-segment/#path-parameters","title":"Path Parameters","text":"<ul> <li>Segment (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/graph-service/get-a-graph-state-segment/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restUserStateResponse</p> <pre><code>{\n  \"Workspaces\": [\n    {\n      \"Attributes\": \"string\",\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"RootNodes\": {},\n      \"RootUUIDs\": [\n        \"string\"\n      ],\n      \"Scope\": \"string\",\n      \"Slug\": \"string\",\n      \"UUID\": \"string\"\n    }\n  ],\n  \"WorkspacesAccesses\": {}\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/graph-service/post-a-graph-recommend/","title":"POST /a/graph/recommend","text":""},{"location":"developer-guide/rest-api/graph-service/post-a-graph-recommend/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Category string Limit integer Neighbor string Segment string"},{"location":"developer-guide/rest-api/graph-service/post-a-graph-recommend/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Category\": \"string\",\n  \"Limit\": 10,\n  \"Neighbor\": \"string\",\n  \"Segment\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/graph-service/post-a-graph-recommend/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restRecommendResponse</p> <pre><code>{\n  \"Nodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/install-service/index/","title":"Install Service","text":"<p>This service is only started at the very first run for serving the web-based installer. After the install, it is always disabled by default.</p> <ul> <li>GET /a/install</li> <li>GET /a/install/agreement</li> <li>GET /a/install/events</li> <li>POST /a/install</li> <li>POST /a/install/check</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/install-service/get-a-install/","title":"GET /a/install","text":"<p>Loads default values for install form  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/install-service/get-a-install/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/installGetDefaultsResponse</p> <pre><code>{\n  \"config\": {\n    \"CheckResults\": [\n      {\n        \"JsonResult\": \"string\",\n        \"Name\": \"string\",\n        \"Success\": true\n      }\n    ],\n    \"DocumentsDSN\": \"string\",\n    \"ProxyConfig\": {\n      \"Binds\": [\n        \"string\"\n      ],\n      \"Certificate\": {\n        \"CellsRootCA\": \"string\",\n        \"CertFile\": \"string\",\n        \"KeyFile\": \"string\"\n      },\n      \"LetsEncrypt\": {\n        \"AcceptEULA\": true,\n        \"Email\": \"string\",\n        \"StagingCA\": true\n      },\n      \"Maintenance\": true,\n      \"MaintenanceConditions\": [\n        \"string\"\n      ],\n      \"ReverseProxyURL\": \"string\",\n      \"SSLRedirect\": true,\n      \"SelfSigned\": {\n        \"Hostnames\": [\n          \"string\"\n        ]\n      }\n    },\n    \"UseDocumentsDSN\": true,\n    \"dbConnectionType\": \"string\",\n    \"dbManualDSN\": \"string\",\n    \"dbSocketFile\": \"string\",\n    \"dbSocketName\": \"string\",\n    \"dbSocketPassword\": \"string\",\n    \"dbSocketUser\": \"string\",\n    \"dbTCPHostname\": \"string\",\n    \"dbTCPName\": \"string\",\n    \"dbTCPPassword\": \"string\",\n    \"dbTCPPort\": \"string\",\n    \"dbTCPUser\": \"string\",\n    \"dbUseDefaults\": true,\n    \"dsFolder\": \"string\",\n    \"dsName\": \"string\",\n    \"dsPort\": \"string\",\n    \"dsS3ApiKey\": \"string\",\n    \"dsS3ApiSecret\": \"string\",\n    \"dsS3BucketBinaries\": \"string\",\n    \"dsS3BucketCells\": \"string\",\n    \"dsS3BucketDefault\": \"string\",\n    \"dsS3BucketPersonal\": \"string\",\n    \"dsS3BucketThumbs\": \"string\",\n    \"dsS3BucketVersions\": \"string\",\n    \"dsS3Custom\": \"string\",\n    \"dsS3CustomRegion\": \"string\",\n    \"dsType\": \"string\",\n    \"frontendApplicationTitle\": \"string\",\n    \"frontendDefaultLanguage\": \"string\",\n    \"frontendHosts\": \"string\",\n    \"frontendLogin\": \"string\",\n    \"frontendPassword\": \"string\",\n    \"frontendRepeatPassword\": \"string\",\n    \"internalUrl\": \"string\",\n    \"licenseRequired\": true,\n    \"licenseString\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/install-service/get-a-install-agreement/","title":"GET /a/install/agreement","text":"<p>Load a textual agreement for using the software  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/install-service/get-a-install-agreement/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/installGetAgreementResponse</p> <pre><code>{\n  \"Text\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/install-service/get-a-install-events/","title":"GET /a/install/events","text":"<p>No Parameters</p>"},{"location":"developer-guide/rest-api/install-service/get-a-install-events/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/installInstallEventsResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/install-service/post-a-install/","title":"POST /a/install","text":"<p>Post values to be saved for install  </p>"},{"location":"developer-guide/rest-api/install-service/post-a-install/#body-parameters","title":"Body Parameters","text":"Name Description Type Required config #/definitions/installInstallConfig"},{"location":"developer-guide/rest-api/install-service/post-a-install/#body-example","title":"Body Example","text":"<pre><code>{\n  \"config\": {\n    \"CheckResults\": [\n      {\n        \"JsonResult\": \"string\",\n        \"Name\": \"string\",\n        \"Success\": true\n      }\n    ],\n    \"DocumentsDSN\": \"string\",\n    \"ProxyConfig\": {\n      \"Binds\": [\n        \"string\"\n      ],\n      \"Certificate\": {\n        \"CellsRootCA\": \"string\",\n        \"CertFile\": \"string\",\n        \"KeyFile\": \"string\"\n      },\n      \"LetsEncrypt\": {\n        \"AcceptEULA\": true,\n        \"Email\": \"string\",\n        \"StagingCA\": true\n      },\n      \"Maintenance\": true,\n      \"MaintenanceConditions\": [\n        \"string\"\n      ],\n      \"ReverseProxyURL\": \"string\",\n      \"SSLRedirect\": true,\n      \"SelfSigned\": {\n        \"Hostnames\": [\n          \"string\"\n        ]\n      }\n    },\n    \"UseDocumentsDSN\": true,\n    \"dbConnectionType\": \"string\",\n    \"dbManualDSN\": \"string\",\n    \"dbSocketFile\": \"string\",\n    \"dbSocketName\": \"string\",\n    \"dbSocketPassword\": \"string\",\n    \"dbSocketUser\": \"string\",\n    \"dbTCPHostname\": \"string\",\n    \"dbTCPName\": \"string\",\n    \"dbTCPPassword\": \"string\",\n    \"dbTCPPort\": \"string\",\n    \"dbTCPUser\": \"string\",\n    \"dbUseDefaults\": true,\n    \"dsFolder\": \"string\",\n    \"dsName\": \"string\",\n    \"dsPort\": \"string\",\n    \"dsS3ApiKey\": \"string\",\n    \"dsS3ApiSecret\": \"string\",\n    \"dsS3BucketBinaries\": \"string\",\n    \"dsS3BucketCells\": \"string\",\n    \"dsS3BucketDefault\": \"string\",\n    \"dsS3BucketPersonal\": \"string\",\n    \"dsS3BucketThumbs\": \"string\",\n    \"dsS3BucketVersions\": \"string\",\n    \"dsS3Custom\": \"string\",\n    \"dsS3CustomRegion\": \"string\",\n    \"dsType\": \"string\",\n    \"frontendApplicationTitle\": \"string\",\n    \"frontendDefaultLanguage\": \"string\",\n    \"frontendHosts\": \"string\",\n    \"frontendLogin\": \"string\",\n    \"frontendPassword\": \"string\",\n    \"frontendRepeatPassword\": \"string\",\n    \"internalUrl\": \"string\",\n    \"licenseRequired\": true,\n    \"licenseString\": \"string\"\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/install-service/post-a-install/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/installInstallResponse</p> <pre><code>{\n  \"success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/install-service/post-a-install-check/","title":"POST /a/install/check","text":"<p>Perform a check during install (like a valid DB connection)  </p>"},{"location":"developer-guide/rest-api/install-service/post-a-install-check/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Config #/definitions/installInstallConfig Name string"},{"location":"developer-guide/rest-api/install-service/post-a-install-check/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Config\": {\n    \"CheckResults\": [\n      {\n        \"JsonResult\": \"string\",\n        \"Name\": \"string\",\n        \"Success\": true\n      }\n    ],\n    \"DocumentsDSN\": \"string\",\n    \"ProxyConfig\": {\n      \"Binds\": [\n        \"string\"\n      ],\n      \"Certificate\": {\n        \"CellsRootCA\": \"string\",\n        \"CertFile\": \"string\",\n        \"KeyFile\": \"string\"\n      },\n      \"LetsEncrypt\": {\n        \"AcceptEULA\": true,\n        \"Email\": \"string\",\n        \"StagingCA\": true\n      },\n      \"Maintenance\": true,\n      \"MaintenanceConditions\": [\n        \"string\"\n      ],\n      \"ReverseProxyURL\": \"string\",\n      \"SSLRedirect\": true,\n      \"SelfSigned\": {\n        \"Hostnames\": [\n          \"string\"\n        ]\n      }\n    },\n    \"UseDocumentsDSN\": true,\n    \"dbConnectionType\": \"string\",\n    \"dbManualDSN\": \"string\",\n    \"dbSocketFile\": \"string\",\n    \"dbSocketName\": \"string\",\n    \"dbSocketPassword\": \"string\",\n    \"dbSocketUser\": \"string\",\n    \"dbTCPHostname\": \"string\",\n    \"dbTCPName\": \"string\",\n    \"dbTCPPassword\": \"string\",\n    \"dbTCPPort\": \"string\",\n    \"dbTCPUser\": \"string\",\n    \"dbUseDefaults\": true,\n    \"dsFolder\": \"string\",\n    \"dsName\": \"string\",\n    \"dsPort\": \"string\",\n    \"dsS3ApiKey\": \"string\",\n    \"dsS3ApiSecret\": \"string\",\n    \"dsS3BucketBinaries\": \"string\",\n    \"dsS3BucketCells\": \"string\",\n    \"dsS3BucketDefault\": \"string\",\n    \"dsS3BucketPersonal\": \"string\",\n    \"dsS3BucketThumbs\": \"string\",\n    \"dsS3BucketVersions\": \"string\",\n    \"dsS3Custom\": \"string\",\n    \"dsS3CustomRegion\": \"string\",\n    \"dsType\": \"string\",\n    \"frontendApplicationTitle\": \"string\",\n    \"frontendDefaultLanguage\": \"string\",\n    \"frontendHosts\": \"string\",\n    \"frontendLogin\": \"string\",\n    \"frontendPassword\": \"string\",\n    \"frontendRepeatPassword\": \"string\",\n    \"internalUrl\": \"string\",\n    \"licenseRequired\": true,\n    \"licenseString\": \"string\"\n  },\n  \"Name\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/install-service/post-a-install-check/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/installPerformCheckResponse</p> <pre><code>{\n  \"Result\": {\n    \"JsonResult\": \"string\",\n    \"Name\": \"string\",\n    \"Success\": true\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/jobs-service/index/","title":"Jobs Service","text":"<p>This service provides listings for the internal scheduler jobs and ways to trigger predefined jobs in the userspace.</p> <ul> <li>POST /a/jobs/tasks/delete</li> <li>POST /a/jobs/tasks/logs</li> <li>POST /a/jobs/user</li> <li>PUT /a/jobs/user</li> <li>PUT /a/jobs/user/{JobName}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-delete/","title":"POST /a/jobs/tasks/delete","text":"<p>Send a control command to clean tasks on a given job  </p>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-delete/#body-parameters","title":"Body Parameters","text":"Name Description Type Required JobId Id of the job string PruneLimit If deleting by status, optionally keep only a number of tasks integer Status If no TaskID and/or no JobID are passed, delete tasks by status array TaskID Ids of tasks to delete array"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-delete/#body-example","title":"Body Example","text":"<pre><code>{\n  \"JobId\": \"string\",\n  \"PruneLimit\": 10,\n  \"Status\": [\n    \"string\"\n  ],\n  \"TaskID\": [\n    \"string\"\n  ]\n}\n</code></pre>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-delete/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/jobsDeleteTasksResponse</p> <pre><code>{\n  \"Deleted\": [\n    \"string\"\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-logs/","title":"POST /a/jobs/tasks/logs","text":"<p>Technical Logs, in Json or CSV format  </p>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-logs/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Format #/definitions/ListLogRequestLogFormat Page Start at page integer Query Bleve-type Query stsring string Size Number of results integer"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-logs/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Format\": \"string\",\n  \"Page\": 10,\n  \"Query\": \"string\",\n  \"Size\": 10\n}\n</code></pre>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-tasks-logs/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restLogMessageCollection</p> <pre><code>{\n  \"Logs\": [\n    {\n      \"GroupPath\": \"string\",\n      \"HttpProtocol\": \"string\",\n      \"JsonZaps\": \"string\",\n      \"Level\": \"string\",\n      \"Logger\": \"string\",\n      \"Msg\": \"string\",\n      \"MsgId\": \"string\",\n      \"NodePath\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"OperationLabel\": \"string\",\n      \"OperationUuid\": \"string\",\n      \"Profile\": \"string\",\n      \"RemoteAddress\": \"string\",\n      \"RoleUuids\": [\n        \"string\"\n      ],\n      \"SchedulerJobUuid\": \"string\",\n      \"SchedulerTaskActionPath\": \"string\",\n      \"SchedulerTaskUuid\": \"string\",\n      \"SpanParentUuid\": \"string\",\n      \"SpanRootUuid\": \"string\",\n      \"SpanUuid\": \"string\",\n      \"TransferSize\": \"string\",\n      \"Ts\": 10,\n      \"UserAgent\": \"string\",\n      \"UserName\": \"string\",\n      \"UserUuid\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-user/","title":"POST /a/jobs/user","text":"<p>List jobs associated with current user  </p>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-user/#body-parameters","title":"Body Parameters","text":"Name Description Type Required EventsOnly Filter with only event-based jobs boolean JobIDs Load jobs by their ID array LoadTasks Load tasks that correspond to the given TaskStatus #/definitions/jobsTaskStatus Owner Restrict to a specific owner (current user by default) string TasksLimit Lmit the number of results integer TasksOffset Start listing at a given position integer TimersOnly Filter with only timer-based jobs boolean"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-user/#body-example","title":"Body Example","text":"<pre><code>{\n  \"EventsOnly\": true,\n  \"JobIDs\": [\n    \"string\"\n  ],\n  \"LoadTasks\": \"string\",\n  \"Owner\": \"string\",\n  \"TasksLimit\": 10,\n  \"TasksOffset\": 10,\n  \"TimersOnly\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/jobs-service/post-a-jobs-user/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restUserJobsCollection</p> <pre><code>{\n  \"Jobs\": [\n    {\n      \"Actions\": [\n        {\n          \"ActionOutputFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"BreakAfter\": true,\n          \"Bypass\": true,\n          \"ChainedActions\": [\n            \"[Recursive structure]\"\n          ],\n          \"ChatEventFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"ContextMetaFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Type\": \"string\"\n          },\n          \"DataFilter\": {\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\"\n          },\n          \"DataSelector\": {\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\"\n          },\n          \"DataSourceFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"DataSourceSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"Description\": \"string\",\n          \"FailedFilterActions\": [\n            \"[Recursive structure]\"\n          ],\n          \"ID\": \"string\",\n          \"IdmFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"IdmSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"Label\": \"string\",\n          \"MergeAction\": \"[Recursive structure]\",\n          \"NodesFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Pathes\": [\n              \"string\"\n            ],\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\"\n          },\n          \"NodesSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Pathes\": [\n              \"string\"\n            ],\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\"\n          },\n          \"Parameters\": {},\n          \"Timeout\": \"string\",\n          \"TriggerFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"UsersFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Users\": [\n              {\n                \"Attributes\": {},\n                \"GroupLabel\": \"string\",\n                \"GroupPath\": \"string\",\n                \"IsGroup\": true,\n                \"LastConnected\": 10,\n                \"Login\": \"string\",\n                \"OldPassword\": \"string\",\n                \"Password\": \"string\",\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Uuid\": \"string\"\n              }\n            ]\n          },\n          \"UsersSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Users\": [\n              {\n                \"Attributes\": {},\n                \"GroupLabel\": \"string\",\n                \"GroupPath\": \"string\",\n                \"IsGroup\": true,\n                \"LastConnected\": 10,\n                \"Login\": \"string\",\n                \"OldPassword\": \"string\",\n                \"Password\": \"string\",\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Uuid\": \"string\"\n              }\n            ]\n          }\n        }\n      ],\n      \"AutoClean\": true,\n      \"AutoRestart\": true,\n      \"AutoStart\": true,\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"CreatedAt\": 10,\n      \"Custom\": true,\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"EventNames\": [\n        \"string\"\n      ],\n      \"Hooks\": [\n        {\n          \"AllowOverridePresets\": true,\n          \"ApiSlug\": \"string\",\n          \"Metadata\": {},\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PresetParameters\": {}\n        }\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Inactive\": true,\n      \"Label\": \"string\",\n      \"Languages\": [\n        \"string\"\n      ],\n      \"MaxConcurrency\": 10,\n      \"MergeAction\": {\n        \"ActionOutputFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"BreakAfter\": true,\n        \"Bypass\": true,\n        \"ChainedActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"DataFilter\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSelector\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"DataSourceSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Description\": \"string\",\n        \"FailedFilterActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"IdmSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Label\": \"string\",\n        \"MergeAction\": \"[Recursive structure]\",\n        \"NodesFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"NodesSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Parameters\": {},\n        \"Timeout\": \"string\",\n        \"TriggerFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"UsersFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"UsersSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        }\n      },\n      \"Metadata\": {},\n      \"ModifiedAt\": 10,\n      \"NodeEventFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Owner\": \"string\",\n      \"Parameters\": [\n        {\n          \"Description\": \"string\",\n          \"JsonChoices\": \"string\",\n          \"Mandatory\": true,\n          \"Name\": \"string\",\n          \"Type\": \"string\",\n          \"Value\": \"string\"\n        }\n      ],\n      \"ResourcesDependencies\": [\n        {\n          \"@type\": \"string\"\n        }\n      ],\n      \"Schedule\": {\n        \"Iso8601MinDelta\": \"string\",\n        \"Iso8601Schedule\": \"string\"\n      },\n      \"Tasks\": [\n        {\n          \"ActionsLogs\": [\n            {\n              \"Action\": {\n                \"ActionOutputFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  }\n                },\n                \"BreakAfter\": true,\n                \"Bypass\": true,\n                \"ChainedActions\": [\n                  \"[Recursive structure]\"\n                ],\n                \"ChatEventFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  }\n                },\n                \"ContextMetaFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Type\": \"string\"\n                },\n                \"DataFilter\": {\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"DataSelector\": {\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"DataSourceFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"DataSourceSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"Description\": \"string\",\n                \"FailedFilterActions\": [\n                  \"[Recursive structure]\"\n                ],\n                \"ID\": \"string\",\n                \"IdmFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"IdmSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"Label\": \"string\",\n                \"MergeAction\": \"[Recursive structure]\",\n                \"NodesFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Pathes\": [\n                    \"string\"\n                  ],\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"NodesSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Pathes\": [\n                    \"string\"\n                  ],\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"Parameters\": {},\n                \"Timeout\": \"string\",\n                \"TriggerFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  }\n                },\n                \"UsersFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Users\": [\n                    {\n                      \"Attributes\": {},\n                      \"GroupLabel\": \"string\",\n                      \"GroupPath\": \"string\",\n                      \"IsGroup\": true,\n                      \"LastConnected\": 10,\n                      \"Login\": \"string\",\n                      \"OldPassword\": \"string\",\n                      \"Password\": \"string\",\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"Roles\": [\n                        {\n                          \"AutoApplies\": [\n                            \"string\"\n                          ],\n                          \"ForceOverride\": true,\n                          \"GroupRole\": true,\n                          \"IsTeam\": true,\n                          \"Label\": \"string\",\n                          \"LastUpdated\": 10,\n                          \"Policies\": [\n                            {\n                              \"Action\": \"string\",\n                              \"Effect\": \"string\",\n                              \"JsonConditions\": \"string\",\n                              \"Resource\": \"string\",\n                              \"Subject\": \"string\",\n                              \"id\": \"string\"\n                            }\n                          ],\n                          \"PoliciesContextEditable\": true,\n                          \"UserRole\": true,\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Uuid\": \"string\"\n                    }\n                  ]\n                },\n                \"UsersSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Users\": [\n                    {\n                      \"Attributes\": {},\n                      \"GroupLabel\": \"string\",\n                      \"GroupPath\": \"string\",\n                      \"IsGroup\": true,\n                      \"LastConnected\": 10,\n                      \"Login\": \"string\",\n                      \"OldPassword\": \"string\",\n                      \"Password\": \"string\",\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"Roles\": [\n                        {\n                          \"AutoApplies\": [\n                            \"string\"\n                          ],\n                          \"ForceOverride\": true,\n                          \"GroupRole\": true,\n                          \"IsTeam\": true,\n                          \"Label\": \"string\",\n                          \"LastUpdated\": 10,\n                          \"Policies\": [\n                            {\n                              \"Action\": \"string\",\n                              \"Effect\": \"string\",\n                              \"JsonConditions\": \"string\",\n                              \"Resource\": \"string\",\n                              \"Subject\": \"string\",\n                              \"id\": \"string\"\n                            }\n                          ],\n                          \"PoliciesContextEditable\": true,\n                          \"UserRole\": true,\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Uuid\": \"string\"\n                    }\n                  ]\n                }\n              },\n              \"InputMessage\": {\n                \"Acls\": [\n                  {\n                    \"Action\": {\n                      \"Name\": \"string\",\n                      \"Value\": \"string\"\n                    },\n                    \"ID\": \"string\",\n                    \"NodeID\": \"string\",\n                    \"RoleID\": \"string\",\n                    \"WorkspaceID\": \"string\"\n                  }\n                ],\n                \"Activities\": [\n                  {\n                    \"@context\": \"string\",\n                    \"accuracy\": \"[Unknown Type number]\",\n                    \"actor\": \"[Recursive structure]\",\n                    \"altitude\": \"[Unknown Type number]\",\n                    \"anyOf\": \"[Recursive structure]\",\n                    \"attachment\": \"[Recursive structure]\",\n                    \"attributedTo\": \"[Recursive structure]\",\n                    \"audience\": \"[Recursive structure]\",\n                    \"bcc\": \"[Recursive structure]\",\n                    \"bto\": \"[Recursive structure]\",\n                    \"cc\": \"[Recursive structure]\",\n                    \"closed\": \"string\",\n                    \"content\": \"[Recursive structure]\",\n                    \"context\": \"[Recursive structure]\",\n                    \"current\": \"[Recursive structure]\",\n                    \"deleted\": \"string\",\n                    \"duration\": \"string\",\n                    \"endTime\": \"string\",\n                    \"first\": \"[Recursive structure]\",\n                    \"formerType\": \"string\",\n                    \"generator\": \"[Recursive structure]\",\n                    \"height\": 10,\n                    \"href\": \"string\",\n                    \"hreflang\": \"string\",\n                    \"icon\": \"[Recursive structure]\",\n                    \"id\": \"string\",\n                    \"image\": \"[Recursive structure]\",\n                    \"inReplyTo\": \"[Recursive structure]\",\n                    \"instrument\": \"[Recursive structure]\",\n                    \"items\": [\n                      \"[Recursive structure]\"\n                    ],\n                    \"last\": \"[Recursive structure]\",\n                    \"latitude\": \"[Unknown Type number]\",\n                    \"location\": \"[Recursive structure]\",\n                    \"longitude\": \"[Unknown Type number]\",\n                    \"markdown\": \"string\",\n                    \"mediaType\": \"string\",\n                    \"name\": \"string\",\n                    \"next\": \"[Recursive structure]\",\n                    \"object\": \"[Recursive structure]\",\n                    \"oneOf\": \"[Recursive structure]\",\n                    \"origin\": \"[Recursive structure]\",\n                    \"partOf\": \"[Recursive structure]\",\n                    \"prev\": \"[Recursive structure]\",\n                    \"preview\": \"[Recursive structure]\",\n                    \"published\": \"string\",\n                    \"radius\": \"[Unknown Type number]\",\n                    \"rel\": \"string\",\n                    \"relationship\": \"[Recursive structure]\",\n                    \"replies\": \"[Recursive structure]\",\n                    \"result\": \"[Recursive structure]\",\n                    \"startTime\": \"string\",\n                    \"subject\": \"[Recursive structure]\",\n                    \"summary\": \"string\",\n                    \"tag\": \"[Recursive structure]\",\n                    \"target\": \"[Recursive structure]\",\n                    \"to\": \"[Recursive structure]\",\n                    \"totalItems\": 10,\n                    \"type\": \"string\",\n                    \"units\": \"string\",\n                    \"updated\": \"string\",\n                    \"url\": \"[Recursive structure]\",\n                    \"width\": 10\n                  }\n                ],\n                \"DataSources\": [\n                  {\n                    \"ApiKey\": \"string\",\n                    \"ApiSecret\": \"string\",\n                    \"CreationDate\": 10,\n                    \"Disabled\": true,\n                    \"EncryptionKey\": \"string\",\n                    \"EncryptionMode\": \"string\",\n                    \"FlatStorage\": true,\n                    \"LastSynchronizationDate\": 10,\n                    \"Name\": \"string\",\n                    \"ObjectsBaseFolder\": \"string\",\n                    \"ObjectsBucket\": \"string\",\n                    \"ObjectsHost\": \"string\",\n                    \"ObjectsPort\": 10,\n                    \"ObjectsSecure\": true,\n                    \"ObjectsServiceName\": \"string\",\n                    \"PeerAddress\": \"string\",\n                    \"SkipSyncOnRestart\": true,\n                    \"StorageConfiguration\": {},\n                    \"StorageType\": \"string\",\n                    \"VersioningPolicyName\": \"string\",\n                    \"Watch\": true\n                  }\n                ],\n                \"Event\": {\n                  \"@type\": \"string\"\n                },\n                \"Nodes\": [\n                  {\n                    \"AppearsIn\": [\n                      {\n                        \"Path\": \"string\",\n                        \"WsLabel\": \"string\",\n                        \"WsScope\": \"string\",\n                        \"WsSlug\": \"string\",\n                        \"WsUuid\": \"string\"\n                      }\n                    ],\n                    \"Commits\": [\n                      {\n                        \"Data\": \"string\",\n                        \"Description\": \"string\",\n                        \"Event\": {\n                          \"Metadata\": {},\n                          \"Optimistic\": true,\n                          \"Silent\": true,\n                          \"Source\": \"[Recursive structure]\",\n                          \"Target\": \"[Recursive structure]\",\n                          \"Type\": \"string\"\n                        },\n                        \"Location\": \"[Recursive structure]\",\n                        \"MTime\": \"string\",\n                        \"OwnerUuid\": \"string\",\n                        \"Size\": \"string\",\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Etag\": \"string\",\n                    \"MTime\": \"string\",\n                    \"MetaStore\": {},\n                    \"Mode\": 10,\n                    \"Path\": \"string\",\n                    \"Size\": \"string\",\n                    \"Type\": \"string\",\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"OutputChain\": [\n                  {\n                    \"ErrorString\": \"string\",\n                    \"Ignored\": true,\n                    \"JsonBody\": \"string\",\n                    \"RawBody\": \"string\",\n                    \"StringBody\": \"string\",\n                    \"Success\": true,\n                    \"Time\": 10,\n                    \"Vars\": {}\n                  }\n                ],\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Workspaces\": [\n                  {\n                    \"Attributes\": \"string\",\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"RootNodes\": {},\n                    \"RootUUIDs\": [\n                      \"string\"\n                    ],\n                    \"Scope\": \"string\",\n                    \"Slug\": \"string\",\n                    \"UUID\": \"string\"\n                  }\n                ]\n              },\n              \"OutputMessage\": {\n                \"Acls\": [\n                  {\n                    \"Action\": {\n                      \"Name\": \"string\",\n                      \"Value\": \"string\"\n                    },\n                    \"ID\": \"string\",\n                    \"NodeID\": \"string\",\n                    \"RoleID\": \"string\",\n                    \"WorkspaceID\": \"string\"\n                  }\n                ],\n                \"Activities\": [\n                  {\n                    \"@context\": \"string\",\n                    \"accuracy\": \"[Unknown Type number]\",\n                    \"actor\": \"[Recursive structure]\",\n                    \"altitude\": \"[Unknown Type number]\",\n                    \"anyOf\": \"[Recursive structure]\",\n                    \"attachment\": \"[Recursive structure]\",\n                    \"attributedTo\": \"[Recursive structure]\",\n                    \"audience\": \"[Recursive structure]\",\n                    \"bcc\": \"[Recursive structure]\",\n                    \"bto\": \"[Recursive structure]\",\n                    \"cc\": \"[Recursive structure]\",\n                    \"closed\": \"string\",\n                    \"content\": \"[Recursive structure]\",\n                    \"context\": \"[Recursive structure]\",\n                    \"current\": \"[Recursive structure]\",\n                    \"deleted\": \"string\",\n                    \"duration\": \"string\",\n                    \"endTime\": \"string\",\n                    \"first\": \"[Recursive structure]\",\n                    \"formerType\": \"string\",\n                    \"generator\": \"[Recursive structure]\",\n                    \"height\": 10,\n                    \"href\": \"string\",\n                    \"hreflang\": \"string\",\n                    \"icon\": \"[Recursive structure]\",\n                    \"id\": \"string\",\n                    \"image\": \"[Recursive structure]\",\n                    \"inReplyTo\": \"[Recursive structure]\",\n                    \"instrument\": \"[Recursive structure]\",\n                    \"items\": [\n                      \"[Recursive structure]\"\n                    ],\n                    \"last\": \"[Recursive structure]\",\n                    \"latitude\": \"[Unknown Type number]\",\n                    \"location\": \"[Recursive structure]\",\n                    \"longitude\": \"[Unknown Type number]\",\n                    \"markdown\": \"string\",\n                    \"mediaType\": \"string\",\n                    \"name\": \"string\",\n                    \"next\": \"[Recursive structure]\",\n                    \"object\": \"[Recursive structure]\",\n                    \"oneOf\": \"[Recursive structure]\",\n                    \"origin\": \"[Recursive structure]\",\n                    \"partOf\": \"[Recursive structure]\",\n                    \"prev\": \"[Recursive structure]\",\n                    \"preview\": \"[Recursive structure]\",\n                    \"published\": \"string\",\n                    \"radius\": \"[Unknown Type number]\",\n                    \"rel\": \"string\",\n                    \"relationship\": \"[Recursive structure]\",\n                    \"replies\": \"[Recursive structure]\",\n                    \"result\": \"[Recursive structure]\",\n                    \"startTime\": \"string\",\n                    \"subject\": \"[Recursive structure]\",\n                    \"summary\": \"string\",\n                    \"tag\": \"[Recursive structure]\",\n                    \"target\": \"[Recursive structure]\",\n                    \"to\": \"[Recursive structure]\",\n                    \"totalItems\": 10,\n                    \"type\": \"string\",\n                    \"units\": \"string\",\n                    \"updated\": \"string\",\n                    \"url\": \"[Recursive structure]\",\n                    \"width\": 10\n                  }\n                ],\n                \"DataSources\": [\n                  {\n                    \"ApiKey\": \"string\",\n                    \"ApiSecret\": \"string\",\n                    \"CreationDate\": 10,\n                    \"Disabled\": true,\n                    \"EncryptionKey\": \"string\",\n                    \"EncryptionMode\": \"string\",\n                    \"FlatStorage\": true,\n                    \"LastSynchronizationDate\": 10,\n                    \"Name\": \"string\",\n                    \"ObjectsBaseFolder\": \"string\",\n                    \"ObjectsBucket\": \"string\",\n                    \"ObjectsHost\": \"string\",\n                    \"ObjectsPort\": 10,\n                    \"ObjectsSecure\": true,\n                    \"ObjectsServiceName\": \"string\",\n                    \"PeerAddress\": \"string\",\n                    \"SkipSyncOnRestart\": true,\n                    \"StorageConfiguration\": {},\n                    \"StorageType\": \"string\",\n                    \"VersioningPolicyName\": \"string\",\n                    \"Watch\": true\n                  }\n                ],\n                \"Event\": {\n                  \"@type\": \"string\"\n                },\n                \"Nodes\": [\n                  {\n                    \"AppearsIn\": [\n                      {\n                        \"Path\": \"string\",\n                        \"WsLabel\": \"string\",\n                        \"WsScope\": \"string\",\n                        \"WsSlug\": \"string\",\n                        \"WsUuid\": \"string\"\n                      }\n                    ],\n                    \"Commits\": [\n                      {\n                        \"Data\": \"string\",\n                        \"Description\": \"string\",\n                        \"Event\": {\n                          \"Metadata\": {},\n                          \"Optimistic\": true,\n                          \"Silent\": true,\n                          \"Source\": \"[Recursive structure]\",\n                          \"Target\": \"[Recursive structure]\",\n                          \"Type\": \"string\"\n                        },\n                        \"Location\": \"[Recursive structure]\",\n                        \"MTime\": \"string\",\n                        \"OwnerUuid\": \"string\",\n                        \"Size\": \"string\",\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Etag\": \"string\",\n                    \"MTime\": \"string\",\n                    \"MetaStore\": {},\n                    \"Mode\": 10,\n                    \"Path\": \"string\",\n                    \"Size\": \"string\",\n                    \"Type\": \"string\",\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"OutputChain\": [\n                  {\n                    \"ErrorString\": \"string\",\n                    \"Ignored\": true,\n                    \"JsonBody\": \"string\",\n                    \"RawBody\": \"string\",\n                    \"StringBody\": \"string\",\n                    \"Success\": true,\n                    \"Time\": 10,\n                    \"Vars\": {}\n                  }\n                ],\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Workspaces\": [\n                  {\n                    \"Attributes\": \"string\",\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"RootNodes\": {},\n                    \"RootUUIDs\": [\n                      \"string\"\n                    ],\n                    \"Scope\": \"string\",\n                    \"Slug\": \"string\",\n                    \"UUID\": \"string\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"CanPause\": true,\n          \"CanStop\": true,\n          \"EndTime\": 10,\n          \"HasProgress\": true,\n          \"ID\": \"string\",\n          \"JobID\": \"string\",\n          \"Progress\": \"[Unknown Type number]\",\n          \"StartTime\": 10,\n          \"Status\": \"string\",\n          \"StatusMessage\": \"string\",\n          \"TriggerOwner\": \"string\"\n        }\n      ],\n      \"TasksSilentUpdate\": true,\n      \"Timeout\": \"string\",\n      \"UserEventFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"VersionMeta\": {}\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/jobs-service/put-a-jobs-user/","title":"PUT /a/jobs/user","text":"<p>Send Control Commands to one or many jobs / tasks  </p>"},{"location":"developer-guide/rest-api/jobs-service/put-a-jobs-user/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Cmd Type of command to send (None, Pause, Resume, Stop, Delete, RunOnce, Inactive, Active) #/definitions/jobsCommand JobId Id of the job string OwnerId Owner of the job string RunParameters Parameters used for RunOnce command object TaskId Id of the associated task string"},{"location":"developer-guide/rest-api/jobs-service/put-a-jobs-user/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Cmd\": \"string\",\n  \"JobId\": \"string\",\n  \"OwnerId\": \"string\",\n  \"RunParameters\": {},\n  \"TaskId\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/jobs-service/put-a-jobs-user/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/jobsCtrlCommandResponse</p> <pre><code>{\n  \"Msg\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/jobs-service/put-a-jobs-user-jobname/","title":"PUT /a/jobs/user/{JobName}","text":"<p>Create a predefined job to be run directly  </p>"},{"location":"developer-guide/rest-api/jobs-service/put-a-jobs-user-jobname/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/jobs-service/put-a-jobs-user-jobname/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restUserJobResponse</p> <pre><code>{\n  \"JobUuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-license-service/index/","title":"Index","text":"<p>This service provides endpoints for reading and saving enterprise license.</p> <ul> <li>GET /a/license/stats</li> <li>PUT /a/license/update</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-license-service/get-a-license-stats/","title":"GET /a/license/stats","text":"<p>[Enterprise Only] Display statistics about licenses usage  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/enterprise-license-service/get-a-license-stats/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/certLicenseStatsResponse</p> <pre><code>{\n  \"ActivePeers\": \"string\",\n  \"ActiveUsers\": \"string\",\n  \"License\": {\n    \"AccountName\": \"string\",\n    \"ExpireTime\": 10,\n    \"Features\": {},\n    \"Id\": \"string\",\n    \"IssueTime\": 10,\n    \"MaxPeers\": \"string\",\n    \"MaxUsers\": \"string\",\n    \"ServerDomain\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-license-service/put-a-license-update/","title":"PUT /a/license/update","text":"<p>[Enterprise Only] Update License String  </p>"},{"location":"developer-guide/rest-api/enterprise-license-service/put-a-license-update/#body-parameters","title":"Body Parameters","text":"Name Description Type Required LicenseString string"},{"location":"developer-guide/rest-api/enterprise-license-service/put-a-license-update/#body-example","title":"Body Example","text":"<pre><code>{\n  \"LicenseString\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-license-service/put-a-license-update/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/certPutLicenseInfoResponse</p> <pre><code>{\n  \"ErrorInvalid\": true,\n  \"ErrorWrite\": true,\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/log-service/index/","title":"Log Service","text":"<p>This services provides access to the application logs. Please note that the server must run in 'production' mode to fill the internal log store.</p> <ul> <li>POST /a/log/sys</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/log-service/post-a-log-sys/","title":"POST /a/log/sys","text":"<p>Technical Logs, in Json or CSV format  </p>"},{"location":"developer-guide/rest-api/log-service/post-a-log-sys/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Format #/definitions/ListLogRequestLogFormat Page Start at page integer Query Bleve-type Query stsring string Size Number of results integer"},{"location":"developer-guide/rest-api/log-service/post-a-log-sys/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Format\": \"string\",\n  \"Page\": 10,\n  \"Query\": \"string\",\n  \"Size\": 10\n}\n</code></pre>"},{"location":"developer-guide/rest-api/log-service/post-a-log-sys/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restLogMessageCollection</p> <pre><code>{\n  \"Logs\": [\n    {\n      \"GroupPath\": \"string\",\n      \"HttpProtocol\": \"string\",\n      \"JsonZaps\": \"string\",\n      \"Level\": \"string\",\n      \"Logger\": \"string\",\n      \"Msg\": \"string\",\n      \"MsgId\": \"string\",\n      \"NodePath\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"OperationLabel\": \"string\",\n      \"OperationUuid\": \"string\",\n      \"Profile\": \"string\",\n      \"RemoteAddress\": \"string\",\n      \"RoleUuids\": [\n        \"string\"\n      ],\n      \"SchedulerJobUuid\": \"string\",\n      \"SchedulerTaskActionPath\": \"string\",\n      \"SchedulerTaskUuid\": \"string\",\n      \"SpanParentUuid\": \"string\",\n      \"SpanRootUuid\": \"string\",\n      \"SpanUuid\": \"string\",\n      \"TransferSize\": \"string\",\n      \"Ts\": 10,\n      \"UserAgent\": \"string\",\n      \"UserName\": \"string\",\n      \"UserUuid\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/mailer-service/index/","title":"Mailer Service","text":"<p>This service provides a simple way to trigger emails to be sent or queued, based on predefined email templates.</p> <ul> <li>POST /a/mailer/send</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/mailer-service/post-a-mailer-send/","title":"POST /a/mailer/send","text":"<p>Send an email to a user or any email address  </p>"},{"location":"developer-guide/rest-api/mailer-service/post-a-mailer-send/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Attachments List of attachments array Cc List of target users to put in CC array ContentHtml HTML content used for the body string ContentMarkdown Markdown content used for the body string ContentPlain Plain-text content used for the body, if not set will be generated from the ContentHtml string DateSent Date of sending string From User object used to compute the From header #/definitions/mailerUser Retries Number of retries after failed attempts (used internally) integer Sender User object used to compute the Sender header #/definitions/mailerUser Subject String used as subject for the email string TemplateData Key/values to pass to the template object TemplateId Mail Template Id refers to predefined templates string ThreadIndex Not used, could be used to create conversations string ThreadUuid Not used, could be used to create conversations string To List of target users to send the mail to array sendErrors Errors stacked on failed attempts array"},{"location":"developer-guide/rest-api/mailer-service/post-a-mailer-send/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Attachments\": [\n    \"string\"\n  ],\n  \"Cc\": [\n    {\n      \"Address\": \"string\",\n      \"Language\": \"string\",\n      \"Name\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"ContentHtml\": \"string\",\n  \"ContentMarkdown\": \"string\",\n  \"ContentPlain\": \"string\",\n  \"DateSent\": \"string\",\n  \"From\": {\n    \"Address\": \"string\",\n    \"Language\": \"string\",\n    \"Name\": \"string\",\n    \"Uuid\": \"string\"\n  },\n  \"Retries\": 10,\n  \"Sender\": {\n    \"Address\": \"string\",\n    \"Language\": \"string\",\n    \"Name\": \"string\",\n    \"Uuid\": \"string\"\n  },\n  \"Subject\": \"string\",\n  \"TemplateData\": {},\n  \"TemplateId\": \"string\",\n  \"ThreadIndex\": \"string\",\n  \"ThreadUuid\": \"string\",\n  \"To\": [\n    {\n      \"Address\": \"string\",\n      \"Language\": \"string\",\n      \"Name\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"sendErrors\": [\n    \"string\"\n  ]\n}\n</code></pre>"},{"location":"developer-guide/rest-api/mailer-service/post-a-mailer-send/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/mailerSendMailResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/meta-service/index/","title":"Meta Service","text":"<p>This service provides access to files/folders internal metadata (differing from user-defined metadata). Backward compatible with the Tree Service.</p> <ul> <li>POST /a/meta/bulk/get</li> <li>POST /a/meta/delete/{NodePath}</li> <li>POST /a/meta/get/{NodePath}</li> <li>POST /a/meta/set/{NodePath}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-bulk-get/","title":"POST /a/meta/bulk/get","text":"<p>List meta for a list of nodes, or a full directory using /path/* syntax  </p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-bulk-get/#body-parameters","title":"Body Parameters","text":"Name Description Type Required AllMetaProviders Whether to query all services for the metadata they can contribute to enrich the node boolean Filters Children Filtering object Limit Limit number of results integer NodePaths List of node paths to query (use paths ending with /* to load the children) array Offset Start listing at a given position integer SortDirDesc Sort descending (otherwise ascending) boolean SortField Remote Sort on specific field string Versions Load Versions of the given node boolean"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-bulk-get/#body-example","title":"Body Example","text":"<pre><code>{\n  \"AllMetaProviders\": true,\n  \"Filters\": {},\n  \"Limit\": 10,\n  \"NodePaths\": [\n    \"string\"\n  ],\n  \"Offset\": 10,\n  \"SortDirDesc\": true,\n  \"SortField\": \"string\",\n  \"Versions\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-bulk-get/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restBulkMetaResponse</p> <pre><code>{\n  \"Nodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Pagination\": {\n    \"CurrentOffset\": 10,\n    \"CurrentPage\": 10,\n    \"Limit\": 10,\n    \"NextOffset\": 10,\n    \"PrevOffset\": 10,\n    \"Total\": 10,\n    \"TotalPages\": 10\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-delete-nodepath/","title":"POST /a/meta/delete/{NodePath}","text":"<p>Delete metadata of a given node  </p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-delete-nodepath/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-delete-nodepath/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/treeNode</p> <pre><code>{\n  \"AppearsIn\": [\n    {\n      \"Path\": \"string\",\n      \"WsLabel\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsSlug\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ],\n  \"Commits\": [\n    {\n      \"Data\": \"string\",\n      \"Description\": \"string\",\n      \"Event\": {\n        \"Metadata\": {},\n        \"Optimistic\": true,\n        \"Silent\": true,\n        \"Source\": \"[Recursive structure]\",\n        \"Target\": \"[Recursive structure]\",\n        \"Type\": \"string\"\n      },\n      \"Location\": \"[Recursive structure]\",\n      \"MTime\": \"string\",\n      \"OwnerUuid\": \"string\",\n      \"Size\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Etag\": \"string\",\n  \"MTime\": \"string\",\n  \"MetaStore\": {},\n  \"Mode\": 10,\n  \"Path\": \"string\",\n  \"Size\": \"string\",\n  \"Type\": \"string\",\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-get-nodepath/","title":"POST /a/meta/get/{NodePath}","text":"<p>Load metadata for a given node  </p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-get-nodepath/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-get-nodepath/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/treeNode</p> <pre><code>{\n  \"AppearsIn\": [\n    {\n      \"Path\": \"string\",\n      \"WsLabel\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsSlug\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ],\n  \"Commits\": [\n    {\n      \"Data\": \"string\",\n      \"Description\": \"string\",\n      \"Event\": {\n        \"Metadata\": {},\n        \"Optimistic\": true,\n        \"Silent\": true,\n        \"Source\": \"[Recursive structure]\",\n        \"Target\": \"[Recursive structure]\",\n        \"Type\": \"string\"\n      },\n      \"Location\": \"[Recursive structure]\",\n      \"MTime\": \"string\",\n      \"OwnerUuid\": \"string\",\n      \"Size\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Etag\": \"string\",\n  \"MTime\": \"string\",\n  \"MetaStore\": {},\n  \"Mode\": 10,\n  \"Path\": \"string\",\n  \"Size\": \"string\",\n  \"Type\": \"string\",\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-set-nodepath/","title":"POST /a/meta/set/{NodePath}","text":"<p>Update metadata for a given node  </p>"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-set-nodepath/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/meta-service/post-a-meta-set-nodepath/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/treeNode</p> <pre><code>{\n  \"AppearsIn\": [\n    {\n      \"Path\": \"string\",\n      \"WsLabel\": \"string\",\n      \"WsScope\": \"string\",\n      \"WsSlug\": \"string\",\n      \"WsUuid\": \"string\"\n    }\n  ],\n  \"Commits\": [\n    {\n      \"Data\": \"string\",\n      \"Description\": \"string\",\n      \"Event\": {\n        \"Metadata\": {},\n        \"Optimistic\": true,\n        \"Silent\": true,\n        \"Source\": \"[Recursive structure]\",\n        \"Target\": \"[Recursive structure]\",\n        \"Type\": \"string\"\n      },\n      \"Location\": \"[Recursive structure]\",\n      \"MTime\": \"string\",\n      \"OwnerUuid\": \"string\",\n      \"Size\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Etag\": \"string\",\n  \"MTime\": \"string\",\n  \"MetaStore\": {},\n  \"Mode\": 10,\n  \"Path\": \"string\",\n  \"Size\": \"string\",\n  \"Type\": \"string\",\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/policy-service/index/","title":"Policy Service","text":"<p>This service provides endpoints for managing resource policies. Resource policies are simple rules that can be stacked on any object with a \"deny-by-default\" approach.</p> <ul> <li>POST /a/policy</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/policy-service/post-a-policy/","title":"POST /a/policy","text":"<p>List all defined security policies  </p>"},{"location":"developer-guide/rest-api/policy-service/post-a-policy/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Filter string"},{"location":"developer-guide/rest-api/policy-service/post-a-policy/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Filter\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/policy-service/post-a-policy/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmListPolicyGroupsResponse</p> <pre><code>{\n  \"PolicyGroups\": [\n    {\n      \"Description\": \"string\",\n      \"LastUpdated\": 10,\n      \"Name\": \"string\",\n      \"OwnerUuid\": \"string\",\n      \"Policies\": [\n        {\n          \"actions\": [\n            \"string\"\n          ],\n          \"conditions\": {},\n          \"description\": \"string\",\n          \"effect\": \"string\",\n          \"id\": \"string\",\n          \"resources\": [\n            \"string\"\n          ],\n          \"subjects\": [\n            \"string\"\n          ]\n        }\n      ],\n      \"ResourceGroup\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/role-service/index/","title":"Role Service","text":"<p>This service provides CRUD endpoints for managing roles. Roles are generic set of permissions that can be applied to any users. Every user has her own role, as every group has one too. User teams are roles as well.</p> <ul> <li>DELETE /a/role/{Uuid}</li> <li>GET /a/role/{Uuid}</li> <li>POST /a/role</li> <li>PUT /a/role/{Uuid}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/role-service/delete-a-role-uuid/","title":"DELETE /a/role/{Uuid}","text":"<p>Delete a Role by ID  </p>"},{"location":"developer-guide/rest-api/role-service/delete-a-role-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>Uuid (string, required) Unique identifier of this role</p> </li> <li> <p>Label (string) Label of this role</p> </li> <li> <p>IsTeam (boolean) Whether this role represents a user team or not</p> </li> <li> <p>GroupRole (boolean) Whether this role is attached to a Group object</p> </li> <li> <p>UserRole (boolean) Whether this role is attached to a User object</p> </li> <li> <p>LastUpdated (integer) Last modification date of the role</p> </li> <li> <p>AutoApplies (array) List of profiles (standard, shared, admin) on which the role will be automatically applied</p> </li> <li> <p>PoliciesContextEditable (boolean) Whether the policies resolve into an editable state</p> </li> <li> <p>ForceOverride (boolean) Is used in a stack of roles, this one will always be applied last.</p> </li> </ul>"},{"location":"developer-guide/rest-api/role-service/delete-a-role-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmRole</p> <pre><code>{\n  \"AutoApplies\": [\n    \"string\"\n  ],\n  \"ForceOverride\": true,\n  \"GroupRole\": true,\n  \"IsTeam\": true,\n  \"Label\": \"string\",\n  \"LastUpdated\": 10,\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"UserRole\": true,\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/role-service/get-a-role-uuid/","title":"GET /a/role/{Uuid}","text":"<p>Get a Role by ID  </p>"},{"location":"developer-guide/rest-api/role-service/get-a-role-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>Uuid (string, required) Unique identifier of this role</li> </ul>"},{"location":"developer-guide/rest-api/role-service/get-a-role-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmRole</p> <pre><code>{\n  \"AutoApplies\": [\n    \"string\"\n  ],\n  \"ForceOverride\": true,\n  \"GroupRole\": true,\n  \"IsTeam\": true,\n  \"Label\": \"string\",\n  \"LastUpdated\": 10,\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"UserRole\": true,\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/role-service/post-a-role/","title":"POST /a/role","text":"<p>Search Roles  </p>"},{"location":"developer-guide/rest-api/role-service/post-a-role/#body-parameters","title":"Body Parameters","text":"Name Description Type Required CountOnly Return counts only, no actual results boolean GroupBy Group results by integer Limit Limit number of results string Offset Start listing at a given position string Operation Combine Single Queries with AND or OR #/definitions/serviceOperationType Queries List of atomic queries that will be combined using the Operation type (AND / OR) array ResourcePolicyQuery Policies query for specifying the search context #/definitions/restResourcePolicyQuery"},{"location":"developer-guide/rest-api/role-service/post-a-role/#body-example","title":"Body Example","text":"<pre><code>{\n  \"CountOnly\": true,\n  \"GroupBy\": 10,\n  \"Limit\": \"string\",\n  \"Offset\": \"string\",\n  \"Operation\": \"string\",\n  \"Queries\": [\n    {\n      \"HasAutoApply\": true,\n      \"IsGroupRole\": true,\n      \"IsTeam\": true,\n      \"IsUserRole\": true,\n      \"Label\": \"string\",\n      \"Uuid\": [\n        \"string\"\n      ],\n      \"not\": true\n    }\n  ],\n  \"ResourcePolicyQuery\": {\n    \"Type\": \"string\",\n    \"UserId\": \"string\"\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/role-service/post-a-role/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restRolesCollection</p> <pre><code>{\n  \"Roles\": [\n    {\n      \"AutoApplies\": [\n        \"string\"\n      ],\n      \"ForceOverride\": true,\n      \"GroupRole\": true,\n      \"IsTeam\": true,\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"UserRole\": true,\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/role-service/put-a-role-uuid/","title":"PUT /a/role/{Uuid}","text":"<p>Create or update a Role  </p>"},{"location":"developer-guide/rest-api/role-service/put-a-role-uuid/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/role-service/put-a-role-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmRole</p> <pre><code>{\n  \"AutoApplies\": [\n    \"string\"\n  ],\n  \"ForceOverride\": true,\n  \"GroupRole\": true,\n  \"IsTeam\": true,\n  \"Label\": \"string\",\n  \"LastUpdated\": 10,\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"UserRole\": true,\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/index/","title":"Index","text":"<p>This service provides endpoints for managing jobs directly in the enterprise scheduler.</p> <ul> <li>DELETE /a/scheduler/jobs/{JobID}</li> <li>DELETE /a/scheduler/templates/actions/{TemplateName}</li> <li>DELETE /a/scheduler/templates/jobs/{Name}</li> <li>DELETE /a/scheduler/templates/selectors/{TemplateName}</li> <li>DELETE /a/scheduler/versions/{JobID}/{VersionID}</li> <li>GET /a/scheduler/templates/docs/{Type}</li> <li>PATCH /a/scheduler/versions/{JobID}/{VersionID}</li> <li>POST /a/scheduler/hooks/{HookSlug}</li> <li>POST /a/scheduler/templates/actions</li> <li>POST /a/scheduler/templates/jobs</li> <li>POST /a/scheduler/templates/playground</li> <li>POST /a/scheduler/templates/selectors</li> <li>POST /a/scheduler/versions/{JobID}</li> <li>PUT /a/scheduler/jobs</li> <li>PUT /a/scheduler/templates/actions</li> <li>PUT /a/scheduler/templates/jobs/{Name}</li> <li>PUT /a/scheduler/templates/selectors</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-jobs-jobid/","title":"DELETE /a/scheduler/jobs/{JobID}","text":"<p>[Enterprise Only] Delete a job from the scheduler  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-jobs-jobid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>JobID (string, required) </p> </li> <li> <p>CleanableJobs (boolean) </p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-jobs-jobid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/jobsDeleteJobResponse</p> <pre><code>{\n  \"DeleteCount\": 10,\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-actions-templatename/","title":"DELETE /a/scheduler/templates/actions/{TemplateName}","text":"<p>Templates management for actions  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-actions-templatename/#path-parameters","title":"Path Parameters","text":"<ul> <li>TemplateName (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-actions-templatename/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteActionTemplateResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-jobs-name/","title":"DELETE /a/scheduler/templates/jobs/{Name}","text":"<p>Templates management for Jobs  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-jobs-name/#path-parameters","title":"Path Parameters","text":"<ul> <li>Name (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-jobs-name/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteJobTemplateResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-selectors-templatename/","title":"DELETE /a/scheduler/templates/selectors/{TemplateName}","text":"<p>Templates management for filters  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-selectors-templatename/#path-parameters","title":"Path Parameters","text":"<ul> <li>TemplateName (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-templates-selectors-templatename/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteSelectorTemplateResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-versions-jobid-versionid/","title":"DELETE /a/scheduler/versions/{JobID}/{VersionID}","text":""},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-versions-jobid-versionid/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>JobID (string, required) </p> </li> <li> <p>VersionID (string, required) </p> </li> <li> <p>Type (string) </p> </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/delete-a-scheduler-versions-jobid-versionid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDeleteJobVersionResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/get-a-scheduler-templates-docs-type/","title":"GET /a/scheduler/templates/docs/{Type}","text":""},{"location":"developer-guide/rest-api/enterprise-scheduler-service/get-a-scheduler-templates-docs-type/#path-parameters","title":"Path Parameters","text":"<ul> <li>Type (string, required) </li> </ul>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/get-a-scheduler-templates-docs-type/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entDocTemplatesResponse</p> <pre><code>{\n  \"Docs\": [\n    {\n      \"Context\": \"string\",\n      \"Long\": \"string\",\n      \"Name\": \"string\",\n      \"Short\": \"string\"\n    }\n  ],\n  \"Type\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/patch-a-scheduler-versions-jobid-versionid/","title":"PATCH /a/scheduler/versions/{JobID}/{VersionID}","text":""},{"location":"developer-guide/rest-api/enterprise-scheduler-service/patch-a-scheduler-versions-jobid-versionid/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/patch-a-scheduler-versions-jobid-versionid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entRestoreJobVersionResponse</p> <pre><code>{\n  \"Job\": {\n    \"Actions\": [\n      {\n        \"ActionOutputFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"BreakAfter\": true,\n        \"Bypass\": true,\n        \"ChainedActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"DataFilter\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSelector\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"DataSourceSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Description\": \"string\",\n        \"FailedFilterActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"IdmSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Label\": \"string\",\n        \"MergeAction\": \"[Recursive structure]\",\n        \"NodesFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"NodesSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Parameters\": {},\n        \"Timeout\": \"string\",\n        \"TriggerFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"UsersFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"UsersSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"AutoClean\": true,\n    \"AutoRestart\": true,\n    \"AutoStart\": true,\n    \"ChatEventFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      }\n    },\n    \"ContextMetaFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Type\": \"string\"\n    },\n    \"CreatedAt\": 10,\n    \"Custom\": true,\n    \"DataSourceFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"EventNames\": [\n      \"string\"\n    ],\n    \"Hooks\": [\n      {\n        \"AllowOverridePresets\": true,\n        \"ApiSlug\": \"string\",\n        \"Metadata\": {},\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PresetParameters\": {}\n      }\n    ],\n    \"ID\": \"string\",\n    \"IdmFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"Inactive\": true,\n    \"Label\": \"string\",\n    \"Languages\": [\n      \"string\"\n    ],\n    \"MaxConcurrency\": 10,\n    \"MergeAction\": {\n      \"ActionOutputFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"BreakAfter\": true,\n      \"Bypass\": true,\n      \"ChainedActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"DataFilter\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSelector\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"DataSourceSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Description\": \"string\",\n      \"FailedFilterActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"IdmSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Label\": \"string\",\n      \"MergeAction\": \"[Recursive structure]\",\n      \"NodesFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"NodesSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Parameters\": {},\n      \"Timeout\": \"string\",\n      \"TriggerFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"UsersFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"UsersSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      }\n    },\n    \"Metadata\": {},\n    \"ModifiedAt\": 10,\n    \"NodeEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Pathes\": [\n        \"string\"\n      ],\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\"\n    },\n    \"Owner\": \"string\",\n    \"Parameters\": [\n      {\n        \"Description\": \"string\",\n        \"JsonChoices\": \"string\",\n        \"Mandatory\": true,\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Value\": \"string\"\n      }\n    ],\n    \"ResourcesDependencies\": [\n      {\n        \"@type\": \"string\"\n      }\n    ],\n    \"Schedule\": {\n      \"Iso8601MinDelta\": \"string\",\n      \"Iso8601Schedule\": \"string\"\n    },\n    \"Tasks\": [\n      {\n        \"ActionsLogs\": [\n          {\n            \"Action\": {\n              \"ActionOutputFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"BreakAfter\": true,\n              \"Bypass\": true,\n              \"ChainedActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ChatEventFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"ContextMetaFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Type\": \"string\"\n              },\n              \"DataFilter\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSelector\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSourceFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"DataSourceSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Description\": \"string\",\n              \"FailedFilterActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ID\": \"string\",\n              \"IdmFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"IdmSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Label\": \"string\",\n              \"MergeAction\": \"[Recursive structure]\",\n              \"NodesFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"NodesSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"Parameters\": {},\n              \"Timeout\": \"string\",\n              \"TriggerFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"UsersFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              },\n              \"UsersSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              }\n            },\n            \"InputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"AppearsIn\": [\n                    {\n                      \"Path\": \"string\",\n                      \"WsLabel\": \"string\",\n                      \"WsScope\": \"string\",\n                      \"WsSlug\": \"string\",\n                      \"WsUuid\": \"string\"\n                    }\n                  ],\n                  \"Commits\": [\n                    {\n                      \"Data\": \"string\",\n                      \"Description\": \"string\",\n                      \"Event\": {\n                        \"Metadata\": {},\n                        \"Optimistic\": true,\n                        \"Silent\": true,\n                        \"Source\": \"[Recursive structure]\",\n                        \"Target\": \"[Recursive structure]\",\n                        \"Type\": \"string\"\n                      },\n                      \"Location\": \"[Recursive structure]\",\n                      \"MTime\": \"string\",\n                      \"OwnerUuid\": \"string\",\n                      \"Size\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Etag\": \"string\",\n                  \"MTime\": \"string\",\n                  \"MetaStore\": {},\n                  \"Mode\": 10,\n                  \"Path\": \"string\",\n                  \"Size\": \"string\",\n                  \"Type\": \"string\",\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            },\n            \"OutputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"AppearsIn\": [\n                    {\n                      \"Path\": \"string\",\n                      \"WsLabel\": \"string\",\n                      \"WsScope\": \"string\",\n                      \"WsSlug\": \"string\",\n                      \"WsUuid\": \"string\"\n                    }\n                  ],\n                  \"Commits\": [\n                    {\n                      \"Data\": \"string\",\n                      \"Description\": \"string\",\n                      \"Event\": {\n                        \"Metadata\": {},\n                        \"Optimistic\": true,\n                        \"Silent\": true,\n                        \"Source\": \"[Recursive structure]\",\n                        \"Target\": \"[Recursive structure]\",\n                        \"Type\": \"string\"\n                      },\n                      \"Location\": \"[Recursive structure]\",\n                      \"MTime\": \"string\",\n                      \"OwnerUuid\": \"string\",\n                      \"Size\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Etag\": \"string\",\n                  \"MTime\": \"string\",\n                  \"MetaStore\": {},\n                  \"Mode\": 10,\n                  \"Path\": \"string\",\n                  \"Size\": \"string\",\n                  \"Type\": \"string\",\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            }\n          }\n        ],\n        \"CanPause\": true,\n        \"CanStop\": true,\n        \"EndTime\": 10,\n        \"HasProgress\": true,\n        \"ID\": \"string\",\n        \"JobID\": \"string\",\n        \"Progress\": \"[Unknown Type number]\",\n        \"StartTime\": 10,\n        \"Status\": \"string\",\n        \"StatusMessage\": \"string\",\n        \"TriggerOwner\": \"string\"\n      }\n    ],\n    \"TasksSilentUpdate\": true,\n    \"Timeout\": \"string\",\n    \"UserEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Users\": [\n        {\n          \"Attributes\": {},\n          \"GroupLabel\": \"string\",\n          \"GroupPath\": \"string\",\n          \"IsGroup\": true,\n          \"LastConnected\": 10,\n          \"Login\": \"string\",\n          \"OldPassword\": \"string\",\n          \"Password\": \"string\",\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PoliciesContextEditable\": true,\n          \"Roles\": [\n            {\n              \"AutoApplies\": [\n                \"string\"\n              ],\n              \"ForceOverride\": true,\n              \"GroupRole\": true,\n              \"IsTeam\": true,\n              \"Label\": \"string\",\n              \"LastUpdated\": 10,\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"UserRole\": true,\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"Uuid\": \"string\"\n        }\n      ]\n    },\n    \"VersionMeta\": {}\n  },\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-hooks-hookslug/","title":"POST /a/scheduler/hooks/{HookSlug}","text":""},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-hooks-hookslug/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-hooks-hookslug/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entJobHookResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-actions/","title":"POST /a/scheduler/templates/actions","text":"<p>Templates management for actions  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-actions/#body-parameters","title":"Body Parameters","text":"Name Description Type Required All boolean"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-actions/#body-example","title":"Body Example","text":"<pre><code>{\n  \"All\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-actions/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entListActionTemplatesResponse</p> <pre><code>{\n  \"Templates\": [\n    {\n      \"Action\": {\n        \"ActionOutputFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"BreakAfter\": true,\n        \"Bypass\": true,\n        \"ChainedActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"DataFilter\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSelector\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"DataSourceSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Description\": \"string\",\n        \"FailedFilterActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"IdmSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Label\": \"string\",\n        \"MergeAction\": \"[Recursive structure]\",\n        \"NodesFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"NodesSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Parameters\": {},\n        \"Timeout\": \"string\",\n        \"TriggerFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"UsersFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"UsersSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        }\n      },\n      \"Name\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-jobs/","title":"POST /a/scheduler/templates/jobs","text":"<p>Templates management for Jobs  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-jobs/#body-parameters","title":"Body Parameters","text":"Name Description Type Required All boolean"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-jobs/#body-example","title":"Body Example","text":"<pre><code>{\n  \"All\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-jobs/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entListJobTemplatesResponse</p> <pre><code>{\n  \"Jobs\": [\n    {\n      \"Actions\": [\n        {\n          \"ActionOutputFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"BreakAfter\": true,\n          \"Bypass\": true,\n          \"ChainedActions\": [\n            \"[Recursive structure]\"\n          ],\n          \"ChatEventFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"ContextMetaFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Type\": \"string\"\n          },\n          \"DataFilter\": {\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\"\n          },\n          \"DataSelector\": {\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\"\n          },\n          \"DataSourceFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"DataSourceSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"Description\": \"string\",\n          \"FailedFilterActions\": [\n            \"[Recursive structure]\"\n          ],\n          \"ID\": \"string\",\n          \"IdmFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"IdmSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"Label\": \"string\",\n          \"MergeAction\": \"[Recursive structure]\",\n          \"NodesFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Pathes\": [\n              \"string\"\n            ],\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\"\n          },\n          \"NodesSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Pathes\": [\n              \"string\"\n            ],\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\"\n          },\n          \"Parameters\": {},\n          \"Timeout\": \"string\",\n          \"TriggerFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"UsersFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Users\": [\n              {\n                \"Attributes\": {},\n                \"GroupLabel\": \"string\",\n                \"GroupPath\": \"string\",\n                \"IsGroup\": true,\n                \"LastConnected\": 10,\n                \"Login\": \"string\",\n                \"OldPassword\": \"string\",\n                \"Password\": \"string\",\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Uuid\": \"string\"\n              }\n            ]\n          },\n          \"UsersSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Users\": [\n              {\n                \"Attributes\": {},\n                \"GroupLabel\": \"string\",\n                \"GroupPath\": \"string\",\n                \"IsGroup\": true,\n                \"LastConnected\": 10,\n                \"Login\": \"string\",\n                \"OldPassword\": \"string\",\n                \"Password\": \"string\",\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Uuid\": \"string\"\n              }\n            ]\n          }\n        }\n      ],\n      \"AutoClean\": true,\n      \"AutoRestart\": true,\n      \"AutoStart\": true,\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"CreatedAt\": 10,\n      \"Custom\": true,\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"EventNames\": [\n        \"string\"\n      ],\n      \"Hooks\": [\n        {\n          \"AllowOverridePresets\": true,\n          \"ApiSlug\": \"string\",\n          \"Metadata\": {},\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PresetParameters\": {}\n        }\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Inactive\": true,\n      \"Label\": \"string\",\n      \"Languages\": [\n        \"string\"\n      ],\n      \"MaxConcurrency\": 10,\n      \"MergeAction\": {\n        \"ActionOutputFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"BreakAfter\": true,\n        \"Bypass\": true,\n        \"ChainedActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"DataFilter\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSelector\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"DataSourceSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Description\": \"string\",\n        \"FailedFilterActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"IdmSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Label\": \"string\",\n        \"MergeAction\": \"[Recursive structure]\",\n        \"NodesFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"NodesSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Parameters\": {},\n        \"Timeout\": \"string\",\n        \"TriggerFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"UsersFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"UsersSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        }\n      },\n      \"Metadata\": {},\n      \"ModifiedAt\": 10,\n      \"NodeEventFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Owner\": \"string\",\n      \"Parameters\": [\n        {\n          \"Description\": \"string\",\n          \"JsonChoices\": \"string\",\n          \"Mandatory\": true,\n          \"Name\": \"string\",\n          \"Type\": \"string\",\n          \"Value\": \"string\"\n        }\n      ],\n      \"ResourcesDependencies\": [\n        {\n          \"@type\": \"string\"\n        }\n      ],\n      \"Schedule\": {\n        \"Iso8601MinDelta\": \"string\",\n        \"Iso8601Schedule\": \"string\"\n      },\n      \"Tasks\": [\n        {\n          \"ActionsLogs\": [\n            {\n              \"Action\": {\n                \"ActionOutputFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  }\n                },\n                \"BreakAfter\": true,\n                \"Bypass\": true,\n                \"ChainedActions\": [\n                  \"[Recursive structure]\"\n                ],\n                \"ChatEventFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  }\n                },\n                \"ContextMetaFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Type\": \"string\"\n                },\n                \"DataFilter\": {\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"DataSelector\": {\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"DataSourceFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"DataSourceSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"Description\": \"string\",\n                \"FailedFilterActions\": [\n                  \"[Recursive structure]\"\n                ],\n                \"ID\": \"string\",\n                \"IdmFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"IdmSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\",\n                  \"Type\": \"string\"\n                },\n                \"Label\": \"string\",\n                \"MergeAction\": \"[Recursive structure]\",\n                \"NodesFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Pathes\": [\n                    \"string\"\n                  ],\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"NodesSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"FanOutInput\": true,\n                  \"Label\": \"string\",\n                  \"Pathes\": [\n                    \"string\"\n                  ],\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Range\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"OrderBy\": \"string\",\n                    \"OrderDir\": \"string\"\n                  },\n                  \"Timeout\": \"string\"\n                },\n                \"Parameters\": {},\n                \"Timeout\": \"string\",\n                \"TriggerFilter\": {\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  }\n                },\n                \"UsersFilter\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Users\": [\n                    {\n                      \"Attributes\": {},\n                      \"GroupLabel\": \"string\",\n                      \"GroupPath\": \"string\",\n                      \"IsGroup\": true,\n                      \"LastConnected\": 10,\n                      \"Login\": \"string\",\n                      \"OldPassword\": \"string\",\n                      \"Password\": \"string\",\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"Roles\": [\n                        {\n                          \"AutoApplies\": [\n                            \"string\"\n                          ],\n                          \"ForceOverride\": true,\n                          \"GroupRole\": true,\n                          \"IsTeam\": true,\n                          \"Label\": \"string\",\n                          \"LastUpdated\": 10,\n                          \"Policies\": [\n                            {\n                              \"Action\": \"string\",\n                              \"Effect\": \"string\",\n                              \"JsonConditions\": \"string\",\n                              \"Resource\": \"string\",\n                              \"Subject\": \"string\",\n                              \"id\": \"string\"\n                            }\n                          ],\n                          \"PoliciesContextEditable\": true,\n                          \"UserRole\": true,\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Uuid\": \"string\"\n                    }\n                  ]\n                },\n                \"UsersSelector\": {\n                  \"All\": true,\n                  \"ClearInput\": true,\n                  \"Collect\": true,\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"Query\": {\n                    \"Limit\": \"string\",\n                    \"Offset\": \"string\",\n                    \"Operation\": \"string\",\n                    \"ResourcePolicyQuery\": {\n                      \"Any\": true,\n                      \"Empty\": true,\n                      \"Subjects\": [\n                        \"string\"\n                      ]\n                    },\n                    \"SortDesc\": true,\n                    \"SortField\": \"string\",\n                    \"SubQueries\": [\n                      {\n                        \"@type\": \"string\"\n                      }\n                    ],\n                    \"groupBy\": 10\n                  },\n                  \"Timeout\": \"string\",\n                  \"Users\": [\n                    {\n                      \"Attributes\": {},\n                      \"GroupLabel\": \"string\",\n                      \"GroupPath\": \"string\",\n                      \"IsGroup\": true,\n                      \"LastConnected\": 10,\n                      \"Login\": \"string\",\n                      \"OldPassword\": \"string\",\n                      \"Password\": \"string\",\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"Roles\": [\n                        {\n                          \"AutoApplies\": [\n                            \"string\"\n                          ],\n                          \"ForceOverride\": true,\n                          \"GroupRole\": true,\n                          \"IsTeam\": true,\n                          \"Label\": \"string\",\n                          \"LastUpdated\": 10,\n                          \"Policies\": [\n                            {\n                              \"Action\": \"string\",\n                              \"Effect\": \"string\",\n                              \"JsonConditions\": \"string\",\n                              \"Resource\": \"string\",\n                              \"Subject\": \"string\",\n                              \"id\": \"string\"\n                            }\n                          ],\n                          \"PoliciesContextEditable\": true,\n                          \"UserRole\": true,\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Uuid\": \"string\"\n                    }\n                  ]\n                }\n              },\n              \"InputMessage\": {\n                \"Acls\": [\n                  {\n                    \"Action\": {\n                      \"Name\": \"string\",\n                      \"Value\": \"string\"\n                    },\n                    \"ID\": \"string\",\n                    \"NodeID\": \"string\",\n                    \"RoleID\": \"string\",\n                    \"WorkspaceID\": \"string\"\n                  }\n                ],\n                \"Activities\": [\n                  {\n                    \"@context\": \"string\",\n                    \"accuracy\": \"[Unknown Type number]\",\n                    \"actor\": \"[Recursive structure]\",\n                    \"altitude\": \"[Unknown Type number]\",\n                    \"anyOf\": \"[Recursive structure]\",\n                    \"attachment\": \"[Recursive structure]\",\n                    \"attributedTo\": \"[Recursive structure]\",\n                    \"audience\": \"[Recursive structure]\",\n                    \"bcc\": \"[Recursive structure]\",\n                    \"bto\": \"[Recursive structure]\",\n                    \"cc\": \"[Recursive structure]\",\n                    \"closed\": \"string\",\n                    \"content\": \"[Recursive structure]\",\n                    \"context\": \"[Recursive structure]\",\n                    \"current\": \"[Recursive structure]\",\n                    \"deleted\": \"string\",\n                    \"duration\": \"string\",\n                    \"endTime\": \"string\",\n                    \"first\": \"[Recursive structure]\",\n                    \"formerType\": \"string\",\n                    \"generator\": \"[Recursive structure]\",\n                    \"height\": 10,\n                    \"href\": \"string\",\n                    \"hreflang\": \"string\",\n                    \"icon\": \"[Recursive structure]\",\n                    \"id\": \"string\",\n                    \"image\": \"[Recursive structure]\",\n                    \"inReplyTo\": \"[Recursive structure]\",\n                    \"instrument\": \"[Recursive structure]\",\n                    \"items\": [\n                      \"[Recursive structure]\"\n                    ],\n                    \"last\": \"[Recursive structure]\",\n                    \"latitude\": \"[Unknown Type number]\",\n                    \"location\": \"[Recursive structure]\",\n                    \"longitude\": \"[Unknown Type number]\",\n                    \"markdown\": \"string\",\n                    \"mediaType\": \"string\",\n                    \"name\": \"string\",\n                    \"next\": \"[Recursive structure]\",\n                    \"object\": \"[Recursive structure]\",\n                    \"oneOf\": \"[Recursive structure]\",\n                    \"origin\": \"[Recursive structure]\",\n                    \"partOf\": \"[Recursive structure]\",\n                    \"prev\": \"[Recursive structure]\",\n                    \"preview\": \"[Recursive structure]\",\n                    \"published\": \"string\",\n                    \"radius\": \"[Unknown Type number]\",\n                    \"rel\": \"string\",\n                    \"relationship\": \"[Recursive structure]\",\n                    \"replies\": \"[Recursive structure]\",\n                    \"result\": \"[Recursive structure]\",\n                    \"startTime\": \"string\",\n                    \"subject\": \"[Recursive structure]\",\n                    \"summary\": \"string\",\n                    \"tag\": \"[Recursive structure]\",\n                    \"target\": \"[Recursive structure]\",\n                    \"to\": \"[Recursive structure]\",\n                    \"totalItems\": 10,\n                    \"type\": \"string\",\n                    \"units\": \"string\",\n                    \"updated\": \"string\",\n                    \"url\": \"[Recursive structure]\",\n                    \"width\": 10\n                  }\n                ],\n                \"DataSources\": [\n                  {\n                    \"ApiKey\": \"string\",\n                    \"ApiSecret\": \"string\",\n                    \"CreationDate\": 10,\n                    \"Disabled\": true,\n                    \"EncryptionKey\": \"string\",\n                    \"EncryptionMode\": \"string\",\n                    \"FlatStorage\": true,\n                    \"LastSynchronizationDate\": 10,\n                    \"Name\": \"string\",\n                    \"ObjectsBaseFolder\": \"string\",\n                    \"ObjectsBucket\": \"string\",\n                    \"ObjectsHost\": \"string\",\n                    \"ObjectsPort\": 10,\n                    \"ObjectsSecure\": true,\n                    \"ObjectsServiceName\": \"string\",\n                    \"PeerAddress\": \"string\",\n                    \"SkipSyncOnRestart\": true,\n                    \"StorageConfiguration\": {},\n                    \"StorageType\": \"string\",\n                    \"VersioningPolicyName\": \"string\",\n                    \"Watch\": true\n                  }\n                ],\n                \"Event\": {\n                  \"@type\": \"string\"\n                },\n                \"Nodes\": [\n                  {\n                    \"AppearsIn\": [\n                      {\n                        \"Path\": \"string\",\n                        \"WsLabel\": \"string\",\n                        \"WsScope\": \"string\",\n                        \"WsSlug\": \"string\",\n                        \"WsUuid\": \"string\"\n                      }\n                    ],\n                    \"Commits\": [\n                      {\n                        \"Data\": \"string\",\n                        \"Description\": \"string\",\n                        \"Event\": {\n                          \"Metadata\": {},\n                          \"Optimistic\": true,\n                          \"Silent\": true,\n                          \"Source\": \"[Recursive structure]\",\n                          \"Target\": \"[Recursive structure]\",\n                          \"Type\": \"string\"\n                        },\n                        \"Location\": \"[Recursive structure]\",\n                        \"MTime\": \"string\",\n                        \"OwnerUuid\": \"string\",\n                        \"Size\": \"string\",\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Etag\": \"string\",\n                    \"MTime\": \"string\",\n                    \"MetaStore\": {},\n                    \"Mode\": 10,\n                    \"Path\": \"string\",\n                    \"Size\": \"string\",\n                    \"Type\": \"string\",\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"OutputChain\": [\n                  {\n                    \"ErrorString\": \"string\",\n                    \"Ignored\": true,\n                    \"JsonBody\": \"string\",\n                    \"RawBody\": \"string\",\n                    \"StringBody\": \"string\",\n                    \"Success\": true,\n                    \"Time\": 10,\n                    \"Vars\": {}\n                  }\n                ],\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Workspaces\": [\n                  {\n                    \"Attributes\": \"string\",\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"RootNodes\": {},\n                    \"RootUUIDs\": [\n                      \"string\"\n                    ],\n                    \"Scope\": \"string\",\n                    \"Slug\": \"string\",\n                    \"UUID\": \"string\"\n                  }\n                ]\n              },\n              \"OutputMessage\": {\n                \"Acls\": [\n                  {\n                    \"Action\": {\n                      \"Name\": \"string\",\n                      \"Value\": \"string\"\n                    },\n                    \"ID\": \"string\",\n                    \"NodeID\": \"string\",\n                    \"RoleID\": \"string\",\n                    \"WorkspaceID\": \"string\"\n                  }\n                ],\n                \"Activities\": [\n                  {\n                    \"@context\": \"string\",\n                    \"accuracy\": \"[Unknown Type number]\",\n                    \"actor\": \"[Recursive structure]\",\n                    \"altitude\": \"[Unknown Type number]\",\n                    \"anyOf\": \"[Recursive structure]\",\n                    \"attachment\": \"[Recursive structure]\",\n                    \"attributedTo\": \"[Recursive structure]\",\n                    \"audience\": \"[Recursive structure]\",\n                    \"bcc\": \"[Recursive structure]\",\n                    \"bto\": \"[Recursive structure]\",\n                    \"cc\": \"[Recursive structure]\",\n                    \"closed\": \"string\",\n                    \"content\": \"[Recursive structure]\",\n                    \"context\": \"[Recursive structure]\",\n                    \"current\": \"[Recursive structure]\",\n                    \"deleted\": \"string\",\n                    \"duration\": \"string\",\n                    \"endTime\": \"string\",\n                    \"first\": \"[Recursive structure]\",\n                    \"formerType\": \"string\",\n                    \"generator\": \"[Recursive structure]\",\n                    \"height\": 10,\n                    \"href\": \"string\",\n                    \"hreflang\": \"string\",\n                    \"icon\": \"[Recursive structure]\",\n                    \"id\": \"string\",\n                    \"image\": \"[Recursive structure]\",\n                    \"inReplyTo\": \"[Recursive structure]\",\n                    \"instrument\": \"[Recursive structure]\",\n                    \"items\": [\n                      \"[Recursive structure]\"\n                    ],\n                    \"last\": \"[Recursive structure]\",\n                    \"latitude\": \"[Unknown Type number]\",\n                    \"location\": \"[Recursive structure]\",\n                    \"longitude\": \"[Unknown Type number]\",\n                    \"markdown\": \"string\",\n                    \"mediaType\": \"string\",\n                    \"name\": \"string\",\n                    \"next\": \"[Recursive structure]\",\n                    \"object\": \"[Recursive structure]\",\n                    \"oneOf\": \"[Recursive structure]\",\n                    \"origin\": \"[Recursive structure]\",\n                    \"partOf\": \"[Recursive structure]\",\n                    \"prev\": \"[Recursive structure]\",\n                    \"preview\": \"[Recursive structure]\",\n                    \"published\": \"string\",\n                    \"radius\": \"[Unknown Type number]\",\n                    \"rel\": \"string\",\n                    \"relationship\": \"[Recursive structure]\",\n                    \"replies\": \"[Recursive structure]\",\n                    \"result\": \"[Recursive structure]\",\n                    \"startTime\": \"string\",\n                    \"subject\": \"[Recursive structure]\",\n                    \"summary\": \"string\",\n                    \"tag\": \"[Recursive structure]\",\n                    \"target\": \"[Recursive structure]\",\n                    \"to\": \"[Recursive structure]\",\n                    \"totalItems\": 10,\n                    \"type\": \"string\",\n                    \"units\": \"string\",\n                    \"updated\": \"string\",\n                    \"url\": \"[Recursive structure]\",\n                    \"width\": 10\n                  }\n                ],\n                \"DataSources\": [\n                  {\n                    \"ApiKey\": \"string\",\n                    \"ApiSecret\": \"string\",\n                    \"CreationDate\": 10,\n                    \"Disabled\": true,\n                    \"EncryptionKey\": \"string\",\n                    \"EncryptionMode\": \"string\",\n                    \"FlatStorage\": true,\n                    \"LastSynchronizationDate\": 10,\n                    \"Name\": \"string\",\n                    \"ObjectsBaseFolder\": \"string\",\n                    \"ObjectsBucket\": \"string\",\n                    \"ObjectsHost\": \"string\",\n                    \"ObjectsPort\": 10,\n                    \"ObjectsSecure\": true,\n                    \"ObjectsServiceName\": \"string\",\n                    \"PeerAddress\": \"string\",\n                    \"SkipSyncOnRestart\": true,\n                    \"StorageConfiguration\": {},\n                    \"StorageType\": \"string\",\n                    \"VersioningPolicyName\": \"string\",\n                    \"Watch\": true\n                  }\n                ],\n                \"Event\": {\n                  \"@type\": \"string\"\n                },\n                \"Nodes\": [\n                  {\n                    \"AppearsIn\": [\n                      {\n                        \"Path\": \"string\",\n                        \"WsLabel\": \"string\",\n                        \"WsScope\": \"string\",\n                        \"WsSlug\": \"string\",\n                        \"WsUuid\": \"string\"\n                      }\n                    ],\n                    \"Commits\": [\n                      {\n                        \"Data\": \"string\",\n                        \"Description\": \"string\",\n                        \"Event\": {\n                          \"Metadata\": {},\n                          \"Optimistic\": true,\n                          \"Silent\": true,\n                          \"Source\": \"[Recursive structure]\",\n                          \"Target\": \"[Recursive structure]\",\n                          \"Type\": \"string\"\n                        },\n                        \"Location\": \"[Recursive structure]\",\n                        \"MTime\": \"string\",\n                        \"OwnerUuid\": \"string\",\n                        \"Size\": \"string\",\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Etag\": \"string\",\n                    \"MTime\": \"string\",\n                    \"MetaStore\": {},\n                    \"Mode\": 10,\n                    \"Path\": \"string\",\n                    \"Size\": \"string\",\n                    \"Type\": \"string\",\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"OutputChain\": [\n                  {\n                    \"ErrorString\": \"string\",\n                    \"Ignored\": true,\n                    \"JsonBody\": \"string\",\n                    \"RawBody\": \"string\",\n                    \"StringBody\": \"string\",\n                    \"Success\": true,\n                    \"Time\": 10,\n                    \"Vars\": {}\n                  }\n                ],\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Workspaces\": [\n                  {\n                    \"Attributes\": \"string\",\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"RootNodes\": {},\n                    \"RootUUIDs\": [\n                      \"string\"\n                    ],\n                    \"Scope\": \"string\",\n                    \"Slug\": \"string\",\n                    \"UUID\": \"string\"\n                  }\n                ]\n              }\n            }\n          ],\n          \"CanPause\": true,\n          \"CanStop\": true,\n          \"EndTime\": 10,\n          \"HasProgress\": true,\n          \"ID\": \"string\",\n          \"JobID\": \"string\",\n          \"Progress\": \"[Unknown Type number]\",\n          \"StartTime\": 10,\n          \"Status\": \"string\",\n          \"StatusMessage\": \"string\",\n          \"TriggerOwner\": \"string\"\n        }\n      ],\n      \"TasksSilentUpdate\": true,\n      \"Timeout\": \"string\",\n      \"UserEventFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"VersionMeta\": {}\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-playground/","title":"POST /a/scheduler/templates/playground","text":"<p>Run a code sample  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-playground/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Code string CodeMime string Input #/definitions/jobsActionMessage LastOutputJsonBody string"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-playground/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Code\": \"string\",\n  \"CodeMime\": \"string\",\n  \"Input\": {\n    \"Acls\": [\n      {\n        \"Action\": {\n          \"Name\": \"string\",\n          \"Value\": \"string\"\n        },\n        \"ID\": \"string\",\n        \"NodeID\": \"string\",\n        \"RoleID\": \"string\",\n        \"WorkspaceID\": \"string\"\n      }\n    ],\n    \"Activities\": [\n      {\n        \"@context\": \"string\",\n        \"accuracy\": \"[Unknown Type number]\",\n        \"actor\": \"[Recursive structure]\",\n        \"altitude\": \"[Unknown Type number]\",\n        \"anyOf\": \"[Recursive structure]\",\n        \"attachment\": \"[Recursive structure]\",\n        \"attributedTo\": \"[Recursive structure]\",\n        \"audience\": \"[Recursive structure]\",\n        \"bcc\": \"[Recursive structure]\",\n        \"bto\": \"[Recursive structure]\",\n        \"cc\": \"[Recursive structure]\",\n        \"closed\": \"string\",\n        \"content\": \"[Recursive structure]\",\n        \"context\": \"[Recursive structure]\",\n        \"current\": \"[Recursive structure]\",\n        \"deleted\": \"string\",\n        \"duration\": \"string\",\n        \"endTime\": \"string\",\n        \"first\": \"[Recursive structure]\",\n        \"formerType\": \"string\",\n        \"generator\": \"[Recursive structure]\",\n        \"height\": 10,\n        \"href\": \"string\",\n        \"hreflang\": \"string\",\n        \"icon\": \"[Recursive structure]\",\n        \"id\": \"string\",\n        \"image\": \"[Recursive structure]\",\n        \"inReplyTo\": \"[Recursive structure]\",\n        \"instrument\": \"[Recursive structure]\",\n        \"items\": [\n          \"[Recursive structure]\"\n        ],\n        \"last\": \"[Recursive structure]\",\n        \"latitude\": \"[Unknown Type number]\",\n        \"location\": \"[Recursive structure]\",\n        \"longitude\": \"[Unknown Type number]\",\n        \"markdown\": \"string\",\n        \"mediaType\": \"string\",\n        \"name\": \"string\",\n        \"next\": \"[Recursive structure]\",\n        \"object\": \"[Recursive structure]\",\n        \"oneOf\": \"[Recursive structure]\",\n        \"origin\": \"[Recursive structure]\",\n        \"partOf\": \"[Recursive structure]\",\n        \"prev\": \"[Recursive structure]\",\n        \"preview\": \"[Recursive structure]\",\n        \"published\": \"string\",\n        \"radius\": \"[Unknown Type number]\",\n        \"rel\": \"string\",\n        \"relationship\": \"[Recursive structure]\",\n        \"replies\": \"[Recursive structure]\",\n        \"result\": \"[Recursive structure]\",\n        \"startTime\": \"string\",\n        \"subject\": \"[Recursive structure]\",\n        \"summary\": \"string\",\n        \"tag\": \"[Recursive structure]\",\n        \"target\": \"[Recursive structure]\",\n        \"to\": \"[Recursive structure]\",\n        \"totalItems\": 10,\n        \"type\": \"string\",\n        \"units\": \"string\",\n        \"updated\": \"string\",\n        \"url\": \"[Recursive structure]\",\n        \"width\": 10\n      }\n    ],\n    \"DataSources\": [\n      {\n        \"ApiKey\": \"string\",\n        \"ApiSecret\": \"string\",\n        \"CreationDate\": 10,\n        \"Disabled\": true,\n        \"EncryptionKey\": \"string\",\n        \"EncryptionMode\": \"string\",\n        \"FlatStorage\": true,\n        \"LastSynchronizationDate\": 10,\n        \"Name\": \"string\",\n        \"ObjectsBaseFolder\": \"string\",\n        \"ObjectsBucket\": \"string\",\n        \"ObjectsHost\": \"string\",\n        \"ObjectsPort\": 10,\n        \"ObjectsSecure\": true,\n        \"ObjectsServiceName\": \"string\",\n        \"PeerAddress\": \"string\",\n        \"SkipSyncOnRestart\": true,\n        \"StorageConfiguration\": {},\n        \"StorageType\": \"string\",\n        \"VersioningPolicyName\": \"string\",\n        \"Watch\": true\n      }\n    ],\n    \"Event\": {\n      \"@type\": \"string\"\n    },\n    \"Nodes\": [\n      {\n        \"Path\": \"string\"\n      }\n    ],\n    \"OutputChain\": [\n      {\n        \"ErrorString\": \"string\",\n        \"Ignored\": true,\n        \"JsonBody\": \"string\",\n        \"RawBody\": \"string\",\n        \"StringBody\": \"string\",\n        \"Success\": true,\n        \"Time\": 10,\n        \"Vars\": {}\n      }\n    ],\n    \"Roles\": [\n      {\n        \"AutoApplies\": [\n          \"string\"\n        ],\n        \"ForceOverride\": true,\n        \"GroupRole\": true,\n        \"IsTeam\": true,\n        \"Label\": \"string\",\n        \"LastUpdated\": 10,\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PoliciesContextEditable\": true,\n        \"UserRole\": true,\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Users\": [\n      {\n        \"Attributes\": {},\n        \"GroupLabel\": \"string\",\n        \"GroupPath\": \"string\",\n        \"IsGroup\": true,\n        \"LastConnected\": 10,\n        \"Login\": \"string\",\n        \"OldPassword\": \"string\",\n        \"Password\": \"string\",\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PoliciesContextEditable\": true,\n        \"Roles\": [\n          {\n            \"AutoApplies\": [\n              \"string\"\n            ],\n            \"ForceOverride\": true,\n            \"GroupRole\": true,\n            \"IsTeam\": true,\n            \"Label\": \"string\",\n            \"LastUpdated\": 10,\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"UserRole\": true,\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Workspaces\": [\n      {\n        \"Attributes\": \"string\",\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"LastUpdated\": 10,\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PoliciesContextEditable\": true,\n        \"RootNodes\": {},\n        \"RootUUIDs\": [\n          \"string\"\n        ],\n        \"Scope\": \"string\",\n        \"Slug\": \"string\",\n        \"UUID\": \"string\"\n      }\n    ]\n  },\n  \"LastOutputJsonBody\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-playground/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entPlaygroundResponse</p> <pre><code>{\n  \"Code\": \"string\",\n  \"CodeMime\": \"string\",\n  \"Input\": {\n    \"Acls\": [\n      {\n        \"Action\": {\n          \"Name\": \"string\",\n          \"Value\": \"string\"\n        },\n        \"ID\": \"string\",\n        \"NodeID\": \"string\",\n        \"RoleID\": \"string\",\n        \"WorkspaceID\": \"string\"\n      }\n    ],\n    \"Activities\": [\n      {\n        \"@context\": \"string\",\n        \"accuracy\": \"[Unknown Type number]\",\n        \"actor\": \"[Recursive structure]\",\n        \"altitude\": \"[Unknown Type number]\",\n        \"anyOf\": \"[Recursive structure]\",\n        \"attachment\": \"[Recursive structure]\",\n        \"attributedTo\": \"[Recursive structure]\",\n        \"audience\": \"[Recursive structure]\",\n        \"bcc\": \"[Recursive structure]\",\n        \"bto\": \"[Recursive structure]\",\n        \"cc\": \"[Recursive structure]\",\n        \"closed\": \"string\",\n        \"content\": \"[Recursive structure]\",\n        \"context\": \"[Recursive structure]\",\n        \"current\": \"[Recursive structure]\",\n        \"deleted\": \"string\",\n        \"duration\": \"string\",\n        \"endTime\": \"string\",\n        \"first\": \"[Recursive structure]\",\n        \"formerType\": \"string\",\n        \"generator\": \"[Recursive structure]\",\n        \"height\": 10,\n        \"href\": \"string\",\n        \"hreflang\": \"string\",\n        \"icon\": \"[Recursive structure]\",\n        \"id\": \"string\",\n        \"image\": \"[Recursive structure]\",\n        \"inReplyTo\": \"[Recursive structure]\",\n        \"instrument\": \"[Recursive structure]\",\n        \"items\": [\n          \"[Recursive structure]\"\n        ],\n        \"last\": \"[Recursive structure]\",\n        \"latitude\": \"[Unknown Type number]\",\n        \"location\": \"[Recursive structure]\",\n        \"longitude\": \"[Unknown Type number]\",\n        \"markdown\": \"string\",\n        \"mediaType\": \"string\",\n        \"name\": \"string\",\n        \"next\": \"[Recursive structure]\",\n        \"object\": \"[Recursive structure]\",\n        \"oneOf\": \"[Recursive structure]\",\n        \"origin\": \"[Recursive structure]\",\n        \"partOf\": \"[Recursive structure]\",\n        \"prev\": \"[Recursive structure]\",\n        \"preview\": \"[Recursive structure]\",\n        \"published\": \"string\",\n        \"radius\": \"[Unknown Type number]\",\n        \"rel\": \"string\",\n        \"relationship\": \"[Recursive structure]\",\n        \"replies\": \"[Recursive structure]\",\n        \"result\": \"[Recursive structure]\",\n        \"startTime\": \"string\",\n        \"subject\": \"[Recursive structure]\",\n        \"summary\": \"string\",\n        \"tag\": \"[Recursive structure]\",\n        \"target\": \"[Recursive structure]\",\n        \"to\": \"[Recursive structure]\",\n        \"totalItems\": 10,\n        \"type\": \"string\",\n        \"units\": \"string\",\n        \"updated\": \"string\",\n        \"url\": \"[Recursive structure]\",\n        \"width\": 10\n      }\n    ],\n    \"DataSources\": [\n      {\n        \"ApiKey\": \"string\",\n        \"ApiSecret\": \"string\",\n        \"CreationDate\": 10,\n        \"Disabled\": true,\n        \"EncryptionKey\": \"string\",\n        \"EncryptionMode\": \"string\",\n        \"FlatStorage\": true,\n        \"LastSynchronizationDate\": 10,\n        \"Name\": \"string\",\n        \"ObjectsBaseFolder\": \"string\",\n        \"ObjectsBucket\": \"string\",\n        \"ObjectsHost\": \"string\",\n        \"ObjectsPort\": 10,\n        \"ObjectsSecure\": true,\n        \"ObjectsServiceName\": \"string\",\n        \"PeerAddress\": \"string\",\n        \"SkipSyncOnRestart\": true,\n        \"StorageConfiguration\": {},\n        \"StorageType\": \"string\",\n        \"VersioningPolicyName\": \"string\",\n        \"Watch\": true\n      }\n    ],\n    \"Event\": {\n      \"@type\": \"string\"\n    },\n    \"Nodes\": [\n      {\n        \"AppearsIn\": [\n          {\n            \"Path\": \"string\",\n            \"WsLabel\": \"string\",\n            \"WsScope\": \"string\",\n            \"WsSlug\": \"string\",\n            \"WsUuid\": \"string\"\n          }\n        ],\n        \"Commits\": [\n          {\n            \"Data\": \"string\",\n            \"Description\": \"string\",\n            \"Event\": {\n              \"Metadata\": {},\n              \"Optimistic\": true,\n              \"Silent\": true,\n              \"Source\": \"[Recursive structure]\",\n              \"Target\": \"[Recursive structure]\",\n              \"Type\": \"string\"\n            },\n            \"Location\": \"[Recursive structure]\",\n            \"MTime\": \"string\",\n            \"OwnerUuid\": \"string\",\n            \"Size\": \"string\",\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"Etag\": \"string\",\n        \"MTime\": \"string\",\n        \"MetaStore\": {},\n        \"Mode\": 10,\n        \"Path\": \"string\",\n        \"Size\": \"string\",\n        \"Type\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"OutputChain\": [\n      {\n        \"ErrorString\": \"string\",\n        \"Ignored\": true,\n        \"JsonBody\": \"string\",\n        \"RawBody\": \"string\",\n        \"StringBody\": \"string\",\n        \"Success\": true,\n        \"Time\": 10,\n        \"Vars\": {}\n      }\n    ],\n    \"Roles\": [\n      {\n        \"AutoApplies\": [\n          \"string\"\n        ],\n        \"ForceOverride\": true,\n        \"GroupRole\": true,\n        \"IsTeam\": true,\n        \"Label\": \"string\",\n        \"LastUpdated\": 10,\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PoliciesContextEditable\": true,\n        \"UserRole\": true,\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Users\": [\n      {\n        \"Attributes\": {},\n        \"GroupLabel\": \"string\",\n        \"GroupPath\": \"string\",\n        \"IsGroup\": true,\n        \"LastConnected\": 10,\n        \"Login\": \"string\",\n        \"OldPassword\": \"string\",\n        \"Password\": \"string\",\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PoliciesContextEditable\": true,\n        \"Roles\": [\n          {\n            \"AutoApplies\": [\n              \"string\"\n            ],\n            \"ForceOverride\": true,\n            \"GroupRole\": true,\n            \"IsTeam\": true,\n            \"Label\": \"string\",\n            \"LastUpdated\": 10,\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"UserRole\": true,\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Workspaces\": [\n      {\n        \"Attributes\": \"string\",\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"LastUpdated\": 10,\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PoliciesContextEditable\": true,\n        \"RootNodes\": {},\n        \"RootUUIDs\": [\n          \"string\"\n        ],\n        \"Scope\": \"string\",\n        \"Slug\": \"string\",\n        \"UUID\": \"string\"\n      }\n    ]\n  },\n  \"LastOutputJsonBody\": \"string\",\n  \"Output\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-selectors/","title":"POST /a/scheduler/templates/selectors","text":"<p>Templates management for filters  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-selectors/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Filter string"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-selectors/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Filter\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-templates-selectors/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entListSelectorTemplatesResponse</p> <pre><code>{\n  \"Templates\": [\n    {\n      \"ActionOutputFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"AsFilter\": true,\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"DataSourceSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Description\": \"string\",\n      \"IdmSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Label\": \"string\",\n      \"Name\": \"string\",\n      \"NodesSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"TriggerFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      }\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-versions-jobid/","title":"POST /a/scheduler/versions/{JobID}","text":""},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-versions-jobid/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/post-a-scheduler-versions-jobid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entListJobVersionsResponse</p> <pre><code>{\n  \"Versions\": [\n    {\n      \"Date\": 10,\n      \"ID\": \"string\",\n      \"Job\": {\n        \"Actions\": [\n          {\n            \"ActionOutputFilter\": {\n              \"Description\": \"string\",\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              }\n            },\n            \"BreakAfter\": true,\n            \"Bypass\": true,\n            \"ChainedActions\": [\n              \"[Recursive structure]\"\n            ],\n            \"ChatEventFilter\": {\n              \"Description\": \"string\",\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              }\n            },\n            \"ContextMetaFilter\": {\n              \"Description\": \"string\",\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Type\": \"string\"\n            },\n            \"DataFilter\": {\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Timeout\": \"string\"\n            },\n            \"DataSelector\": {\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Timeout\": \"string\"\n            },\n            \"DataSourceFilter\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Timeout\": \"string\",\n              \"Type\": \"string\"\n            },\n            \"DataSourceSelector\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Timeout\": \"string\",\n              \"Type\": \"string\"\n            },\n            \"Description\": \"string\",\n            \"FailedFilterActions\": [\n              \"[Recursive structure]\"\n            ],\n            \"ID\": \"string\",\n            \"IdmFilter\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Range\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"OrderBy\": \"string\",\n                \"OrderDir\": \"string\"\n              },\n              \"Timeout\": \"string\",\n              \"Type\": \"string\"\n            },\n            \"IdmSelector\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Range\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"OrderBy\": \"string\",\n                \"OrderDir\": \"string\"\n              },\n              \"Timeout\": \"string\",\n              \"Type\": \"string\"\n            },\n            \"Label\": \"string\",\n            \"MergeAction\": \"[Recursive structure]\",\n            \"NodesFilter\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Pathes\": [\n                \"string\"\n              ],\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Range\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"OrderBy\": \"string\",\n                \"OrderDir\": \"string\"\n              },\n              \"Timeout\": \"string\"\n            },\n            \"NodesSelector\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"FanOutInput\": true,\n              \"Label\": \"string\",\n              \"Pathes\": [\n                \"string\"\n              ],\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Range\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"OrderBy\": \"string\",\n                \"OrderDir\": \"string\"\n              },\n              \"Timeout\": \"string\"\n            },\n            \"Parameters\": {},\n            \"Timeout\": \"string\",\n            \"TriggerFilter\": {\n              \"Description\": \"string\",\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              }\n            },\n            \"UsersFilter\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Timeout\": \"string\",\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ]\n            },\n            \"UsersSelector\": {\n              \"All\": true,\n              \"ClearInput\": true,\n              \"Collect\": true,\n              \"Description\": \"string\",\n              \"Label\": \"string\",\n              \"Query\": {\n                \"Limit\": \"string\",\n                \"Offset\": \"string\",\n                \"Operation\": \"string\",\n                \"ResourcePolicyQuery\": {\n                  \"Any\": true,\n                  \"Empty\": true,\n                  \"Subjects\": [\n                    \"string\"\n                  ]\n                },\n                \"SortDesc\": true,\n                \"SortField\": \"string\",\n                \"SubQueries\": [\n                  {\n                    \"@type\": \"string\"\n                  }\n                ],\n                \"groupBy\": 10\n              },\n              \"Timeout\": \"string\",\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ]\n            }\n          }\n        ],\n        \"AutoClean\": true,\n        \"AutoRestart\": true,\n        \"AutoStart\": true,\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"CreatedAt\": 10,\n        \"Custom\": true,\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"EventNames\": [\n          \"string\"\n        ],\n        \"Hooks\": [\n          {\n            \"AllowOverridePresets\": true,\n            \"ApiSlug\": \"string\",\n            \"Metadata\": {},\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PresetParameters\": {}\n          }\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Inactive\": true,\n        \"Label\": \"string\",\n        \"Languages\": [\n          \"string\"\n        ],\n        \"MaxConcurrency\": 10,\n        \"MergeAction\": {\n          \"ActionOutputFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"BreakAfter\": true,\n          \"Bypass\": true,\n          \"ChainedActions\": [\n            \"[Recursive structure]\"\n          ],\n          \"ChatEventFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"ContextMetaFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Type\": \"string\"\n          },\n          \"DataFilter\": {\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\"\n          },\n          \"DataSelector\": {\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\"\n          },\n          \"DataSourceFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"DataSourceSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"Description\": \"string\",\n          \"FailedFilterActions\": [\n            \"[Recursive structure]\"\n          ],\n          \"ID\": \"string\",\n          \"IdmFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"IdmSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\",\n            \"Type\": \"string\"\n          },\n          \"Label\": \"string\",\n          \"MergeAction\": \"[Recursive structure]\",\n          \"NodesFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Pathes\": [\n              \"string\"\n            ],\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\"\n          },\n          \"NodesSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"FanOutInput\": true,\n            \"Label\": \"string\",\n            \"Pathes\": [\n              \"string\"\n            ],\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Range\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"OrderBy\": \"string\",\n              \"OrderDir\": \"string\"\n            },\n            \"Timeout\": \"string\"\n          },\n          \"Parameters\": {},\n          \"Timeout\": \"string\",\n          \"TriggerFilter\": {\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            }\n          },\n          \"UsersFilter\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Users\": [\n              {\n                \"Attributes\": {},\n                \"GroupLabel\": \"string\",\n                \"GroupPath\": \"string\",\n                \"IsGroup\": true,\n                \"LastConnected\": 10,\n                \"Login\": \"string\",\n                \"OldPassword\": \"string\",\n                \"Password\": \"string\",\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Uuid\": \"string\"\n              }\n            ]\n          },\n          \"UsersSelector\": {\n            \"All\": true,\n            \"ClearInput\": true,\n            \"Collect\": true,\n            \"Description\": \"string\",\n            \"Label\": \"string\",\n            \"Query\": {\n              \"Limit\": \"string\",\n              \"Offset\": \"string\",\n              \"Operation\": \"string\",\n              \"ResourcePolicyQuery\": {\n                \"Any\": true,\n                \"Empty\": true,\n                \"Subjects\": [\n                  \"string\"\n                ]\n              },\n              \"SortDesc\": true,\n              \"SortField\": \"string\",\n              \"SubQueries\": [\n                {\n                  \"@type\": \"string\"\n                }\n              ],\n              \"groupBy\": 10\n            },\n            \"Timeout\": \"string\",\n            \"Users\": [\n              {\n                \"Attributes\": {},\n                \"GroupLabel\": \"string\",\n                \"GroupPath\": \"string\",\n                \"IsGroup\": true,\n                \"LastConnected\": 10,\n                \"Login\": \"string\",\n                \"OldPassword\": \"string\",\n                \"Password\": \"string\",\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"Roles\": [\n                  {\n                    \"AutoApplies\": [\n                      \"string\"\n                    ],\n                    \"ForceOverride\": true,\n                    \"GroupRole\": true,\n                    \"IsTeam\": true,\n                    \"Label\": \"string\",\n                    \"LastUpdated\": 10,\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"UserRole\": true,\n                    \"Uuid\": \"string\"\n                  }\n                ],\n                \"Uuid\": \"string\"\n              }\n            ]\n          }\n        },\n        \"Metadata\": {},\n        \"ModifiedAt\": 10,\n        \"NodeEventFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Owner\": \"string\",\n        \"Parameters\": [\n          {\n            \"Description\": \"string\",\n            \"JsonChoices\": \"string\",\n            \"Mandatory\": true,\n            \"Name\": \"string\",\n            \"Type\": \"string\",\n            \"Value\": \"string\"\n          }\n        ],\n        \"ResourcesDependencies\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"Schedule\": {\n          \"Iso8601MinDelta\": \"string\",\n          \"Iso8601Schedule\": \"string\"\n        },\n        \"Tasks\": [\n          {\n            \"ActionsLogs\": [\n              {\n                \"Action\": {\n                  \"ActionOutputFilter\": {\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    }\n                  },\n                  \"BreakAfter\": true,\n                  \"Bypass\": true,\n                  \"ChainedActions\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"ChatEventFilter\": {\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    }\n                  },\n                  \"ContextMetaFilter\": {\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Type\": \"string\"\n                  },\n                  \"DataFilter\": {\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Timeout\": \"string\"\n                  },\n                  \"DataSelector\": {\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Timeout\": \"string\"\n                  },\n                  \"DataSourceFilter\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Timeout\": \"string\",\n                    \"Type\": \"string\"\n                  },\n                  \"DataSourceSelector\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Timeout\": \"string\",\n                    \"Type\": \"string\"\n                  },\n                  \"Description\": \"string\",\n                  \"FailedFilterActions\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"ID\": \"string\",\n                  \"IdmFilter\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Range\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"OrderBy\": \"string\",\n                      \"OrderDir\": \"string\"\n                    },\n                    \"Timeout\": \"string\",\n                    \"Type\": \"string\"\n                  },\n                  \"IdmSelector\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Range\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"OrderBy\": \"string\",\n                      \"OrderDir\": \"string\"\n                    },\n                    \"Timeout\": \"string\",\n                    \"Type\": \"string\"\n                  },\n                  \"Label\": \"string\",\n                  \"MergeAction\": \"[Recursive structure]\",\n                  \"NodesFilter\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Pathes\": [\n                      \"string\"\n                    ],\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Range\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"OrderBy\": \"string\",\n                      \"OrderDir\": \"string\"\n                    },\n                    \"Timeout\": \"string\"\n                  },\n                  \"NodesSelector\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"FanOutInput\": true,\n                    \"Label\": \"string\",\n                    \"Pathes\": [\n                      \"string\"\n                    ],\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Range\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"OrderBy\": \"string\",\n                      \"OrderDir\": \"string\"\n                    },\n                    \"Timeout\": \"string\"\n                  },\n                  \"Parameters\": {},\n                  \"Timeout\": \"string\",\n                  \"TriggerFilter\": {\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    }\n                  },\n                  \"UsersFilter\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Timeout\": \"string\",\n                    \"Users\": [\n                      {\n                        \"Attributes\": {},\n                        \"GroupLabel\": \"string\",\n                        \"GroupPath\": \"string\",\n                        \"IsGroup\": true,\n                        \"LastConnected\": 10,\n                        \"Login\": \"string\",\n                        \"OldPassword\": \"string\",\n                        \"Password\": \"string\",\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"Roles\": [\n                          {\n                            \"AutoApplies\": [\n                              \"string\"\n                            ],\n                            \"ForceOverride\": true,\n                            \"GroupRole\": true,\n                            \"IsTeam\": true,\n                            \"Label\": \"string\",\n                            \"LastUpdated\": 10,\n                            \"Policies\": [\n                              {\n                                \"Action\": \"string\",\n                                \"Effect\": \"string\",\n                                \"JsonConditions\": \"string\",\n                                \"Resource\": \"string\",\n                                \"Subject\": \"string\",\n                                \"id\": \"string\"\n                              }\n                            ],\n                            \"PoliciesContextEditable\": true,\n                            \"UserRole\": true,\n                            \"Uuid\": \"string\"\n                          }\n                        ],\n                        \"Uuid\": \"string\"\n                      }\n                    ]\n                  },\n                  \"UsersSelector\": {\n                    \"All\": true,\n                    \"ClearInput\": true,\n                    \"Collect\": true,\n                    \"Description\": \"string\",\n                    \"Label\": \"string\",\n                    \"Query\": {\n                      \"Limit\": \"string\",\n                      \"Offset\": \"string\",\n                      \"Operation\": \"string\",\n                      \"ResourcePolicyQuery\": {\n                        \"Any\": true,\n                        \"Empty\": true,\n                        \"Subjects\": [\n                          \"string\"\n                        ]\n                      },\n                      \"SortDesc\": true,\n                      \"SortField\": \"string\",\n                      \"SubQueries\": [\n                        {\n                          \"@type\": \"string\"\n                        }\n                      ],\n                      \"groupBy\": 10\n                    },\n                    \"Timeout\": \"string\",\n                    \"Users\": [\n                      {\n                        \"Attributes\": {},\n                        \"GroupLabel\": \"string\",\n                        \"GroupPath\": \"string\",\n                        \"IsGroup\": true,\n                        \"LastConnected\": 10,\n                        \"Login\": \"string\",\n                        \"OldPassword\": \"string\",\n                        \"Password\": \"string\",\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"Roles\": [\n                          {\n                            \"AutoApplies\": [\n                              \"string\"\n                            ],\n                            \"ForceOverride\": true,\n                            \"GroupRole\": true,\n                            \"IsTeam\": true,\n                            \"Label\": \"string\",\n                            \"LastUpdated\": 10,\n                            \"Policies\": [\n                              {\n                                \"Action\": \"string\",\n                                \"Effect\": \"string\",\n                                \"JsonConditions\": \"string\",\n                                \"Resource\": \"string\",\n                                \"Subject\": \"string\",\n                                \"id\": \"string\"\n                              }\n                            ],\n                            \"PoliciesContextEditable\": true,\n                            \"UserRole\": true,\n                            \"Uuid\": \"string\"\n                          }\n                        ],\n                        \"Uuid\": \"string\"\n                      }\n                    ]\n                  }\n                },\n                \"InputMessage\": {\n                  \"Acls\": [\n                    {\n                      \"Action\": {\n                        \"Name\": \"string\",\n                        \"Value\": \"string\"\n                      },\n                      \"ID\": \"string\",\n                      \"NodeID\": \"string\",\n                      \"RoleID\": \"string\",\n                      \"WorkspaceID\": \"string\"\n                    }\n                  ],\n                  \"Activities\": [\n                    {\n                      \"@context\": \"string\",\n                      \"accuracy\": \"[Unknown Type number]\",\n                      \"actor\": \"[Recursive structure]\",\n                      \"altitude\": \"[Unknown Type number]\",\n                      \"anyOf\": \"[Recursive structure]\",\n                      \"attachment\": \"[Recursive structure]\",\n                      \"attributedTo\": \"[Recursive structure]\",\n                      \"audience\": \"[Recursive structure]\",\n                      \"bcc\": \"[Recursive structure]\",\n                      \"bto\": \"[Recursive structure]\",\n                      \"cc\": \"[Recursive structure]\",\n                      \"closed\": \"string\",\n                      \"content\": \"[Recursive structure]\",\n                      \"context\": \"[Recursive structure]\",\n                      \"current\": \"[Recursive structure]\",\n                      \"deleted\": \"string\",\n                      \"duration\": \"string\",\n                      \"endTime\": \"string\",\n                      \"first\": \"[Recursive structure]\",\n                      \"formerType\": \"string\",\n                      \"generator\": \"[Recursive structure]\",\n                      \"height\": 10,\n                      \"href\": \"string\",\n                      \"hreflang\": \"string\",\n                      \"icon\": \"[Recursive structure]\",\n                      \"id\": \"string\",\n                      \"image\": \"[Recursive structure]\",\n                      \"inReplyTo\": \"[Recursive structure]\",\n                      \"instrument\": \"[Recursive structure]\",\n                      \"items\": [\n                        \"[Recursive structure]\"\n                      ],\n                      \"last\": \"[Recursive structure]\",\n                      \"latitude\": \"[Unknown Type number]\",\n                      \"location\": \"[Recursive structure]\",\n                      \"longitude\": \"[Unknown Type number]\",\n                      \"markdown\": \"string\",\n                      \"mediaType\": \"string\",\n                      \"name\": \"string\",\n                      \"next\": \"[Recursive structure]\",\n                      \"object\": \"[Recursive structure]\",\n                      \"oneOf\": \"[Recursive structure]\",\n                      \"origin\": \"[Recursive structure]\",\n                      \"partOf\": \"[Recursive structure]\",\n                      \"prev\": \"[Recursive structure]\",\n                      \"preview\": \"[Recursive structure]\",\n                      \"published\": \"string\",\n                      \"radius\": \"[Unknown Type number]\",\n                      \"rel\": \"string\",\n                      \"relationship\": \"[Recursive structure]\",\n                      \"replies\": \"[Recursive structure]\",\n                      \"result\": \"[Recursive structure]\",\n                      \"startTime\": \"string\",\n                      \"subject\": \"[Recursive structure]\",\n                      \"summary\": \"string\",\n                      \"tag\": \"[Recursive structure]\",\n                      \"target\": \"[Recursive structure]\",\n                      \"to\": \"[Recursive structure]\",\n                      \"totalItems\": 10,\n                      \"type\": \"string\",\n                      \"units\": \"string\",\n                      \"updated\": \"string\",\n                      \"url\": \"[Recursive structure]\",\n                      \"width\": 10\n                    }\n                  ],\n                  \"DataSources\": [\n                    {\n                      \"ApiKey\": \"string\",\n                      \"ApiSecret\": \"string\",\n                      \"CreationDate\": 10,\n                      \"Disabled\": true,\n                      \"EncryptionKey\": \"string\",\n                      \"EncryptionMode\": \"string\",\n                      \"FlatStorage\": true,\n                      \"LastSynchronizationDate\": 10,\n                      \"Name\": \"string\",\n                      \"ObjectsBaseFolder\": \"string\",\n                      \"ObjectsBucket\": \"string\",\n                      \"ObjectsHost\": \"string\",\n                      \"ObjectsPort\": 10,\n                      \"ObjectsSecure\": true,\n                      \"ObjectsServiceName\": \"string\",\n                      \"PeerAddress\": \"string\",\n                      \"SkipSyncOnRestart\": true,\n                      \"StorageConfiguration\": {},\n                      \"StorageType\": \"string\",\n                      \"VersioningPolicyName\": \"string\",\n                      \"Watch\": true\n                    }\n                  ],\n                  \"Event\": {\n                    \"@type\": \"string\"\n                  },\n                  \"Nodes\": [\n                    {\n                      \"AppearsIn\": [\n                        {\n                          \"Path\": \"string\",\n                          \"WsLabel\": \"string\",\n                          \"WsScope\": \"string\",\n                          \"WsSlug\": \"string\",\n                          \"WsUuid\": \"string\"\n                        }\n                      ],\n                      \"Commits\": [\n                        {\n                          \"Data\": \"string\",\n                          \"Description\": \"string\",\n                          \"Event\": {\n                            \"Metadata\": {},\n                            \"Optimistic\": true,\n                            \"Silent\": true,\n                            \"Source\": \"[Recursive structure]\",\n                            \"Target\": \"[Recursive structure]\",\n                            \"Type\": \"string\"\n                          },\n                          \"Location\": \"[Recursive structure]\",\n                          \"MTime\": \"string\",\n                          \"OwnerUuid\": \"string\",\n                          \"Size\": \"string\",\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Etag\": \"string\",\n                      \"MTime\": \"string\",\n                      \"MetaStore\": {},\n                      \"Mode\": 10,\n                      \"Path\": \"string\",\n                      \"Size\": \"string\",\n                      \"Type\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"OutputChain\": [\n                    {\n                      \"ErrorString\": \"string\",\n                      \"Ignored\": true,\n                      \"JsonBody\": \"string\",\n                      \"RawBody\": \"string\",\n                      \"StringBody\": \"string\",\n                      \"Success\": true,\n                      \"Time\": 10,\n                      \"Vars\": {}\n                    }\n                  ],\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Users\": [\n                    {\n                      \"Attributes\": {},\n                      \"GroupLabel\": \"string\",\n                      \"GroupPath\": \"string\",\n                      \"IsGroup\": true,\n                      \"LastConnected\": 10,\n                      \"Login\": \"string\",\n                      \"OldPassword\": \"string\",\n                      \"Password\": \"string\",\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"Roles\": [\n                        {\n                          \"AutoApplies\": [\n                            \"string\"\n                          ],\n                          \"ForceOverride\": true,\n                          \"GroupRole\": true,\n                          \"IsTeam\": true,\n                          \"Label\": \"string\",\n                          \"LastUpdated\": 10,\n                          \"Policies\": [\n                            {\n                              \"Action\": \"string\",\n                              \"Effect\": \"string\",\n                              \"JsonConditions\": \"string\",\n                              \"Resource\": \"string\",\n                              \"Subject\": \"string\",\n                              \"id\": \"string\"\n                            }\n                          ],\n                          \"PoliciesContextEditable\": true,\n                          \"UserRole\": true,\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Workspaces\": [\n                    {\n                      \"Attributes\": \"string\",\n                      \"Description\": \"string\",\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"RootNodes\": {},\n                      \"RootUUIDs\": [\n                        \"string\"\n                      ],\n                      \"Scope\": \"string\",\n                      \"Slug\": \"string\",\n                      \"UUID\": \"string\"\n                    }\n                  ]\n                },\n                \"OutputMessage\": {\n                  \"Acls\": [\n                    {\n                      \"Action\": {\n                        \"Name\": \"string\",\n                        \"Value\": \"string\"\n                      },\n                      \"ID\": \"string\",\n                      \"NodeID\": \"string\",\n                      \"RoleID\": \"string\",\n                      \"WorkspaceID\": \"string\"\n                    }\n                  ],\n                  \"Activities\": [\n                    {\n                      \"@context\": \"string\",\n                      \"accuracy\": \"[Unknown Type number]\",\n                      \"actor\": \"[Recursive structure]\",\n                      \"altitude\": \"[Unknown Type number]\",\n                      \"anyOf\": \"[Recursive structure]\",\n                      \"attachment\": \"[Recursive structure]\",\n                      \"attributedTo\": \"[Recursive structure]\",\n                      \"audience\": \"[Recursive structure]\",\n                      \"bcc\": \"[Recursive structure]\",\n                      \"bto\": \"[Recursive structure]\",\n                      \"cc\": \"[Recursive structure]\",\n                      \"closed\": \"string\",\n                      \"content\": \"[Recursive structure]\",\n                      \"context\": \"[Recursive structure]\",\n                      \"current\": \"[Recursive structure]\",\n                      \"deleted\": \"string\",\n                      \"duration\": \"string\",\n                      \"endTime\": \"string\",\n                      \"first\": \"[Recursive structure]\",\n                      \"formerType\": \"string\",\n                      \"generator\": \"[Recursive structure]\",\n                      \"height\": 10,\n                      \"href\": \"string\",\n                      \"hreflang\": \"string\",\n                      \"icon\": \"[Recursive structure]\",\n                      \"id\": \"string\",\n                      \"image\": \"[Recursive structure]\",\n                      \"inReplyTo\": \"[Recursive structure]\",\n                      \"instrument\": \"[Recursive structure]\",\n                      \"items\": [\n                        \"[Recursive structure]\"\n                      ],\n                      \"last\": \"[Recursive structure]\",\n                      \"latitude\": \"[Unknown Type number]\",\n                      \"location\": \"[Recursive structure]\",\n                      \"longitude\": \"[Unknown Type number]\",\n                      \"markdown\": \"string\",\n                      \"mediaType\": \"string\",\n                      \"name\": \"string\",\n                      \"next\": \"[Recursive structure]\",\n                      \"object\": \"[Recursive structure]\",\n                      \"oneOf\": \"[Recursive structure]\",\n                      \"origin\": \"[Recursive structure]\",\n                      \"partOf\": \"[Recursive structure]\",\n                      \"prev\": \"[Recursive structure]\",\n                      \"preview\": \"[Recursive structure]\",\n                      \"published\": \"string\",\n                      \"radius\": \"[Unknown Type number]\",\n                      \"rel\": \"string\",\n                      \"relationship\": \"[Recursive structure]\",\n                      \"replies\": \"[Recursive structure]\",\n                      \"result\": \"[Recursive structure]\",\n                      \"startTime\": \"string\",\n                      \"subject\": \"[Recursive structure]\",\n                      \"summary\": \"string\",\n                      \"tag\": \"[Recursive structure]\",\n                      \"target\": \"[Recursive structure]\",\n                      \"to\": \"[Recursive structure]\",\n                      \"totalItems\": 10,\n                      \"type\": \"string\",\n                      \"units\": \"string\",\n                      \"updated\": \"string\",\n                      \"url\": \"[Recursive structure]\",\n                      \"width\": 10\n                    }\n                  ],\n                  \"DataSources\": [\n                    {\n                      \"ApiKey\": \"string\",\n                      \"ApiSecret\": \"string\",\n                      \"CreationDate\": 10,\n                      \"Disabled\": true,\n                      \"EncryptionKey\": \"string\",\n                      \"EncryptionMode\": \"string\",\n                      \"FlatStorage\": true,\n                      \"LastSynchronizationDate\": 10,\n                      \"Name\": \"string\",\n                      \"ObjectsBaseFolder\": \"string\",\n                      \"ObjectsBucket\": \"string\",\n                      \"ObjectsHost\": \"string\",\n                      \"ObjectsPort\": 10,\n                      \"ObjectsSecure\": true,\n                      \"ObjectsServiceName\": \"string\",\n                      \"PeerAddress\": \"string\",\n                      \"SkipSyncOnRestart\": true,\n                      \"StorageConfiguration\": {},\n                      \"StorageType\": \"string\",\n                      \"VersioningPolicyName\": \"string\",\n                      \"Watch\": true\n                    }\n                  ],\n                  \"Event\": {\n                    \"@type\": \"string\"\n                  },\n                  \"Nodes\": [\n                    {\n                      \"AppearsIn\": [\n                        {\n                          \"Path\": \"string\",\n                          \"WsLabel\": \"string\",\n                          \"WsScope\": \"string\",\n                          \"WsSlug\": \"string\",\n                          \"WsUuid\": \"string\"\n                        }\n                      ],\n                      \"Commits\": [\n                        {\n                          \"Data\": \"string\",\n                          \"Description\": \"string\",\n                          \"Event\": {\n                            \"Metadata\": {},\n                            \"Optimistic\": true,\n                            \"Silent\": true,\n                            \"Source\": \"[Recursive structure]\",\n                            \"Target\": \"[Recursive structure]\",\n                            \"Type\": \"string\"\n                          },\n                          \"Location\": \"[Recursive structure]\",\n                          \"MTime\": \"string\",\n                          \"OwnerUuid\": \"string\",\n                          \"Size\": \"string\",\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Etag\": \"string\",\n                      \"MTime\": \"string\",\n                      \"MetaStore\": {},\n                      \"Mode\": 10,\n                      \"Path\": \"string\",\n                      \"Size\": \"string\",\n                      \"Type\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"OutputChain\": [\n                    {\n                      \"ErrorString\": \"string\",\n                      \"Ignored\": true,\n                      \"JsonBody\": \"string\",\n                      \"RawBody\": \"string\",\n                      \"StringBody\": \"string\",\n                      \"Success\": true,\n                      \"Time\": 10,\n                      \"Vars\": {}\n                    }\n                  ],\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Users\": [\n                    {\n                      \"Attributes\": {},\n                      \"GroupLabel\": \"string\",\n                      \"GroupPath\": \"string\",\n                      \"IsGroup\": true,\n                      \"LastConnected\": 10,\n                      \"Login\": \"string\",\n                      \"OldPassword\": \"string\",\n                      \"Password\": \"string\",\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"Roles\": [\n                        {\n                          \"AutoApplies\": [\n                            \"string\"\n                          ],\n                          \"ForceOverride\": true,\n                          \"GroupRole\": true,\n                          \"IsTeam\": true,\n                          \"Label\": \"string\",\n                          \"LastUpdated\": 10,\n                          \"Policies\": [\n                            {\n                              \"Action\": \"string\",\n                              \"Effect\": \"string\",\n                              \"JsonConditions\": \"string\",\n                              \"Resource\": \"string\",\n                              \"Subject\": \"string\",\n                              \"id\": \"string\"\n                            }\n                          ],\n                          \"PoliciesContextEditable\": true,\n                          \"UserRole\": true,\n                          \"Uuid\": \"string\"\n                        }\n                      ],\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Workspaces\": [\n                    {\n                      \"Attributes\": \"string\",\n                      \"Description\": \"string\",\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"RootNodes\": {},\n                      \"RootUUIDs\": [\n                        \"string\"\n                      ],\n                      \"Scope\": \"string\",\n                      \"Slug\": \"string\",\n                      \"UUID\": \"string\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"CanPause\": true,\n            \"CanStop\": true,\n            \"EndTime\": 10,\n            \"HasProgress\": true,\n            \"ID\": \"string\",\n            \"JobID\": \"string\",\n            \"Progress\": \"[Unknown Type number]\",\n            \"StartTime\": 10,\n            \"Status\": \"string\",\n            \"StatusMessage\": \"string\",\n            \"TriggerOwner\": \"string\"\n          }\n        ],\n        \"TasksSilentUpdate\": true,\n        \"Timeout\": \"string\",\n        \"UserEventFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"VersionMeta\": {}\n      },\n      \"JobID\": \"string\",\n      \"Label\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-jobs/","title":"PUT /a/scheduler/jobs","text":"<p>[Enterprise Only] Put a job in the scheduler  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-jobs/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Job #/definitions/jobsJob"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-jobs/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Job\": {\n    \"Actions\": [\n      {\n        \"ActionOutputFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"BreakAfter\": true,\n        \"Bypass\": true,\n        \"ChainedActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"DataFilter\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSelector\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"DataSourceSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Description\": \"string\",\n        \"FailedFilterActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"IdmSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Label\": \"string\",\n        \"MergeAction\": \"[Recursive structure]\",\n        \"NodesFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"NodesSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Parameters\": {},\n        \"Timeout\": \"string\",\n        \"TriggerFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"UsersFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"UsersSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"AutoClean\": true,\n    \"AutoRestart\": true,\n    \"AutoStart\": true,\n    \"ChatEventFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      }\n    },\n    \"ContextMetaFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Type\": \"string\"\n    },\n    \"CreatedAt\": 10,\n    \"Custom\": true,\n    \"DataSourceFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"EventNames\": [\n      \"string\"\n    ],\n    \"Hooks\": [\n      {\n        \"AllowOverridePresets\": true,\n        \"ApiSlug\": \"string\",\n        \"Metadata\": {},\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PresetParameters\": {}\n      }\n    ],\n    \"ID\": \"string\",\n    \"IdmFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"Inactive\": true,\n    \"Label\": \"string\",\n    \"Languages\": [\n      \"string\"\n    ],\n    \"MaxConcurrency\": 10,\n    \"MergeAction\": {\n      \"ActionOutputFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"BreakAfter\": true,\n      \"Bypass\": true,\n      \"ChainedActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"DataFilter\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSelector\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"DataSourceSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Description\": \"string\",\n      \"FailedFilterActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"IdmSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Label\": \"string\",\n      \"MergeAction\": \"[Recursive structure]\",\n      \"NodesFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"NodesSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Parameters\": {},\n      \"Timeout\": \"string\",\n      \"TriggerFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"UsersFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"UsersSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      }\n    },\n    \"Metadata\": {},\n    \"ModifiedAt\": 10,\n    \"NodeEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Pathes\": [\n        \"string\"\n      ],\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\"\n    },\n    \"Owner\": \"string\",\n    \"Parameters\": [\n      {\n        \"Description\": \"string\",\n        \"JsonChoices\": \"string\",\n        \"Mandatory\": true,\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Value\": \"string\"\n      }\n    ],\n    \"ResourcesDependencies\": [\n      {\n        \"@type\": \"string\"\n      }\n    ],\n    \"Schedule\": {\n      \"Iso8601MinDelta\": \"string\",\n      \"Iso8601Schedule\": \"string\"\n    },\n    \"Tasks\": [\n      {\n        \"ActionsLogs\": [\n          {\n            \"Action\": {\n              \"ActionOutputFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"BreakAfter\": true,\n              \"Bypass\": true,\n              \"ChainedActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ChatEventFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"ContextMetaFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Type\": \"string\"\n              },\n              \"DataFilter\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSelector\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSourceFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"DataSourceSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Description\": \"string\",\n              \"FailedFilterActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ID\": \"string\",\n              \"IdmFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"IdmSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Label\": \"string\",\n              \"MergeAction\": \"[Recursive structure]\",\n              \"NodesFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"NodesSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"Parameters\": {},\n              \"Timeout\": \"string\",\n              \"TriggerFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"UsersFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              },\n              \"UsersSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              }\n            },\n            \"InputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"Path\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            },\n            \"OutputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"Path\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            }\n          }\n        ],\n        \"CanPause\": true,\n        \"CanStop\": true,\n        \"EndTime\": 10,\n        \"HasProgress\": true,\n        \"ID\": \"string\",\n        \"JobID\": \"string\",\n        \"Progress\": \"[Unknown Type number]\",\n        \"StartTime\": 10,\n        \"Status\": \"string\",\n        \"StatusMessage\": \"string\",\n        \"TriggerOwner\": \"string\"\n      }\n    ],\n    \"TasksSilentUpdate\": true,\n    \"Timeout\": \"string\",\n    \"UserEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Users\": [\n        {\n          \"Attributes\": {},\n          \"GroupLabel\": \"string\",\n          \"GroupPath\": \"string\",\n          \"IsGroup\": true,\n          \"LastConnected\": 10,\n          \"Login\": \"string\",\n          \"OldPassword\": \"string\",\n          \"Password\": \"string\",\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PoliciesContextEditable\": true,\n          \"Roles\": [\n            {\n              \"AutoApplies\": [\n                \"string\"\n              ],\n              \"ForceOverride\": true,\n              \"GroupRole\": true,\n              \"IsTeam\": true,\n              \"Label\": \"string\",\n              \"LastUpdated\": 10,\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"UserRole\": true,\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"Uuid\": \"string\"\n        }\n      ]\n    },\n    \"VersionMeta\": {}\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-jobs/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/jobsPutJobResponse</p> <pre><code>{\n  \"Job\": {\n    \"Actions\": [\n      {\n        \"ActionOutputFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"BreakAfter\": true,\n        \"Bypass\": true,\n        \"ChainedActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"DataFilter\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSelector\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"DataSourceSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Description\": \"string\",\n        \"FailedFilterActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"IdmSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Label\": \"string\",\n        \"MergeAction\": \"[Recursive structure]\",\n        \"NodesFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"NodesSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Parameters\": {},\n        \"Timeout\": \"string\",\n        \"TriggerFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"UsersFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"UsersSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"AutoClean\": true,\n    \"AutoRestart\": true,\n    \"AutoStart\": true,\n    \"ChatEventFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      }\n    },\n    \"ContextMetaFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Type\": \"string\"\n    },\n    \"CreatedAt\": 10,\n    \"Custom\": true,\n    \"DataSourceFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"EventNames\": [\n      \"string\"\n    ],\n    \"Hooks\": [\n      {\n        \"AllowOverridePresets\": true,\n        \"ApiSlug\": \"string\",\n        \"Metadata\": {},\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PresetParameters\": {}\n      }\n    ],\n    \"ID\": \"string\",\n    \"IdmFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"Inactive\": true,\n    \"Label\": \"string\",\n    \"Languages\": [\n      \"string\"\n    ],\n    \"MaxConcurrency\": 10,\n    \"MergeAction\": {\n      \"ActionOutputFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"BreakAfter\": true,\n      \"Bypass\": true,\n      \"ChainedActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"DataFilter\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSelector\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"DataSourceSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Description\": \"string\",\n      \"FailedFilterActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"IdmSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Label\": \"string\",\n      \"MergeAction\": \"[Recursive structure]\",\n      \"NodesFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"NodesSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Parameters\": {},\n      \"Timeout\": \"string\",\n      \"TriggerFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"UsersFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"UsersSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      }\n    },\n    \"Metadata\": {},\n    \"ModifiedAt\": 10,\n    \"NodeEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Pathes\": [\n        \"string\"\n      ],\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\"\n    },\n    \"Owner\": \"string\",\n    \"Parameters\": [\n      {\n        \"Description\": \"string\",\n        \"JsonChoices\": \"string\",\n        \"Mandatory\": true,\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Value\": \"string\"\n      }\n    ],\n    \"ResourcesDependencies\": [\n      {\n        \"@type\": \"string\"\n      }\n    ],\n    \"Schedule\": {\n      \"Iso8601MinDelta\": \"string\",\n      \"Iso8601Schedule\": \"string\"\n    },\n    \"Tasks\": [\n      {\n        \"ActionsLogs\": [\n          {\n            \"Action\": {\n              \"ActionOutputFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"BreakAfter\": true,\n              \"Bypass\": true,\n              \"ChainedActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ChatEventFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"ContextMetaFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Type\": \"string\"\n              },\n              \"DataFilter\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSelector\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSourceFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"DataSourceSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Description\": \"string\",\n              \"FailedFilterActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ID\": \"string\",\n              \"IdmFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"IdmSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Label\": \"string\",\n              \"MergeAction\": \"[Recursive structure]\",\n              \"NodesFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"NodesSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"Parameters\": {},\n              \"Timeout\": \"string\",\n              \"TriggerFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"UsersFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              },\n              \"UsersSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              }\n            },\n            \"InputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"AppearsIn\": [\n                    {\n                      \"Path\": \"string\",\n                      \"WsLabel\": \"string\",\n                      \"WsScope\": \"string\",\n                      \"WsSlug\": \"string\",\n                      \"WsUuid\": \"string\"\n                    }\n                  ],\n                  \"Commits\": [\n                    {\n                      \"Data\": \"string\",\n                      \"Description\": \"string\",\n                      \"Event\": {\n                        \"Metadata\": {},\n                        \"Optimistic\": true,\n                        \"Silent\": true,\n                        \"Source\": \"[Recursive structure]\",\n                        \"Target\": \"[Recursive structure]\",\n                        \"Type\": \"string\"\n                      },\n                      \"Location\": \"[Recursive structure]\",\n                      \"MTime\": \"string\",\n                      \"OwnerUuid\": \"string\",\n                      \"Size\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Etag\": \"string\",\n                  \"MTime\": \"string\",\n                  \"MetaStore\": {},\n                  \"Mode\": 10,\n                  \"Path\": \"string\",\n                  \"Size\": \"string\",\n                  \"Type\": \"string\",\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            },\n            \"OutputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"AppearsIn\": [\n                    {\n                      \"Path\": \"string\",\n                      \"WsLabel\": \"string\",\n                      \"WsScope\": \"string\",\n                      \"WsSlug\": \"string\",\n                      \"WsUuid\": \"string\"\n                    }\n                  ],\n                  \"Commits\": [\n                    {\n                      \"Data\": \"string\",\n                      \"Description\": \"string\",\n                      \"Event\": {\n                        \"Metadata\": {},\n                        \"Optimistic\": true,\n                        \"Silent\": true,\n                        \"Source\": \"[Recursive structure]\",\n                        \"Target\": \"[Recursive structure]\",\n                        \"Type\": \"string\"\n                      },\n                      \"Location\": \"[Recursive structure]\",\n                      \"MTime\": \"string\",\n                      \"OwnerUuid\": \"string\",\n                      \"Size\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Etag\": \"string\",\n                  \"MTime\": \"string\",\n                  \"MetaStore\": {},\n                  \"Mode\": 10,\n                  \"Path\": \"string\",\n                  \"Size\": \"string\",\n                  \"Type\": \"string\",\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            }\n          }\n        ],\n        \"CanPause\": true,\n        \"CanStop\": true,\n        \"EndTime\": 10,\n        \"HasProgress\": true,\n        \"ID\": \"string\",\n        \"JobID\": \"string\",\n        \"Progress\": \"[Unknown Type number]\",\n        \"StartTime\": 10,\n        \"Status\": \"string\",\n        \"StatusMessage\": \"string\",\n        \"TriggerOwner\": \"string\"\n      }\n    ],\n    \"TasksSilentUpdate\": true,\n    \"Timeout\": \"string\",\n    \"UserEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Users\": [\n        {\n          \"Attributes\": {},\n          \"GroupLabel\": \"string\",\n          \"GroupPath\": \"string\",\n          \"IsGroup\": true,\n          \"LastConnected\": 10,\n          \"Login\": \"string\",\n          \"OldPassword\": \"string\",\n          \"Password\": \"string\",\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PoliciesContextEditable\": true,\n          \"Roles\": [\n            {\n              \"AutoApplies\": [\n                \"string\"\n              ],\n              \"ForceOverride\": true,\n              \"GroupRole\": true,\n              \"IsTeam\": true,\n              \"Label\": \"string\",\n              \"LastUpdated\": 10,\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"UserRole\": true,\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"Uuid\": \"string\"\n        }\n      ]\n    },\n    \"VersionMeta\": {}\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-actions/","title":"PUT /a/scheduler/templates/actions","text":"<p>Templates management for actions  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-actions/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Template #/definitions/entActionTemplate"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-actions/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Template\": {\n    \"Action\": {\n      \"ActionOutputFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"BreakAfter\": true,\n      \"Bypass\": true,\n      \"ChainedActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"DataFilter\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSelector\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"DataSourceSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Description\": \"string\",\n      \"FailedFilterActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"IdmSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Label\": \"string\",\n      \"MergeAction\": \"[Recursive structure]\",\n      \"NodesFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"NodesSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Parameters\": {},\n      \"Timeout\": \"string\",\n      \"TriggerFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"UsersFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"UsersSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      }\n    },\n    \"Name\": \"string\"\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-actions/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entPutActionTemplateResponse</p> <pre><code>{\n  \"Template\": {\n    \"Action\": {\n      \"ActionOutputFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"BreakAfter\": true,\n      \"Bypass\": true,\n      \"ChainedActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"DataFilter\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSelector\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"DataSourceSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Description\": \"string\",\n      \"FailedFilterActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"IdmSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Label\": \"string\",\n      \"MergeAction\": \"[Recursive structure]\",\n      \"NodesFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"NodesSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Parameters\": {},\n      \"Timeout\": \"string\",\n      \"TriggerFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"UsersFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"UsersSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      }\n    },\n    \"Name\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-jobs-name/","title":"PUT /a/scheduler/templates/jobs/{Name}","text":"<p>Templates management for Jobs  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-jobs-name/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-jobs-name/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entPutJobTemplateResponse</p> <pre><code>{\n  \"Job\": {\n    \"Actions\": [\n      {\n        \"ActionOutputFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"BreakAfter\": true,\n        \"Bypass\": true,\n        \"ChainedActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ChatEventFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"ContextMetaFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Type\": \"string\"\n        },\n        \"DataFilter\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSelector\": {\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\"\n        },\n        \"DataSourceFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"DataSourceSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Description\": \"string\",\n        \"FailedFilterActions\": [\n          \"[Recursive structure]\"\n        ],\n        \"ID\": \"string\",\n        \"IdmFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"IdmSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\",\n          \"Type\": \"string\"\n        },\n        \"Label\": \"string\",\n        \"MergeAction\": \"[Recursive structure]\",\n        \"NodesFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"NodesSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"FanOutInput\": true,\n          \"Label\": \"string\",\n          \"Pathes\": [\n            \"string\"\n          ],\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Range\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"OrderBy\": \"string\",\n            \"OrderDir\": \"string\"\n          },\n          \"Timeout\": \"string\"\n        },\n        \"Parameters\": {},\n        \"Timeout\": \"string\",\n        \"TriggerFilter\": {\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          }\n        },\n        \"UsersFilter\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        },\n        \"UsersSelector\": {\n          \"All\": true,\n          \"ClearInput\": true,\n          \"Collect\": true,\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Query\": {\n            \"Limit\": \"string\",\n            \"Offset\": \"string\",\n            \"Operation\": \"string\",\n            \"ResourcePolicyQuery\": {\n              \"Any\": true,\n              \"Empty\": true,\n              \"Subjects\": [\n                \"string\"\n              ]\n            },\n            \"SortDesc\": true,\n            \"SortField\": \"string\",\n            \"SubQueries\": [\n              {\n                \"@type\": \"string\"\n              }\n            ],\n            \"groupBy\": 10\n          },\n          \"Timeout\": \"string\",\n          \"Users\": [\n            {\n              \"Attributes\": {},\n              \"GroupLabel\": \"string\",\n              \"GroupPath\": \"string\",\n              \"IsGroup\": true,\n              \"LastConnected\": 10,\n              \"Login\": \"string\",\n              \"OldPassword\": \"string\",\n              \"Password\": \"string\",\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Uuid\": \"string\"\n            }\n          ]\n        }\n      }\n    ],\n    \"AutoClean\": true,\n    \"AutoRestart\": true,\n    \"AutoStart\": true,\n    \"ChatEventFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      }\n    },\n    \"ContextMetaFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Type\": \"string\"\n    },\n    \"CreatedAt\": 10,\n    \"Custom\": true,\n    \"DataSourceFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"EventNames\": [\n      \"string\"\n    ],\n    \"Hooks\": [\n      {\n        \"AllowOverridePresets\": true,\n        \"ApiSlug\": \"string\",\n        \"Metadata\": {},\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PresetParameters\": {}\n      }\n    ],\n    \"ID\": \"string\",\n    \"IdmFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"Inactive\": true,\n    \"Label\": \"string\",\n    \"Languages\": [\n      \"string\"\n    ],\n    \"MaxConcurrency\": 10,\n    \"MergeAction\": {\n      \"ActionOutputFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"BreakAfter\": true,\n      \"Bypass\": true,\n      \"ChainedActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ChatEventFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"ContextMetaFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Type\": \"string\"\n      },\n      \"DataFilter\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSelector\": {\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\"\n      },\n      \"DataSourceFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"DataSourceSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Description\": \"string\",\n      \"FailedFilterActions\": [\n        \"[Recursive structure]\"\n      ],\n      \"ID\": \"string\",\n      \"IdmFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"IdmSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\",\n        \"Type\": \"string\"\n      },\n      \"Label\": \"string\",\n      \"MergeAction\": \"[Recursive structure]\",\n      \"NodesFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"NodesSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"FanOutInput\": true,\n        \"Label\": \"string\",\n        \"Pathes\": [\n          \"string\"\n        ],\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Range\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"OrderBy\": \"string\",\n          \"OrderDir\": \"string\"\n        },\n        \"Timeout\": \"string\"\n      },\n      \"Parameters\": {},\n      \"Timeout\": \"string\",\n      \"TriggerFilter\": {\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        }\n      },\n      \"UsersFilter\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      },\n      \"UsersSelector\": {\n        \"All\": true,\n        \"ClearInput\": true,\n        \"Collect\": true,\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"Query\": {\n          \"Limit\": \"string\",\n          \"Offset\": \"string\",\n          \"Operation\": \"string\",\n          \"ResourcePolicyQuery\": {\n            \"Any\": true,\n            \"Empty\": true,\n            \"Subjects\": [\n              \"string\"\n            ]\n          },\n          \"SortDesc\": true,\n          \"SortField\": \"string\",\n          \"SubQueries\": [\n            {\n              \"@type\": \"string\"\n            }\n          ],\n          \"groupBy\": 10\n        },\n        \"Timeout\": \"string\",\n        \"Users\": [\n          {\n            \"Attributes\": {},\n            \"GroupLabel\": \"string\",\n            \"GroupPath\": \"string\",\n            \"IsGroup\": true,\n            \"LastConnected\": 10,\n            \"Login\": \"string\",\n            \"OldPassword\": \"string\",\n            \"Password\": \"string\",\n            \"Policies\": [\n              {\n                \"Action\": \"string\",\n                \"Effect\": \"string\",\n                \"JsonConditions\": \"string\",\n                \"Resource\": \"string\",\n                \"Subject\": \"string\",\n                \"id\": \"string\"\n              }\n            ],\n            \"PoliciesContextEditable\": true,\n            \"Roles\": [\n              {\n                \"AutoApplies\": [\n                  \"string\"\n                ],\n                \"ForceOverride\": true,\n                \"GroupRole\": true,\n                \"IsTeam\": true,\n                \"Label\": \"string\",\n                \"LastUpdated\": 10,\n                \"Policies\": [\n                  {\n                    \"Action\": \"string\",\n                    \"Effect\": \"string\",\n                    \"JsonConditions\": \"string\",\n                    \"Resource\": \"string\",\n                    \"Subject\": \"string\",\n                    \"id\": \"string\"\n                  }\n                ],\n                \"PoliciesContextEditable\": true,\n                \"UserRole\": true,\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Uuid\": \"string\"\n          }\n        ]\n      }\n    },\n    \"Metadata\": {},\n    \"ModifiedAt\": 10,\n    \"NodeEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Pathes\": [\n        \"string\"\n      ],\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\"\n    },\n    \"Owner\": \"string\",\n    \"Parameters\": [\n      {\n        \"Description\": \"string\",\n        \"JsonChoices\": \"string\",\n        \"Mandatory\": true,\n        \"Name\": \"string\",\n        \"Type\": \"string\",\n        \"Value\": \"string\"\n      }\n    ],\n    \"ResourcesDependencies\": [\n      {\n        \"@type\": \"string\"\n      }\n    ],\n    \"Schedule\": {\n      \"Iso8601MinDelta\": \"string\",\n      \"Iso8601Schedule\": \"string\"\n    },\n    \"Tasks\": [\n      {\n        \"ActionsLogs\": [\n          {\n            \"Action\": {\n              \"ActionOutputFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"BreakAfter\": true,\n              \"Bypass\": true,\n              \"ChainedActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ChatEventFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"ContextMetaFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Type\": \"string\"\n              },\n              \"DataFilter\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSelector\": {\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\"\n              },\n              \"DataSourceFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"DataSourceSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Description\": \"string\",\n              \"FailedFilterActions\": [\n                \"[Recursive structure]\"\n              ],\n              \"ID\": \"string\",\n              \"IdmFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"IdmSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\",\n                \"Type\": \"string\"\n              },\n              \"Label\": \"string\",\n              \"MergeAction\": \"[Recursive structure]\",\n              \"NodesFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"NodesSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"FanOutInput\": true,\n                \"Label\": \"string\",\n                \"Pathes\": [\n                  \"string\"\n                ],\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Range\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"OrderBy\": \"string\",\n                  \"OrderDir\": \"string\"\n                },\n                \"Timeout\": \"string\"\n              },\n              \"Parameters\": {},\n              \"Timeout\": \"string\",\n              \"TriggerFilter\": {\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                }\n              },\n              \"UsersFilter\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              },\n              \"UsersSelector\": {\n                \"All\": true,\n                \"ClearInput\": true,\n                \"Collect\": true,\n                \"Description\": \"string\",\n                \"Label\": \"string\",\n                \"Query\": {\n                  \"Limit\": \"string\",\n                  \"Offset\": \"string\",\n                  \"Operation\": \"string\",\n                  \"ResourcePolicyQuery\": {\n                    \"Any\": true,\n                    \"Empty\": true,\n                    \"Subjects\": [\n                      \"string\"\n                    ]\n                  },\n                  \"SortDesc\": true,\n                  \"SortField\": \"string\",\n                  \"SubQueries\": [\n                    {\n                      \"@type\": \"string\"\n                    }\n                  ],\n                  \"groupBy\": 10\n                },\n                \"Timeout\": \"string\",\n                \"Users\": [\n                  {\n                    \"Attributes\": {},\n                    \"GroupLabel\": \"string\",\n                    \"GroupPath\": \"string\",\n                    \"IsGroup\": true,\n                    \"LastConnected\": 10,\n                    \"Login\": \"string\",\n                    \"OldPassword\": \"string\",\n                    \"Password\": \"string\",\n                    \"Policies\": [\n                      {\n                        \"Action\": \"string\",\n                        \"Effect\": \"string\",\n                        \"JsonConditions\": \"string\",\n                        \"Resource\": \"string\",\n                        \"Subject\": \"string\",\n                        \"id\": \"string\"\n                      }\n                    ],\n                    \"PoliciesContextEditable\": true,\n                    \"Roles\": [\n                      {\n                        \"AutoApplies\": [\n                          \"string\"\n                        ],\n                        \"ForceOverride\": true,\n                        \"GroupRole\": true,\n                        \"IsTeam\": true,\n                        \"Label\": \"string\",\n                        \"LastUpdated\": 10,\n                        \"Policies\": [\n                          {\n                            \"Action\": \"string\",\n                            \"Effect\": \"string\",\n                            \"JsonConditions\": \"string\",\n                            \"Resource\": \"string\",\n                            \"Subject\": \"string\",\n                            \"id\": \"string\"\n                          }\n                        ],\n                        \"PoliciesContextEditable\": true,\n                        \"UserRole\": true,\n                        \"Uuid\": \"string\"\n                      }\n                    ],\n                    \"Uuid\": \"string\"\n                  }\n                ]\n              }\n            },\n            \"InputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"AppearsIn\": [\n                    {\n                      \"Path\": \"string\",\n                      \"WsLabel\": \"string\",\n                      \"WsScope\": \"string\",\n                      \"WsSlug\": \"string\",\n                      \"WsUuid\": \"string\"\n                    }\n                  ],\n                  \"Commits\": [\n                    {\n                      \"Data\": \"string\",\n                      \"Description\": \"string\",\n                      \"Event\": {\n                        \"Metadata\": {},\n                        \"Optimistic\": true,\n                        \"Silent\": true,\n                        \"Source\": \"[Recursive structure]\",\n                        \"Target\": \"[Recursive structure]\",\n                        \"Type\": \"string\"\n                      },\n                      \"Location\": \"[Recursive structure]\",\n                      \"MTime\": \"string\",\n                      \"OwnerUuid\": \"string\",\n                      \"Size\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Etag\": \"string\",\n                  \"MTime\": \"string\",\n                  \"MetaStore\": {},\n                  \"Mode\": 10,\n                  \"Path\": \"string\",\n                  \"Size\": \"string\",\n                  \"Type\": \"string\",\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            },\n            \"OutputMessage\": {\n              \"Acls\": [\n                {\n                  \"Action\": {\n                    \"Name\": \"string\",\n                    \"Value\": \"string\"\n                  },\n                  \"ID\": \"string\",\n                  \"NodeID\": \"string\",\n                  \"RoleID\": \"string\",\n                  \"WorkspaceID\": \"string\"\n                }\n              ],\n              \"Activities\": [\n                {\n                  \"@context\": \"string\",\n                  \"accuracy\": \"[Unknown Type number]\",\n                  \"actor\": \"[Recursive structure]\",\n                  \"altitude\": \"[Unknown Type number]\",\n                  \"anyOf\": \"[Recursive structure]\",\n                  \"attachment\": \"[Recursive structure]\",\n                  \"attributedTo\": \"[Recursive structure]\",\n                  \"audience\": \"[Recursive structure]\",\n                  \"bcc\": \"[Recursive structure]\",\n                  \"bto\": \"[Recursive structure]\",\n                  \"cc\": \"[Recursive structure]\",\n                  \"closed\": \"string\",\n                  \"content\": \"[Recursive structure]\",\n                  \"context\": \"[Recursive structure]\",\n                  \"current\": \"[Recursive structure]\",\n                  \"deleted\": \"string\",\n                  \"duration\": \"string\",\n                  \"endTime\": \"string\",\n                  \"first\": \"[Recursive structure]\",\n                  \"formerType\": \"string\",\n                  \"generator\": \"[Recursive structure]\",\n                  \"height\": 10,\n                  \"href\": \"string\",\n                  \"hreflang\": \"string\",\n                  \"icon\": \"[Recursive structure]\",\n                  \"id\": \"string\",\n                  \"image\": \"[Recursive structure]\",\n                  \"inReplyTo\": \"[Recursive structure]\",\n                  \"instrument\": \"[Recursive structure]\",\n                  \"items\": [\n                    \"[Recursive structure]\"\n                  ],\n                  \"last\": \"[Recursive structure]\",\n                  \"latitude\": \"[Unknown Type number]\",\n                  \"location\": \"[Recursive structure]\",\n                  \"longitude\": \"[Unknown Type number]\",\n                  \"markdown\": \"string\",\n                  \"mediaType\": \"string\",\n                  \"name\": \"string\",\n                  \"next\": \"[Recursive structure]\",\n                  \"object\": \"[Recursive structure]\",\n                  \"oneOf\": \"[Recursive structure]\",\n                  \"origin\": \"[Recursive structure]\",\n                  \"partOf\": \"[Recursive structure]\",\n                  \"prev\": \"[Recursive structure]\",\n                  \"preview\": \"[Recursive structure]\",\n                  \"published\": \"string\",\n                  \"radius\": \"[Unknown Type number]\",\n                  \"rel\": \"string\",\n                  \"relationship\": \"[Recursive structure]\",\n                  \"replies\": \"[Recursive structure]\",\n                  \"result\": \"[Recursive structure]\",\n                  \"startTime\": \"string\",\n                  \"subject\": \"[Recursive structure]\",\n                  \"summary\": \"string\",\n                  \"tag\": \"[Recursive structure]\",\n                  \"target\": \"[Recursive structure]\",\n                  \"to\": \"[Recursive structure]\",\n                  \"totalItems\": 10,\n                  \"type\": \"string\",\n                  \"units\": \"string\",\n                  \"updated\": \"string\",\n                  \"url\": \"[Recursive structure]\",\n                  \"width\": 10\n                }\n              ],\n              \"DataSources\": [\n                {\n                  \"ApiKey\": \"string\",\n                  \"ApiSecret\": \"string\",\n                  \"CreationDate\": 10,\n                  \"Disabled\": true,\n                  \"EncryptionKey\": \"string\",\n                  \"EncryptionMode\": \"string\",\n                  \"FlatStorage\": true,\n                  \"LastSynchronizationDate\": 10,\n                  \"Name\": \"string\",\n                  \"ObjectsBaseFolder\": \"string\",\n                  \"ObjectsBucket\": \"string\",\n                  \"ObjectsHost\": \"string\",\n                  \"ObjectsPort\": 10,\n                  \"ObjectsSecure\": true,\n                  \"ObjectsServiceName\": \"string\",\n                  \"PeerAddress\": \"string\",\n                  \"SkipSyncOnRestart\": true,\n                  \"StorageConfiguration\": {},\n                  \"StorageType\": \"string\",\n                  \"VersioningPolicyName\": \"string\",\n                  \"Watch\": true\n                }\n              ],\n              \"Event\": {\n                \"@type\": \"string\"\n              },\n              \"Nodes\": [\n                {\n                  \"AppearsIn\": [\n                    {\n                      \"Path\": \"string\",\n                      \"WsLabel\": \"string\",\n                      \"WsScope\": \"string\",\n                      \"WsSlug\": \"string\",\n                      \"WsUuid\": \"string\"\n                    }\n                  ],\n                  \"Commits\": [\n                    {\n                      \"Data\": \"string\",\n                      \"Description\": \"string\",\n                      \"Event\": {\n                        \"Metadata\": {},\n                        \"Optimistic\": true,\n                        \"Silent\": true,\n                        \"Source\": \"[Recursive structure]\",\n                        \"Target\": \"[Recursive structure]\",\n                        \"Type\": \"string\"\n                      },\n                      \"Location\": \"[Recursive structure]\",\n                      \"MTime\": \"string\",\n                      \"OwnerUuid\": \"string\",\n                      \"Size\": \"string\",\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Etag\": \"string\",\n                  \"MTime\": \"string\",\n                  \"MetaStore\": {},\n                  \"Mode\": 10,\n                  \"Path\": \"string\",\n                  \"Size\": \"string\",\n                  \"Type\": \"string\",\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"OutputChain\": [\n                {\n                  \"ErrorString\": \"string\",\n                  \"Ignored\": true,\n                  \"JsonBody\": \"string\",\n                  \"RawBody\": \"string\",\n                  \"StringBody\": \"string\",\n                  \"Success\": true,\n                  \"Time\": 10,\n                  \"Vars\": {}\n                }\n              ],\n              \"Roles\": [\n                {\n                  \"AutoApplies\": [\n                    \"string\"\n                  ],\n                  \"ForceOverride\": true,\n                  \"GroupRole\": true,\n                  \"IsTeam\": true,\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"UserRole\": true,\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Users\": [\n                {\n                  \"Attributes\": {},\n                  \"GroupLabel\": \"string\",\n                  \"GroupPath\": \"string\",\n                  \"IsGroup\": true,\n                  \"LastConnected\": 10,\n                  \"Login\": \"string\",\n                  \"OldPassword\": \"string\",\n                  \"Password\": \"string\",\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"Roles\": [\n                    {\n                      \"AutoApplies\": [\n                        \"string\"\n                      ],\n                      \"ForceOverride\": true,\n                      \"GroupRole\": true,\n                      \"IsTeam\": true,\n                      \"Label\": \"string\",\n                      \"LastUpdated\": 10,\n                      \"Policies\": [\n                        {\n                          \"Action\": \"string\",\n                          \"Effect\": \"string\",\n                          \"JsonConditions\": \"string\",\n                          \"Resource\": \"string\",\n                          \"Subject\": \"string\",\n                          \"id\": \"string\"\n                        }\n                      ],\n                      \"PoliciesContextEditable\": true,\n                      \"UserRole\": true,\n                      \"Uuid\": \"string\"\n                    }\n                  ],\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Workspaces\": [\n                {\n                  \"Attributes\": \"string\",\n                  \"Description\": \"string\",\n                  \"Label\": \"string\",\n                  \"LastUpdated\": 10,\n                  \"Policies\": [\n                    {\n                      \"Action\": \"string\",\n                      \"Effect\": \"string\",\n                      \"JsonConditions\": \"string\",\n                      \"Resource\": \"string\",\n                      \"Subject\": \"string\",\n                      \"id\": \"string\"\n                    }\n                  ],\n                  \"PoliciesContextEditable\": true,\n                  \"RootNodes\": {},\n                  \"RootUUIDs\": [\n                    \"string\"\n                  ],\n                  \"Scope\": \"string\",\n                  \"Slug\": \"string\",\n                  \"UUID\": \"string\"\n                }\n              ]\n            }\n          }\n        ],\n        \"CanPause\": true,\n        \"CanStop\": true,\n        \"EndTime\": 10,\n        \"HasProgress\": true,\n        \"ID\": \"string\",\n        \"JobID\": \"string\",\n        \"Progress\": \"[Unknown Type number]\",\n        \"StartTime\": 10,\n        \"Status\": \"string\",\n        \"StatusMessage\": \"string\",\n        \"TriggerOwner\": \"string\"\n      }\n    ],\n    \"TasksSilentUpdate\": true,\n    \"Timeout\": \"string\",\n    \"UserEventFilter\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Users\": [\n        {\n          \"Attributes\": {},\n          \"GroupLabel\": \"string\",\n          \"GroupPath\": \"string\",\n          \"IsGroup\": true,\n          \"LastConnected\": 10,\n          \"Login\": \"string\",\n          \"OldPassword\": \"string\",\n          \"Password\": \"string\",\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PoliciesContextEditable\": true,\n          \"Roles\": [\n            {\n              \"AutoApplies\": [\n                \"string\"\n              ],\n              \"ForceOverride\": true,\n              \"GroupRole\": true,\n              \"IsTeam\": true,\n              \"Label\": \"string\",\n              \"LastUpdated\": 10,\n              \"Policies\": [\n                {\n                  \"Action\": \"string\",\n                  \"Effect\": \"string\",\n                  \"JsonConditions\": \"string\",\n                  \"Resource\": \"string\",\n                  \"Subject\": \"string\",\n                  \"id\": \"string\"\n                }\n              ],\n              \"PoliciesContextEditable\": true,\n              \"UserRole\": true,\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"Uuid\": \"string\"\n        }\n      ]\n    },\n    \"VersionMeta\": {}\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-selectors/","title":"PUT /a/scheduler/templates/selectors","text":"<p>Templates management for filters  </p>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-selectors/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Template #/definitions/entSelectorTemplate"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-selectors/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Template\": {\n    \"ActionOutputFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      }\n    },\n    \"AsFilter\": true,\n    \"ContextMetaFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Type\": \"string\"\n    },\n    \"DataSourceSelector\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"Description\": \"string\",\n    \"IdmSelector\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\",\n      \"Type\": \"string\"\n    },\n    \"Label\": \"string\",\n    \"Name\": \"string\",\n    \"NodesSelector\": {\n      \"All\": true,\n      \"ClearInput\": true,\n      \"Collect\": true,\n      \"Description\": \"string\",\n      \"FanOutInput\": true,\n      \"Label\": \"string\",\n      \"Pathes\": [\n        \"string\"\n      ],\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      },\n      \"Range\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"OrderBy\": \"string\",\n        \"OrderDir\": \"string\"\n      },\n      \"Timeout\": \"string\"\n    },\n    \"TriggerFilter\": {\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"Query\": {\n        \"Limit\": \"string\",\n        \"Offset\": \"string\",\n        \"Operation\": \"string\",\n        \"ResourcePolicyQuery\": {\n          \"Any\": true,\n          \"Empty\": true,\n          \"Subjects\": [\n            \"string\"\n          ]\n        },\n        \"SortDesc\": true,\n        \"SortField\": \"string\",\n        \"SubQueries\": [\n          {\n            \"@type\": \"string\"\n          }\n        ],\n        \"groupBy\": 10\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/enterprise-scheduler-service/put-a-scheduler-templates-selectors/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/entPutSelectorTemplateResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/search-service/index/","title":"Search Service","text":"<p>This service provides a rich API for indexing and searching the files and folders.</p> <ul> <li>POST /a/search/nodes</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/search-service/post-a-search-nodes/","title":"POST /a/search/nodes","text":"<p>Search indexed nodes (files/folders) on various aspects  </p>"},{"location":"developer-guide/rest-api/search-service/post-a-search-nodes/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Details Load node details boolean From Start at given position integer Query The query object #/definitions/treeQuery Size Limit the number of results integer SortDirDesc Sort direction (asc by default) boolean SortField Sort result using a specific field string StatFlags Generic Details Flags array"},{"location":"developer-guide/rest-api/search-service/post-a-search-nodes/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Details\": true,\n  \"From\": 10,\n  \"Query\": {\n    \"Content\": \"string\",\n    \"DurationDate\": \"string\",\n    \"ETag\": \"string\",\n    \"Extension\": \"string\",\n    \"FileName\": \"string\",\n    \"FileNameOrContent\": \"string\",\n    \"FreeString\": \"string\",\n    \"GeoQuery\": {\n      \"BottomRight\": {\n        \"Lat\": \"[Unknown Type number]\",\n        \"Lon\": \"[Unknown Type number]\"\n      },\n      \"Center\": {\n        \"Lat\": \"[Unknown Type number]\",\n        \"Lon\": \"[Unknown Type number]\"\n      },\n      \"Distance\": \"string\",\n      \"TopLeft\": {\n        \"Lat\": \"[Unknown Type number]\",\n        \"Lon\": \"[Unknown Type number]\"\n      }\n    },\n    \"MaxDate\": \"string\",\n    \"MaxSize\": \"string\",\n    \"MinDate\": \"string\",\n    \"MinSize\": \"string\",\n    \"Not\": true,\n    \"PathDepth\": 10,\n    \"PathPrefix\": [\n      \"string\"\n    ],\n    \"Paths\": [\n      \"string\"\n    ],\n    \"Type\": \"string\",\n    \"UUIDs\": [\n      \"string\"\n    ]\n  },\n  \"Size\": 10,\n  \"SortDirDesc\": true,\n  \"SortField\": \"string\",\n  \"StatFlags\": [\n    10\n  ]\n}\n</code></pre>"},{"location":"developer-guide/rest-api/search-service/post-a-search-nodes/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restSearchResults</p> <pre><code>{\n  \"Facets\": [\n    {\n      \"Count\": 10,\n      \"End\": 10,\n      \"FieldName\": \"string\",\n      \"Label\": \"string\",\n      \"Max\": \"string\",\n      \"Min\": \"string\",\n      \"Start\": 10,\n      \"Term\": \"string\"\n    }\n  ],\n  \"Results\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/index/","title":"Share Service","text":"<p>This service provides all CRUD operations for managing Cells (folders shared across users) and Public Links (externally accessed)</p> <ul> <li>DELETE /a/share/cell/{Uuid}</li> <li>DELETE /a/share/link/{Uuid}</li> <li>GET /a/share/cell/{Uuid}</li> <li>GET /a/share/link/{Uuid}</li> <li>POST /a/share/resources</li> <li>PUT /a/share/cell</li> <li>PUT /a/share/link</li> <li>PUT /a/share/policies</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/delete-a-share-cell-uuid/","title":"DELETE /a/share/cell/{Uuid}","text":"<p>Delete a share room  </p>"},{"location":"developer-guide/rest-api/share-service/delete-a-share-cell-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>Uuid (string, required) Cell Uuid</li> </ul>"},{"location":"developer-guide/rest-api/share-service/delete-a-share-cell-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteCellResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/delete-a-share-link-uuid/","title":"DELETE /a/share/link/{Uuid}","text":"<p>Delete Share Link  </p>"},{"location":"developer-guide/rest-api/share-service/delete-a-share-link-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>Uuid (string, required) Id of Link to delete</li> </ul>"},{"location":"developer-guide/rest-api/share-service/delete-a-share-link-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteShareLinkResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/get-a-share-cell-uuid/","title":"GET /a/share/cell/{Uuid}","text":"<p>Load a share room  </p>"},{"location":"developer-guide/rest-api/share-service/get-a-share-cell-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>Uuid (string, required) Cell Uuid</li> </ul>"},{"location":"developer-guide/rest-api/share-service/get-a-share-cell-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restCell</p> <pre><code>{\n  \"ACLs\": {},\n  \"AccessEnd\": \"string\",\n  \"Description\": \"string\",\n  \"Label\": \"string\",\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"RootNodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/get-a-share-link-uuid/","title":"GET /a/share/link/{Uuid}","text":"<p>Load a share link with all infos  </p>"},{"location":"developer-guide/rest-api/share-service/get-a-share-link-uuid/#path-parameters","title":"Path Parameters","text":"<ul> <li>Uuid (string, required) Link Uuid</li> </ul>"},{"location":"developer-guide/rest-api/share-service/get-a-share-link-uuid/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restShareLink</p> <pre><code>{\n  \"AccessEnd\": \"string\",\n  \"AccessStart\": \"string\",\n  \"CurrentDownloads\": \"string\",\n  \"Description\": \"string\",\n  \"Label\": \"string\",\n  \"LinkHash\": \"string\",\n  \"LinkUrl\": \"string\",\n  \"MaxDownloads\": \"string\",\n  \"PasswordRequired\": true,\n  \"Permissions\": [\n    \"string\"\n  ],\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"RestrictToTargetUsers\": true,\n  \"RootNodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"TargetUsers\": {},\n  \"UserLogin\": \"string\",\n  \"UserUuid\": \"string\",\n  \"Uuid\": \"string\",\n  \"ViewTemplateName\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/post-a-share-resources/","title":"POST /a/share/resources","text":"<p>List Shared Resources for current user or all users  </p>"},{"location":"developer-guide/rest-api/share-service/post-a-share-resources/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Limit Limit number of results integer Offset Start listing at a given offset integer OwnedBySubject If true, will also check filter the output to shares actually owned by subject boolean ShareType Filter output to a given type #/definitions/ListSharedResourcesRequestListShareType Subject Will restrict the list to the shares readable by a specific subject. In user-context, current user is used by default. In admin-context, this can be any resource policy subject string"},{"location":"developer-guide/rest-api/share-service/post-a-share-resources/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Limit\": 10,\n  \"Offset\": 10,\n  \"OwnedBySubject\": true,\n  \"ShareType\": \"string\",\n  \"Subject\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/share-service/post-a-share-resources/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restListSharedResourcesResponse</p> <pre><code>{\n  \"Limit\": 10,\n  \"Offset\": 10,\n  \"Resources\": [\n    {\n      \"Cells\": [\n        {\n          \"ACLs\": {},\n          \"AccessEnd\": \"string\",\n          \"Description\": \"string\",\n          \"Label\": \"string\",\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PoliciesContextEditable\": true,\n          \"RootNodes\": [\n            {\n              \"AppearsIn\": [\n                {\n                  \"Path\": \"string\",\n                  \"WsLabel\": \"string\",\n                  \"WsScope\": \"string\",\n                  \"WsSlug\": \"string\",\n                  \"WsUuid\": \"string\"\n                }\n              ],\n              \"Commits\": [\n                {\n                  \"Data\": \"string\",\n                  \"Description\": \"string\",\n                  \"Event\": {\n                    \"Metadata\": {},\n                    \"Optimistic\": true,\n                    \"Silent\": true,\n                    \"Source\": \"[Recursive structure]\",\n                    \"Target\": \"[Recursive structure]\",\n                    \"Type\": \"string\"\n                  },\n                  \"Location\": \"[Recursive structure]\",\n                  \"MTime\": \"string\",\n                  \"OwnerUuid\": \"string\",\n                  \"Size\": \"string\",\n                  \"Uuid\": \"string\"\n                }\n              ],\n              \"Etag\": \"string\",\n              \"MTime\": \"string\",\n              \"MetaStore\": {},\n              \"Mode\": 10,\n              \"Path\": \"string\",\n              \"Size\": \"string\",\n              \"Type\": \"string\",\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Link\": {\n        \"AccessEnd\": \"string\",\n        \"AccessStart\": \"string\",\n        \"CurrentDownloads\": \"string\",\n        \"Description\": \"string\",\n        \"Label\": \"string\",\n        \"LinkHash\": \"string\",\n        \"LinkUrl\": \"string\",\n        \"MaxDownloads\": \"string\",\n        \"PasswordRequired\": true,\n        \"Permissions\": [\n          \"string\"\n        ],\n        \"Policies\": [\n          {\n            \"Action\": \"string\",\n            \"Effect\": \"string\",\n            \"JsonConditions\": \"string\",\n            \"Resource\": \"string\",\n            \"Subject\": \"string\",\n            \"id\": \"string\"\n          }\n        ],\n        \"PoliciesContextEditable\": true,\n        \"RestrictToTargetUsers\": true,\n        \"RootNodes\": [\n          {\n            \"AppearsIn\": [\n              {\n                \"Path\": \"string\",\n                \"WsLabel\": \"string\",\n                \"WsScope\": \"string\",\n                \"WsSlug\": \"string\",\n                \"WsUuid\": \"string\"\n              }\n            ],\n            \"Commits\": [\n              {\n                \"Data\": \"string\",\n                \"Description\": \"string\",\n                \"Event\": {\n                  \"Metadata\": {},\n                  \"Optimistic\": true,\n                  \"Silent\": true,\n                  \"Source\": \"[Recursive structure]\",\n                  \"Target\": \"[Recursive structure]\",\n                  \"Type\": \"string\"\n                },\n                \"Location\": \"[Recursive structure]\",\n                \"MTime\": \"string\",\n                \"OwnerUuid\": \"string\",\n                \"Size\": \"string\",\n                \"Uuid\": \"string\"\n              }\n            ],\n            \"Etag\": \"string\",\n            \"MTime\": \"string\",\n            \"MetaStore\": {},\n            \"Mode\": 10,\n            \"Path\": \"string\",\n            \"Size\": \"string\",\n            \"Type\": \"string\",\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"TargetUsers\": {},\n        \"UserLogin\": \"string\",\n        \"UserUuid\": \"string\",\n        \"Uuid\": \"string\",\n        \"ViewTemplateName\": \"string\"\n      },\n      \"Node\": {\n        \"AppearsIn\": [\n          {\n            \"Path\": \"string\",\n            \"WsLabel\": \"string\",\n            \"WsScope\": \"string\",\n            \"WsSlug\": \"string\",\n            \"WsUuid\": \"string\"\n          }\n        ],\n        \"Commits\": [\n          {\n            \"Data\": \"string\",\n            \"Description\": \"string\",\n            \"Event\": {\n              \"Metadata\": {},\n              \"Optimistic\": true,\n              \"Silent\": true,\n              \"Source\": \"[Recursive structure]\",\n              \"Target\": \"[Recursive structure]\",\n              \"Type\": \"string\"\n            },\n            \"Location\": \"[Recursive structure]\",\n            \"MTime\": \"string\",\n            \"OwnerUuid\": \"string\",\n            \"Size\": \"string\",\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"Etag\": \"string\",\n        \"MTime\": \"string\",\n        \"MetaStore\": {},\n        \"Mode\": 10,\n        \"Path\": \"string\",\n        \"Size\": \"string\",\n        \"Type\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    }\n  ],\n  \"Total\": 10\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/put-a-share-cell/","title":"PUT /a/share/cell","text":"<p>Put or Create a share room  </p>"},{"location":"developer-guide/rest-api/share-service/put-a-share-cell/#body-parameters","title":"Body Parameters","text":"Name Description Type Required CreateEmptyRoot Whether to create a dedicated folder for this cell at creation boolean Room Content of the Cell (Room is legacy name) #/definitions/restCell"},{"location":"developer-guide/rest-api/share-service/put-a-share-cell/#body-example","title":"Body Example","text":"<pre><code>{\n  \"CreateEmptyRoot\": true,\n  \"Room\": {\n    \"ACLs\": {},\n    \"AccessEnd\": \"string\",\n    \"Description\": \"string\",\n    \"Label\": \"string\",\n    \"Policies\": [\n      {\n        \"Action\": \"string\",\n        \"Effect\": \"string\",\n        \"JsonConditions\": \"string\",\n        \"Resource\": \"string\",\n        \"Subject\": \"string\",\n        \"id\": \"string\"\n      }\n    ],\n    \"PoliciesContextEditable\": true,\n    \"RootNodes\": [\n      {\n        \"Path\": \"string\"\n      }\n    ],\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/share-service/put-a-share-cell/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restCell</p> <pre><code>{\n  \"ACLs\": {},\n  \"AccessEnd\": \"string\",\n  \"Description\": \"string\",\n  \"Label\": \"string\",\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"RootNodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/put-a-share-link/","title":"PUT /a/share/link","text":"<p>Put or Create a share room  </p>"},{"location":"developer-guide/rest-api/share-service/put-a-share-link/#body-parameters","title":"Body Parameters","text":"Name Description Type Required CreatePassword Set if switching from no password to password string PasswordEnabled Whether it has Password enabled boolean ShareLink Content of the link to create #/definitions/restShareLink UpdateCustomHash Change the ShareLink Hash with a custom value string UpdatePassword Set if updating an existing password string"},{"location":"developer-guide/rest-api/share-service/put-a-share-link/#body-example","title":"Body Example","text":"<pre><code>{\n  \"CreatePassword\": \"string\",\n  \"PasswordEnabled\": true,\n  \"ShareLink\": {\n    \"AccessEnd\": \"string\",\n    \"AccessStart\": \"string\",\n    \"CurrentDownloads\": \"string\",\n    \"Description\": \"string\",\n    \"Label\": \"string\",\n    \"LinkHash\": \"string\",\n    \"LinkUrl\": \"string\",\n    \"MaxDownloads\": \"string\",\n    \"PasswordRequired\": true,\n    \"Permissions\": [\n      \"string\"\n    ],\n    \"Policies\": [\n      {\n        \"Action\": \"string\",\n        \"Effect\": \"string\",\n        \"JsonConditions\": \"string\",\n        \"Resource\": \"string\",\n        \"Subject\": \"string\",\n        \"id\": \"string\"\n      }\n    ],\n    \"PoliciesContextEditable\": true,\n    \"RestrictToTargetUsers\": true,\n    \"RootNodes\": [\n      {\n        \"Path\": \"string\"\n      }\n    ],\n    \"TargetUsers\": {},\n    \"UserLogin\": \"string\",\n    \"UserUuid\": \"string\",\n    \"Uuid\": \"string\",\n    \"ViewTemplateName\": \"string\"\n  },\n  \"UpdateCustomHash\": \"string\",\n  \"UpdatePassword\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/share-service/put-a-share-link/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restShareLink</p> <pre><code>{\n  \"AccessEnd\": \"string\",\n  \"AccessStart\": \"string\",\n  \"CurrentDownloads\": \"string\",\n  \"Description\": \"string\",\n  \"Label\": \"string\",\n  \"LinkHash\": \"string\",\n  \"LinkUrl\": \"string\",\n  \"MaxDownloads\": \"string\",\n  \"PasswordRequired\": true,\n  \"Permissions\": [\n    \"string\"\n  ],\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"RestrictToTargetUsers\": true,\n  \"RootNodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"TargetUsers\": {},\n  \"UserLogin\": \"string\",\n  \"UserUuid\": \"string\",\n  \"Uuid\": \"string\",\n  \"ViewTemplateName\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/share-service/put-a-share-policies/","title":"PUT /a/share/policies","text":"<p>Updates policies associated to the underlying workspace for a Cell or a ShareLink  </p>"},{"location":"developer-guide/rest-api/share-service/put-a-share-policies/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Policies List of policies to update array Uuid Cell or Link UUID string"},{"location":"developer-guide/rest-api/share-service/put-a-share-policies/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"Uuid\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/share-service/put-a-share-policies/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restUpdateSharePoliciesResponse</p> <pre><code>{\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/templates-service/index/","title":"Templates Service","text":"<p>This service is a simple provider to feed user with a set of predefined templates (typically Office Documents) used to create new files.</p> <ul> <li>GET /a/templates</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/templates-service/get-a-templates/","title":"GET /a/templates","text":"<p>List available templates  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/templates-service/get-a-templates/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restListTemplatesResponse</p> <pre><code>{\n  \"Templates\": [\n    {\n      \"Editable\": true,\n      \"Label\": \"string\",\n      \"Node\": {\n        \"Children\": {},\n        \"Node\": {\n          \"AppearsIn\": [\n            {\n              \"Path\": \"string\",\n              \"WsLabel\": \"string\",\n              \"WsScope\": \"string\",\n              \"WsSlug\": \"string\",\n              \"WsUuid\": \"string\"\n            }\n          ],\n          \"Commits\": [\n            {\n              \"Data\": \"string\",\n              \"Description\": \"string\",\n              \"Event\": {\n                \"Metadata\": {},\n                \"Optimistic\": true,\n                \"Silent\": true,\n                \"Source\": \"[Recursive structure]\",\n                \"Target\": \"[Recursive structure]\",\n                \"Type\": \"string\"\n              },\n              \"Location\": \"[Recursive structure]\",\n              \"MTime\": \"string\",\n              \"OwnerUuid\": \"string\",\n              \"Size\": \"string\",\n              \"Uuid\": \"string\"\n            }\n          ],\n          \"Etag\": \"string\",\n          \"MTime\": \"string\",\n          \"MetaStore\": {},\n          \"Mode\": 10,\n          \"Path\": \"string\",\n          \"Size\": \"string\",\n          \"Type\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      },\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"UUID\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/token-service/index/","title":"Token Service","text":"<p>This service provides endpoints for revoking authentication tokens, and generating unique tokens for reset password operation.</p> <ul> <li>POST /a/auth/reset-password</li> <li>POST /a/auth/token/document</li> <li>POST /a/auth/token/revoke</li> <li>PUT /a/auth/reset-password-token/{UserLogin}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-reset-password/","title":"POST /a/auth/reset-password","text":"<p>Finish up the reset password process by providing the unique token  </p>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-reset-password/#body-parameters","title":"Body Parameters","text":"Name Description Type Required NewPassword New password to be stored for this user string ResetPasswordToken Token generated by the previous step of the reset password workflow string UserLogin User Login string"},{"location":"developer-guide/rest-api/token-service/post-a-auth-reset-password/#body-example","title":"Body Example","text":"<pre><code>{\n  \"NewPassword\": \"string\",\n  \"ResetPasswordToken\": \"string\",\n  \"UserLogin\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-reset-password/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restResetPasswordResponse</p> <pre><code>{\n  \"Message\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-document/","title":"POST /a/auth/token/document","text":"<p>Generate a temporary access token for a specific document for the current user  </p>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-document/#body-parameters","title":"Body Parameters","text":"Name Description Type Required ClientID string Path string"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-document/#body-example","title":"Body Example","text":"<pre><code>{\n  \"ClientID\": \"string\",\n  \"Path\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-document/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDocumentAccessTokenResponse</p> <pre><code>{\n  \"AccessToken\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-revoke/","title":"POST /a/auth/token/revoke","text":"<p>Revoke a JWT token  </p>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-revoke/#body-parameters","title":"Body Parameters","text":"Name Description Type Required TokenId Pass a specific Token ID to be revoked. If empty, request will use current JWT string"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-revoke/#body-example","title":"Body Example","text":"<pre><code>{\n  \"TokenId\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/token-service/post-a-auth-token-revoke/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restRevokeResponse</p> <pre><code>{\n  \"Message\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/token-service/put-a-auth-reset-password-token-userlogin/","title":"PUT /a/auth/reset-password-token/{UserLogin}","text":"<p>Generate a unique token for the reset password process  </p>"},{"location":"developer-guide/rest-api/token-service/put-a-auth-reset-password-token-userlogin/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/token-service/put-a-auth-reset-password-token-userlogin/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restResetPasswordTokenResponse</p> <pre><code>{\n  \"Message\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/tree-service/index/","title":"Tree Service","text":"<p>This service is the main entry point for listing files and folders, getting stats about them, creating folders, etc. Please note that it does not provide access to the actual content (upload/download), which must be accessed using the S3 API.</p> <ul> <li>GET /a/tree/stat/{Node}</li> <li>POST /a/tree/create</li> <li>POST /a/tree/delete</li> <li>POST /a/tree/restore</li> <li>POST /a/tree/selection</li> <li>POST /a/tree/stats</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/tree-service/get-a-tree-stat-node/","title":"GET /a/tree/stat/{Node}","text":"<p>Return node meta without the node content itself  </p>"},{"location":"developer-guide/rest-api/tree-service/get-a-tree-stat-node/#path-parameters","title":"Path Parameters","text":"<ul> <li>Node (string, required) The node to state</li> </ul>"},{"location":"developer-guide/rest-api/tree-service/get-a-tree-stat-node/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restHeadNodeResponse</p> <pre><code>{\n  \"Node\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-create/","title":"POST /a/tree/create","text":"<p>Create dirs or empty files inside the tree  </p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-create/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Nodes A list of nodes that must be created array Recursive If nodes are created inside non-existing folders, whether the parents should be created automatically or not boolean TemplateUUID Use a template to create this node string"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-create/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Nodes\": [\n    {\n      \"Path\": \"string\"\n    }\n  ],\n  \"Recursive\": true,\n  \"TemplateUUID\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-create/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restNodesCollection</p> <pre><code>{\n  \"Children\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Parent\": {\n    \"AppearsIn\": [\n      {\n        \"Path\": \"string\",\n        \"WsLabel\": \"string\",\n        \"WsScope\": \"string\",\n        \"WsSlug\": \"string\",\n        \"WsUuid\": \"string\"\n      }\n    ],\n    \"Commits\": [\n      {\n        \"Data\": \"string\",\n        \"Description\": \"string\",\n        \"Event\": {\n          \"Metadata\": {},\n          \"Optimistic\": true,\n          \"Silent\": true,\n          \"Source\": \"[Recursive structure]\",\n          \"Target\": \"[Recursive structure]\",\n          \"Type\": \"string\"\n        },\n        \"Location\": \"[Recursive structure]\",\n        \"MTime\": \"string\",\n        \"OwnerUuid\": \"string\",\n        \"Size\": \"string\",\n        \"Uuid\": \"string\"\n      }\n    ],\n    \"Etag\": \"string\",\n    \"MTime\": \"string\",\n    \"MetaStore\": {},\n    \"Mode\": 10,\n    \"Path\": \"string\",\n    \"Size\": \"string\",\n    \"Type\": \"string\",\n    \"Uuid\": \"string\"\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-delete/","title":"POST /a/tree/delete","text":"<p>Handle nodes deletion  </p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-delete/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Nodes List of nodes to delete array Recursive Whether to delete all the children if node is a folder boolean RemovePermanently Force permanent deletion even if a recycle bin is defined boolean"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-delete/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Nodes\": [\n    {\n      \"Path\": \"string\"\n    }\n  ],\n  \"Recursive\": true,\n  \"RemovePermanently\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-delete/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteNodesResponse</p> <pre><code>{\n  \"DeleteJobs\": [\n    {\n      \"Label\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-restore/","title":"POST /a/tree/restore","text":"<p>Handle nodes restoration from recycle bin  </p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-restore/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Nodes Restore this node from the recycle bin to its original location array"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-restore/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Nodes\": [\n    {\n      \"Path\": \"string\"\n    }\n  ]\n}\n</code></pre>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-restore/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restRestoreNodesResponse</p> <pre><code>{\n  \"RestoreJobs\": [\n    {\n      \"Label\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-selection/","title":"POST /a/tree/selection","text":"<p>Create a temporary selection for further action (namely download)  </p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-selection/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Nodes Create a temporary selection out of this list of nodes array Persist Whether to save the selection or just get a temporary Uuid in return boolean TargetAction Associated target action for this selection string"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-selection/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Nodes\": [\n    {\n      \"Path\": \"string\"\n    }\n  ],\n  \"Persist\": true,\n  \"TargetAction\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-selection/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restCreateSelectionResponse</p> <pre><code>{\n  \"Nodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"SelectionUUID\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-stats/","title":"POST /a/tree/stats","text":"<p>List meta for a list of nodes, or a full directory using /path/* syntax  </p>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-stats/#body-parameters","title":"Body Parameters","text":"Name Description Type Required AllMetaProviders Whether to query all services for the metadata they can contribute to enrich the node boolean Filters Children Filtering object Limit Limit number of results integer NodePaths List of node paths to query (use paths ending with /* to load the children) array Offset Start listing at a given position integer SortDirDesc Sort descending (otherwise ascending) boolean SortField Remote Sort on specific field string Versions Load Versions of the given node boolean"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-stats/#body-example","title":"Body Example","text":"<pre><code>{\n  \"AllMetaProviders\": true,\n  \"Filters\": {},\n  \"Limit\": 10,\n  \"NodePaths\": [\n    \"string\"\n  ],\n  \"Offset\": 10,\n  \"SortDirDesc\": true,\n  \"SortField\": \"string\",\n  \"Versions\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/tree-service/post-a-tree-stats/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restBulkMetaResponse</p> <pre><code>{\n  \"Nodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Pagination\": {\n    \"CurrentOffset\": 10,\n    \"CurrentPage\": 10,\n    \"Limit\": 10,\n    \"NextOffset\": 10,\n    \"PrevOffset\": 10,\n    \"Total\": 10,\n    \"TotalPages\": 10\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/update-service/index/","title":"Update Service","text":"<p>This service provides calls to the update server to check if a new version is available for download.</p> <ul> <li>PATCH /a/update/{TargetVersion}</li> <li>POST /a/update</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/update-service/patch-a-update-targetversion/","title":"PATCH /a/update/{TargetVersion}","text":"<p>Apply an update to a given version  </p>"},{"location":"developer-guide/rest-api/update-service/patch-a-update-targetversion/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/update-service/patch-a-update-targetversion/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/updateApplyUpdateResponse</p> <pre><code>{\n  \"Message\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/update-service/post-a-update/","title":"POST /a/update","text":"<p>Check the remote server to see if there are available binaries  </p>"},{"location":"developer-guide/rest-api/update-service/post-a-update/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Channel Channel name string CurrentVersion Current version of the application string GOARCH Current GOARCH string GOOS Current GOOS string LicenseInfo For enterprise version, info about the current license object PackageName Name of the currently running application string ServiceName Not Used : specific service to get updates for string"},{"location":"developer-guide/rest-api/update-service/post-a-update/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Channel\": \"string\",\n  \"CurrentVersion\": \"string\",\n  \"GOARCH\": \"string\",\n  \"GOOS\": \"string\",\n  \"LicenseInfo\": {},\n  \"PackageName\": \"string\",\n  \"ServiceName\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/update-service/post-a-update/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/updateUpdateResponse</p> <pre><code>{\n  \"AvailableBinaries\": [\n    {\n      \"BinaryArch\": \"string\",\n      \"BinaryChecksum\": \"string\",\n      \"BinaryHashType\": \"string\",\n      \"BinaryOS\": \"string\",\n      \"BinarySignature\": \"string\",\n      \"BinarySize\": \"string\",\n      \"BinaryURL\": \"string\",\n      \"ChangeLog\": \"string\",\n      \"Description\": \"string\",\n      \"IsPatch\": true,\n      \"Label\": \"string\",\n      \"License\": \"string\",\n      \"PackageName\": \"string\",\n      \"PatchAlgorithm\": \"string\",\n      \"ReleaseDate\": 10,\n      \"ServiceName\": \"string\",\n      \"Status\": \"string\",\n      \"Version\": \"string\"\n    }\n  ],\n  \"Channel\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/index/","title":"UserMeta Service","text":"<p>This service provides ways to attach user-defined metadata to nodes. It is also used for managing users bookmarks.</p> <ul> <li>DELETE /a/user-meta/tags/{Namespace}/{Tags}</li> <li>GET /a/user-meta/namespace</li> <li>GET /a/user-meta/tags/{Namespace}</li> <li>POST /a/user-meta/bookmarks</li> <li>POST /a/user-meta/search</li> <li>POST /a/user-meta/tags/{Namespace}</li> <li>PUT /a/user-meta/namespace</li> <li>PUT /a/user-meta/update</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/delete-a-user-meta-tags-namespace-tags/","title":"DELETE /a/user-meta/tags/{Namespace}/{Tags}","text":"<p>Delete one or all tags for a given namespace (use * for all tags)  </p>"},{"location":"developer-guide/rest-api/usermeta-service/delete-a-user-meta-tags-namespace-tags/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>Namespace (string, required) Delete tags from this namespace</p> </li> <li> <p>Tags (string, required) Delete this tag</p> </li> </ul>"},{"location":"developer-guide/rest-api/usermeta-service/delete-a-user-meta-tags-namespace-tags/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteUserMetaTagsResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/get-a-user-meta-namespace/","title":"GET /a/user-meta/namespace","text":"<p>List defined meta namespaces  </p> <p>No Parameters</p>"},{"location":"developer-guide/rest-api/usermeta-service/get-a-user-meta-namespace/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restUserMetaNamespaceCollection</p> <pre><code>{\n  \"Namespaces\": [\n    {\n      \"Indexable\": true,\n      \"JsonDefinition\": \"string\",\n      \"Label\": \"string\",\n      \"Namespace\": \"string\",\n      \"Order\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/get-a-user-meta-tags-namespace/","title":"GET /a/user-meta/tags/{Namespace}","text":"<p>List Tags for a given namespace  </p>"},{"location":"developer-guide/rest-api/usermeta-service/get-a-user-meta-tags-namespace/#path-parameters","title":"Path Parameters","text":"<ul> <li>Namespace (string, required) List user meta tags for this namespace</li> </ul>"},{"location":"developer-guide/rest-api/usermeta-service/get-a-user-meta-tags-namespace/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restListUserMetaTagsResponse</p> <pre><code>{\n  \"Tags\": [\n    \"string\"\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-bookmarks/","title":"POST /a/user-meta/bookmarks","text":"<p>Special API for Bookmarks, will load userMeta and the associated nodes, and return as a node list  </p>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-bookmarks/#body-parameters","title":"Body Parameters","text":"Name Description Type Required All boolean"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-bookmarks/#body-example","title":"Body Example","text":"<pre><code>{\n  \"All\": true\n}\n</code></pre>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-bookmarks/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restBulkMetaResponse</p> <pre><code>{\n  \"Nodes\": [\n    {\n      \"AppearsIn\": [\n        {\n          \"Path\": \"string\",\n          \"WsLabel\": \"string\",\n          \"WsScope\": \"string\",\n          \"WsSlug\": \"string\",\n          \"WsUuid\": \"string\"\n        }\n      ],\n      \"Commits\": [\n        {\n          \"Data\": \"string\",\n          \"Description\": \"string\",\n          \"Event\": {\n            \"Metadata\": {},\n            \"Optimistic\": true,\n            \"Silent\": true,\n            \"Source\": \"[Recursive structure]\",\n            \"Target\": \"[Recursive structure]\",\n            \"Type\": \"string\"\n          },\n          \"Location\": \"[Recursive structure]\",\n          \"MTime\": \"string\",\n          \"OwnerUuid\": \"string\",\n          \"Size\": \"string\",\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Etag\": \"string\",\n      \"MTime\": \"string\",\n      \"MetaStore\": {},\n      \"Mode\": 10,\n      \"Path\": \"string\",\n      \"Size\": \"string\",\n      \"Type\": \"string\",\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Pagination\": {\n    \"CurrentOffset\": 10,\n    \"CurrentPage\": 10,\n    \"Limit\": 10,\n    \"NextOffset\": 10,\n    \"PrevOffset\": 10,\n    \"Total\": 10,\n    \"TotalPages\": 10\n  }\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-search/","title":"POST /a/user-meta/search","text":"<p>Search a list of meta by node Id or by User id and by namespace  </p>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-search/#body-parameters","title":"Body Parameters","text":"Name Description Type Required MetaUuids Look for meta by their unique identifier array Namespace Filter meta by their namespace string NodeUuids Look for all meta for a list of nodes array ResourceQuery Filter meta by policies query #/definitions/serviceResourcePolicyQuery ResourceSubjectOwner Filter meta by owner (in the sense of the policies) string"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-search/#body-example","title":"Body Example","text":"<pre><code>{\n  \"MetaUuids\": [\n    \"string\"\n  ],\n  \"Namespace\": \"string\",\n  \"NodeUuids\": [\n    \"string\"\n  ],\n  \"ResourceQuery\": {\n    \"Any\": true,\n    \"Empty\": true,\n    \"Subjects\": [\n      \"string\"\n    ]\n  },\n  \"ResourceSubjectOwner\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-search/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restUserMetaCollection</p> <pre><code>{\n  \"Metadatas\": [\n    {\n      \"JsonValue\": \"string\",\n      \"Namespace\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"ResolvedNode\": {\n        \"AppearsIn\": [\n          {\n            \"Path\": \"string\",\n            \"WsLabel\": \"string\",\n            \"WsScope\": \"string\",\n            \"WsSlug\": \"string\",\n            \"WsUuid\": \"string\"\n          }\n        ],\n        \"Commits\": [\n          {\n            \"Data\": \"string\",\n            \"Description\": \"string\",\n            \"Event\": {\n              \"Metadata\": {},\n              \"Optimistic\": true,\n              \"Silent\": true,\n              \"Source\": \"[Recursive structure]\",\n              \"Target\": \"[Recursive structure]\",\n              \"Type\": \"string\"\n            },\n            \"Location\": \"[Recursive structure]\",\n            \"MTime\": \"string\",\n            \"OwnerUuid\": \"string\",\n            \"Size\": \"string\",\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"Etag\": \"string\",\n        \"MTime\": \"string\",\n        \"MetaStore\": {},\n        \"Mode\": 10,\n        \"Path\": \"string\",\n        \"Size\": \"string\",\n        \"Type\": \"string\",\n        \"Uuid\": \"string\"\n      },\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-tags-namespace/","title":"POST /a/user-meta/tags/{Namespace}","text":"<p>Add a new value to Tags for a given namespace  </p>"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-tags-namespace/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/usermeta-service/post-a-user-meta-tags-namespace/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restPutUserMetaTagResponse</p> <pre><code>{\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-namespace/","title":"PUT /a/user-meta/namespace","text":"<p>Admin: update namespaces  </p>"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-namespace/#body-parameters","title":"Body Parameters","text":"Name Description Type Required Namespaces array Operation #/definitions/UpdateUserMetaNamespaceRequestUserMetaNsOp"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-namespace/#body-example","title":"Body Example","text":"<pre><code>{\n  \"Namespaces\": [\n    {\n      \"Indexable\": true,\n      \"JsonDefinition\": \"string\",\n      \"Label\": \"string\",\n      \"Namespace\": \"string\",\n      \"Order\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true\n    }\n  ],\n  \"Operation\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-namespace/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmUpdateUserMetaNamespaceResponse</p> <pre><code>{\n  \"Namespaces\": [\n    {\n      \"Indexable\": true,\n      \"JsonDefinition\": \"string\",\n      \"Label\": \"string\",\n      \"Namespace\": \"string\",\n      \"Order\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-update/","title":"PUT /a/user-meta/update","text":"<p>Update/delete user meta  </p>"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-update/#body-parameters","title":"Body Parameters","text":"Name Description Type Required MetaDatas List of metadatas to update or delete array Operation Type of operation to apply (PUT / DELETE) #/definitions/UpdateUserMetaRequestUserMetaOp"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-update/#body-example","title":"Body Example","text":"<pre><code>{\n  \"MetaDatas\": [\n    {\n      \"JsonValue\": \"string\",\n      \"Namespace\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"ResolvedNode\": {\n        \"Path\": \"string\"\n      },\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Operation\": \"string\"\n}\n</code></pre>"},{"location":"developer-guide/rest-api/usermeta-service/put-a-user-meta-update/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmUpdateUserMetaResponse</p> <pre><code>{\n  \"MetaDatas\": [\n    {\n      \"JsonValue\": \"string\",\n      \"Namespace\": \"string\",\n      \"NodeUuid\": \"string\",\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"ResolvedNode\": {\n        \"AppearsIn\": [\n          {\n            \"Path\": \"string\",\n            \"WsLabel\": \"string\",\n            \"WsScope\": \"string\",\n            \"WsSlug\": \"string\",\n            \"WsUuid\": \"string\"\n          }\n        ],\n        \"Commits\": [\n          {\n            \"Data\": \"string\",\n            \"Description\": \"string\",\n            \"Event\": {\n              \"Metadata\": {},\n              \"Optimistic\": true,\n              \"Silent\": true,\n              \"Source\": \"[Recursive structure]\",\n              \"Target\": \"[Recursive structure]\",\n              \"Type\": \"string\"\n            },\n            \"Location\": \"[Recursive structure]\",\n            \"MTime\": \"string\",\n            \"OwnerUuid\": \"string\",\n            \"Size\": \"string\",\n            \"Uuid\": \"string\"\n          }\n        ],\n        \"Etag\": \"string\",\n        \"MTime\": \"string\",\n        \"MetaStore\": {},\n        \"Mode\": 10,\n        \"Path\": \"string\",\n        \"Size\": \"string\",\n        \"Type\": \"string\",\n        \"Uuid\": \"string\"\n      },\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/users-service/index/","title":"Users Service","text":"<p>This service provides endpoints for managing users : CRUD operations, update attributes, etc.</p> <ul> <li>DELETE /a/user/{Login}</li> <li>GET /a/user/{Login}</li> <li>POST /a/user</li> <li>PUT /a/user/roles/{Login}</li> <li>PUT /a/user/{Login}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/users-service/delete-a-user-login/","title":"DELETE /a/user/{Login}","text":"<p>Delete a user  </p>"},{"location":"developer-guide/rest-api/users-service/delete-a-user-login/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>Login (string, required) User login is used to connect, field is empty for groups</p> </li> <li> <p>Uuid (string) User unique identifier</p> </li> <li> <p>GroupPath (string) Path to the parent group</p> </li> <li> <p>Password (string) Password can be passed to be updated (but never read back), field is empty for groups</p> </li> <li> <p>OldPassword (string) OldPassword must be set when a user updates her own password</p> </li> <li> <p>IsGroup (boolean) Whether this object is a group or a user</p> </li> <li> <p>GroupLabel (string) Label of the group, field is empty for users</p> </li> <li> <p>LastConnected (integer) Last successful connection timestamp</p> </li> <li> <p>PoliciesContextEditable (boolean) Context-resolved to quickly check if user is editable or not.</p> </li> </ul>"},{"location":"developer-guide/rest-api/users-service/delete-a-user-login/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteResponse</p> <pre><code>{\n  \"NumRows\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/users-service/get-a-user-login/","title":"GET /a/user/{Login}","text":"<p>Get a user by login  </p>"},{"location":"developer-guide/rest-api/users-service/get-a-user-login/#path-parameters","title":"Path Parameters","text":"<ul> <li>Login (string, required) User login is used to connect, field is empty for groups</li> </ul>"},{"location":"developer-guide/rest-api/users-service/get-a-user-login/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmUser</p> <pre><code>{\n  \"Attributes\": {},\n  \"GroupLabel\": \"string\",\n  \"GroupPath\": \"string\",\n  \"IsGroup\": true,\n  \"LastConnected\": 10,\n  \"Login\": \"string\",\n  \"OldPassword\": \"string\",\n  \"Password\": \"string\",\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"Roles\": [\n    {\n      \"AutoApplies\": [\n        \"string\"\n      ],\n      \"ForceOverride\": true,\n      \"GroupRole\": true,\n      \"IsTeam\": true,\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"UserRole\": true,\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/users-service/post-a-user/","title":"POST /a/user","text":"<p>List/Search users  </p>"},{"location":"developer-guide/rest-api/users-service/post-a-user/#body-parameters","title":"Body Parameters","text":"Name Description Type Required CountOnly Return counts only, no actual results boolean GroupBy integer Limit Limit number of results string Offset Start listing at a given position string Operation Combine single queries with AND or OR logic #/definitions/serviceOperationType Queries Atomic queries that will be combined using the Operation Type (AND or OR) array ResourcePolicyQuery Policies queries to filter the search context #/definitions/restResourcePolicyQuery"},{"location":"developer-guide/rest-api/users-service/post-a-user/#body-example","title":"Body Example","text":"<pre><code>{\n  \"CountOnly\": true,\n  \"GroupBy\": 10,\n  \"Limit\": \"string\",\n  \"Offset\": \"string\",\n  \"Operation\": \"string\",\n  \"Queries\": [\n    {\n      \"AttributeAnyValue\": true,\n      \"AttributeName\": \"string\",\n      \"AttributeValue\": \"string\",\n      \"ConnectedSince\": \"string\",\n      \"FullPath\": \"string\",\n      \"GroupPath\": \"string\",\n      \"HasProfile\": \"string\",\n      \"HasRole\": \"string\",\n      \"Login\": \"string\",\n      \"NodeType\": \"string\",\n      \"Password\": \"string\",\n      \"Recursive\": true,\n      \"Uuid\": \"string\",\n      \"not\": true\n    }\n  ],\n  \"ResourcePolicyQuery\": {\n    \"Type\": \"string\",\n    \"UserId\": \"string\"\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/users-service/post-a-user/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restUsersCollection</p> <pre><code>{\n  \"Groups\": [\n    {\n      \"Attributes\": {},\n      \"GroupLabel\": \"string\",\n      \"GroupPath\": \"string\",\n      \"IsGroup\": true,\n      \"LastConnected\": 10,\n      \"Login\": \"string\",\n      \"OldPassword\": \"string\",\n      \"Password\": \"string\",\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"Roles\": [\n        {\n          \"AutoApplies\": [\n            \"string\"\n          ],\n          \"ForceOverride\": true,\n          \"GroupRole\": true,\n          \"IsTeam\": true,\n          \"Label\": \"string\",\n          \"LastUpdated\": 10,\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PoliciesContextEditable\": true,\n          \"UserRole\": true,\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Total\": 10,\n  \"Users\": [\n    {\n      \"Attributes\": {},\n      \"GroupLabel\": \"string\",\n      \"GroupPath\": \"string\",\n      \"IsGroup\": true,\n      \"LastConnected\": 10,\n      \"Login\": \"string\",\n      \"OldPassword\": \"string\",\n      \"Password\": \"string\",\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"Roles\": [\n        {\n          \"AutoApplies\": [\n            \"string\"\n          ],\n          \"ForceOverride\": true,\n          \"GroupRole\": true,\n          \"IsTeam\": true,\n          \"Label\": \"string\",\n          \"LastUpdated\": 10,\n          \"Policies\": [\n            {\n              \"Action\": \"string\",\n              \"Effect\": \"string\",\n              \"JsonConditions\": \"string\",\n              \"Resource\": \"string\",\n              \"Subject\": \"string\",\n              \"id\": \"string\"\n            }\n          ],\n          \"PoliciesContextEditable\": true,\n          \"UserRole\": true,\n          \"Uuid\": \"string\"\n        }\n      ],\n      \"Uuid\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/users-service/put-a-user-roles-login/","title":"PUT /a/user/roles/{Login}","text":"<p>Just save a user roles, without other datas  </p>"},{"location":"developer-guide/rest-api/users-service/put-a-user-roles-login/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/users-service/put-a-user-roles-login/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmUser</p> <pre><code>{\n  \"Attributes\": {},\n  \"GroupLabel\": \"string\",\n  \"GroupPath\": \"string\",\n  \"IsGroup\": true,\n  \"LastConnected\": 10,\n  \"Login\": \"string\",\n  \"OldPassword\": \"string\",\n  \"Password\": \"string\",\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"Roles\": [\n    {\n      \"AutoApplies\": [\n        \"string\"\n      ],\n      \"ForceOverride\": true,\n      \"GroupRole\": true,\n      \"IsTeam\": true,\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"UserRole\": true,\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/users-service/put-a-user-login/","title":"PUT /a/user/{Login}","text":"<p>Create or update a user  </p>"},{"location":"developer-guide/rest-api/users-service/put-a-user-login/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/users-service/put-a-user-login/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmUser</p> <pre><code>{\n  \"Attributes\": {},\n  \"GroupLabel\": \"string\",\n  \"GroupPath\": \"string\",\n  \"IsGroup\": true,\n  \"LastConnected\": 10,\n  \"Login\": \"string\",\n  \"OldPassword\": \"string\",\n  \"Password\": \"string\",\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"Roles\": [\n    {\n      \"AutoApplies\": [\n        \"string\"\n      ],\n      \"ForceOverride\": true,\n      \"GroupRole\": true,\n      \"IsTeam\": true,\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"UserRole\": true,\n      \"Uuid\": \"string\"\n    }\n  ],\n  \"Uuid\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/workspace-service/index/","title":"Workspace Service","text":"<p>This service provides CRUD endpoints for managing workspaces.</p> <ul> <li>DELETE /a/workspace/{Slug}</li> <li>POST /a/workspace</li> <li>PUT /a/workspace/{Slug}</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/workspace-service/delete-a-workspace-slug/","title":"DELETE /a/workspace/{Slug}","text":"<p>Delete an existing workspace  </p>"},{"location":"developer-guide/rest-api/workspace-service/delete-a-workspace-slug/#path-parameters","title":"Path Parameters","text":"<ul> <li> <p>Slug (string, required) Slug is an url-compatible form of the workspace label, or can be freely modified (max length 500)</p> </li> <li> <p>UUID (string) Unique identifier of the workspace</p> </li> <li> <p>Label (string) Label of the workspace (max length 500)</p> </li> <li> <p>Description (string) Description of the workspace (max length 1000)</p> </li> <li> <p>Scope (string) Scope can be ADMIN, ROOM (=CELL) or LINK</p> </li> <li> <p>LastUpdated (integer) Last modification time</p> </li> <li> <p>Attributes (string) JSON-encoded list of attributes</p> </li> <li> <p>RootUUIDs (array) Quick list of the RootNodes uuids</p> </li> <li> <p>PoliciesContextEditable (boolean) Context-resolved to quickly check if workspace is editable or not</p> </li> </ul>"},{"location":"developer-guide/rest-api/workspace-service/delete-a-workspace-slug/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restDeleteResponse</p> <pre><code>{\n  \"NumRows\": \"string\",\n  \"Success\": true\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/workspace-service/post-a-workspace/","title":"POST /a/workspace","text":"<p>Search workspaces on certain keys  </p>"},{"location":"developer-guide/rest-api/workspace-service/post-a-workspace/#body-parameters","title":"Body Parameters","text":"Name Description Type Required CountOnly Return counts only, no actual results boolean GroupBy Group results integer Limit Limit the number of results string Offset Start listing at a given position string Operation Single queries will be combined using this operation AND or OR logic #/definitions/serviceOperationType Queries Atomic queries that will be combined using the OperationType (AND or OR) array ResourcePolicyQuery Policies queries to filter the search context #/definitions/restResourcePolicyQuery"},{"location":"developer-guide/rest-api/workspace-service/post-a-workspace/#body-example","title":"Body Example","text":"<pre><code>{\n  \"CountOnly\": true,\n  \"GroupBy\": 10,\n  \"Limit\": \"string\",\n  \"Offset\": \"string\",\n  \"Operation\": \"string\",\n  \"Queries\": [\n    {\n      \"AttributeName\": \"string\",\n      \"AttributeValue\": \"string\",\n      \"HasAttribute\": \"string\",\n      \"LastUpdated\": \"string\",\n      \"description\": \"string\",\n      \"label\": \"string\",\n      \"not\": true,\n      \"scope\": \"string\",\n      \"slug\": \"string\",\n      \"uuid\": \"string\"\n    }\n  ],\n  \"ResourcePolicyQuery\": {\n    \"Type\": \"string\",\n    \"UserId\": \"string\"\n  }\n}\n</code></pre>"},{"location":"developer-guide/rest-api/workspace-service/post-a-workspace/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/restWorkspaceCollection</p> <pre><code>{\n  \"Total\": 10,\n  \"Workspaces\": [\n    {\n      \"Attributes\": \"string\",\n      \"Description\": \"string\",\n      \"Label\": \"string\",\n      \"LastUpdated\": 10,\n      \"Policies\": [\n        {\n          \"Action\": \"string\",\n          \"Effect\": \"string\",\n          \"JsonConditions\": \"string\",\n          \"Resource\": \"string\",\n          \"Subject\": \"string\",\n          \"id\": \"string\"\n        }\n      ],\n      \"PoliciesContextEditable\": true,\n      \"RootNodes\": {},\n      \"RootUUIDs\": [\n        \"string\"\n      ],\n      \"Scope\": \"string\",\n      \"Slug\": \"string\",\n      \"UUID\": \"string\"\n    }\n  ]\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/rest-api/workspace-service/put-a-workspace-slug/","title":"PUT /a/workspace/{Slug}","text":"<p>Create or update a workspace  </p>"},{"location":"developer-guide/rest-api/workspace-service/put-a-workspace-slug/#body-parameters","title":"Body Parameters","text":"Name Description Type Required"},{"location":"developer-guide/rest-api/workspace-service/put-a-workspace-slug/#response-example-200","title":"Response Example (200)","text":"<p>Response Type /definitions/idmWorkspace</p> <pre><code>{\n  \"Attributes\": \"string\",\n  \"Description\": \"string\",\n  \"Label\": \"string\",\n  \"LastUpdated\": 10,\n  \"Policies\": [\n    {\n      \"Action\": \"string\",\n      \"Effect\": \"string\",\n      \"JsonConditions\": \"string\",\n      \"Resource\": \"string\",\n      \"Subject\": \"string\",\n      \"id\": \"string\"\n    }\n  ],\n  \"PoliciesContextEditable\": true,\n  \"RootNodes\": {},\n  \"RootUUIDs\": [\n    \"string\"\n  ],\n  \"Scope\": \"string\",\n  \"Slug\": \"string\",\n  \"UUID\": \"string\"\n}\n</code></pre> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/index/","title":"Command line reference","text":"<p>This section provides generated documentation for all CLI commands of our static binaries.</p> <ul> <li>cells is the main Pydio Cells server software</li> <li>cells-client is a prepared API client providing tools to manipulate files and folders remotely, in a linux posix fashion (ls, rm, scp, etc)</li> <li>cells-sync is the desktop synchronization client for Windows, Mac and Linux, communicating with Cells server on HTTP/2</li> <li> <p>cells-enterprise is the Enterprise Edition of cells</p> </li> <li> <p>Cells Binary</p> </li> <li>Cells Client (cec)</li> <li>Cells Sync</li> <li>Cells Enterprise</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/index/","title":"Cells Binary","text":"<ul> <li>cells</li> <li>cells admin</li> <li>cells admin acl</li> <li>cells admin acl create</li> <li>cells admin acl delete</li> <li>cells admin acl patch-recycle-personal</li> <li>cells admin acl search</li> <li>cells admin cert</li> <li>cells admin cert import</li> <li>cells admin clean</li> <li>cells admin clean acls</li> <li>cells admin clean activities</li> <li>cells admin clean logs</li> <li>cells admin clean reset-jobs</li> <li>cells admin clean resync</li> <li>cells admin config</li> <li>cells admin config check</li> <li>cells admin config copy</li> <li>cells admin config db</li> <li>cells admin config db add</li> <li>cells admin config db list</li> <li>cells admin config db move</li> <li>cells admin config db set</li> <li>cells admin config delete</li> <li>cells admin config history</li> <li>cells admin config list</li> <li>cells admin config set</li> <li>cells admin datasource</li> <li>cells admin datasource capture</li> <li>cells admin datasource migrate</li> <li>cells admin datasource rehash</li> <li>cells admin datasource resync</li> <li>cells admin datasource rethumb</li> <li>cells admin datasource snapshot</li> <li>cells admin file</li> <li>cells admin file create-bench</li> <li>cells admin file ls</li> <li>cells admin file meta-put</li> <li>cells admin file meta-read</li> <li>cells admin user</li> <li>cells admin user create</li> <li>cells admin user delete</li> <li>cells admin user search</li> <li>cells admin user set-profile</li> <li>cells admin user set-pwd</li> <li>cells admin user token</li> <li>cells admin user unlock</li> <li>cells configure</li> <li>cells configure sites</li> <li>cells configure sites add</li> <li>cells configure sites delete</li> <li>cells ctl</li> <li>cells ctl service-level</li> <li>cells start</li> <li>cells update</li> <li>cells version</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells/","title":"cells","text":"<p>Secure File Sharing for business</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Pydio Cells is self-hosted Document Sharing &amp; Collaboration software for organizations that need    advanced sharing without security trade-offs. Cells gives you full control of your document sharing    environment \u2013 combining fast performance, huge file transfer sizes, granular security, and advanced    workflow automations in an easy-to-set-up and easy-to-support self-hosted platform.</p> <p>CONFIGURE</p> <p>For the very first run, use './cells configure' to begin the browser-based or command-line based installation wizard.    Services will automatically start at the end of a browser-based installation.</p> <p>RUN</p> <p>Run '$ ./cells start' to load all services.</p> <p>WORKING DIRECTORIES</p> <p>By default, application data is stored under the standard OS application dir: </p> <ul> <li>Linux: ${USER_HOME}/.config/pydio/cells</li> <li>Darwin: ${USER_HOME}/Library/Application Support/Pydio/cells</li> <li>Windows: ${USER_HOME}/ApplicationData/Roaming/Pydio/cells</li> </ul> <p>You can customize the storage locations with the following ENV variables: </p> <ul> <li>CELLS_WORKING_DIR: replace the whole standard application dir</li> <li>CELLS_DATA_DIR: replace the location for storing default datasources (default CELLS_WORKING_DIR/data)</li> <li>CELLS_LOG_DIR: replace the location for storing logs (default CELLS_WORKING_DIR/logs)</li> <li>CELLS_SERVICES_DIR: replace location for services-specific data (default CELLS_WORKING_DIR/services) </li> </ul> <p>LOGS LEVEL</p> <p>By default, logs are outputted in console format at the Info level and appended to a CELLS_LOG_DIR/pydio.log file. You can:     - Change the level (debug, info, warn or error) with the --log flag    - Output the logs in json format with --log_json=true     - Prevent logs from being written to a file with --log_to_file=false</p> <p>For backward compatibility:    - The CELLS_LOGS_LEVEL environment variable still works to define the --log flag (or CELLS_LOG env var)      but is now deprecated and will disappear in version 4.       - The --log=production flag still works and is equivalent to \"--log=info --log_json=true --log_to_file=true\"</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells/#options","title":"Options","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n  -h, --help            help for ./cells\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells configure    - Setup required configurations</li> <li>./cells ctl    - Explore all registered items in registry and configuration.</li> <li>./cells start    - Start one or more services</li> <li>./cells update  - Check for available updates and apply them</li> <li>./cells version    - Print version information</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin/","title":"cells admin","text":"<p>Direct Read/Write access to Cells data</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set of commands with direct access to Cells data.</p> <p>These commands require a running Cells instance. They connect directly to low-level services   using gRPC connections. They are not authenticated.</p> <pre><code>./cells admin [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin/#options","title":"Options","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n  -h, --help                         help for admin\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells    - Secure File Sharing for business</li> <li>./cells admin acl    - Manage access control lists</li> <li>./cells admin cert  - Certification manager</li> <li>./cells admin clean    - Housekeeping commands</li> <li>./cells admin config  - Configuration manager</li> <li>./cells admin datasource  - Datasource management commands</li> <li>./cells admin file  - Directly manage files and metadata on the nodes</li> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl/","title":"cells admin acl","text":"<p>Manage access control lists</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>ACLs are managed in a dedicated microservice.</p> <p>It is simpler to manage them in the frontend, but you can use this command to create/delete/search ACLs directly.   ACLs are used to grant permissions to a given node (retrieved by UUID) for a given Role.</p> <pre><code>./cells admin acl [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl/#options","title":"Options","text":"<pre><code>  -h, --help   help for acl\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells admin acl create  - Create an Access Control</li> <li>./cells admin acl delete  - Remove one or more ACLs</li> <li>./cells admin acl patch-recycle-personal  - Patch the recycle bin of the personal folders</li> <li>./cells admin acl search  - List current ACLs</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-create/","title":"cells admin acl create","text":"<p>Create an Access Control</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-create/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create an Access Control in the dedicated microservice.   Use this command to manually grant a permission on a given node for a given role.</p> <pre><code>./cells admin acl create [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-create/#options","title":"Options","text":"<pre><code>  -a, --action string         Action\n  -v, --actionVal string      Action value\n  -h, --help                  help for create\n  -n, --node_id string        NodeIDs\n  -r, --role_id string        RoleIDs\n  -w, --workspace_id string   WorkspaceIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-create/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-create/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin acl    - Manage access control lists</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-create/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-delete/","title":"cells admin acl delete","text":"<p>Remove one or more ACLs</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Remove one or more ACLs by querying the ACL API.   Flags allow you to query the gRPC service and delete the resulting ACLs.</p> <p>WARNING ACLs are the corner stone of Pydio Cells system:    you might corrupt your instance by removing some of them.   So please use with extra care: insure that you know what    you are doing and have a valid backup. </p> <pre><code>./cells admin acl delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-delete/#options","title":"Options","text":"<pre><code>  -a, --action stringArray         Action Name\n  -f, --force                      DANGER: force deletion of found ACLs without user confirmation\n  -h, --help                       help for delete\n  -n, --node_id stringArray        NodeIDs\n  -r, --role_id stringArray        RoleIDs\n  -w, --workspace_id stringArray   WorkspaceIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin acl    - Manage access control lists</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-delete/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-patch-recycle-personal/","title":"cells admin acl patch-recycle-personal","text":"<p>Patch the recycle bin of the personal folders</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-patch-recycle-personal/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Patch the recycle bin of the personal folders.    This command looks for personal/ folders and creates a recycle_root ACL on them. <pre><code>./cells admin acl patch-recycle-personal [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-patch-recycle-personal/#options","title":"Options","text":"<pre><code>      --dry-run       Run as a dry-run (default true)\n  -h, --help          help for patch-recycle-personal\n      --path string   Full path to browse. All existing children will be flagged with the recycle_root ACL. (default \"personal\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-patch-recycle-personal/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-patch-recycle-personal/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin acl    - Manage access control lists</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-patch-recycle-personal/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-search/","title":"cells admin acl search","text":"<p>List current ACLs</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-search/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List ACLs currently stored in the ACL microservice.</p> <p>EXAMPLES</p> <ol> <li> <p>List all ACLs that give READ access   $ ./cells admin acl search -a \"READ\"</p> </li> <li> <p>List all ACLs for root group   $ ./cells admin acl search -r \"ROOT_GROUP\"</p> </li> <li> <p>List all ACLs of a given node    $ ./cells admin acl search -n \"53a65cc3-e407-4fcc-9230-5630ff054659\"</p> </li> </ol> <pre><code>./cells admin acl search [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-search/#options","title":"Options","text":"<pre><code>  -a, --action stringArray         Action value\n  -h, --help                       help for search\n  -l, --limit int                  Max. number of returned rows, 0 for unlimited (default 100)\n  -n, --node_id stringArray        NodeIDs\n  -o, --offset int                 Add an offset to the query when necessary\n  -r, --role_id stringArray        RoleIDs\n  -w, --workspace_id stringArray   WorkspaceIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-search/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-search/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin acl    - Manage access control lists</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-acl-search/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert/","title":"cells admin cert","text":"<p>Certification manager</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set of commands providing programmatic access to stored certificates.</p> <pre><code>./cells admin cert [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert/#options","title":"Options","text":"<pre><code>  -h, --help   help for cert\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells admin cert import    - Import certificate in vault</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert-import/","title":"cells admin cert import","text":"<p>Import certificate in vault</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert-import/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Import a certificate in the vault. </p> <p>SYNTAX</p> <p>Use uuid to assign a recognizable id to the certificate in the vault. If not present, defaults to the file name (with extension)</p> <p>EXAMPLE</p> <p>Import a certificate file into the vault    $ ./cells admin cert import ~/path/to/my/certificate --uuid 123456.pem</p> <pre><code>./cells admin cert import [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert-import/#options","title":"Options","text":"<pre><code>  -h, --help          help for import\n      --uuid string   Certs Import Namespace\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert-import/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert-import/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin cert  - Certification manager</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-cert-import/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean/","title":"cells admin clean","text":"<p>Housekeeping commands</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean/#synopsis","title":"Synopsis","text":"<p>Collection of tools for purging Cells internal data (activities, logs, etc)</p> <pre><code>./cells admin clean [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean/#options","title":"Options","text":"<pre><code>  -h, --help   help for clean\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells admin clean acls  - Clean Expired ACLs</li> <li>./cells admin clean activities  - Purge user or file activities based on various criteria</li> <li>./cells admin clean logs  - Truncate log indexes to a given size</li> <li>./cells admin clean reset-jobs  - Reset a job to its default</li> <li>./cells admin clean resync  - And a TriggerResync gRPC command to a service</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-acls/","title":"cells admin clean acls","text":"<p>Clean Expired ACLs</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-acls/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>When deleted after a node deletion, ACLs are not really deleted but only expired, to be able to restore them   if necessary. This can lead to keep unused data, and particularly shared links information that may prevent users to    re-use an existing custom link value. Use this command to definitely delete expired ACLs based on a period. </p> <p>Parameters accept either timestamps or durations. In the later case, corresponding time is computed using \"Now - Duration\".</p> <p>EXAMPLES</p> <p>Clean all ACLs expired before last 24h </p> <p>$ ./cells clean admin acls --before 24h </p> <pre><code>./cells admin clean acls [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-acls/#options","title":"Options","text":"<pre><code>  -a, --after string    Expiration date is greater than...\n  -b, --before string   Expiration date is lower than... (default \"240h\")\n  -h, --help            help for acls\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-acls/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-acls/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin clean    - Housekeeping commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-acls/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-activities/","title":"cells admin clean activities","text":"<p>Purge user or file activities based on various criteria</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-activities/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Launch a dedicated job to purge activities. The server must be running when launching this command.</p> <p>Activities are \"social\" events displayed in the interface. They can be either attached to \"users\" (notifications feed)   or \"nodes\" (files/folders activities shown in the right panel when selecting a node).</p> <p>As they can grow indefinitely, this command can help for housekeeping and maintaining the activities database small.</p> <p>EXAMPLES</p> <p>Purge users notifications, keeping at least 5 and maximum 20 items per user: </p> <p>$ ./cells admin clean activities --type users --box inbox -a admin --min 5 --max 20</p> <pre><code>./cells admin clean activities [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-activities/#options","title":"Options","text":"<pre><code>  -a, --admin string     Provide login of the administrator user\n  -b, --box string       Either inbox (notifications received) or outbox (user activity / file activity) (default \"outbox\")\n      --clear            After DB compaction, remove original file, otherwise keep it as a backup\n      --compact          Trigger DB compaction by copying boltDB into a new file (default true)\n      --db string        Point directly to a DB file to perform the purge offline\n  -h, --help             help for activities\n      --max int          Clear by keeping a maximum number of records inside each box\n      --min int          Keep at least N, 0 for clearing all records (default 1)\n  -o, --owner string     Specific user or node ID, or all (default \"*\")\n      --timeout string   Set a longer timeout if there are tons of activities to purge (duration) (default \"6h\")\n  -t, --type string      Activity type, one of 'nodes' or 'users' (default \"nodes\")\n      --updated string   Clear by keeping all records updated before a given date. Use golang duration, e.g. '3d' will keep all records updated in the last 3 days and remove older entries.\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-activities/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-activities/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin clean    - Housekeeping commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-activities/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-logs/","title":"cells admin clean logs","text":"<p>Truncate log indexes to a given size</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-logs/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Appart from rotated log files, logs are indexed inside an on-file database for high-performance analysis and search.    These indexes are rotated (50MB size by default) and you can use this command to remove the oldest index files.    The most recent index will always be kept.   Specify the size threshold using bytes unit: 50MB, 5mb, 1GB, etc...</p> <p>EXAMPLES</p> <p>Truncate log indexes to 50MB : </p> <p>$ ./cells admin clean logs --service=log --threshold=50MB</p> <pre><code>./cells admin clean logs [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-logs/#options","title":"Options","text":"<pre><code>  -h, --help               help for logs\n  -s, --service string     Log service to truncate (use log by default) (default \"log\")\n  -t, --threshold string   Size of logs to keep, specify in bytes (e.g 50MB, 1GB, ...)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-logs/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-logs/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin clean    - Housekeeping commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-logs/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-reset-jobs/","title":"cells admin clean reset-jobs","text":"<p>Reset a job to its default</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-reset-jobs/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Display a list of all automatically inserted jobs and choose one to reset it to its factory default settings. </p> <p>This feature can be useful when a job requires an upgrade. Please ensure that the server is running. </p> <p>EXAMPLE</p> <p>$ ./cells admin clean reset-jobs</p> <p>+----+----------------------+--------------------------------+   | #  |       SERVICE        |             LABEL              |   +----+----------------------+--------------------------------+   |  1 | pydio.grpc.jobs      | Extract image thumbnails and   |   |    |                      | Exif data                      |   |  2 | pydio.grpc.jobs      | Clean jobs and tasks in        |   |    |                      | scheduler                      |   |  3 | pydio.grpc.jobs      | Clean or transfer user data on |   |    |                      | deletion                       |   |  4 | pydio.grpc.jobs      | Clean orphan files after 24h   |   |  5 | pydio.grpc.jobs      | Clean expired ACLs after 10    |   |    |                      | days                           |   |  6 | pydio.grpc.versions  | Event Based Job for            |   |    |                      | replicating data for           |   |    |                      | versioning                     |   |  7 | pydio.grpc.activity  | Users activities digest        |   |  8 | pydio.grpc.mailer    | Flush Mails Queue              |   |  9 | pydio.grpc.oauth     | Prune revoked tokens and       |   |    |                      | expired reset password keys    |   +----+----------------------+--------------------------------+</p> <p>Select a job number to reset it in the scheduler: 9</p> <pre><code>./cells admin clean reset-jobs [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-reset-jobs/#options","title":"Options","text":"<pre><code>  -h, --help   help for reset-jobs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-reset-jobs/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-reset-jobs/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin clean    - Housekeeping commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-reset-jobs/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-resync/","title":"cells admin clean resync","text":"<p>And a TriggerResync gRPC command to a service</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-resync/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>TriggerResync is a generic gRPC endpoint that can be implemented by various services to perform internal   clean-up or resynchronization.</p> <p>This can be currently used for datasources (see 'admin datasource' commands), search engine, logs (for truncating).   The \"path\" can be used by some services to read additional parameters.</p> <p>EXAMPLES</p> <p>To trigger the re-indexation of \"pydiods1\" datasource, target the \"sync\" service associated to the datasource : </p> <ol> <li> <p>Equivalent to \"admin datasource resync\" command:   $ ./cells clean admin resync --service=pydio.grpc.data.sync.pydiods1 </p> </li> <li> <p>Re-index search engine:   $ ./cells clean admin resync -s pydio.grpc.search</p> </li> <li> <p>Truncate logs to a given size (in bytes):   $ ./cells clean admin resync --service=pydio.grpc.logs --path=TRUNCATE/200000</p> </li> </ol> <pre><code>./cells admin clean resync [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-resync/#options","title":"Options","text":"<pre><code>  -h, --help             help for resync\n  -p, --path string      Can be used by some services to read additional parameters (default \"/\")\n  -s, --service string   If no datasource name is passed, use the complete service name to resync\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-resync/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-resync/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin clean    - Housekeeping commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-clean-resync/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config/","title":"cells admin config","text":"<p>Configuration manager</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set of commands providing programmatic access to stored configuration.</p> <pre><code>./cells admin config [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config/#options","title":"Options","text":"<pre><code>  -h, --help   help for config\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells admin config check  - Check if a valid config is found</li> <li>./cells admin config copy    - Copy configs between two stores</li> <li>./cells admin config db    - Manage Database configuration</li> <li>./cells admin config delete    - Delete a configuration item</li> <li>./cells admin config history  - Show the history of all configuration changes</li> <li>./cells admin config list    - List all configurations</li> <li>./cells admin config set  - Store a configuration</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-check/","title":"cells admin config check","text":"<p>Check if a valid config is found</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-check/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Use this command to automatically detect if config is already set and valid.    By default it points the URL provided by the global --config flag.   You can override this with the --conf to specify a config not currently used by Cells. </p> <p>EXAMPLE</p> <p>Check if an etcd config is prepared    $ ./cells admin config check --config etcd://:2379/</p> <pre><code>./cells admin config check [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-check/#options","title":"Options","text":"<pre><code>      --conf string   Alternative config URL (overrides global flag)\n  -h, --help          help for check\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-check/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-check/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config  - Configuration manager</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-check/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-copy/","title":"cells admin config copy","text":"<p>Copy configs between two stores</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-copy/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Migrate all configurations from one store to another. </p> <p>SYNTAX</p> <p>Use configurations URLs schemes for --from and --to parameters.   If store supports versioning </p> <p>EXAMPLE</p> <p>Copy config from local config file to ETCD    $ ./cells admin config copy --from file:/// --to etcd://:2379/ --type config</p> <pre><code>./cells admin config copy [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-copy/#options","title":"Options","text":"<pre><code>      --from string   Config source\n  -h, --help          help for copy\n      --to string     Config target\n      --versions      If store supports versioning, copy all versions\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-copy/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-copy/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config  - Configuration manager</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-copy/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db/","title":"cells admin config db","text":"<p>Manage Database configuration</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage database configuration.   Each service can be configured to point to its own database. This command provides ways to manage databases.</p> <pre><code>./cells admin config db [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db/#options","title":"Options","text":"<pre><code>  -h, --help   help for db\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config  - Configuration manager</li> <li>./cells admin config db add    - Add a database connection to the configuration</li> <li>./cells admin config db list  - List all database connections</li> <li>./cells admin config db move  - Move service data from one database to another</li> <li>./cells admin config db set    - Assign a database connection to a service</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-add/","title":"cells admin config db add","text":"<p>Add a database connection to the configuration</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-add/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Add a new database connection to the configuration.   To assign the database connection to a service, you need to use the config database set command.</p> <pre><code>./cells admin config db add [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-add/#options","title":"Options","text":"<pre><code>  -h, --help   help for add\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-add/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-add/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config db    - Manage Database configuration</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-add/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-list/","title":"cells admin config db list","text":"<p>List all database connections</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-list/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List all database connections from all servers registered with cells.</p> <pre><code>./cells admin config db list [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-list/#options","title":"Options","text":"<pre><code>  -h, --help   help for list\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-list/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-list/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config db    - Manage Database configuration</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-list/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-move/","title":"cells admin config db move","text":"<p>Move service data from one database to another</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-move/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Migrate existing data to a new storage type</p> <pre><code>./cells admin config db move [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-move/#options","title":"Options","text":"<pre><code>      --dry-run   Enable/disable dry-run mode (default true)\n  -h, --help      help for move\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-move/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-move/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config db    - Manage Database configuration</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-move/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-set/","title":"cells admin config db set","text":"<p>Assign a database connection to a service</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-set/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Assign a different database connection to a service.    Use default to change to the default database.</p> <p>\u001b[33m\u26a0\u001b[0m  Note that the database data will not be transferred to the new database.</p> <pre><code>./cells admin config db set [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-set/#options","title":"Options","text":"<pre><code>  -h, --help   help for set\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-set/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-set/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config db    - Manage Database configuration</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-db-set/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-delete/","title":"cells admin config delete","text":"<p>Delete a configuration item</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Delete a configuration item. It will be removed from both the pydio.json file and the database.</p> <p>SYNTAX</p> <p>Configuration Item is represented by two parameters that you must pass as arguments:   - serviceName: name of the corresponding service   - configName: name of the parameter you want to delete</p> <p>EXAMPLE</p> <p>Delete the port entry for the micro.web service (rest api)   $ ./cells admin config delete micro.web port</p> <pre><code>./cells admin config delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-delete/#options","title":"Options","text":"<pre><code>  -h, --help   help for delete\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config  - Configuration manager</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-delete/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-history/","title":"cells admin config history","text":"<p>Show the history of all configuration changes</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-history/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>View all changes ever made to the configuration and revert to a given version if necessary.</p> <p>A version is created at each call to config.Save() inside the application, along with a log message   and the user originating this call.</p> <pre><code>./cells admin config history [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-history/#options","title":"Options","text":"<pre><code>      --cat string       Print the JSON content of the config for this version\n      --diff string      Display a Diff between two versions, either by providing VERSION1:VERSION2 or just VERSION1 (will be compared to previous one)\n      --file string      Point to a specific DB file instead of default\n  -h, --help             help for history\n      --limit int        Limit number of records shown (default 20)\n      --offset int       List history starting after a given number of records\n      --restore string   Restore configuration to this specific version\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-history/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-history/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config  - Configuration manager</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-history/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-list/","title":"cells admin config list","text":"<p>List all configurations</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-list/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Display all configuration items registered by the application.   Configuration items are listed as truple [serviceName, configName, configValue]. The configuration value is json encoded.</p> <pre><code>./cells admin config list [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-list/#options","title":"Options","text":"<pre><code>  -h, --help   help for list\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-list/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-list/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config  - Configuration manager</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-list/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-set/","title":"cells admin config set","text":"<p>Store a configuration</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-set/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Store a configuration item in both the pydio.json file and in the database.</p> <p>SYNTAX</p> <p>Configuration items are represented by three parameters passed as arguments:   - serviceName: name of the corresponding service   - configName: name of the parameter   - configValue: json-encoded value of the parameter you want to set/change</p> <p>EXAMPLES</p> <p>Change the port of micro.web service (rest api)   $ ./cells admin config set micro.web port 8083</p> <p>Json parameter value   $ ./cells admin config set pydio.grpc.yourservice configName '{\"key\":\"value\"}'</p> <pre><code>./cells admin config set [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-set/#options","title":"Options","text":"<pre><code>  -h, --help   help for set\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-set/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-set/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin config  - Configuration manager</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-config-set/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource/","title":"cells admin datasource","text":"<p>Datasource management commands</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource/#synopsis","title":"Synopsis","text":"<p>Collection of tools for manipulating datasources.</p> <pre><code>./cells admin datasource [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource/#options","title":"Options","text":"<pre><code>  -h, --help   help for datasource\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells admin datasource capture  - Capture index and objects into JSON or BoltDB format for sync debugging purposes</li> <li>./cells admin datasource migrate  - Migrate a datasource format (flat or structured)</li> <li>./cells admin datasource rehash    - Recompute all files hashes inside a given datasource</li> <li>./cells admin datasource resync    - Trigger resync for a structured datasource</li> <li>./cells admin datasource rethumb  - Find and compute missing thumbnails for images</li> <li>./cells admin datasource snapshot    - Dump/Load snapshot of the index for a flat datasource</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-capture/","title":"cells admin datasource capture","text":"<p>Capture index and objects into JSON or BoltDB format for sync debugging purposes</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-capture/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Sometimes a subtle glitch may break structured datasources resynchronization, and for debugging purpose   it can be handy to capture both the \"left\" and \"right\" endpoints, namely the sql index and the s3 storage listing.</p> <p>EXAMPLES</p> <ol> <li>Capture datasource pydiods1 into a given location   $ ./cells admin datasource capture --datasource=pydiods1 --target=/path/to/folder --format=bolt</li> </ol> <pre><code>./cells admin datasource capture [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-capture/#options","title":"Options","text":"<pre><code>  -d, --datasource string   Name of datasource to capture\n  -f, --format string       One of bolt|json storage, bolt by default (default \"bolt\")\n  -h, --help                help for capture\n      --load-pydio-uuids    If side is providing content, load content as metadata when reading a '.pydio' node\n  -s, --sides string        Capture both sides, can be restricted by specifying s3 or index. (default \"both\")\n  -t, --target string       Target folder where to store the snapshots\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-capture/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-capture/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin datasource  - Datasource management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-capture/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-migrate/","title":"cells admin datasource migrate","text":"<p>Migrate a datasource format (flat or structured)</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-migrate/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Migrate the content of a bucket between structured and flat. It can be used in both directions. It must be run with in    a specific context: datasource services must be running expect for the sync services. You can start Cells in this    specific mode by using the following command: ./cells start -x pydio.grpc.data.sync</p> <p>The command executes the following actions:   - List datasources showing their current formats. When picking a datasource, it is assumed it will be migrated to the      opposite format   - Detect datasource bucket name and expect to find an second bucket named \"bucket-flat\" or \"bucket-structured\"      (depending on the target format).   - Copy all files inside the new bucket, with their new name   - If everything is ok, patch index database to add or remove .pydio hidden files (depending on target format)   - Finally, update the datasource configuration in the configs.</p> <p>Use --dry-run parameter to display only the list of rename operations that will be performed, without touching DB or    configuration.</p> <p>By default, files are copied inside the new bucket and are left untouched inside the original one in case something    goes wrong. That means that your storage must have enough room for duplicating all data. If it's not the case, you can    pass the --move-files flag to delete original file after copy. You can also force the copy to be performed in-place by    manually editing target bucket name to its original value.</p> <pre><code>./cells admin datasource migrate [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-migrate/#options","title":"Options","text":"<pre><code>  -d, --dry-run      Do not apply any changes\n  -f, --force        Skip initial warning\n  -h, --help         help for migrate\n  -m, --move-files   Delete original files after copying to new bucket\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-migrate/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-migrate/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin datasource  - Datasource management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-migrate/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rehash/","title":"cells admin datasource rehash","text":"<p>Recompute all files hashes inside a given datasource</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rehash/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Look up for files where x-cells-hash is missing and recompute them. This operation is launched in scheduler and can take   some time (and CPU).</p> <p>EXAMPLES</p> <ol> <li> <p>To trigger the rehashing of \"pydiods1\" datasource:   $ ./cells admin datasource rehash --datasource=pydiods1</p> </li> <li> <p>Process only the folder/subfolder data :   $ ./cells admin datasource rehash --datasource=pydiods1 --path=folder/subfolder</p> </li> </ol> <pre><code>./cells admin datasource rehash [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rehash/#options","title":"Options","text":"<pre><code>  -c, --concurrency int     Maximum concurrency for computing files hashes (default 10)\n  -d, --datasource string   Name of datasource to process (default \"pydiods1\")\n  -f, --force               Force recomputing hash if it already exists\n  -h, --help                help for rehash\n  -p, --path string         Restrict operation to a specific folder\n  -t, --timeout string      Maximum job duration (default \"30m\")\n  -u, --username string     Username under which the job will be executed (generally admin)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rehash/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rehash/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin datasource  - Datasource management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rehash/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-resync/","title":"cells admin datasource resync","text":"<p>Trigger resync for a structured datasource</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-resync/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Trigger the re-indexation of a datasource. This is only applicable to structured datasource.</p> <p>EXAMPLES</p> <p>To trigger the re-indexation of \"pydiods1\" datasource, target the \"sync\" service associated to the datasource: </p> <p>$ ./cells admin datasource resync --datasource=pydiods1</p> <pre><code>./cells admin datasource resync [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-resync/#options","title":"Options","text":"<pre><code>  -d, --datasource string   Name of datasource to resynchronize\n  -h, --help                help for resync\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-resync/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-resync/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin datasource  - Datasource management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-resync/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rethumb/","title":"cells admin datasource rethumb","text":"<p>Find and compute missing thumbnails for images</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rethumb/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Look up for files where x-cells-hash is missing and recompute them. This operation is launched in scheduler and can take   some time (and CPU).</p> <p>EXAMPLES</p> <ol> <li> <p>To trigger the rethumbing of \"pydiods1\" datasource:   $ ./cells admin datasource rethumb --datasource=pydiods1</p> </li> <li> <p>Process only the folder/subfolder data :   $ ./cells admin datasource rethumb --datasource=pydiods1 --path=folder/subfolder</p> </li> </ol> <pre><code>./cells admin datasource rethumb [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rethumb/#options","title":"Options","text":"<pre><code>  -c, --concurrency int     Maximum concurrency for computing files hashes (default 10)\n  -d, --datasource string   Name of datasource to process (default \"pydiods1\")\n  -h, --help                help for rethumb\n  -t, --timeout string      Maximum job duration (default \"30m\")\n  -u, --username string     Username under which the job will be executed (generally admin)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rethumb/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rethumb/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin datasource  - Datasource management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-rethumb/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-snapshot/","title":"cells admin datasource snapshot","text":"<p>Dump/Load snapshot of the index for a flat datasource</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-snapshot/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>For flat format datasources, files are stored horizontally with UUID as their names inside the storage.    The associated tree structure (files and folders) is maintained in the Cells database only.   For backup/restore operations, it can be useful to regularly dump a snapshot of this tree structure inside a    particular file inside the storage, which can be later used  to reload data on a clean installation.</p> <p>This command allows to dump/load the index on-file.</p> <p>EXAMPLES</p> <ol> <li> <p>Dump database index inside a snapshot.db file inside the datasource storage:   $ ./cells admin datasource snapshot --datasource=pydiods1 --operation=dump --basename=snapshot.db</p> </li> <li> <p>Reload database index from a snapshot.db file located inside the datasource storage:   $ ./cells admin datasource snapshot --datasource=pydiods1 --operation=load --basename=snapshot.db</p> </li> <li> <p>Remove a known snapshot.db file from datasource storage:   $ ./cells admin datasource snapshot --datasource=pydiods1 --operation=delete --basename=snapshot.db</p> </li> </ol> <pre><code>./cells admin datasource snapshot [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-snapshot/#options","title":"Options","text":"<pre><code>  -b, --basename string     Basename of the snapshot file inside the datasource storage bucket (default \"snapshot.db\")\n  -d, --datasource string   Name of datasource to resynchronize\n  -f, --force               Force operation, skip confirmation prompts\n  -h, --help                help for snapshot\n  -o, --operation string    One of [dump|load|delete] to either dump index, reload an existing snapshot, or remove a snapshot (default \"dump\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-snapshot/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-snapshot/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin datasource  - Datasource management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-datasource-snapshot/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file/","title":"cells admin file","text":"<p>Directly manage files and metadata on the nodes</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage metadata linked to nodes.   Metadata are stored as simple key/values and attached to a node UUID.</p> <pre><code>./cells admin file [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file/#options","title":"Options","text":"<pre><code>  -h, --help   help for file\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells admin file create-bench    - Create an arbitrary number of random files in a directory</li> <li>./cells admin file ls    - List files</li> <li>./cells admin file meta-put    - Create or update a metadata entry for a node</li> <li>./cells admin file meta-read  - Display existing metadata for a given node</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-create-bench/","title":"cells admin file create-bench","text":"<p>Create an arbitrary number of random files in a directory</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-create-bench/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create an arbitrary number of random files in a directory.   Provide --number, --path and --user parameters to perform this action.</p> <p>EXAMPLE</p> <p>$ ./cells admin file create-bench -n=100 -p=pydiods1/sandbox -u=admin</p> <pre><code>./cells admin file create-bench [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-create-bench/#options","title":"Options","text":"<pre><code>  -h, --help          help for create-bench\n  -n, --number int    Number of files to create\n  -p, --path string   Path where to create the files (default \"pydiods1\")\n  -u, --user string   Username used to impersonate creation (default \"admin\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-create-bench/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-create-bench/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin file  - Directly manage files and metadata on the nodes</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-create-bench/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-ls/","title":"cells admin file ls","text":"<p>List files</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-ls/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List Nodes by querying the tree microservice. Paths are computed starting from the root, their first segment is always   a datasource name.</p> <p>EXAMPLE</p> <p>List all files at the root of the \"Common Files\" workspace</p> <p>$ ./cells admin file ls --path pydiods1 --uuid     +--------+---------------+--------------------------------------+--------+-----------------+     |  TYPE  |     PATH      |                 UUID                 |  SIZE  |    MODIFIED     |     +--------+---------------+--------------------------------------+--------+-----------------+     | Folder | Shared Folder | dcabadd0-7d32-4e45-9d1f-a927d3d0c174 | 147 MB | 21 Oct 21 08:58 |     +--------+---------------+--------------------------------------+--------+-----------------+</p> <pre><code>./cells admin file ls [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-ls/#options","title":"Options","text":"<pre><code>  -u, --by-uuid string   Find a node by its UUID\n  -h, --help             help for ls\n      --hidden           Show hidden files (.pydio)\n  -l, --limit int        Max. number of returned rows, 0 for unlimited (default 100)\n  -o, --offset int       Add an offset to the query when necessary\n  -p, --path string      List nodes under given path (default \"/\")\n      --recursive        List nodes recursively\n      --uuid             Show UUIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-ls/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-ls/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin file  - Directly manage files and metadata on the nodes</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-ls/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-put/","title":"cells admin file meta-put","text":"<p>Create or update a metadata entry for a node</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-put/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create or update a metadata entry for a node.   For a given node UUID, metadata are key/values of string/json-encoded strings.</p> <p>EXAMPLE</p> <p>$ ./cells admin file meta-put --uuid=NODE_UUID --key=metaname --value='{\"key\":\"value\"}'</p> <pre><code>./cells admin file meta-put [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-put/#options","title":"Options","text":"<pre><code>  -h, --help           help for meta-put\n  -k, --key string     Name of the metadata\n  -u, --uuid string    UUID of the node to update\n  -v, --value string   *JSON-encoded* string representing the value. Strings must be quoted, eg. '\"custom-value\"'\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-put/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-put/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin file  - Directly manage files and metadata on the nodes</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-put/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-read/","title":"cells admin file meta-read","text":"<p>Display existing metadata for a given node</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-read/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Display existing metadata for a given node.</p> <p>EXAMPLE</p> <p>$ ./cells admin file meta-read --uuid=244f072d-d9a1-11e7-950b-685b35ac60e5   returns:      +-------------------------------+--------------------------------------------------------------------------+     |             NAME              |                                 VALUE                                    |     +-------------------------------+--------------------------------------------------------------------------+     | pydio:meta-data-source-name   | \"pydiods1\"                                                               |     | ImageDimensions               | {\"Height\":200,\"Width\":200}                                               |     | is_image                      | true                                                                     |     | readable_dimension            | \"200px X 200px\"                                                          |     | pydio:meta-data-source-path   | \"download.png\"                                                           |     | pydio:meta-object-service-url | \"127.0.0.1:9001/pydiods1\"                                                |     | ImageThumbnails               | {\"Processing\":false,\"thumbnails\":[{\"format\":\"jpg\",\"size\":256,\"url\":\"\"}]} |     | image_width                   | 200                                                                      |     | name                          | \"download.png\"                                                           |     | image_height                  | 200                                                                      |     +-------------------------------+--------------------------------------------------------------------------+</p> <pre><code>./cells admin file meta-read [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-read/#options","title":"Options","text":"<pre><code>  -h, --help          help for meta-read\n  -u, --uuid string   UUID of the node\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-read/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-read/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin file  - Directly manage files and metadata on the nodes</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-file-meta-read/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user/","title":"cells admin user","text":"<p>Manage users</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage users from the command line by calling the dedicated services.</p> <pre><code>./cells admin user [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user/#options","title":"Options","text":"<pre><code>  -h, --help   help for user\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin    - Direct Read/Write access to Cells data</li> <li>./cells admin user create    - Create a user</li> <li>./cells admin user delete    - Delete a user</li> <li>./cells admin user search    - List all users or search them by login</li> <li>./cells admin user set-profile  - Set profile</li> <li>./cells admin user set-pwd  - Change user password</li> <li>./cells admin user token  - Generate a personal token for a user</li> <li>./cells admin user unlock    - Unlock User</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-create/","title":"cells admin user create","text":"<p>Create a user</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-create/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create a new user.</p> <p>Please, note that the login is case sensitive. You can create 2 distinct users with login 'User' and 'user'.    You can also create a user in a given group by entering a full path (see examples below). </p> <p>If not provided with the -p flag, password is prompted by the command line.</p> <p>EXAMPLES</p> <ol> <li> <p>Create a user with a password   $ ./cells admin user create -u 'user' -p 'a password'</p> </li> <li> <p>Create a user with a prompt for password   $ ./cells admin user create -u 'user'</p> </li> <li> <p>Create a user inside a group   $ ./cells admin user create -u \"/group/user\" -p \"new-password\"</p> </li> </ol> <pre><code>./cells admin user create [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-create/#options","title":"Options","text":"<pre><code>  -h, --help              help for create\n  -p, --password string   Password of the new user\n  -u, --username string   Login of the new user\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-create/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-create/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-create/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-delete/","title":"cells admin user delete","text":"<p>Delete a user</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Delete a user.</p> <p>WARNING Policy checks are not yet implemented for the CLI.    You might corrupt your existing user and group repository,   So please use with extra care. Also, remember that login are case sensitive. </p> <p>EXAMPLE</p> <p>$ ./cells admin user delete -u '' <pre><code>./cells admin user delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-delete/#options","title":"Options","text":"<pre><code>  -h, --help              help for delete\n  -u, --username string   Login(s) of the group(s) or user(s) to delete\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-delete/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-search/","title":"cells admin user search","text":"<p>List all users or search them by login</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-search/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List users stored in the Pydio Cells user repository.</p> <p>EXAMPLES</p> <ol> <li> <p>Search a specific user   $ ./cells admin user search --user \"alice\"</p> </li> <li> <p>List all users (default --user is \"*\")    $ ./cells admin user search</p> </li> <li> <p>List users with a pattern    $ ./cells admin user search -u \"a*\"</p> </li> </ol> <pre><code>./cells admin user search [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-search/#options","title":"Options","text":"<pre><code>  -h, --help          help for search\n  -l, --limit int     Max. number of returned rows, 0 for unlimited (default 100)\n  -o, --offset int    Add an offset to the query when necessary\n  -u, --user string   Select a user by login (list all users and groups if empty)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-search/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-search/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-search/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-profile/","title":"cells admin user set-profile","text":"<p>Set profile</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-profile/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set a user profile.</p> <p>Valid profiles are one of: admin, standard, shared or anon.   Installation specific profiles are not yet supported by this CLI.</p> <p>WARNING: please remember that user with admin profile have full control over your app via the web front end:    think twice before giving this profile to an existing user.</p> <p>EXAMPLE</p> <p>$ ./cells admin user set-profile -u 'USER_LOGIN' --profile 'standard'</p> <pre><code>./cells admin user set-profile [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-profile/#options","title":"Options","text":"<pre><code>  -h, --help              help for set-profile\n  -p, --profile string    New profile\n  -u, --username string   Login of the user to update\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-profile/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-profile/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-profile/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-pwd/","title":"cells admin user set-pwd","text":"<p>Change user password</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-pwd/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set the password of a given user.    Directly use --password (or -p) to provide a new password, or leave empty to be prompted.</p> <p>EXAMPLE</p> <p>$ ./cells admin user set-pwd -u 'USER_LOGIN' -p 'NEW_PASSWORD'</p> <pre><code>./cells admin user set-pwd [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-pwd/#options","title":"Options","text":"<pre><code>  -h, --help              help for set-pwd\n  -p, --password string   New password\n  -u, --username string   Login of the user to update\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-pwd/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-pwd/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-set-pwd/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-token/","title":"cells admin user token","text":"<p>Generate a personal token for a user</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-token/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Generate a personal authentication token for a user.    Expiration can be set in two ways:     + A hard limit, by using the -e flag (duration)     + A sliding window by using the -a flag (duration): in that case the token expiration will be refreshed each time       the token is used (e.g a request using this token is received).</p> <p>EXAMPLES</p> <p>Generate a token that lasts 24 hours for user admin   $ ./cells admin user token -u admin -e 24h</p> <p>Generate a token that lasts by default 10mn, but which expiration is refreshed to the next 10mn each time    the token is used.   $ ./cells admin user token -u admin -a 10m</p> <p>TOKEN USAGE</p> <p>These token can be used in replacement of an OAuth2-based access token: they can replace the \"Bearer\" access    token when calling any REST API. They can also be used as the password (in conjunction with username) for all    basic-auth based APIs (e.g. webDAV).</p> <p>TOKEN SCOPE</p> <p>By default, generated tokens grant the same level of access as a standard login operation. To improve security,    it is possible to restrict these accesses to a specific file or folder (given it is accessible by the user in    first place) with a \"scope\" in the format \"node:NODE_UUID:PERMISSION\" where PERMISSION string contains either \"r\"   (read) or \"w\" (write) or both.</p> <pre><code>./cells admin user token [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-token/#options","title":"Options","text":"<pre><code>  -a, --auto string     Auto-refresh expiration when token is used. Format is 20u where u is a unit: s (second), m (minute), h (hour), d(day).\n  -e, --expire string   Expire after duration. Format is 20u where u is a unit: s (second), m (minute), h (hour), d(day).\n  -h, --help            help for token\n  -q, --quiet           Only return the newly created token value (typically useful in automation scripts with a short expiry time)\n  -s, --scope strings   Optional scopes\n  -u, --user string     User login (mandatory)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-token/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-token/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-token/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-unlock/","title":"cells admin user unlock","text":"<p>Unlock User</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-unlock/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Unlock a given user.   This may be handy if admin is locked out of the interface.</p> <p>EXAMPLE</p> <p>$ ./cells admin user unlock -u LOGIN</p> <pre><code>./cells admin user unlock [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-unlock/#options","title":"Options","text":"<pre><code>  -h, --help              help for unlock\n  -u, --username string   Login of the user to unlock\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-unlock/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-unlock/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells admin user  - Manage users</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-admin-user-unlock/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure/","title":"cells configure","text":"<p>Setup required configurations</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Launch the configuration process of Pydio Cells.</p> <p>REQUIREMENTS</p> <p>You must have an available MySQL database, along with a privileged user (for instance 'pydio').   Supported databases are:    - MariaDB version 10.3 and above,    - MySQL version 5.7 and above (except 8.0.22 that has a bug preventing Cells to run correctly).</p> <p>As recommended by database documentation, tune the 'max_connections' parameter to a value in line   with your production database server specifications. For reference, the default value of 151 will have a    maximum memory usage of about 575MB, but will not scale up for a multiple users load in production.</p> <p>BROWSER-BASED INSTALLER</p> <p>If you are on a desktop machine, pick browser-based installation at first prompt, or you can force it with:   $ ./cells configure --bind default</p> <p>The installer opens a web page on port 8080 with a wizard for you to provide various configuration parameters,    including DB connection info and the login/password of the main administrator.</p> <p>In case where default port is busy, you can choose another one via the 'bind' flag, for instance:   $ ./cells configure --bind 0.0.0.0:12345   or    $ ./cells configure --bind :12345 <p>After browser configuration, all microservices are started automatically and you can directly start using Cells.    It is yet good practice to stop the installer and restart Cells in normal mode before going live.</p> <p>COMMAND-LINE INSTALLER</p> <p>If you are more a shell person, you can perform the configuration process directly using this CLI (using the '--cli'    flag or by choosing so at first prompt). You will then be able to choose to either use the default bindings for the    embedded webserver or adapt these to your specific setup.</p> <p>You can always reconfigure the webserver bindings afterwards by calling this command:   $ ./cells configure sites   See corresponding inline documentation for further details.</p> <p>AUTOMATED PROVISIONING</p> <p>For automated, non-interactive installation, you can pass a YAML or a JSON config file that contains all necessary    information, please refer to the documentation on https://pydio.com</p> <p>ENVIRONMENT</p> <p>All the command flags documented below are mapped to their associated ENV var using upper case and CELLS_ prefix.   For example :   $ ./cells configure --bind :9876   is equivalent to    $ export CELLS_BIND=\":9876\"; ./cells configure</p> <p>For backward compatibility reasons, the --cli, --yaml and --json flags do not respect the above rule (this might evolve in a future version).   They are respectively equivalent to CELLS_INSTALL_CLI, CELLS_INSTALL_YAML and CELLS_INSTALL_JSON ENV vars.</p> <pre><code>./cells configure [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure/#options","title":"Options","text":"<pre><code>      --bind_address string         Address on which servers will bind. Binding port depends on the server type (grpc, http, etc). (default \"127.0.0.1\")\n      --cli                         Do not prompt for install mode, use CLI mode by default\n      --exit_after_install          Simply exits main process after the installation is done\n  -h, --help                        help for configure\n      --json string                 Points toward a configuration in JSON format\n      --site_bind string            [Site] The 'site_' flags suite overrides config-defined sites. Bind is the site binding address IP|DOMAIN:PORT (default 0.0.0.0:8080)\n      --site_external string        [Site] External full URL http[s]://IP|DOMAIN[:PORT] exposed to the outside\n      --site_le_agree               [Site] Accept Let's Encrypt EULA\n      --site_le_email string        [Site] Set email to enable Let's Encrypt automatic TLS configuration\n      --site_le_staging             [Site] Use Let's Encrypt staging CA instead of production to avoid being banned on misconfiguration.\n      --site_no_tls                 [Site] Use plain HTTP (default false, use self-signed)\n      --site_tls_cert_file string   [Site] Path to custom TLS certificate file\n      --site_tls_key_file string    [Site] Path to custom TLS key file\n      --yaml string                 Points toward a configuration in YAML format\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells    - Secure File Sharing for business</li> <li>./cells configure sites    - Manage site addresses</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites/","title":"cells configure sites","text":"<p>Manage site addresses</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage how Cells is binding to the localhost's network interface addresses and accepting traffic coming from external URLs.   This is the main tool for listing, editing, adding and removing sites. Additional sub-commands allow you to directly create or delete sites.</p> <p>Each site has following parameters:    1. : one or more  to bind Cells to localhost's network interface addresses.     2. : TLS configuration for HTTPS support.    3. : Accept traffic coming from this url and redirect to one of the bind address.       Typically if the app is behind a reverse proxy or inside a container with ports mapping.    4.  [On|Off]: expose a maintenance page on this endpoint, although Cells is running. <p>EXAMPLES </p> <ol> <li> <p>Default value (used when no sites is configured)</p> <ul> <li>Bind Address: 0.0.0.0:8080</li> <li>TLS: SelfSigned</li> <li>External URL: [left empty]</li> </ul> </li> <li> <p>Provided certificate</p> <ul> <li>Bind Address: 0.0.0.0:8080</li> <li>TLS: Your own key/cert pair</li> <li>External URL: https://share.mydomain.tld</li> </ul> </li> <li> <p>Auto-TLS using Let's Encrypt </p> <ul> <li>Bind Address: share.mydomain.tld:443</li> <li>TLS: LetsEncrypt</li> <li>External URL: https://share.mydomain.tld</li> </ul> </li> <li> <p>Self-signed</p> <ul> <li>Bind Address: IP:1515         # internal port</li> <li>TLS: Self-signed</li> <li>External URL: https://IP:8080   # external port mapped by docker</li> </ul> </li> <li> <p>HTTP only</p> <ul> <li>Bind Address: localhost:8080</li> <li>TLS: Disabled</li> <li>External URL: http://localhost:8080  # Non-secured local installation</li> </ul> </li> </ol> <pre><code>./cells configure sites [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites/#options","title":"Options","text":"<pre><code>  -h, --help   help for sites\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells configure    - Setup required configurations</li> <li>./cells configure sites add    - Add a site</li> <li>./cells configure sites delete  - Remove a site by its index</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-add/","title":"cells configure sites add","text":"<p>Add a site</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-add/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Add a site for binding Cells to another address.   See 'sites' command help for more info about Sites management.</p> <pre><code>./cells configure sites add [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-add/#options","title":"Options","text":"<pre><code>  -h, --help   help for add\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-add/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-add/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells configure sites    - Manage site addresses</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-add/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-delete/","title":"cells configure sites delete","text":"<p>Remove a site by its index</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Remove a site binding Cells to an address, by providing its index.   See 'sites' command help for more info about Sites management.</p> <pre><code>./cells configure sites delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-delete/#options","title":"Options","text":"<pre><code>  -h, --help   help for delete\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells configure sites    - Manage site addresses</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-configure-sites-delete/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl/","title":"cells ctl","text":"<p>Explore all registered items in registry and configuration.</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>This command connects to a Registry to list active items currently registered with their metadata. It can also display   all configuration stored inside the config store.</p> <p>Item types are one of the following :      - Nodes     - Services     - Servers     - DAOs     - Addresses     - Endpoints     - Tags     - Stats</p> <pre><code>./cells ctl [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl/#options","title":"Options","text":"<pre><code>      --advertise_address string   Default advertise address (default \"127.0.0.1\")\n      --broker string              Pub/sub service for events between services (default \"grpc://:8030\")\n      --discovery string           Registry and pub/sub (default \"grpc://:8030\")\n  -h, --help                       help for ctl\n      --registry string            Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells    - Secure File Sharing for business</li> <li>./cells ctl service-level    - Update log level for a given service</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl-service-level/","title":"cells ctl service-level","text":"<p>Update log level for a given service</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl-service-level/#synopsis","title":"Synopsis","text":"<pre><code>./cells ctl service-level [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl-service-level/#options","title":"Options","text":"<pre><code>      --advertise_address string   Default advertise address (default \"127.0.0.1\")\n      --broker string              Pub/sub service for events between services (default \"grpc://:8030\")\n      --discovery string           Registry and pub/sub (default \"grpc://:8030\")\n  -e, --enable                     Switch debug mode on for specified services (default) (default true)\n  -h, --help                       help for service-level\n      --registry string            Registry used to contact services (default \"grpc://:8030\")\n  -r, --reset                      Reset all registered values\n  -s, --services strings           Set specific services in debug mode. Use RegExp or the 'empty' key for logs without context\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl-service-level/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl-service-level/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells ctl    - Explore all registered items in registry and configuration.</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-ctl-service-level/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-start/","title":"cells start","text":"<p>Start one or more services</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-start/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Start one or more services on this machine.    $ ./cells start [flags] args...</p> <p>No arguments will start all services available (see 'ps' command).    - Select specific services with regular expressions in the additional arguments.     - The -t/--tags flag may limit to only a certain category of services (see usage below)    - The -x/--exclude flag may exclude one or more services   All these may be used in conjunction (-t, -x, regexp arguments).</p> <p>REQUIREMENTS</p> <p>Ulimit: set a number of allowed open files greater or equal to 2048.   For production use, a minimum of 8192 is recommended (see ulimit -n).</p> <p>Setcap: if you intend to bind the server to standard http ports (80, 443),    you must grant necessary permissions on cells binary with this command:   $ sudo setcap 'cap_net_bind_service=+ep'  <p>EXAMPLES</p> <ol> <li> <p>Start all Cells services   $ ./cells start</p> </li> <li> <p>Start all services whose name starts with pydio.grpc   $ ./cells start pydio.grpc</p> </li> <li> <p>Start only services for scheduler   $ ./cells start --tag=scheduler</p> </li> <li> <p>Start whole plateform except the roles service   $ ./cells start --exclude=pydio.grpc.idm.role</p> </li> </ol> <p>ENVIRONMENT</p> <ol> <li>Flag mapping</li> </ol> <p>All the command flags documented below are mapped to their associated ENV var, using upper case and CELLS_ prefix.   For example :   $ ./cells start --grpc_port 54545   is equivalent to    $ export CELLS_GRPC_PORT=54545; ./cells start</p> <ol> <li> <p>Working Directories </p> </li> <li> <p>CELLS_WORKING_DIR: replace the whole standard application dir</p> </li> <li>CELLS_DATA_DIR: replace the location for storing default datasources (default CELLS_WORKING_DIR/data)</li> <li>CELLS_LOG_DIR: replace the location for storing logs (default CELLS_WORKING_DIR/logs)</li> <li> <p>CELLS_SERVICES_DIR: replace location for services-specific data (default CELLS_WORKING_DIR/services)</p> </li> <li> <p>Timeouts, limits, proxies</p> </li> <li> <p>CELLS_SQL_DEFAULT_CONN, CELLS_SQL_LONG_CONN: timeouts used for SQL queries. Use a golang duration (10s, 1m, etc). Defaults are respectively 30 seconds and 10 minutes.</p> </li> <li>CELLS_CACHES_HARD_LIMIT: maximum memory limit used by internal caches (in MB, default is 8). This is a per/cache limit, not global.</li> <li>CELLS_UPDATE_HTTP_PROXY: if your server uses a client proxy to access outside world, this can be set to query update server.</li> <li> <p>HTTP_PROXY, HTTPS_PROXY, NO_PROXY: golang-specific environment variables to configure a client proxy for all external http calls.</p> </li> <li> <p>Other environment variables (development or advanced fine-tuning)</p> </li> <li> <p>CELLS_DAV_MULTIPART_SIZE (20): Default part size used to automatically chunk DAV uploads, in MB</p> </li> <li>CELLS_DEFAULT_DS_STRUCT (false): Create default datasources using structured format instead of flat</li> <li>CELLS_ENABLE_FORMS_DEVEL (false): Display a basic UX form with all possible fields types in the UX (for React developers)</li> <li>CELLS_ENABLE_LIVEKIT (false): Enable experimental support for video calls in the chat window, using a livekit-server.</li> <li>CELLS_ENABLE_SIMDMD5 (false): Empty is false by default, if set this will switch the md5 hasher to simd implementation</li> <li>CELLS_ENABLE_WIP_LANGUAGES (def): Display partially translated languages in the UX language picker.</li> <li>CELLS_GRPC_AUTHORITY: :authority header value passed in all GRPC clients calls</li> <li>CELLS_JOBS_LOG_LEVEL (info): Log level used for scheduler jobs - to be used carefully as it may produce a large volume of logs.</li> <li>CELLS_MINIO_STALE_DATA_EXPIRY (48h): Expiration of stale data produced by objects upload parts</li> <li>CELLS_TRACE_FATAL: Better display root cause of process crashes</li> <li>CELLS_WEB_RATE_LIMIT (0): Http API rate-limiter, as a number of token allowed per seconds. 0 means no limit.</li> </ol> <pre><code>./cells start [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-start/#options","title":"Options","text":"<pre><code>      --advertise_address string     Address that should be advertised to other members of the cluster (leave it empty for default advertise address)\n      --bind_address string          Address on which servers will bind. Binding port depends on the server type (grpc, http, etc). (default \"127.0.0.1\")\n      --broker string                Pub/sub service URL for events broadcast. Supported schemes: grpc|mem|nats|rabbit (default \"mem://\")\n      --enable_metrics               Instrument code to expose internal metrics (to local JSON file, or service discovery if Metrics Basic Auth is set)\n      --enable_pprof                 Enable pprof remote debugging\n  -x, --exclude stringArray          Select services to start by filtering out some specific ones by name\n      --grpc_discovery_port string   Default discovery gRPC server port (registry, broker, config, and log services). (default \"8030\")\n      --grpc_port string             Default gRPC server port (all gRPC services, except discovery ones) (default \"8031\")\n  -h, --help                         help for start\n      --log string                   Output log level: debug, info, warn, error (production is equivalent to log_json+info) (default \"info\")\n      --log_json                     Output log formatted as JSON instead of text\n      --log_to_file                  Write logs on-file in CELLS_LOG_DIR (default true)\n      --metrics_basic_auth string    Expose metrics to a service discovery endpoint /metrics/sd\n      --registry string              Registry URL used to manage services. Supported schemes: etcd|etcd+tls|file|grpc|mem (default \"mem://?cache=shared\")\n      --site_bind string             [Site] The 'site_' flags suite overrides config-defined sites. Bind is the site binding address IP|DOMAIN:PORT (default 0.0.0.0:8080)\n      --site_external string         [Site] External full URL http[s]://IP|DOMAIN[:PORT] exposed to the outside\n      --site_le_agree                [Site] Accept Let's Encrypt EULA\n      --site_le_email string         [Site] Set email to enable Let's Encrypt automatic TLS configuration\n      --site_le_staging              [Site] Use Let's Encrypt staging CA instead of production to avoid being banned on misconfiguration.\n      --site_no_tls                  [Site] Use plain HTTP (default false, use self-signed)\n      --site_tls_cert_file string    [Site] Path to custom TLS certificate file\n      --site_tls_key_file string     [Site] Path to custom TLS key file\n  -t, --tags stringArray             Select services to start by tags, possible values are 'broker', 'data', 'datasource', 'discovery', 'frontend', 'gateway', 'idm', 'scheduler'\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-start/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-start/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells    - Secure File Sharing for business</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-start/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-update/","title":"cells update","text":"<p>Check for available updates and apply them</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-update/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List the available updates for the current binary.   To apply the actual update, run the command with a --version parameter.</p> <pre><code>./cells update [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-update/#options","title":"Options","text":"<pre><code>  -d, --dry-run          If set, this flag will grab the package and save it to the tmp directory instead of replacing current binary\n  -h, --help             help for update\n  -v, --version string   Pass a version number to apply the upgrade\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-update/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-update/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells    - Secure File Sharing for business</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-update/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-binary/cells-version/","title":"cells version","text":"<p>Print version information</p>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-version/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Print version information.</p> <p>You can format the output with a go template using the --format flag.   Typically, to only output a parsable version, call:</p> <pre><code>$ ./cells version -f '{{.Version}}'\n</code></pre> <p>As reference, known attributes are:    - PackageLabel    - Version    - BuildTime    - GitCommit    - OS    - Arch    - GoVersion</p> <pre><code>./cells version [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-version/#options","title":"Options","text":"<pre><code>  -f, --format string   Format the output using the given Go template\n  -h, --help            help for version\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-version/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-version/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells    - Secure File Sharing for business</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-binary/cells-version/#auto-generated-by-pydio-cells-home-edition-v4413-on-7-may-2025","title":"Auto generated by Pydio Cells Home Edition v4.4.13 on 7-May-2025","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/index/","title":"Cells Client (cec)","text":"<ul> <li>cec</li> <li>cec clear</li> <li>cec completion</li> <li>cec completion bash</li> <li>cec completion zsh</li> <li>cec config</li> <li>cec config add</li> <li>cec config add client-auth</li> <li>cec config add oauth</li> <li>cec config add token</li> <li>cec config check-keyring</li> <li>cec config ls</li> <li>cec config rm</li> <li>cec config use</li> <li>cec cp</li> <li>cec idm</li> <li>cec idm list-acls</li> <li>cec idm list-groups</li> <li>cec idm list-roles</li> <li>cec idm list-users</li> <li>cec idm list-workspaces</li> <li>cec info</li> <li>cec ls</li> <li>cec mkdir</li> <li>cec mv</li> <li>cec rm</li> <li>cec scp</li> <li>cec share</li> <li>cec storage</li> <li>cec storage list-datasources</li> <li>cec storage resync-ds</li> <li>cec update</li> <li>cec version</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec/","title":"cec","text":"<p>Connect to a Pydio Cells server using the command line</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>This command line client allows interacting with a Pydio Cells server via the command line.    It uses the Cells SDK for Go and the REST API under the hood.</p> <p>See the respective help pages of the various commands to get detailed explanation and some examples.</p> <p>WARNING: cec v4 only supports remote servers that are in v4 or newer. </p> <p>CONFIGURE</p> <p>For the very first run, use './cec config add' to begin the command-line based configuration wizard.    This will guide you through a quick procedure to get you up and ready in no time.</p> <p>Non-sensitive information are stored by default in a config.json file under /home/teamcity/.config/pydio/cells-client   You can change this location by using the --config flag.   Entered (or retrieved, in the case of OAuth2 procedure) credentials will be stored in your keyring.</p> <p>[Note]: if no keyring is found, all information are stored in clear text in the config.json file, including sensitive bits.</p> <p>ENVIRONMENT</p> <p>All the command flags documented below are mapped to their associated ENV var, using upper case and CEC_ prefix.</p> <p>For example:     $ ./cec ls --no_cache   is equivalent to:      $ export CEC_NO_CACHE=true; ./cec ls</p> <p>This is typically useful when using the Cells Client non-interactively on a server:     $ export CEC_URL=https://files.example.com; export CEC_TOKEN=;      $ ./cec ls <pre><code>./cec [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec/#options","title":"Options","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n  -h, --help              help for ./cec\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec clear    - Clear all configuration</li> <li>./cec completion  - Add auto-completion helper to Cells Client</li> <li>./cec config  - Manage authentication profiles</li> <li>./cec cp  - Copy files from A to B within your remote server</li> <li>./cec idm    - Identity Management commands</li> <li>./cec info  - Display the active connection's info: user, server and authentication type</li> <li>./cec ls  - List files in your Cells server</li> <li>./cec mkdir    - Create folder(s) in the remote server</li> <li>./cec mv  - Move and/or rename nodes on the server</li> <li>./cec rm  - Trash files or folders</li> <li>./cec scp    - Copy files from/to Cells</li> <li>./cec share    - Share a single file or folder</li> <li>./cec storage    - Datasource commands</li> <li>./cec update  - Check for available updates and apply them</li> <li>./cec version    - Show Cells Client version information</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-clear/","title":"cec clear","text":"<p>Clear all configuration</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-clear/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <pre><code>Clear all authentication data from your client machine.\n\nIt deletes the config.json from Cells Client working directory.\nIt also removes the sensitive data that has been stored in the keyring, if present.\n</code></pre> <pre><code>./cec clear [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-clear/#options","title":"Options","text":"<pre><code>  -f, --force   Non interactive way to clear\n  -h, --help    help for clear\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-clear/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-clear/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-clear/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion/","title":"cec completion","text":"<p>Add auto-completion helper to Cells Client</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Install a completion helper to the Cells Client.</p> <p>This command configures an additional plugin to provide suggestions when hitting the 'tab' key.</p> <pre><code>./cec completion [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion/#examples","title":"Examples","text":"<pre><code>1) Using Bash\n\n    # Add to current bash session:\n        source &lt;(./cec completion bash)\n\n    # Debian/Ubuntu/CentOS\n        ./cec completion bash | sudo tee /etc/bash_completion.d/cec\n\n    # macOS\n        ./cec completion bash | tee /usr/local/etc/bash_completion.d/cec\n\n2) Zsh\n\n    # Add to current zsh session:\n        source &lt;(./cec completion zsh)\n\n    # Debian/Ubuntu/CentOS:\n        ./cec completion zsh | sudo tee &lt;path&gt;/&lt;to&gt;/&lt;your zsh completion folder&gt;\n\n    # macOS\n        ./cec completion zsh | tee /Users/&lt;your current user&gt;/.zsh/completion/_cec\n\n\n#### You must insure the 'bash-completion' library is installed:\n\n    # Debian / Ubuntu\n        sudo apt install bash-completion\n\n    # RHEL / CentOS\n        sudo yum install bash-completion\n\n    # On MacOS (after the installation make sure to follow the instructions displayed by Homebrew)\n        brew install bash-completion\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion/#options","title":"Options","text":"<pre><code>  -h, --help   help for completion\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> <li>./cec completion bash    - </li> <li>./cec completion zsh  - </li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-bash/","title":"cec completion bash","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-bash/#synopsis","title":"Synopsis","text":"<pre><code>./cec completion bash [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-bash/#options","title":"Options","text":"<pre><code>  -h, --help   help for bash\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-bash/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-bash/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec completion  - Add auto-completion helper to Cells Client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-bash/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-zsh/","title":"cec completion zsh","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-zsh/#synopsis","title":"Synopsis","text":"<pre><code>./cec completion zsh [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-zsh/#options","title":"Options","text":"<pre><code>  -h, --help   help for zsh\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-zsh/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-zsh/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec completion  - Add auto-completion helper to Cells Client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-completion-zsh/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config/","title":"cec config","text":"<p>Manage authentication profiles</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config/#synopsis","title":"Synopsis","text":"<p>Manage authentication profiles</p> <pre><code>./cec config [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config/#options","title":"Options","text":"<pre><code>  -h, --help   help for config\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> <li>./cec config add  - Configure a new connection to a running server and persist credentials locally</li> <li>./cec config check-keyring  - Try to store and retrieve a dummy value in the local keyring to test it</li> <li>./cec config ls    - List the current authentication profiles</li> <li>./cec config rm    - Remove a profile from the local storage</li> <li>./cec config use  - Define one of the authentication profiles as the current active one</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add/","title":"cec config add","text":"<p>Configure a new connection to a running server and persist credentials locally</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Launch an interactive process to configure a connection to a running Cells server.   By default, we use a secure OAuth2 process based on 'Authorization Code' Grant.</p> <p>If necessary, you might use an alternative authorization process and/or execute this process non-interactively calling one of the defined sub-commands.</p> <p>Once a connection with the server is established, it stores necessary information locally, keeping the sensitive bits encrypted in the client machine keyring.   If you want to forget a connection, the config file and keyring can be cleant out by calling the 'config rm' subcommand.</p> <p>WARNING</p> <p>If no keyring is defined in the client machine, all information is stored in clear text in a config file of the working directory.</p> <pre><code>./cec config add [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add/#options","title":"Options","text":"<pre><code>  -h, --help   help for add\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config  - Manage authentication profiles</li> <li>./cec config add client-auth  - Connect to the server using Client Credentials</li> <li>./cec config add oauth  - Use OAuth2 credential flow to login to the server</li> <li>./cec config add token  - Configure Authentication using a Personal Access Token</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-client-auth/","title":"cec config add client-auth","text":"<p>Connect to the server using Client Credentials</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-client-auth/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Configure your Cells Client to connect to your distant server using Client Credentials.   Note that this procedure is less secure than the other ones (using OAuth2 or a Personal Access Token).</p> <p>Please also beware that the password will be stored in clear text if you do not have a correctly configured and running keyring on your client machine.</p> <p>USAGE</p> <p>This command launches an interactive process that gather necessary information to configure your connection to a running Cells server.   You must provide a valid login and password for a user with enough permissions to achieve what you want on the server.</p> <p>You can also go through the whole process in a non-interactive manner by using the provided flags.</p> <pre><code>./cec config add client-auth [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-client-auth/#options","title":"Options","text":"<pre><code>  -h, --help   help for client-auth\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-client-auth/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-client-auth/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config add  - Configure a new connection to a running server and persist credentials locally</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-client-auth/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-oauth/","title":"cec config add oauth","text":"<p>Use OAuth2 credential flow to login to the server</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-oauth/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Configure your Cells Client to connect to your distant server using OAuth2 standard procedures.</p> <p>Please beware that the retrieved ID and refresh tokens will be stored in clear text if you do not have a correctly configured and running keyring on your client machine.</p> <p>USAGE</p> <p>This command launches an interactive process that gather necessary information.   If you are on a workstation with a browser, you are then redirected to your Cells' web UI to authenticate.   Otherwise, we provide you with a link that will help you terminate the procedure with 2 copy/pastes.</p> <p>If you are quick enough, (or if the default JWT token duration is long enough),    you can also initialise this configuration by providing an ID token that you have retrieved using an alternative procedure,   and go through the configuration process in a non-interactive manner by using the provided flags.</p> <pre><code>./cec config add oauth [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-oauth/#options","title":"Options","text":"<pre><code>  -h, --help              help for oauth\n      --id-token string   A currently valid OAuth2 ID token, retrieved via the OIDC credential flow\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-oauth/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-oauth/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config add  - Configure a new connection to a running server and persist credentials locally</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-oauth/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-token/","title":"cec config add token","text":"<p>Configure Authentication using a Personal Access Token</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-token/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Configure your Cells Client to connect to your distant server using a Personal Access Token.   A token can be generated with the 'token' command for a given user on the server side (not in this client),   see 'cells admin user token --help' for further details.</p> <p>Please beware that the Personal Access Token will be stored in clear text if you do not have a correctly configured and running keyring on your client machine.</p> <p>This is the preferred way to handle authentication between Cells and your client.</p> <pre><code>./cec config add token [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-token/#options","title":"Options","text":"<pre><code>  -h, --help   help for token\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-token/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-token/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config add  - Configure a new connection to a running server and persist credentials locally</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-add-token/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-check-keyring/","title":"cec config check-keyring","text":"<p>Try to store and retrieve a dummy value in the local keyring to test it</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-check-keyring/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Helper command to check if a keyring is present and correctly configured    in the client machine by simply storing and retrieving a dummy password.</p> <pre><code>./cec config check-keyring [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-check-keyring/#options","title":"Options","text":"<pre><code>  -h, --help   help for check-keyring\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-check-keyring/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-check-keyring/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config  - Manage authentication profiles</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-check-keyring/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-ls/","title":"cec config ls","text":"<p>List the current authentication profiles</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-ls/#synopsis","title":"Synopsis","text":"<p>List the current authentication profiles</p> <pre><code>./cec config ls [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-ls/#options","title":"Options","text":"<pre><code>  -h, --help   help for ls\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-ls/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-ls/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config  - Manage authentication profiles</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-ls/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-rm/","title":"cec config rm","text":"<p>Remove a profile from the local storage</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-rm/#synopsis","title":"Synopsis","text":"<p>Remove a profile from the local storage</p> <pre><code>./cec config rm [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-rm/#options","title":"Options","text":"<pre><code>  -h, --help   help for rm\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-rm/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-rm/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config  - Manage authentication profiles</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-rm/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-use/","title":"cec config use","text":"<p>Define one of the authentication profiles as the current active one</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-use/#synopsis","title":"Synopsis","text":"<p>Define one of the authentication profiles as the current active one</p> <pre><code>./cec config use [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-use/#options","title":"Options","text":"<pre><code>  -h, --help   help for use\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-use/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-use/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec config  - Manage authentication profiles</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-config-use/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-cp/","title":"cec cp","text":"<p>Copy files from A to B within your remote server</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-cp/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Copy files from one location to another within a single Pydio Cells instance.    To copy files from the client machine to your server (and vice versa), rather see the './cec scp' command.</p> <p>WILD-CHARS</p> <p>Since version 2, we only support the '' wild char as a standalone token of the source path, that is:     - './cec cp common-files/test/ common-files/target' is legit and will copy        all files and folder found in test folder on your server to the target folder     - './cec cp common-files/test/.jpg ...' or './cec cp common-files/test/ima ...'       will not work as some might expect: the system looks for a single file named respectively '.jpg' or 'ima'       and will probably fail to find it (unless if a file with this name exists on your server...)</p> <p>EXAMPLE</p> <p># Copy file \"test.txt\" from workspace root inside target \"folder-a\":   ./cec cp common-files/test.txt common-files/folder-a</p> <p># Copy a file from a workspace to another:   ./cec cp common-files/test.txt personal-files/folder-b</p> <p># Copy the full content of a folder inside another   ./cec cp common-files/test/* common-files/folder-c</p> <pre><code>./cec cp [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-cp/#options","title":"Options","text":"<pre><code>  -h, --help   help for cp\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-cp/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-cp/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-cp/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm/","title":"cec idm","text":"<p>Identity Management commands</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Commands to manage users, groups and roles.    See the help of respective sub-commands for further details.</p> <pre><code>./cec idm [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm/#options","title":"Options","text":"<pre><code>  -h, --help   help for idm\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> <li>./cec idm list-acls    - List ACLs by node UUID</li> <li>./cec idm list-groups    - List groups</li> <li>./cec idm list-roles  - List roles</li> <li>./cec idm list-users  - List users</li> <li>./cec idm list-workspaces    - List workspaces</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/","title":"cec idm list-acls","text":"<p>List ACLs by node UUID</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION </p> <pre><code>List ACLs attached to one or more given nodes, and optionally delete them afterward. \nCan be handy for debugging purposes.\n</code></pre> <p>EXAMPLE</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#given-this-listing-in-test-workspace","title":"Given this listing in \"test\" workspace:","text":"<p>$./cec ls -d test Found 4 nodes at test: +--------+--------------------------------------+-----------+--------+-------------+ |  TYPE  |                 UUID                 |   NAME    |  SIZE  |  MODIFIED   | +--------+--------------------------------------+-----------+--------+-------------+ | Folder | 8ec79c1e-2464-40d0-a762-c36d8a9e5886 | .         | 2.6 MB | 2 years ago | | File   | 1c989848-5eff-49cf-8727-4db754e02c25 | buro4.jpg | 541 kB | 2 years ago | | File   | d796d7c5-dce9-4994-bca3-3cf03c27c39d | b\u00fcro1.jpg | 1.0 MB | 2 years ago | | File   | 15f09f59-9171-4e25-809a-488e475dafa4 | b\u00fcro2.jpg | 996 kB | 2 years ago | +--------+--------------------------------------+-----------+--------+-------------+  </p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#list-acls-for-file-buro4txt","title":"List ACLs for file \"buro4.txt\":","text":"<p>./cec idm list-acls --uuid 1c989848-5eff-49cf-8727-4db754e02c25</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#list-acls-for-multiple-files","title":"List ACLs for multiple files:","text":"<p>./cec idm list-acls -n 1c989848-5eff-49cf-8727-4db754e02c25 -n d796d7c5-dce9-4994-bca3-3cf03c27c39d</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#delete-all-acls-on-a-given-node","title":"Delete all ACLs on a given node","text":"<p>./cec idm list-acls -n 1c989848-5eff-49cf-8727-4db754e02c25 --delete</p> <pre><code>./cec idm list-acls [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#options","title":"Options","text":"<pre><code>      --delete         Delete all found ACLs\n  -h, --help           help for list-acls\n  -n, --uuid strings   Search by node UUID, can be used multiple times\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec idm    - Identity Management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-acls/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-groups/","title":"cec idm list-groups","text":"<p>List groups</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-groups/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List user groups that are defined in your Pydio Cells instance.</p> <pre><code>./cec idm list-groups [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-groups/#options","title":"Options","text":"<pre><code>  -h, --help   help for list-groups\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-groups/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-groups/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec idm    - Identity Management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-groups/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-roles/","title":"cec idm list-roles","text":"<p>List roles</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-roles/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List the roles defined in your Pydio Cells instance, including technical roles    that are implicitly created upon user or group creation.</p> <pre><code>./cec idm list-roles [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-roles/#options","title":"Options","text":"<pre><code>  -h, --help   help for list-roles\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-roles/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-roles/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec idm    - Identity Management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-roles/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-users/","title":"cec idm list-users","text":"<p>List users</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-users/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION </p> <p>List the users defined in your Pydio Cells instance.</p> <pre><code>./cec idm list-users [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-users/#options","title":"Options","text":"<pre><code>  -h, --help   help for list-users\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-users/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-users/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec idm    - Identity Management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-users/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-workspaces/","title":"cec idm list-workspaces","text":"<p>List workspaces</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-workspaces/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION </p> <p>List all workspaces on which the current logged in user has at least Read Access.</p> <pre><code>./cec idm list-workspaces [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-workspaces/#options","title":"Options","text":"<pre><code>  -h, --help   help for list-workspaces\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-workspaces/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-workspaces/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec idm    - Identity Management commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-idm-list-workspaces/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-info/","title":"cec info","text":"<p>Display the active connection's info: user, server and authentication type</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-info/#synopsis","title":"Synopsis","text":"<p>Display the active connection's info: user, server and authentication type</p> <pre><code>./cec info [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-info/#options","title":"Options","text":"<pre><code>  -h, --help   help for info\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-info/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-info/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-info/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-ls/","title":"cec ls","text":"<p>List files in your Cells server</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-ls/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List files in your Cells server.</p> <p>SYNTAX</p> <p>Use as a normal ls, with additional path to list sub-folders or read info about a node.   You can use one of the below optional flags:     - d (--details) flag to display more information,     - r (--raw) flag to only list the paths of found files and folders    - f (--exists) flag to only check if given path exists on the server.    - format flag with a valid go template to get a custom listing.</p> <p>Note that you can only use one of the above flags at a time.</p> <p>As reference, known attributes for the Go templates are:    - Type: File, Folder or Workspace    - Uuid: the unique ID of the corresponding node in the Cells Server    - Hash: in case of a file, the internal hash computed by the server     - Name: name of the item    - Path: the path from the root of the server    - HumanSize: a human-friendly formatted size    - SizeBytes: the size of the object in bytes     - TimeStamp: number of seconds since 1970 when the item was last modified     - Date: a human-friendly date for the last modification</p> <p>Note that the last 4 meta-data are only indicative for folders: they might be out of date, if the listing happens shortly after a modification in the sub-tree.</p> <p>EXAMPLES</p> <p>1/ Listing the content of a folder</p> <p>$ ./cec ls common-files/Test   Found 6 nodes at common-files/Test:   +--------+-----------------+   |  TYPE  |      NAME       |   +--------+-----------------+   | Folder | .               |   | Folder | Archives        |   | File   | Garden.jpeg     |   | File   | Nighthawks.jpeg |   | File   | ReadMe.md       |   | File   | Summer.jpeg     |   +--------+-----------------+</p> <p>2/ Showing details about a file</p> <p>$ ./cec ls -d common-files/Test/Garden.jpeg   Found 1 node at common-files/Test/Garden.jpeg:   +------+--------------------------------------+-------------+---------+----------------+----------------------------------+   | TYPE |                 UUID                 |    NAME     |  SIZE   |    MODIFIED    |          INTERNAL HASH           |   +------+--------------------------------------+-------------+---------+----------------+----------------------------------+   | File | e50c9d8a-a84c-4b32-908a-408927657810 | Garden.jpeg | 442 KiB | 52 minutes ago | a6676657eb373c7f3e3c4e01be817fac |   +------+--------------------------------------+-------------+---------+----------------+----------------------------------+</p> <p>Will show the metadata for this node (uuid, size, modification date and internal hash)</p> <p>3/ Only listing files and folders, one per line.</p> <p>$ ./cec ls -r common-files/Test   common-files/Test/Archives/   common-files/Test/Garden.jpeg   common-files/Test/Nighthawks.jpeg   common-files/Test/ReadMe.md   ...</p> <p>4/ Using a template:</p> <p>$ ./cec ls personal-files --format '\"{{.Name}}\";\"{{.Type}}\";\"{{.Path}}\";\"{{.HumanSize}}\";\"{{.Date}}\"' personal-files/   \"Cat.jpg\";\"File\";\"personal-files/Cat.jpg\";\"1.3 MB\";\"2 months ago\"   \"Others\";\"Folder\";\"personal-files/Others\";\"12 MB\";\"11 minutes ago\"   \"Photo.png\";\"File\";\"personal-files/Photo.png\";\"8.1 MB\";\"3 minutes ago\"   ...</p> <p>5/ Check path existence.</p> <p>$ ./cec ls personal-files/info.txt -f   true</p> <p>$ ./cec ls personal-files/not-here -f   false</p> <pre><code>./cec ls [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-ls/#options","title":"Options","text":"<pre><code>  -d, --details         Show more information about retrieved objects\n  -f, --exists          Check if the passed path exists on the server and return non zero status code if not\n      --format string   Use go template to format each line of the output listing\n  -h, --help            help for ls\n  -r, --raw             List found paths (one per line) with no further info to be able to use returned results in later commands\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-ls/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-ls/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-ls/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mkdir/","title":"cec mkdir","text":"<p>Create folder(s) in the remote server</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mkdir/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create a folder in the remote Cells server instance.    You must specify the full path, including the slug of an existing workspace.</p> <p>If parent folder does not exists, the command fails unless the '-p' flag is set.   In such a case, non-existing folders are recursively created. </p> <p>Warning: even if '-p' flag is set, trying to create a folder in an unknown or non-existent    workspace fails with error.</p> <p>EXAMPLES</p> <p># Simply create a folder under an already existing folder 'test' in 'common-files' workspace   ./cec mkdir common-files/test/new-folder</p> <p># Create a full tree   ./cec mkdir -p common-files/a/folder/that/does/not/exits</p> <pre><code>./cec mkdir [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mkdir/#options","title":"Options","text":"<pre><code>  -h, --help      help for mkdir\n  -p, --parents   Force creation of non-existing ancestors\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mkdir/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mkdir/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mkdir/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mv/","title":"cec mv","text":"<p>Move and/or rename nodes on the server</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mv/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Synchronously move or rename one or more files or folders within your Cells server.   It works within the same workspace or from one to another, as long as   the current user has sufficient permission on both workspaces.</p> <p>EXAMPLES</p> <p>Move a node:   ./cec mv common-files/picture.jpg personal-files/photos/</p> <p>Rename a node:   ./cec mv common-files/picture.jpg common-files/p2.jpg</p> <p>Move all nodes recursively:   ./cec mv common-files/photos/* personal-files/photos/</p> <pre><code>./cec mv [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mv/#options","title":"Options","text":"<pre><code>  -h, --help   help for mv\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mv/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mv/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-mv/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-rm/","title":"cec rm","text":"<p>Trash files or folders</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-rm/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Delete specified files or folders. </p> <p>By default, we only move specified files or folders to the recycle bin    that is at the root of the corresponding workspace. The trashed items    can be then restored from the web UI (this feature is not yet implemented    in the Cells Client). Use the 'permanently' flag to skip the recycle and    definitively remove the corresponding items.</p> <p>EXAMPLES</p> <p># Generic example:   ./cec rm /path/to/resource <p># Remove a single file:   ./cec rm common-files/target.txt</p> <p># Remove recursively inside a folder, the wildcard is '%':   ./cec rm common-files/folder/%</p> <p># Remove a folder and all its children (even if it is not empty)   ./cec rm common-files/folder</p> <p># Remove multiple files   ./cec rm common-files/file-1.txt common-files/file-2.txt</p> <p># You can force the deletion with the '--force' flag (to avoid the Yes or No)   ./cec rm -f common-files/file-1.txt</p> <p># Skip the recycle and permanently remove a file   ./cec rm -p common-files/file-1.txt</p> <p># DANGER: directly and permanently remove a folder and all its children   ./cec rm -pf common-files/folder</p> <pre><code>./cec rm [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-rm/#options","title":"Options","text":"<pre><code>  -f, --force         Do not ask for user approval\n  -h, --help          help for rm\n  -p, --permanently   Skip recycle bin and directly permanently delete the target files. Warning: this is not un-doable\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-rm/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-rm/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-rm/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-scp/","title":"cec scp","text":"<p>Copy files from/to Cells</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-scp/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>scp copies files between your client machine and a Pydio Cells server.</p> <p>To distinguish between local and remote paths, prefix remote paths with 'cells://'   If you have installed the completion and intend to use it, remote prefix is 'cells//', without the colon.</p> <p>Currently, copying can only be performed between the client machine and the server or vice versa.   Direct transfers between two Cells instances are not yet supported.</p> <p>For convenience:     - If the target folder does not exist (but its parent does), it will be created.     - If an item with the same name already exists on the target side, the transfer will abort with an error unless \"force\" mode is enabled.</p> <p>When \"force\" mode is enabled:     - If both 'old' (existing) and 'new' items are files: 'new' replaces 'old'.     - If 'old' and 'new' are of different types: 'old' is erased on the target, then 'new' is copied (recursively).     - If both are folders: each child of 'new' is copied into 'old'. If an item with the same name already exists on the target side, the rules are applied recursively.</p> <p>WARNING: This could lead to data loss on the target side. Use with caution.</p> <p>Depending on your use-case, you might want to use the 'scp' command in interactive mode, with a progress bar, or with log messages, especially when launching from a script.</p> <p>TROUBLESHOOTING</p> <p>If you encounter issues with transferring large files or extensive directory structures, we recommend using the 'scp' command with a PAT and the '--no-progress' flag set.</p> <p>You can also adjust the log level, e.g., with '--log debug' and choose which events are logged by the AWS SDK that handles multipart uploads.</p> <p>Known event types and corresponding AWS SDK log types:     - signing: aws.LogSigning     - retries: aws.LogRetries     - request: aws.LogRequest     - request_with_body: aws.LogRequestWithBody     - response: aws.LogResponse     - response_with_body: aws.LogResponseWithBody     - deprecated_usage: aws.LogDeprecatedUsage     - request_event_message: aws.LogRequestEventMessage     - response_event_message: aws.LogResponseEventMessage</p> <p>Specify the desired mix of event types with, e.g., '--multipart-debug-flags=\"signing | retries\"' (spaces are optional).</p> <p>Convenience flags for retro-compatibility:     - '--verbose' is equivalent to '--no-progress --log info --multipart-debug-flags=\"signing | retries\"'     - '--very-verbose' is equivalent to '--no-progress --log debug --multipart-debug-flags=\"request | response | signing | retries | deprecated_usage\"'</p> <p>EXAMPLES</p> <p>1/ Uploading a file to the server:   $ ./cec scp ./README.md cells://common-files   Copying ./README.md to cells://common-files   Waiting for file to be indexed...   File correctly indexed</p> <p>2/ Download a file from server:   $ ./cec scp cells://personal-files/funnyCat.jpg ./   Copying cells://personal-files/funnyCat.jpg to /home/pydio/downloads</p> <p>3/ Download a folder to an existing target, using existing folders when they are already here but re-downloading files:    $ ./cec scp --force cells//common-files/my-folder ./tests   Downloading cells://common-files/my-folder to /home/pydio/downloads/tests</p> <p>Copying cells//common-files/my-folder to /home/pydio/tests    </p> <pre><code>./cec scp [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-scp/#options","title":"Options","text":"<pre><code>  -f, --force                          *DANGER* turns overwrite mode on: for a given item in the source tree, if a file or folder with same name already exists on the target side, it is merged or replaced.\n  -h, --help                           help for scp\n      --max-parts-number int           Maximum number of parts, S3 supports 10000 but some storage require less parts. (default 5000)\n      --multipart-debug-flags string   Define flags to fine tune debug messages emitted by the underlying AWS SDK during multi-part uploads\n      --multipart-threshold int        Files bigger than this size (in MB) will be uploaded using Multipart Upload. (default 100)\n  -n, --no-progress                    Do not show progress bar. You can then fine tune the log level\n      --part-size int                  Default part size (MB), must always be a multiple of 10MB. It will be recalculated based on the max-parts-number value. (default 50)\n      --parts-concurrency int          Number of concurrent part uploads. (default 3)\n  -q, --quiet                          Reduce refresh frequency of the progress bars, e.g when running cec in a bash script\n      --retry-max-attempts int         Limit the number of attempts before aborting. '0' allows the SDK to retry all retryable errors until the request succeeds, or a non-retryable error is thrown. (default 3)\n      --retry-max-backoff string       Maximum duration to wait after a part transfer fails, before trying again, expressed in Go duration format, e.g., '20s' or '3m'. (default \"3s\")\n      --skip-md5                       Do not compute md5 (for files bigger than 5GB, it is not computed by default for smaller files).\n  -v, --verbose                        Alias for an opinionated debug configuration to investigate problematic uploads\n  -w, --very-verbose                   Alias that turns most of the debug options on when investigating problematic uploads\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-scp/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-scp/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-scp/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-share/","title":"cec share","text":"<p>Share a single file or folder</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-share/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create a public link that adds public access to the passed path on the server.</p> <p>EXAMPLES</p> <p>1/ Create a link with a technical ID   $ ./cec share common-files/MyPublicImage.jpg   Public link created at https://pydio.example.com/public/479cc5dbdf8b</p> <pre><code>./cec share [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-share/#options","title":"Options","text":"<pre><code>  -h, --help   help for share\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-share/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-share/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-share/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage/","title":"cec storage","text":"<p>Datasource commands</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage/#synopsis","title":"Synopsis","text":"<p>Datasource commands</p> <pre><code>./cec storage [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage/#options","title":"Options","text":"<pre><code>  -h, --help   help for storage\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> <li>./cec storage list-datasources  - List configured datasources</li> <li>./cec storage resync-ds    - Launch a resync</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-list-datasources/","title":"cec storage list-datasources","text":"<p>List configured datasources</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-list-datasources/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION </p> <p>List all the datasources that are defined on the server side.   Note that the currently used user account must have be given the necessary Admin permissions.</p> <pre><code>./cec storage list-datasources [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-list-datasources/#options","title":"Options","text":"<pre><code>  -h, --help   help for list-datasources\n  -r, --raw    List datasources name in raw format\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-list-datasources/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-list-datasources/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec storage    - Datasource commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-list-datasources/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-resync-ds/","title":"cec storage resync-ds","text":"<p>Launch a resync</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-resync-ds/#synopsis","title":"Synopsis","text":"<p>Launch a resync job on the specified datasource</p> <pre><code>./cec storage resync-ds [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-resync-ds/#options","title":"Options","text":"<pre><code>  -h, --help   help for resync-ds\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-resync-ds/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-resync-ds/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec storage    - Datasource commands</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-storage-resync-ds/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-update/","title":"cec update","text":"<p>Check for available updates and apply them</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-update/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION </p> <p>Without argument, the 'update' command lists available updates.   To apply the actual update, re-run the command specifying the target version with the --version flag.</p> <p>By default, we check for update in the stable channel, that is: we only install binaries that have been properly released.   If necessary, you can use the --dev flag to switch at your own risks to the pre-release channel.</p> <pre><code>./cec update [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-update/#options","title":"Options","text":"<pre><code>      --dev              If set this flag will use the dev channel to load the updates\n  -d, --dry_run          If set, this flag will grab the package and save it to the tmp directory instead of replacing current binary\n  -h, --help             help for update\n  -v, --version string   Specify the version to be installed and trigger the actual upgrade\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-update/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-update/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-update/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-version/","title":"cec version","text":"<p>Show Cells Client version information</p>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-version/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Print version information.</p> <p>You can format the output with a go template using the --format flag.   Typically, to only output a parsable version, call:</p> <pre><code>$ ./cec version -f '{{.Version}}'\n</code></pre> <p>As reference, known attributes are:    - PackageLabel    - Version    - GoVersion    - GitCommit    - GitTime    - OS    - Arch</p> <pre><code>./cec version [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-version/#options","title":"Options","text":"<pre><code>  -f, --format string   Use go template to format version output\n  -h, --help            help for version\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-version/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string     Location of Cells Client's config files (default: /home/teamcity/.config/pydio/cells-client/config.json)\n      --log string        change log level (default: info) (default \"info\")\n      --login string      The user login, for Client auth only\n      --no-cache          Force token refresh at each call. This might slow down scripts with many calls\n      --password string   The user password, for Client auth only\n      --skip-keyring      Explicitly tell the tool to *NOT* try to use a keyring, even if present. Warning: sensitive information will be stored in clear text\n      --skip-verify       By default the Cells Client verifies the validity of TLS certificates for each communication. This option skips TLS certificate verification\n  -t, --token string      A valid Personal Access Token (PAT)\n  -u, --url string        The full URL of the target server\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-version/#see-also","title":"SEE ALSO","text":"<ul> <li>./cec     - Connect to a Pydio Cells server using the command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-client-cec/cec-version/#auto-generated-by-cells-client-v421-on-4-nov-2024","title":"Auto generated by Cells Client v4.2.1 on 4-Nov-2024","text":""},{"location":"developer-guide/command-line-reference/cells-sync/index/","title":"Cells Sync","text":"<ul> <li>cells-sync</li> <li>cells-sync autotest</li> <li>cells-sync capture</li> <li>cells-sync completion</li> <li>cells-sync completion bash</li> <li>cells-sync completion fish</li> <li>cells-sync completion powershell</li> <li>cells-sync completion zsh</li> <li>cells-sync config</li> <li>cells-sync config account</li> <li>cells-sync config add</li> <li>cells-sync config delete</li> <li>cells-sync config edit</li> <li>cells-sync doc</li> <li>cells-sync service</li> <li>cells-sync start</li> <li>cells-sync systray</li> <li>cells-sync version</li> <li>cells-sync webview</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync/","title":"cells-sync","text":"<p>Cells Sync desktop client</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync/#synopsis","title":"Synopsis","text":"<p>Cells Sync desktop client.</p> <p>Realtime, bidirectional synchronization tool for Pydio Cells server.  Launching without command is the same as './cells-sync start' on Mac and Windows. </p> <pre><code>./cells-sync [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync/#options","title":"Options","text":"<pre><code>  -h, --help   help for ./cells-sync\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync autotest    - Basic unidirectional sync between two local folders (under your temporary directory)</li> <li>./cells-sync capture  - Capture snapshots inside JSON file - do not perform any actual tasks</li> <li>./cells-sync completion    - Generate the autocompletion script for the specified shell</li> <li>./cells-sync config    - Manage configurations manually</li> <li>./cells-sync doc  - Generate MD and YAML documentation for all CellsClient CLI commands</li> <li>./cells-sync service  - Manage service: install,uninstall,stop,start,restart</li> <li>./cells-sync start  - Start Cells Sync and fork a process for starting system tray</li> <li>./cells-sync systray  - Launch Systray</li> <li>./cells-sync version  - Display version</li> <li>./cells-sync webview  - Launch WebView</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-autotest/","title":"cells-sync autotest","text":"<p>Basic unidirectional sync between two local folders (under your temporary directory)</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-autotest/#synopsis","title":"Synopsis","text":"<p>Basic unidirectional sync between two local folders (under your temporary directory)</p> <pre><code>./cells-sync autotest [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-autotest/#options","title":"Options","text":"<pre><code>  -h, --help         help for autotest\n  -s, --skip_clean   Do not clear resources created for testing\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-autotest/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-autotest/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-capture/","title":"cells-sync capture","text":"<p>Capture snapshots inside JSON file - do not perform any actual tasks</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-capture/#synopsis","title":"Synopsis","text":"<p>Capture snapshots inside JSON file - do not perform any actual tasks</p> <pre><code>./cells-sync capture [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-capture/#options","title":"Options","text":"<pre><code>  -f, --folder string   Target folder to store JSON captures\n  -h, --help            help for capture\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-capture/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-capture/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion/","title":"cells-sync completion","text":"<p>Generate the autocompletion script for the specified shell</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for ./cells-sync for the specified shell. See each sub-command's help for details on how to use the generated script.</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion/#options","title":"Options","text":"<pre><code>  -h, --help   help for completion\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> <li>./cells-sync completion bash  - Generate the autocompletion script for bash</li> <li>./cells-sync completion fish  - Generate the autocompletion script for fish</li> <li>./cells-sync completion powershell  - Generate the autocompletion script for powershell</li> <li>./cells-sync completion zsh    - Generate the autocompletion script for zsh</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-bash/","title":"cells-sync completion bash","text":"<p>Generate the autocompletion script for bash</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-bash/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the bash shell.</p> <p>This script depends on the 'bash-completion' package. If it is not installed already, you can install it via your OS's package manager.</p> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(./cells-sync completion bash)\n</code></pre> <p>To load completions for every new session, execute once:</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-bash/#linux","title":"Linux:","text":"<pre><code>./cells-sync completion bash &gt; /etc/bash_completion.d/./cells-sync\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-bash/#macos","title":"macOS:","text":"<pre><code>./cells-sync completion bash &gt; $(brew --prefix)/etc/bash_completion.d/./cells-sync\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>./cells-sync completion bash\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-bash/#options","title":"Options","text":"<pre><code>  -h, --help              help for bash\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-bash/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync completion    - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-bash/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-fish/","title":"cells-sync completion fish","text":"<p>Generate the autocompletion script for fish</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-fish/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the fish shell.</p> <p>To load completions in your current shell session:</p> <pre><code>./cells-sync completion fish | source\n</code></pre> <p>To load completions for every new session, execute once:</p> <pre><code>./cells-sync completion fish &gt; ~/.config/fish/completions/./cells-sync.fish\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>./cells-sync completion fish [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-fish/#options","title":"Options","text":"<pre><code>  -h, --help              help for fish\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-fish/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync completion    - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-fish/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-powershell/","title":"cells-sync completion powershell","text":"<p>Generate the autocompletion script for powershell</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-powershell/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for powershell.</p> <p>To load completions in your current shell session:</p> <pre><code>./cells-sync completion powershell | Out-String | Invoke-Expression\n</code></pre> <p>To load completions for every new session, add the output of the above command to your powershell profile.</p> <pre><code>./cells-sync completion powershell [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-powershell/#options","title":"Options","text":"<pre><code>  -h, --help              help for powershell\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-powershell/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync completion    - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-powershell/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-zsh/","title":"cells-sync completion zsh","text":"<p>Generate the autocompletion script for zsh</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-zsh/#synopsis","title":"Synopsis","text":"<p>Generate the autocompletion script for the zsh shell.</p> <p>If shell completion is not already enabled in your environment you will need to enable it.  You can execute the following once:</p> <pre><code>echo \"autoload -U compinit; compinit\" &gt;&gt; ~/.zshrc\n</code></pre> <p>To load completions in your current shell session:</p> <pre><code>source &lt;(./cells-sync completion zsh)\n</code></pre> <p>To load completions for every new session, execute once:</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-zsh/#linux","title":"Linux:","text":"<pre><code>./cells-sync completion zsh &gt; \"${fpath[1]}/_./cells-sync\"\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-zsh/#macos","title":"macOS:","text":"<pre><code>./cells-sync completion zsh &gt; $(brew --prefix)/share/zsh/site-functions/_./cells-sync\n</code></pre> <p>You will need to start a new shell for this setup to take effect.</p> <pre><code>./cells-sync completion zsh [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-zsh/#options","title":"Options","text":"<pre><code>  -h, --help              help for zsh\n      --no-descriptions   disable completion descriptions\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-zsh/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync completion    - Generate the autocompletion script for the specified shell</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-completion-zsh/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config/","title":"cells-sync config","text":"<p>Manage configurations manually</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config/#synopsis","title":"Synopsis","text":"<p>Manage configurations manually</p> <pre><code>./cells-sync config [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config/#options","title":"Options","text":"<pre><code>  -h, --help   help for config\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> <li>./cells-sync config account    - Manage Accounts</li> <li>./cells-sync config add    - Add a new task via command line</li> <li>./cells-sync config delete  - Delete existing sync via command line</li> <li>./cells-sync config edit  - Exit existing sync via command line</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-account/","title":"cells-sync config account","text":"<p>Manage Accounts</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-account/#synopsis","title":"Synopsis","text":"<p>Create or edit an existing account by manually setting a user token instead of going through OAuth Flow.</p> <pre><code>./cells-sync config account [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-account/#options","title":"Options","text":"<pre><code>  -h, --help   help for account\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-account/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync config    - Manage configurations manually</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-account/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-add/","title":"cells-sync config add","text":"<p>Add a new task via command line</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-add/#synopsis","title":"Synopsis","text":"<p>Define a new sync task using two URI and a direction.</p> <p>Endpoint URI support the following schemes:   - router: Direct connexion to Cells server running on the same machine  - fs:     Path to a local folder  - s3:     S3 compliant  - memdb:  In-memory DB for testing purposes</p> <p>Direction can be:  - Bi:     Bidirectionnal sync between two endpoints  - Left:   Changes are only propagated from right to left  - Right:  Changes are only propagated from left to right</p> <p>Example  - LeftUri : \"router:///personal/admin/folder\"  - RightUri: \"fs:///Users/name/Pydio/folder\"  - Direction: \"Bi\"</p> <pre><code>./cells-sync config add [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-add/#options","title":"Options","text":"<pre><code>  -h, --help   help for add\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-add/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync config    - Manage configurations manually</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-add/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-delete/","title":"cells-sync config delete","text":"<p>Delete existing sync via command line</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-delete/#synopsis","title":"Synopsis","text":"<p>Delete existing sync via command line</p> <pre><code>./cells-sync config delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-delete/#options","title":"Options","text":"<pre><code>  -h, --help   help for delete\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync config    - Manage configurations manually</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-delete/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-edit/","title":"cells-sync config edit","text":"<p>Exit existing sync via command line</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-edit/#synopsis","title":"Synopsis","text":"<p>Exit existing sync via command line</p> <pre><code>./cells-sync config edit [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-edit/#options","title":"Options","text":"<pre><code>  -h, --help   help for edit\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-edit/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync config    - Manage configurations manually</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-config-edit/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-doc/","title":"cells-sync doc","text":"<p>Generate MD and YAML documentation for all CellsClient CLI commands</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-doc/#synopsis","title":"Synopsis","text":"<p>Generate Markdown documentation for the Cells Client command line tool. Provide a target folder where to put the generated files. This command also generates yaml files for pydio.com documentation format.</p> <pre><code>./cells-sync doc [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-doc/#options","title":"Options","text":"<pre><code>  -h, --help          help for doc\n  -m, --menu string   Pydio Docs menu name (default \"menu-admin-guide-v7\")\n  -p, --path string   Target folder where to put the files\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-doc/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-doc/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-service/","title":"cells-sync service","text":"<p>Manage service: install,uninstall,stop,start,restart</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-service/#synopsis","title":"Synopsis","text":"<p>Manage service: install,uninstall,stop,start,restart</p> <pre><code>./cells-sync service [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-service/#options","title":"Options","text":"<pre><code>  -h, --help   help for service\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-service/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-service/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-start/","title":"cells-sync start","text":"<p>Start Cells Sync and fork a process for starting system tray</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-start/#synopsis","title":"Synopsis","text":"<p>Start Cells Sync and fork a process for starting system tray</p> <pre><code>./cells-sync start [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-start/#options","title":"Options","text":"<pre><code>      --headless   Start sync tasks without UI components\n  -h, --help       help for start\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-start/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-start/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-systray/","title":"cells-sync systray","text":"<p>Launch Systray</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-systray/#synopsis","title":"Synopsis","text":"<p>Launch Systray</p> <pre><code>./cells-sync systray [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-systray/#options","title":"Options","text":"<pre><code>  -h, --help         help for systray\n      --url string   WebServer URL (default \"http://localhost:3636\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-systray/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-systray/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-version/","title":"cells-sync version","text":"<p>Display version</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-version/#synopsis","title":"Synopsis","text":"<p>Display version</p> <pre><code>./cells-sync version [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-version/#options","title":"Options","text":"<pre><code>  -h, --help   help for version\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-version/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-version/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-webview/","title":"cells-sync webview","text":"<p>Launch WebView</p>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-webview/#synopsis","title":"Synopsis","text":"<p>Launch WebView</p> <pre><code>./cells-sync webview [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-webview/#options","title":"Options","text":"<pre><code>  -h, --help         help for webview\n      --url string   Web server URL (default \"http://localhost:3636\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-webview/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-sync  - Cells Sync desktop client</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-sync/cells-sync-webview/#auto-generated-by-cells-sync-client-v095-alpha2-on-21-sep-2023","title":"Auto generated by Cells Sync Client v0.9.5-alpha2 on 21-Sep-2023","text":""},{"location":"developer-guide/command-line-reference/cells-enterprise/index/","title":"Cells Enterprise","text":"<ul> <li>cells-enterprise</li> <li>cells-enterprise admin</li> <li>cells-enterprise admin acl</li> <li>cells-enterprise admin acl create</li> <li>cells-enterprise admin acl delete</li> <li>cells-enterprise admin acl patch-recycle-personal</li> <li>cells-enterprise admin acl search</li> <li>cells-enterprise admin cert</li> <li>cells-enterprise admin cert import</li> <li>cells-enterprise admin clean</li> <li>cells-enterprise admin clean acls</li> <li>cells-enterprise admin clean activities</li> <li>cells-enterprise admin clean logs</li> <li>cells-enterprise admin clean reset-jobs</li> <li>cells-enterprise admin clean resync</li> <li>cells-enterprise admin config</li> <li>cells-enterprise admin config check</li> <li>cells-enterprise admin config copy</li> <li>cells-enterprise admin config db</li> <li>cells-enterprise admin config db add</li> <li>cells-enterprise admin config db list</li> <li>cells-enterprise admin config db move</li> <li>cells-enterprise admin config db set</li> <li>cells-enterprise admin config delete</li> <li>cells-enterprise admin config history</li> <li>cells-enterprise admin config list</li> <li>cells-enterprise admin config set</li> <li>cells-enterprise admin datasource</li> <li>cells-enterprise admin datasource capture</li> <li>cells-enterprise admin datasource migrate</li> <li>cells-enterprise admin datasource rehash</li> <li>cells-enterprise admin datasource resync</li> <li>cells-enterprise admin datasource rethumb</li> <li>cells-enterprise admin datasource snapshot</li> <li>cells-enterprise admin file</li> <li>cells-enterprise admin file create-bench</li> <li>cells-enterprise admin file ls</li> <li>cells-enterprise admin file meta-put</li> <li>cells-enterprise admin file meta-read</li> <li>cells-enterprise admin jobs</li> <li>cells-enterprise admin jobs templates</li> <li>cells-enterprise admin jobs unlock-public</li> <li>cells-enterprise admin license</li> <li>cells-enterprise admin license stats</li> <li>cells-enterprise admin license update</li> <li>cells-enterprise admin user</li> <li>cells-enterprise admin user create</li> <li>cells-enterprise admin user delete</li> <li>cells-enterprise admin user search</li> <li>cells-enterprise admin user set-profile</li> <li>cells-enterprise admin user set-pwd</li> <li>cells-enterprise admin user token</li> <li>cells-enterprise admin user unlock</li> <li>cells-enterprise configure</li> <li>cells-enterprise configure sites</li> <li>cells-enterprise configure sites add</li> <li>cells-enterprise configure sites delete</li> <li>cells-enterprise ctl</li> <li>cells-enterprise ctl service-level</li> <li>cells-enterprise start</li> <li>cells-enterprise update</li> <li>cells-enterprise version</li> </ul>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise/","title":"cells-enterprise","text":"<p>Secure File Sharing for business</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Pydio Cells is self-hosted Document Sharing &amp; Collaboration software for organizations that need    advanced sharing without security trade-offs. Cells gives you full control of your document sharing    environment \u2013 combining fast performance, huge file transfer sizes, granular security, and advanced    workflow automations in an easy-to-set-up and easy-to-support self-hosted platform.</p> <p>CONFIGURE</p> <p>For the very first run, use './cells-enterprise configure' to begin the browser-based or command-line based installation wizard.    Services will automatically start at the end of a browser-based installation.</p> <p>RUN</p> <p>Run '$ ./cells-enterprise start' to load all services.</p> <p>WORKING DIRECTORIES</p> <p>By default, application data is stored under the standard OS application dir: </p> <ul> <li>Linux: ${USER_HOME}/.config/pydio/cells</li> <li>Darwin: ${USER_HOME}/Library/Application Support/Pydio/cells</li> <li>Windows: ${USER_HOME}/ApplicationData/Roaming/Pydio/cells</li> </ul> <p>You can customize the storage locations with the following ENV variables: </p> <ul> <li>CELLS_WORKING_DIR: replace the whole standard application dir</li> <li>CELLS_DATA_DIR: replace the location for storing default datasources (default CELLS_WORKING_DIR/data)</li> <li>CELLS_LOG_DIR: replace the location for storing logs (default CELLS_WORKING_DIR/logs)</li> <li>CELLS_SERVICES_DIR: replace location for services-specific data (default CELLS_WORKING_DIR/services) </li> </ul> <p>LOGS LEVEL</p> <p>By default, logs are outputted in console format at the Info level and appended to a CELLS_LOG_DIR/pydio.log file. You can:     - Change the level (debug, info, warn or error) with the --log flag    - Output the logs in json format with --log_json=true     - Prevent logs from being written to a file with --log_to_file=false</p> <p>For backward compatibility:    - The CELLS_LOGS_LEVEL environment variable still works to define the --log flag (or CELLS_LOG env var)      but is now deprecated and will disappear in version 4.       - The --log=production flag still works and is equivalent to \"--log=info --log_json=true --log_to_file=true\"</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise/#options","title":"Options","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n  -h, --help            help for ./cells-enterprise\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise configure  - Setup required configurations</li> <li>./cells-enterprise ctl  - Explore all registered items in registry and configuration.</li> <li>./cells-enterprise start  - Start one or more services</li> <li>./cells-enterprise update    - Check for available updates and apply them</li> <li>./cells-enterprise version  - Print version information</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin/","title":"cells-enterprise admin","text":"<p>Direct Read/Write access to Cells data</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set of commands with direct access to Cells data.</p> <p>These commands require a running Cells instance. They connect directly to low-level services   using gRPC connections. They are not authenticated.</p> <pre><code>./cells-enterprise admin [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin/#options","title":"Options","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n  -h, --help                         help for admin\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise  - Secure File Sharing for business</li> <li>./cells-enterprise admin acl  - Manage access control lists</li> <li>./cells-enterprise admin cert    - Certification manager</li> <li>./cells-enterprise admin clean  - Housekeeping commands</li> <li>./cells-enterprise admin config    - Configuration manager</li> <li>./cells-enterprise admin datasource    - Datasource management commands</li> <li>./cells-enterprise admin file    - Directly manage files and metadata on the nodes</li> <li>./cells-enterprise admin jobs    - Group job-related commands</li> <li>./cells-enterprise admin license  - Manage Cells Enterprise license</li> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl/","title":"cells-enterprise admin acl","text":"<p>Manage access control lists</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>ACLs are managed in a dedicated microservice.</p> <p>It is simpler to manage them in the frontend, but you can use this command to create/delete/search ACLs directly.   ACLs are used to grant permissions to a given node (retrieved by UUID) for a given Role.</p> <pre><code>./cells-enterprise admin acl [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl/#options","title":"Options","text":"<pre><code>  -h, --help   help for acl\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin acl create    - Create an Access Control</li> <li>./cells-enterprise admin acl delete    - Remove one or more ACLs</li> <li>./cells-enterprise admin acl patch-recycle-personal    - Patch the recycle bin of the personal folders</li> <li>./cells-enterprise admin acl search    - List current ACLs</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-create/","title":"cells-enterprise admin acl create","text":"<p>Create an Access Control</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-create/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create an Access Control in the dedicated microservice.   Use this command to manually grant a permission on a given node for a given role.</p> <pre><code>./cells-enterprise admin acl create [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-create/#options","title":"Options","text":"<pre><code>  -a, --action string         Action\n  -v, --actionVal string      Action value\n  -h, --help                  help for create\n  -n, --node_id string        NodeIDs\n  -r, --role_id string        RoleIDs\n  -w, --workspace_id string   WorkspaceIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-create/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-create/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin acl  - Manage access control lists</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-delete/","title":"cells-enterprise admin acl delete","text":"<p>Remove one or more ACLs</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Remove one or more ACLs by querying the ACL API.   Flags allow you to query the gRPC service and delete the resulting ACLs.</p> <p>WARNING ACLs are the corner stone of Pydio Cells system:    you might corrupt your instance by removing some of them.   So please use with extra care: insure that you know what    you are doing and have a valid backup. </p> <pre><code>./cells-enterprise admin acl delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-delete/#options","title":"Options","text":"<pre><code>  -a, --action stringArray         Action Name\n  -f, --force                      DANGER: force deletion of found ACLs without user confirmation\n  -h, --help                       help for delete\n  -n, --node_id stringArray        NodeIDs\n  -r, --role_id stringArray        RoleIDs\n  -w, --workspace_id stringArray   WorkspaceIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin acl  - Manage access control lists</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-patch-recycle-personal/","title":"cells-enterprise admin acl patch-recycle-personal","text":"<p>Patch the recycle bin of the personal folders</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-patch-recycle-personal/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Patch the recycle bin of the personal folders.    This command looks for personal/ folders and creates a recycle_root ACL on them. <pre><code>./cells-enterprise admin acl patch-recycle-personal [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-patch-recycle-personal/#options","title":"Options","text":"<pre><code>      --dry-run       Run as a dry-run (default true)\n  -h, --help          help for patch-recycle-personal\n      --path string   Full path to browse. All existing children will be flagged with the recycle_root ACL. (default \"personal\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-patch-recycle-personal/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-patch-recycle-personal/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin acl  - Manage access control lists</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-search/","title":"cells-enterprise admin acl search","text":"<p>List current ACLs</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-search/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List ACLs currently stored in the ACL microservice.</p> <p>EXAMPLES</p> <ol> <li> <p>List all ACLs that give READ access   $ ./cells-enterprise admin acl search -a \"READ\"</p> </li> <li> <p>List all ACLs for root group   $ ./cells-enterprise admin acl search -r \"ROOT_GROUP\"</p> </li> <li> <p>List all ACLs of a given node    $ ./cells-enterprise admin acl search -n \"53a65cc3-e407-4fcc-9230-5630ff054659\"</p> </li> </ol> <pre><code>./cells-enterprise admin acl search [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-search/#options","title":"Options","text":"<pre><code>  -a, --action stringArray         Action value\n  -h, --help                       help for search\n  -l, --limit int                  Max. number of returned rows, 0 for unlimited (default 100)\n  -n, --node_id stringArray        NodeIDs\n  -o, --offset int                 Add an offset to the query when necessary\n  -r, --role_id stringArray        RoleIDs\n  -w, --workspace_id stringArray   WorkspaceIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-search/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-acl-search/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin acl  - Manage access control lists</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert/","title":"cells-enterprise admin cert","text":"<p>Certification manager</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set of commands providing programmatic access to stored certificates.</p> <pre><code>./cells-enterprise admin cert [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert/#options","title":"Options","text":"<pre><code>  -h, --help   help for cert\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin cert import  - Import certificate in vault</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert-import/","title":"cells-enterprise admin cert import","text":"<p>Import certificate in vault</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert-import/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Import a certificate in the vault. </p> <p>SYNTAX</p> <p>Use uuid to assign a recognizable id to the certificate in the vault. If not present, defaults to the file name (with extension)</p> <p>EXAMPLE</p> <p>Import a certificate file into the vault    $ ./cells-enterprise admin cert import ~/path/to/my/certificate --uuid 123456.pem</p> <pre><code>./cells-enterprise admin cert import [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert-import/#options","title":"Options","text":"<pre><code>  -h, --help          help for import\n      --uuid string   Certs Import Namespace\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert-import/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-cert-import/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin cert    - Certification manager</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean/","title":"cells-enterprise admin clean","text":"<p>Housekeeping commands</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean/#synopsis","title":"Synopsis","text":"<p>Collection of tools for purging Cells internal data (activities, logs, etc)</p> <pre><code>./cells-enterprise admin clean [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean/#options","title":"Options","text":"<pre><code>  -h, --help   help for clean\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin clean acls    - Clean Expired ACLs</li> <li>./cells-enterprise admin clean activities    - Purge user or file activities based on various criteria</li> <li>./cells-enterprise admin clean logs    - Truncate log indexes to a given size</li> <li>./cells-enterprise admin clean reset-jobs    - Reset a job to its default</li> <li>./cells-enterprise admin clean resync    - And a TriggerResync gRPC command to a service</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-acls/","title":"cells-enterprise admin clean acls","text":"<p>Clean Expired ACLs</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-acls/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>When deleted after a node deletion, ACLs are not really deleted but only expired, to be able to restore them   if necessary. This can lead to keep unused data, and particularly shared links information that may prevent users to    re-use an existing custom link value. Use this command to definitely delete expired ACLs based on a period. </p> <p>Parameters accept either timestamps or durations. In the later case, corresponding time is computed using \"Now - Duration\".</p> <p>EXAMPLES</p> <p>Clean all ACLs expired before last 24h </p> <p>$ ./cells-enterprise clean admin acls --before 24h </p> <pre><code>./cells-enterprise admin clean acls [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-acls/#options","title":"Options","text":"<pre><code>  -a, --after string    Expiration date is greater than...\n  -b, --before string   Expiration date is lower than... (default \"240h\")\n  -h, --help            help for acls\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-acls/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-acls/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin clean  - Housekeeping commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-activities/","title":"cells-enterprise admin clean activities","text":"<p>Purge user or file activities based on various criteria</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-activities/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Launch a dedicated job to purge activities. The server must be running when launching this command.</p> <p>Activities are \"social\" events displayed in the interface. They can be either attached to \"users\" (notifications feed)   or \"nodes\" (files/folders activities shown in the right panel when selecting a node).</p> <p>As they can grow indefinitely, this command can help for housekeeping and maintaining the activities database small.</p> <p>EXAMPLES</p> <p>Purge users notifications, keeping at least 5 and maximum 20 items per user: </p> <p>$ ./cells-enterprise admin clean activities --type users --box inbox -a admin --min 5 --max 20</p> <pre><code>./cells-enterprise admin clean activities [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-activities/#options","title":"Options","text":"<pre><code>  -a, --admin string     Provide login of the administrator user\n  -b, --box string       Either inbox (notifications received) or outbox (user activity / file activity) (default \"outbox\")\n      --clear            After DB compaction, remove original file, otherwise keep it as a backup\n      --compact          Trigger DB compaction by copying boltDB into a new file (default true)\n      --db string        Point directly to a DB file to perform the purge offline\n  -h, --help             help for activities\n      --max int          Clear by keeping a maximum number of records inside each box\n      --min int          Keep at least N, 0 for clearing all records (default 1)\n  -o, --owner string     Specific user or node ID, or all (default \"*\")\n      --timeout string   Set a longer timeout if there are tons of activities to purge (duration) (default \"6h\")\n  -t, --type string      Activity type, one of 'nodes' or 'users' (default \"nodes\")\n      --updated string   Clear by keeping all records updated before a given date. Use golang duration, e.g. '3d' will keep all records updated in the last 3 days and remove older entries.\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-activities/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-activities/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin clean  - Housekeeping commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-logs/","title":"cells-enterprise admin clean logs","text":"<p>Truncate log indexes to a given size</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-logs/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Appart from rotated log files, logs are indexed inside an on-file database for high-performance analysis and search.    These indexes are rotated (50MB size by default) and you can use this command to remove the oldest index files.    The most recent index will always be kept.   Specify the size threshold using bytes unit: 50MB, 5mb, 1GB, etc...</p> <p>EXAMPLES</p> <p>Truncate log indexes to 50MB : </p> <p>$ ./cells-enterprise admin clean logs --service=log --threshold=50MB</p> <pre><code>./cells-enterprise admin clean logs [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-logs/#options","title":"Options","text":"<pre><code>  -h, --help               help for logs\n  -s, --service string     Log service to truncate (use log by default) (default \"log\")\n  -t, --threshold string   Size of logs to keep, specify in bytes (e.g 50MB, 1GB, ...)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-logs/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-logs/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin clean  - Housekeeping commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-reset-jobs/","title":"cells-enterprise admin clean reset-jobs","text":"<p>Reset a job to its default</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-reset-jobs/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Display a list of all automatically inserted jobs and choose one to reset it to its factory default settings. </p> <p>This feature can be useful when a job requires an upgrade. Please ensure that the server is running. </p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin clean reset-jobs</p> <p>+----+----------------------+--------------------------------+   | #  |       SERVICE        |             LABEL              |   +----+----------------------+--------------------------------+   |  1 | pydio.grpc.jobs      | Extract image thumbnails and   |   |    |                      | Exif data                      |   |  2 | pydio.grpc.jobs      | Clean jobs and tasks in        |   |    |                      | scheduler                      |   |  3 | pydio.grpc.jobs      | Clean or transfer user data on |   |    |                      | deletion                       |   |  4 | pydio.grpc.jobs      | Clean orphan files after 24h   |   |  5 | pydio.grpc.jobs      | Clean expired ACLs after 10    |   |    |                      | days                           |   |  6 | pydio.grpc.versions  | Event Based Job for            |   |    |                      | replicating data for           |   |    |                      | versioning                     |   |  7 | pydio.grpc.activity  | Users activities digest        |   |  8 | pydio.grpc.mailer    | Flush Mails Queue              |   |  9 | pydio.grpc.oauth     | Prune revoked tokens and       |   |    |                      | expired reset password keys    |   +----+----------------------+--------------------------------+</p> <p>Select a job number to reset it in the scheduler: 9</p> <pre><code>./cells-enterprise admin clean reset-jobs [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-reset-jobs/#options","title":"Options","text":"<pre><code>  -h, --help   help for reset-jobs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-reset-jobs/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-reset-jobs/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin clean  - Housekeeping commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-resync/","title":"cells-enterprise admin clean resync","text":"<p>And a TriggerResync gRPC command to a service</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-resync/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>TriggerResync is a generic gRPC endpoint that can be implemented by various services to perform internal   clean-up or resynchronization.</p> <p>This can be currently used for datasources (see 'admin datasource' commands), search engine, logs (for truncating).   The \"path\" can be used by some services to read additional parameters.</p> <p>EXAMPLES</p> <p>To trigger the re-indexation of \"pydiods1\" datasource, target the \"sync\" service associated to the datasource : </p> <ol> <li> <p>Equivalent to \"admin datasource resync\" command:   $ ./cells-enterprise clean admin resync --service=pydio.grpc.data.sync.pydiods1 </p> </li> <li> <p>Re-index search engine:   $ ./cells-enterprise clean admin resync -s pydio.grpc.search</p> </li> <li> <p>Truncate logs to a given size (in bytes):   $ ./cells-enterprise clean admin resync --service=pydio.grpc.logs --path=TRUNCATE/200000</p> </li> </ol> <pre><code>./cells-enterprise admin clean resync [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-resync/#options","title":"Options","text":"<pre><code>  -h, --help             help for resync\n  -p, --path string      Can be used by some services to read additional parameters (default \"/\")\n  -s, --service string   If no datasource name is passed, use the complete service name to resync\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-resync/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-clean-resync/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin clean  - Housekeeping commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config/","title":"cells-enterprise admin config","text":"<p>Configuration manager</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set of commands providing programmatic access to stored configuration.</p> <pre><code>./cells-enterprise admin config [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config/#options","title":"Options","text":"<pre><code>  -h, --help   help for config\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin config check    - Check if a valid config is found</li> <li>./cells-enterprise admin config copy  - Copy configs between two stores</li> <li>./cells-enterprise admin config db  - Manage Database configuration</li> <li>./cells-enterprise admin config delete  - Delete a configuration item</li> <li>./cells-enterprise admin config history    - Show the history of all configuration changes</li> <li>./cells-enterprise admin config list  - List all configurations</li> <li>./cells-enterprise admin config set    - Store a configuration</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-check/","title":"cells-enterprise admin config check","text":"<p>Check if a valid config is found</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-check/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Use this command to automatically detect if config is already set and valid.    By default it points the URL provided by the global --config flag.   You can override this with the --conf to specify a config not currently used by Cells. </p> <p>EXAMPLE</p> <p>Check if an etcd config is prepared    $ ./cells-enterprise admin config check --config etcd://:2379/</p> <pre><code>./cells-enterprise admin config check [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-check/#options","title":"Options","text":"<pre><code>      --conf string   Alternative config URL (overrides global flag)\n  -h, --help          help for check\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-check/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-check/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config    - Configuration manager</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-copy/","title":"cells-enterprise admin config copy","text":"<p>Copy configs between two stores</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-copy/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Migrate all configurations from one store to another. </p> <p>SYNTAX</p> <p>Use configurations URLs schemes for --from and --to parameters.   If store supports versioning </p> <p>EXAMPLE</p> <p>Copy config from local config file to ETCD    $ ./cells-enterprise admin config copy --from file:/// --to etcd://:2379/ --type config</p> <pre><code>./cells-enterprise admin config copy [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-copy/#options","title":"Options","text":"<pre><code>      --from string   Config source\n  -h, --help          help for copy\n      --to string     Config target\n      --versions      If store supports versioning, copy all versions\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-copy/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-copy/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config    - Configuration manager</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db/","title":"cells-enterprise admin config db","text":"<p>Manage Database configuration</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage database configuration.   Each service can be configured to point to its own database. This command provides ways to manage databases.</p> <pre><code>./cells-enterprise admin config db [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db/#options","title":"Options","text":"<pre><code>  -h, --help   help for db\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config    - Configuration manager</li> <li>./cells-enterprise admin config db add  - Add a database connection to the configuration</li> <li>./cells-enterprise admin config db list    - List all database connections</li> <li>./cells-enterprise admin config db move    - Move service data from one database to another</li> <li>./cells-enterprise admin config db set  - Assign a database connection to a service</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-add/","title":"cells-enterprise admin config db add","text":"<p>Add a database connection to the configuration</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-add/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Add a new database connection to the configuration.   To assign the database connection to a service, you need to use the config database set command.</p> <pre><code>./cells-enterprise admin config db add [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-add/#options","title":"Options","text":"<pre><code>  -h, --help   help for add\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-add/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-add/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config db  - Manage Database configuration</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-list/","title":"cells-enterprise admin config db list","text":"<p>List all database connections</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-list/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List all database connections from all servers registered with cells.</p> <pre><code>./cells-enterprise admin config db list [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-list/#options","title":"Options","text":"<pre><code>  -h, --help   help for list\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-list/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-list/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config db  - Manage Database configuration</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-move/","title":"cells-enterprise admin config db move","text":"<p>Move service data from one database to another</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-move/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Migrate existing data to a new storage type</p> <pre><code>./cells-enterprise admin config db move [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-move/#options","title":"Options","text":"<pre><code>      --dry-run   Enable/disable dry-run mode (default true)\n  -h, --help      help for move\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-move/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-move/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config db  - Manage Database configuration</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-set/","title":"cells-enterprise admin config db set","text":"<p>Assign a database connection to a service</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-set/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Assign a different database connection to a service.    Use default to change to the default database.</p> <p>\u001b[33m\u26a0\u001b[0m  Note that the database data will not be transferred to the new database.</p> <pre><code>./cells-enterprise admin config db set [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-set/#options","title":"Options","text":"<pre><code>  -h, --help   help for set\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-set/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-db-set/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config db  - Manage Database configuration</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-delete/","title":"cells-enterprise admin config delete","text":"<p>Delete a configuration item</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Delete a configuration item. It will be removed from both the pydio.json file and the database.</p> <p>SYNTAX</p> <p>Configuration Item is represented by two parameters that you must pass as arguments:   - serviceName: name of the corresponding service   - configName: name of the parameter you want to delete</p> <p>EXAMPLE</p> <p>Delete the port entry for the micro.web service (rest api)   $ ./cells-enterprise admin config delete micro.web port</p> <pre><code>./cells-enterprise admin config delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-delete/#options","title":"Options","text":"<pre><code>  -h, --help   help for delete\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config    - Configuration manager</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-history/","title":"cells-enterprise admin config history","text":"<p>Show the history of all configuration changes</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-history/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>View all changes ever made to the configuration and revert to a given version if necessary.</p> <p>A version is created at each call to config.Save() inside the application, along with a log message   and the user originating this call.</p> <pre><code>./cells-enterprise admin config history [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-history/#options","title":"Options","text":"<pre><code>      --cat string       Print the JSON content of the config for this version\n      --diff string      Display a Diff between two versions, either by providing VERSION1:VERSION2 or just VERSION1 (will be compared to previous one)\n      --file string      Point to a specific DB file instead of default\n  -h, --help             help for history\n      --limit int        Limit number of records shown (default 20)\n      --offset int       List history starting after a given number of records\n      --restore string   Restore configuration to this specific version\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-history/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-history/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config    - Configuration manager</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-list/","title":"cells-enterprise admin config list","text":"<p>List all configurations</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-list/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Display all configuration items registered by the application.   Configuration items are listed as truple [serviceName, configName, configValue]. The configuration value is json encoded.</p> <pre><code>./cells-enterprise admin config list [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-list/#options","title":"Options","text":"<pre><code>  -h, --help   help for list\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-list/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-list/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config    - Configuration manager</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-set/","title":"cells-enterprise admin config set","text":"<p>Store a configuration</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-set/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Store a configuration item in both the pydio.json file and in the database.</p> <p>SYNTAX</p> <p>Configuration items are represented by three parameters passed as arguments:   - serviceName: name of the corresponding service   - configName: name of the parameter   - configValue: json-encoded value of the parameter you want to set/change</p> <p>EXAMPLES</p> <p>Change the port of micro.web service (rest api)   $ ./cells-enterprise admin config set micro.web port 8083</p> <p>Json parameter value   $ ./cells-enterprise admin config set pydio.grpc.yourservice configName '{\"key\":\"value\"}'</p> <pre><code>./cells-enterprise admin config set [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-set/#options","title":"Options","text":"<pre><code>  -h, --help   help for set\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-set/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-config-set/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin config    - Configuration manager</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource/","title":"cells-enterprise admin datasource","text":"<p>Datasource management commands</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource/#synopsis","title":"Synopsis","text":"<p>Collection of tools for manipulating datasources.</p> <pre><code>./cells-enterprise admin datasource [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource/#options","title":"Options","text":"<pre><code>  -h, --help   help for datasource\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin datasource capture    - Capture index and objects into JSON or BoltDB format for sync debugging purposes</li> <li>./cells-enterprise admin datasource migrate    - Migrate a datasource format (flat or structured)</li> <li>./cells-enterprise admin datasource rehash  - Recompute all files hashes inside a given datasource</li> <li>./cells-enterprise admin datasource resync  - Trigger resync for a structured datasource</li> <li>./cells-enterprise admin datasource rethumb    - Find and compute missing thumbnails for images</li> <li>./cells-enterprise admin datasource snapshot  - Dump/Load snapshot of the index for a flat datasource</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-capture/","title":"cells-enterprise admin datasource capture","text":"<p>Capture index and objects into JSON or BoltDB format for sync debugging purposes</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-capture/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Sometimes a subtle glitch may break structured datasources resynchronization, and for debugging purpose   it can be handy to capture both the \"left\" and \"right\" endpoints, namely the sql index and the s3 storage listing.</p> <p>EXAMPLES</p> <ol> <li>Capture datasource pydiods1 into a given location   $ ./cells-enterprise admin datasource capture --datasource=pydiods1 --target=/path/to/folder --format=bolt</li> </ol> <pre><code>./cells-enterprise admin datasource capture [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-capture/#options","title":"Options","text":"<pre><code>  -d, --datasource string   Name of datasource to capture\n  -f, --format string       One of bolt|json storage, bolt by default (default \"bolt\")\n  -h, --help                help for capture\n      --load-pydio-uuids    If side is providing content, load content as metadata when reading a '.pydio' node\n  -s, --sides string        Capture both sides, can be restricted by specifying s3 or index. (default \"both\")\n  -t, --target string       Target folder where to store the snapshots\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-capture/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-capture/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin datasource    - Datasource management commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-migrate/","title":"cells-enterprise admin datasource migrate","text":"<p>Migrate a datasource format (flat or structured)</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-migrate/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Migrate the content of a bucket between structured and flat. It can be used in both directions. It must be run with in    a specific context: datasource services must be running expect for the sync services. You can start Cells in this    specific mode by using the following command: ./cells-enterprise start -x pydio.grpc.data.sync</p> <p>The command executes the following actions:   - List datasources showing their current formats. When picking a datasource, it is assumed it will be migrated to the      opposite format   - Detect datasource bucket name and expect to find an second bucket named \"bucket-flat\" or \"bucket-structured\"      (depending on the target format).   - Copy all files inside the new bucket, with their new name   - If everything is ok, patch index database to add or remove .pydio hidden files (depending on target format)   - Finally, update the datasource configuration in the configs.</p> <p>Use --dry-run parameter to display only the list of rename operations that will be performed, without touching DB or    configuration.</p> <p>By default, files are copied inside the new bucket and are left untouched inside the original one in case something    goes wrong. That means that your storage must have enough room for duplicating all data. If it's not the case, you can    pass the --move-files flag to delete original file after copy. You can also force the copy to be performed in-place by    manually editing target bucket name to its original value.</p> <pre><code>./cells-enterprise admin datasource migrate [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-migrate/#options","title":"Options","text":"<pre><code>  -d, --dry-run      Do not apply any changes\n  -f, --force        Skip initial warning\n  -h, --help         help for migrate\n  -m, --move-files   Delete original files after copying to new bucket\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-migrate/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-migrate/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin datasource    - Datasource management commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rehash/","title":"cells-enterprise admin datasource rehash","text":"<p>Recompute all files hashes inside a given datasource</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rehash/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Look up for files where x-cells-hash is missing and recompute them. This operation is launched in scheduler and can take   some time (and CPU).</p> <p>EXAMPLES</p> <ol> <li> <p>To trigger the rehashing of \"pydiods1\" datasource:   $ ./cells-enterprise admin datasource rehash --datasource=pydiods1</p> </li> <li> <p>Process only the folder/subfolder data :   $ ./cells-enterprise admin datasource rehash --datasource=pydiods1 --path=folder/subfolder</p> </li> </ol> <pre><code>./cells-enterprise admin datasource rehash [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rehash/#options","title":"Options","text":"<pre><code>  -c, --concurrency int     Maximum concurrency for computing files hashes (default 10)\n  -d, --datasource string   Name of datasource to process (default \"pydiods1\")\n  -f, --force               Force recomputing hash if it already exists\n  -h, --help                help for rehash\n  -p, --path string         Restrict operation to a specific folder\n  -t, --timeout string      Maximum job duration (default \"30m\")\n  -u, --username string     Username under which the job will be executed (generally admin)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rehash/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rehash/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin datasource    - Datasource management commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-resync/","title":"cells-enterprise admin datasource resync","text":"<p>Trigger resync for a structured datasource</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-resync/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Trigger the re-indexation of a datasource. This is only applicable to structured datasource.</p> <p>EXAMPLES</p> <p>To trigger the re-indexation of \"pydiods1\" datasource, target the \"sync\" service associated to the datasource: </p> <p>$ ./cells-enterprise admin datasource resync --datasource=pydiods1</p> <pre><code>./cells-enterprise admin datasource resync [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-resync/#options","title":"Options","text":"<pre><code>  -d, --datasource string   Name of datasource to resynchronize\n  -h, --help                help for resync\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-resync/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-resync/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin datasource    - Datasource management commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rethumb/","title":"cells-enterprise admin datasource rethumb","text":"<p>Find and compute missing thumbnails for images</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rethumb/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Look up for files where x-cells-hash is missing and recompute them. This operation is launched in scheduler and can take   some time (and CPU).</p> <p>EXAMPLES</p> <ol> <li> <p>To trigger the rethumbing of \"pydiods1\" datasource:   $ ./cells-enterprise admin datasource rethumb --datasource=pydiods1</p> </li> <li> <p>Process only the folder/subfolder data :   $ ./cells-enterprise admin datasource rethumb --datasource=pydiods1 --path=folder/subfolder</p> </li> </ol> <pre><code>./cells-enterprise admin datasource rethumb [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rethumb/#options","title":"Options","text":"<pre><code>  -c, --concurrency int     Maximum concurrency for computing files hashes (default 10)\n  -d, --datasource string   Name of datasource to process (default \"pydiods1\")\n  -h, --help                help for rethumb\n  -t, --timeout string      Maximum job duration (default \"30m\")\n  -u, --username string     Username under which the job will be executed (generally admin)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rethumb/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-rethumb/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin datasource    - Datasource management commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-snapshot/","title":"cells-enterprise admin datasource snapshot","text":"<p>Dump/Load snapshot of the index for a flat datasource</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-snapshot/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>For flat format datasources, files are stored horizontally with UUID as their names inside the storage.    The associated tree structure (files and folders) is maintained in the Cells database only.   For backup/restore operations, it can be useful to regularly dump a snapshot of this tree structure inside a    particular file inside the storage, which can be later used  to reload data on a clean installation.</p> <p>This command allows to dump/load the index on-file.</p> <p>EXAMPLES</p> <ol> <li> <p>Dump database index inside a snapshot.db file inside the datasource storage:   $ ./cells-enterprise admin datasource snapshot --datasource=pydiods1 --operation=dump --basename=snapshot.db</p> </li> <li> <p>Reload database index from a snapshot.db file located inside the datasource storage:   $ ./cells-enterprise admin datasource snapshot --datasource=pydiods1 --operation=load --basename=snapshot.db</p> </li> <li> <p>Remove a known snapshot.db file from datasource storage:   $ ./cells-enterprise admin datasource snapshot --datasource=pydiods1 --operation=delete --basename=snapshot.db</p> </li> </ol> <pre><code>./cells-enterprise admin datasource snapshot [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-snapshot/#options","title":"Options","text":"<pre><code>  -b, --basename string     Basename of the snapshot file inside the datasource storage bucket (default \"snapshot.db\")\n  -d, --datasource string   Name of datasource to resynchronize\n  -f, --force               Force operation, skip confirmation prompts\n  -h, --help                help for snapshot\n  -o, --operation string    One of [dump|load|delete] to either dump index, reload an existing snapshot, or remove a snapshot (default \"dump\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-snapshot/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-datasource-snapshot/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin datasource    - Datasource management commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file/","title":"cells-enterprise admin file","text":"<p>Directly manage files and metadata on the nodes</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage metadata linked to nodes.   Metadata are stored as simple key/values and attached to a node UUID.</p> <pre><code>./cells-enterprise admin file [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file/#options","title":"Options","text":"<pre><code>  -h, --help   help for file\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin file create-bench  - Create an arbitrary number of random files in a directory</li> <li>./cells-enterprise admin file ls  - List files</li> <li>./cells-enterprise admin file meta-put  - Create or update a metadata entry for a node</li> <li>./cells-enterprise admin file meta-read    - Display existing metadata for a given node</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-create-bench/","title":"cells-enterprise admin file create-bench","text":"<p>Create an arbitrary number of random files in a directory</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-create-bench/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create an arbitrary number of random files in a directory.   Provide --number, --path and --user parameters to perform this action.</p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin file create-bench -n=100 -p=pydiods1/sandbox -u=admin</p> <pre><code>./cells-enterprise admin file create-bench [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-create-bench/#options","title":"Options","text":"<pre><code>  -h, --help          help for create-bench\n  -n, --number int    Number of files to create\n  -p, --path string   Path where to create the files (default \"pydiods1\")\n  -u, --user string   Username used to impersonate creation (default \"admin\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-create-bench/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-create-bench/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin file    - Directly manage files and metadata on the nodes</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-ls/","title":"cells-enterprise admin file ls","text":"<p>List files</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-ls/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List Nodes by querying the tree microservice. Paths are computed starting from the root, their first segment is always   a datasource name.</p> <p>EXAMPLE</p> <p>List all files at the root of the \"Common Files\" workspace</p> <p>$ ./cells-enterprise admin file ls --path pydiods1 --uuid     +--------+---------------+--------------------------------------+--------+-----------------+     |  TYPE  |     PATH      |                 UUID                 |  SIZE  |    MODIFIED     |     +--------+---------------+--------------------------------------+--------+-----------------+     | Folder | Shared Folder | dcabadd0-7d32-4e45-9d1f-a927d3d0c174 | 147 MB | 21 Oct 21 08:58 |     +--------+---------------+--------------------------------------+--------+-----------------+</p> <pre><code>./cells-enterprise admin file ls [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-ls/#options","title":"Options","text":"<pre><code>  -u, --by-uuid string   Find a node by its UUID\n  -h, --help             help for ls\n      --hidden           Show hidden files (.pydio)\n  -l, --limit int        Max. number of returned rows, 0 for unlimited (default 100)\n  -o, --offset int       Add an offset to the query when necessary\n  -p, --path string      List nodes under given path (default \"/\")\n      --recursive        List nodes recursively\n      --uuid             Show UUIDs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-ls/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-ls/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin file    - Directly manage files and metadata on the nodes</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-put/","title":"cells-enterprise admin file meta-put","text":"<p>Create or update a metadata entry for a node</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-put/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create or update a metadata entry for a node.   For a given node UUID, metadata are key/values of string/json-encoded strings.</p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin file meta-put --uuid=NODE_UUID --key=metaname --value='{\"key\":\"value\"}'</p> <pre><code>./cells-enterprise admin file meta-put [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-put/#options","title":"Options","text":"<pre><code>  -h, --help           help for meta-put\n  -k, --key string     Name of the metadata\n  -u, --uuid string    UUID of the node to update\n  -v, --value string   *JSON-encoded* string representing the value. Strings must be quoted, eg. '\"custom-value\"'\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-put/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-put/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin file    - Directly manage files and metadata on the nodes</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-read/","title":"cells-enterprise admin file meta-read","text":"<p>Display existing metadata for a given node</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-read/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Display existing metadata for a given node.</p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin file meta-read --uuid=244f072d-d9a1-11e7-950b-685b35ac60e5   returns:      +-------------------------------+--------------------------------------------------------------------------+     |             NAME              |                                 VALUE                                    |     +-------------------------------+--------------------------------------------------------------------------+     | pydio:meta-data-source-name   | \"pydiods1\"                                                               |     | ImageDimensions               | {\"Height\":200,\"Width\":200}                                               |     | is_image                      | true                                                                     |     | readable_dimension            | \"200px X 200px\"                                                          |     | pydio:meta-data-source-path   | \"download.png\"                                                           |     | pydio:meta-object-service-url | \"127.0.0.1:9001/pydiods1\"                                                |     | ImageThumbnails               | {\"Processing\":false,\"thumbnails\":[{\"format\":\"jpg\",\"size\":256,\"url\":\"\"}]} |     | image_width                   | 200                                                                      |     | name                          | \"download.png\"                                                           |     | image_height                  | 200                                                                      |     +-------------------------------+--------------------------------------------------------------------------+</p> <pre><code>./cells-enterprise admin file meta-read [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-read/#options","title":"Options","text":"<pre><code>  -h, --help          help for meta-read\n  -u, --uuid string   UUID of the node\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-read/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-file-meta-read/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin file    - Directly manage files and metadata on the nodes</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs/","title":"cells-enterprise admin jobs","text":"<p>Group job-related commands</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Commands for managing some jobs in the scheduler.</p> <pre><code>./cells-enterprise admin jobs [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs/#options","title":"Options","text":"<pre><code>  -h, --help   help for jobs\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin jobs templates    - Generate docs for job templates</li> <li>./cells-enterprise admin jobs unlock-public    - Unlock password-protected links that may have been blocked by wrong password</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-templates/","title":"cells-enterprise admin jobs templates","text":"<p>Generate docs for job templates</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-templates/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>This tool generates documentation for Cells Flows default template Jobs (in MD+Yaml format)</p> <pre><code>./cells-enterprise admin jobs templates [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-templates/#options","title":"Options","text":"<pre><code>  -h, --help                 help for templates\n      --menu-folder string   Write MD+YAML documentations inside target folder\n      --menu-name string     Write MD+YAML documentations using target menu_name tag (default \"menu-admin-guide-v6-enterprise\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-templates/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-templates/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin jobs    - Group job-related commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-unlock-public/","title":"cells-enterprise admin jobs unlock-public","text":"<p>Unlock password-protected links that may have been blocked by wrong password</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-unlock-public/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Launch a dedicated job to list 'hidden' users (that are automatically associated to public links) and unlock them if   they are locked.</p> <p>This may be the result of password-protected links being brute-forced with wrong credentials attempts.</p> <pre><code>./cells-enterprise admin jobs unlock-public [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-unlock-public/#options","title":"Options","text":"<pre><code>  -a, --admin_user string   Administrative user login for running job in scheduler\n  -h, --help                help for unlock-public\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-unlock-public/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-jobs-unlock-public/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin jobs    - Group job-related commands</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license/","title":"cells-enterprise admin license","text":"<p>Manage Cells Enterprise license</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Read statistics and manage license key</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license/#options","title":"Options","text":"<pre><code>  -h, --help   help for license\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin license stats  - Load current license statistics</li> <li>./cells-enterprise admin license update    - Update enterprise license</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-stats/","title":"cells-enterprise admin license stats","text":"<p>Load current license statistics</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-stats/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Query running Cells instance to load license statistics. Without arguments, it will output license statistics</p> <p>TEMPLATING</p> <p>Using the --format flag allows you to create your own output using Golang templating.    Input data is    {     ActiveUsers:int     MaxUsers:int     UsersPercent:int     ExpireTime:timestamp     ExpireDate:string     ExpireIn:seconds   }   You can for example display a simple percentage using {{.UsersPercent}}% template.</p> <p>You can use conditions to return an error signal (1) for special cases, by printing the specific ERROR_CODE keyword.</p> <p>For example:</p> <ol> <li> <p>Return error if users usage is greater than 90%   $ ./cells-enterprise admin license-stats --format=\"{{if gt .UsersPercent 90}}ERROR_CODE{{end}}\"</p> </li> <li> <p>Return error if license will expire in less than 3 days (518400 seconds)   $ ./cells-enterprise admin license-stats --format=\"{{if lt .ExpireIn 518400}}ERROR_CODE{{end}}\"</p> </li> </ol> <pre><code>./cells-enterprise admin license stats [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-stats/#options","title":"Options","text":"<pre><code>  -f, --format string   Use golang template to compute your own output\n  -h, --help            help for stats\n  -r, --refresh         Force users computation to be refresh, this can take some time\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-stats/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-stats/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin license  - Manage Cells Enterprise license</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-update/","title":"cells-enterprise admin license update","text":"<p>Update enterprise license</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-update/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>This command allows you to update Cells Enterprise license key</p> <pre><code>./cells-enterprise admin license update [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-update/#options","title":"Options","text":"<pre><code>  -h, --help   help for update\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-update/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-license-update/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin license  - Manage Cells Enterprise license</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user/","title":"cells-enterprise admin user","text":"<p>Manage users</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage users from the command line by calling the dedicated services.</p> <pre><code>./cells-enterprise admin user [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user/#options","title":"Options","text":"<pre><code>  -h, --help   help for user\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin  - Direct Read/Write access to Cells data</li> <li>./cells-enterprise admin user create  - Create a user</li> <li>./cells-enterprise admin user delete  - Delete a user</li> <li>./cells-enterprise admin user search  - List all users or search them by login</li> <li>./cells-enterprise admin user set-profile    - Set profile</li> <li>./cells-enterprise admin user set-pwd    - Change user password</li> <li>./cells-enterprise admin user token    - Generate a personal token for a user</li> <li>./cells-enterprise admin user unlock  - Unlock User</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-create/","title":"cells-enterprise admin user create","text":"<p>Create a user</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-create/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Create a new user.</p> <p>Please, note that the login is case sensitive. You can create 2 distinct users with login 'User' and 'user'.    You can also create a user in a given group by entering a full path (see examples below). </p> <p>If not provided with the -p flag, password is prompted by the command line.</p> <p>EXAMPLES</p> <ol> <li> <p>Create a user with a password   $ ./cells-enterprise admin user create -u 'user' -p 'a password'</p> </li> <li> <p>Create a user with a prompt for password   $ ./cells-enterprise admin user create -u 'user'</p> </li> <li> <p>Create a user inside a group   $ ./cells-enterprise admin user create -u \"/group/user\" -p \"new-password\"</p> </li> </ol> <pre><code>./cells-enterprise admin user create [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-create/#options","title":"Options","text":"<pre><code>  -h, --help              help for create\n  -p, --password string   Password of the new user\n  -u, --username string   Login of the new user\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-create/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-create/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-delete/","title":"cells-enterprise admin user delete","text":"<p>Delete a user</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Delete a user.</p> <p>WARNING Policy checks are not yet implemented for the CLI.    You might corrupt your existing user and group repository,   So please use with extra care. Also, remember that login are case sensitive. </p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin user delete -u '' <pre><code>./cells-enterprise admin user delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-delete/#options","title":"Options","text":"<pre><code>  -h, --help              help for delete\n  -u, --username string   Login(s) of the group(s) or user(s) to delete\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-search/","title":"cells-enterprise admin user search","text":"<p>List all users or search them by login</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-search/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List users stored in the Pydio Cells user repository.</p> <p>EXAMPLES</p> <ol> <li> <p>Search a specific user   $ ./cells-enterprise admin user search --user \"alice\"</p> </li> <li> <p>List all users (default --user is \"*\")    $ ./cells-enterprise admin user search</p> </li> <li> <p>List users with a pattern    $ ./cells-enterprise admin user search -u \"a*\"</p> </li> </ol> <pre><code>./cells-enterprise admin user search [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-search/#options","title":"Options","text":"<pre><code>  -h, --help          help for search\n  -l, --limit int     Max. number of returned rows, 0 for unlimited (default 100)\n  -o, --offset int    Add an offset to the query when necessary\n  -u, --user string   Select a user by login (list all users and groups if empty)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-search/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-search/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-profile/","title":"cells-enterprise admin user set-profile","text":"<p>Set profile</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-profile/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set a user profile.</p> <p>Valid profiles are one of: admin, standard, shared or anon.   Installation specific profiles are not yet supported by this CLI.</p> <p>WARNING: please remember that user with admin profile have full control over your app via the web front end:    think twice before giving this profile to an existing user.</p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin user set-profile -u 'USER_LOGIN' --profile 'standard'</p> <pre><code>./cells-enterprise admin user set-profile [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-profile/#options","title":"Options","text":"<pre><code>  -h, --help              help for set-profile\n  -p, --profile string    New profile\n  -u, --username string   Login of the user to update\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-profile/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-profile/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-pwd/","title":"cells-enterprise admin user set-pwd","text":"<p>Change user password</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-pwd/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Set the password of a given user.    Directly use --password (or -p) to provide a new password, or leave empty to be prompted.</p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin user set-pwd -u 'USER_LOGIN' -p 'NEW_PASSWORD'</p> <pre><code>./cells-enterprise admin user set-pwd [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-pwd/#options","title":"Options","text":"<pre><code>  -h, --help              help for set-pwd\n  -p, --password string   New password\n  -u, --username string   Login of the user to update\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-pwd/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-set-pwd/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-token/","title":"cells-enterprise admin user token","text":"<p>Generate a personal token for a user</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-token/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Generate a personal authentication token for a user.    Expiration can be set in two ways:     + A hard limit, by using the -e flag (duration)     + A sliding window by using the -a flag (duration): in that case the token expiration will be refreshed each time       the token is used (e.g a request using this token is received).</p> <p>EXAMPLES</p> <p>Generate a token that lasts 24 hours for user admin   $ ./cells-enterprise admin user token -u admin -e 24h</p> <p>Generate a token that lasts by default 10mn, but which expiration is refreshed to the next 10mn each time    the token is used.   $ ./cells-enterprise admin user token -u admin -a 10m</p> <p>TOKEN USAGE</p> <p>These token can be used in replacement of an OAuth2-based access token: they can replace the \"Bearer\" access    token when calling any REST API. They can also be used as the password (in conjunction with username) for all    basic-auth based APIs (e.g. webDAV).</p> <p>TOKEN SCOPE</p> <p>By default, generated tokens grant the same level of access as a standard login operation. To improve security,    it is possible to restrict these accesses to a specific file or folder (given it is accessible by the user in    first place) with a \"scope\" in the format \"node:NODE_UUID:PERMISSION\" where PERMISSION string contains either \"r\"   (read) or \"w\" (write) or both.</p> <pre><code>./cells-enterprise admin user token [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-token/#options","title":"Options","text":"<pre><code>  -a, --auto string     Auto-refresh expiration when token is used. Format is 20u where u is a unit: s (second), m (minute), h (hour), d(day).\n  -e, --expire string   Expire after duration. Format is 20u where u is a unit: s (second), m (minute), h (hour), d(day).\n  -h, --help            help for token\n  -q, --quiet           Only return the newly created token value (typically useful in automation scripts with a short expiry time)\n  -s, --scope strings   Optional scopes\n  -u, --user string     User login (mandatory)\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-token/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-token/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-unlock/","title":"cells-enterprise admin user unlock","text":"<p>Unlock User</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-unlock/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Unlock a given user.   This may be handy if admin is locked out of the interface.</p> <p>EXAMPLE</p> <p>$ ./cells-enterprise admin user unlock -u LOGIN</p> <pre><code>./cells-enterprise admin user unlock [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-unlock/#options","title":"Options","text":"<pre><code>  -h, --help              help for unlock\n  -u, --username string   Login of the user to unlock\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-unlock/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --advertise_address string     Default advertise address (default \"127.0.0.1\")\n      --broker string                Pub/sub service for events between services (default \"grpc://:8030\")\n      --config string                Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n      --discovery string             Registry and pub/sub (default \"grpc://:8030\")\n      --grpc_client_timeout string   Default timeout for long-running GRPC calls, expressed as a golang duration (default \"60m\")\n      --registry string              Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-admin-user-unlock/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise admin user    - Manage users</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure/","title":"cells-enterprise configure","text":"<p>Setup required configurations</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Launch the configuration process of Pydio Cells.</p> <p>REQUIREMENTS</p> <p>You must have an available MySQL database, along with a privileged user (for instance 'pydio').   Supported databases are:    - MariaDB version 10.3 and above,    - MySQL version 5.7 and above (except 8.0.22 that has a bug preventing Cells to run correctly).</p> <p>As recommended by database documentation, tune the 'max_connections' parameter to a value in line   with your production database server specifications. For reference, the default value of 151 will have a    maximum memory usage of about 575MB, but will not scale up for a multiple users load in production.</p> <p>BROWSER-BASED INSTALLER</p> <p>If you are on a desktop machine, pick browser-based installation at first prompt, or you can force it with:   $ ./cells-enterprise configure --bind default</p> <p>The installer opens a web page on port 8080 with a wizard for you to provide various configuration parameters,    including DB connection info and the login/password of the main administrator.</p> <p>In case where default port is busy, you can choose another one via the 'bind' flag, for instance:   $ ./cells-enterprise configure --bind 0.0.0.0:12345   or    $ ./cells-enterprise configure --bind :12345 <p>After browser configuration, all microservices are started automatically and you can directly start using Cells.    It is yet good practice to stop the installer and restart Cells in normal mode before going live.</p> <p>COMMAND-LINE INSTALLER</p> <p>If you are more a shell person, you can perform the configuration process directly using this CLI (using the '--cli'    flag or by choosing so at first prompt). You will then be able to choose to either use the default bindings for the    embedded webserver or adapt these to your specific setup.</p> <p>You can always reconfigure the webserver bindings afterwards by calling this command:   $ ./cells-enterprise configure sites   See corresponding inline documentation for further details.</p> <p>AUTOMATED PROVISIONING</p> <p>For automated, non-interactive installation, you can pass a YAML or a JSON config file that contains all necessary    information, please refer to the documentation on https://pydio.com</p> <p>ENVIRONMENT</p> <p>All the command flags documented below are mapped to their associated ENV var using upper case and CELLS_ prefix.   For example :   $ ./cells-enterprise configure --bind :9876   is equivalent to    $ export CELLS_BIND=\":9876\"; ./cells-enterprise configure</p> <p>For backward compatibility reasons, the --cli, --yaml and --json flags do not respect the above rule (this might evolve in a future version).   They are respectively equivalent to CELLS_INSTALL_CLI, CELLS_INSTALL_YAML and CELLS_INSTALL_JSON ENV vars.</p> <pre><code>./cells-enterprise configure [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure/#options","title":"Options","text":"<pre><code>      --bind_address string         Address on which servers will bind. Binding port depends on the server type (grpc, http, etc). (default \"127.0.0.1\")\n      --cli                         Do not prompt for install mode, use CLI mode by default\n      --exit_after_install          Simply exits main process after the installation is done\n  -h, --help                        help for configure\n      --json string                 Points toward a configuration in JSON format\n      --site_bind string            [Site] The 'site_' flags suite overrides config-defined sites. Bind is the site binding address IP|DOMAIN:PORT (default 0.0.0.0:8080)\n      --site_external string        [Site] External full URL http[s]://IP|DOMAIN[:PORT] exposed to the outside\n      --site_le_agree               [Site] Accept Let's Encrypt EULA\n      --site_le_email string        [Site] Set email to enable Let's Encrypt automatic TLS configuration\n      --site_le_staging             [Site] Use Let's Encrypt staging CA instead of production to avoid being banned on misconfiguration.\n      --site_no_tls                 [Site] Use plain HTTP (default false, use self-signed)\n      --site_tls_cert_file string   [Site] Path to custom TLS certificate file\n      --site_tls_key_file string    [Site] Path to custom TLS key file\n      --yaml string                 Points toward a configuration in YAML format\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise  - Secure File Sharing for business</li> <li>./cells-enterprise configure sites  - Manage site addresses</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites/","title":"cells-enterprise configure sites","text":"<p>Manage site addresses</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Manage how Cells is binding to the localhost's network interface addresses and accepting traffic coming from external URLs.   This is the main tool for listing, editing, adding and removing sites. Additional sub-commands allow you to directly create or delete sites.</p> <p>Each site has following parameters:    1. : one or more  to bind Cells to localhost's network interface addresses.     2. : TLS configuration for HTTPS support.    3. : Accept traffic coming from this url and redirect to one of the bind address.       Typically if the app is behind a reverse proxy or inside a container with ports mapping.    4.  [On|Off]: expose a maintenance page on this endpoint, although Cells is running. <p>EXAMPLES </p> <ol> <li> <p>Default value (used when no sites is configured)</p> <ul> <li>Bind Address: 0.0.0.0:8080</li> <li>TLS: SelfSigned</li> <li>External URL: [left empty]</li> </ul> </li> <li> <p>Provided certificate</p> <ul> <li>Bind Address: 0.0.0.0:8080</li> <li>TLS: Your own key/cert pair</li> <li>External URL: https://share.mydomain.tld</li> </ul> </li> <li> <p>Auto-TLS using Let's Encrypt </p> <ul> <li>Bind Address: share.mydomain.tld:443</li> <li>TLS: LetsEncrypt</li> <li>External URL: https://share.mydomain.tld</li> </ul> </li> <li> <p>Self-signed</p> <ul> <li>Bind Address: IP:1515         # internal port</li> <li>TLS: Self-signed</li> <li>External URL: https://IP:8080   # external port mapped by docker</li> </ul> </li> <li> <p>HTTP only</p> <ul> <li>Bind Address: localhost:8080</li> <li>TLS: Disabled</li> <li>External URL: http://localhost:8080  # Non-secured local installation</li> </ul> </li> </ol> <pre><code>./cells-enterprise configure sites [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites/#options","title":"Options","text":"<pre><code>  -h, --help   help for sites\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise configure  - Setup required configurations</li> <li>./cells-enterprise configure sites add  - Add a site</li> <li>./cells-enterprise configure sites delete    - Remove a site by its index</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-add/","title":"cells-enterprise configure sites add","text":"<p>Add a site</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-add/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Add a site for binding Cells to another address.   See 'sites' command help for more info about Sites management.</p> <pre><code>./cells-enterprise configure sites add [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-add/#options","title":"Options","text":"<pre><code>  -h, --help   help for add\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-add/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-add/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise configure sites  - Manage site addresses</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-delete/","title":"cells-enterprise configure sites delete","text":"<p>Remove a site by its index</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-delete/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Remove a site binding Cells to an address, by providing its index.   See 'sites' command help for more info about Sites management.</p> <pre><code>./cells-enterprise configure sites delete [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-delete/#options","title":"Options","text":"<pre><code>  -h, --help   help for delete\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-delete/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-configure-sites-delete/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise configure sites  - Manage site addresses</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl/","title":"cells-enterprise ctl","text":"<p>Explore all registered items in registry and configuration.</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>This command connects to a Registry to list active items currently registered with their metadata. It can also display   all configuration stored inside the config store.</p> <p>Item types are one of the following :      - Nodes     - Services     - Servers     - DAOs     - Addresses     - Endpoints     - Tags     - Stats</p> <pre><code>./cells-enterprise ctl [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl/#options","title":"Options","text":"<pre><code>      --advertise_address string   Default advertise address (default \"127.0.0.1\")\n      --broker string              Pub/sub service for events between services (default \"grpc://:8030\")\n      --discovery string           Registry and pub/sub (default \"grpc://:8030\")\n  -h, --help                       help for ctl\n      --registry string            Registry used to contact services (default \"grpc://:8030\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise  - Secure File Sharing for business</li> <li>./cells-enterprise ctl service-level  - Update log level for a given service</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl-service-level/","title":"cells-enterprise ctl service-level","text":"<p>Update log level for a given service</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl-service-level/#synopsis","title":"Synopsis","text":"<pre><code>./cells-enterprise ctl service-level [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl-service-level/#options","title":"Options","text":"<pre><code>      --advertise_address string   Default advertise address (default \"127.0.0.1\")\n      --broker string              Pub/sub service for events between services (default \"grpc://:8030\")\n      --discovery string           Registry and pub/sub (default \"grpc://:8030\")\n  -e, --enable                     Switch debug mode on for specified services (default) (default true)\n  -h, --help                       help for service-level\n      --registry string            Registry used to contact services (default \"grpc://:8030\")\n  -r, --reset                      Reset all registered values\n  -s, --services strings           Set specific services in debug mode. Use RegExp or the 'empty' key for logs without context\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl-service-level/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-ctl-service-level/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise ctl  - Explore all registered items in registry and configuration.</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-start/","title":"cells-enterprise start","text":"<p>Start one or more services</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-start/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Start one or more services on this machine.    $ ./cells-enterprise start [flags] args...</p> <p>No arguments will start all services available (see 'ps' command).    - Select specific services with regular expressions in the additional arguments.     - The -t/--tags flag may limit to only a certain category of services (see usage below)    - The -x/--exclude flag may exclude one or more services   All these may be used in conjunction (-t, -x, regexp arguments).</p> <p>REQUIREMENTS</p> <p>Ulimit: set a number of allowed open files greater or equal to 2048.   For production use, a minimum of 8192 is recommended (see ulimit -n).</p> <p>Setcap: if you intend to bind the server to standard http ports (80, 443),    you must grant necessary permissions on cells binary with this command:   $ sudo setcap 'cap_net_bind_service=+ep'  <p>EXAMPLES</p> <ol> <li> <p>Start all Cells services   $ ./cells-enterprise start</p> </li> <li> <p>Start all services whose name starts with pydio.grpc   $ ./cells-enterprise start pydio.grpc</p> </li> <li> <p>Start only services for scheduler   $ ./cells-enterprise start --tag=scheduler</p> </li> <li> <p>Start whole plateform except the roles service   $ ./cells-enterprise start --exclude=pydio.grpc.idm.role</p> </li> </ol> <p>ENVIRONMENT</p> <ol> <li>Flag mapping</li> </ol> <p>All the command flags documented below are mapped to their associated ENV var, using upper case and CELLS_ prefix.   For example :   $ ./cells-enterprise start --grpc_port 54545   is equivalent to    $ export CELLS_GRPC_PORT=54545; ./cells-enterprise start</p> <ol> <li> <p>Working Directories </p> </li> <li> <p>CELLS_WORKING_DIR: replace the whole standard application dir</p> </li> <li>CELLS_DATA_DIR: replace the location for storing default datasources (default CELLS_WORKING_DIR/data)</li> <li>CELLS_LOG_DIR: replace the location for storing logs (default CELLS_WORKING_DIR/logs)</li> <li> <p>CELLS_SERVICES_DIR: replace location for services-specific data (default CELLS_WORKING_DIR/services)</p> </li> <li> <p>Timeouts, limits, proxies</p> </li> <li> <p>CELLS_SQL_DEFAULT_CONN, CELLS_SQL_LONG_CONN: timeouts used for SQL queries. Use a golang duration (10s, 1m, etc). Defaults are respectively 30 seconds and 10 minutes.</p> </li> <li>CELLS_CACHES_HARD_LIMIT: maximum memory limit used by internal caches (in MB, default is 8). This is a per/cache limit, not global.</li> <li>CELLS_UPDATE_HTTP_PROXY: if your server uses a client proxy to access outside world, this can be set to query update server.</li> <li> <p>HTTP_PROXY, HTTPS_PROXY, NO_PROXY: golang-specific environment variables to configure a client proxy for all external http calls.</p> </li> <li> <p>Other environment variables (development or advanced fine-tuning)</p> </li> <li> <p>CELLS_CONNECTOR_USERNAME_AS_LOGIN: For the given list of connectors IDs, use username instead of email as user identifier.</p> </li> <li>CELLS_DAV_MULTIPART_SIZE (20): Default part size used to automatically chunk DAV uploads, in MB</li> <li>CELLS_DEFAULT_DS_STRUCT (false): Create default datasources using structured format instead of flat</li> <li>CELLS_ENABLE_FORMS_DEVEL (false): Display a basic UX form with all possible fields types in the UX (for React developers)</li> <li>CELLS_ENABLE_LIVEKIT (false): Enable experimental support for video calls in the chat window, using a livekit-server.</li> <li>CELLS_ENABLE_SIMDMD5 (false): Empty is false by default, if set this will switch the md5 hasher to simd implementation</li> <li>CELLS_ENABLE_WIP_LANGUAGES (def): Display partially translated languages in the UX language picker.</li> <li>CELLS_GRPC_AUTHORITY: :authority header value passed in all GRPC clients calls</li> <li>CELLS_JOBS_LOG_LEVEL (info): Log level used for scheduler jobs - to be used carefully as it may produce a large volume of logs.</li> <li>CELLS_LDAP_BACKOFF_DURATION (100ms): Customize LDAP retries timing</li> <li>CELLS_LDAP_RETRIES_NUMBER (5): Customize LDAP retries number</li> <li>CELLS_MINIO_STALE_DATA_EXPIRY (48h): Expiration of stale data produced by objects upload parts</li> <li>CELLS_SPNEGO_KEYTAB: Path to an SPNEGO Keytab File</li> <li>CELLS_TRACE_FATAL: Better display root cause of process crashes</li> <li>CELLS_WEB_RATE_LIMIT (0): Http API rate-limiter, as a number of token allowed per seconds. 0 means no limit.</li> </ol> <pre><code>./cells-enterprise start [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-start/#options","title":"Options","text":"<pre><code>      --advertise_address string     Address that should be advertised to other members of the cluster (leave it empty for default advertise address)\n      --bind_address string          Address on which servers will bind. Binding port depends on the server type (grpc, http, etc). (default \"127.0.0.1\")\n      --broker string                Pub/sub service URL for events broadcast. Supported schemes: grpc|mem|nats|rabbit (default \"mem://\")\n      --enable_metrics               Instrument code to expose internal metrics (to local JSON file, or service discovery if Metrics Basic Auth is set)\n      --enable_pprof                 Enable pprof remote debugging\n  -x, --exclude stringArray          Select services to start by filtering out some specific ones by name\n      --grpc_discovery_port string   Default discovery gRPC server port (registry, broker, config, and log services). (default \"8030\")\n      --grpc_port string             Default gRPC server port (all gRPC services, except discovery ones) (default \"8031\")\n  -h, --help                         help for start\n      --log string                   Output log level: debug, info, warn, error (production is equivalent to log_json+info) (default \"info\")\n      --log_json                     Output log formatted as JSON instead of text\n      --log_to_file                  Write logs on-file in CELLS_LOG_DIR (default true)\n      --metrics_basic_auth string    Expose metrics to a service discovery endpoint /metrics/sd\n      --registry string              Registry URL used to manage services. Supported schemes: etcd|etcd+tls|file|grpc|mem (default \"mem://?cache=shared\")\n      --site_bind string             [Site] The 'site_' flags suite overrides config-defined sites. Bind is the site binding address IP|DOMAIN:PORT (default 0.0.0.0:8080)\n      --site_external string         [Site] External full URL http[s]://IP|DOMAIN[:PORT] exposed to the outside\n      --site_le_agree                [Site] Accept Let's Encrypt EULA\n      --site_le_email string         [Site] Set email to enable Let's Encrypt automatic TLS configuration\n      --site_le_staging              [Site] Use Let's Encrypt staging CA instead of production to avoid being banned on misconfiguration.\n      --site_no_tls                  [Site] Use plain HTTP (default false, use self-signed)\n      --site_tls_cert_file string    [Site] Path to custom TLS certificate file\n      --site_tls_key_file string     [Site] Path to custom TLS key file\n  -t, --tags stringArray             Select services to start by tags, possible values are 'broker', 'data', 'datasource', 'discovery', 'frontend', 'gateway', 'idm', 'scheduler'\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-start/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-start/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise  - Secure File Sharing for business</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-update/","title":"cells-enterprise update","text":"<p>Check for available updates and apply them</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-update/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>List the available updates for the current binary.   To apply the actual update, run the command with a --version parameter.</p> <pre><code>./cells-enterprise update [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-update/#options","title":"Options","text":"<pre><code>  -d, --dry-run          If set, this flag will grab the package and save it to the tmp directory instead of replacing current binary\n  -h, --help             help for update\n  -v, --version string   Pass a version number to apply the upgrade\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-update/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-update/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise  - Secure File Sharing for business</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-version/","title":"cells-enterprise version","text":"<p>Print version information</p>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-version/#synopsis","title":"Synopsis","text":"<p>DESCRIPTION</p> <p>Print version information.</p> <p>You can format the output with a go template using the --format flag.   Typically, to only output a parsable version, call:</p> <pre><code>$ ./cells-enterprise version -f '{{.Version}}'\n</code></pre> <p>As reference, known attributes are:    - PackageLabel    - Version    - BuildTime    - GitCommit    - OS    - Arch    - GoVersion</p> <pre><code>./cells-enterprise version [flags]\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-version/#options","title":"Options","text":"<pre><code>  -f, --format string   Format the output using the given Go template\n  -h, --help            help for version\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-version/#options-inherited-from-parent-commands","title":"Options inherited from parent commands","text":"<pre><code>      --config string   Configuration storage URL. Supported schemes: etcd|etcd+tls|file|grpc|mem|vault|vaults (default \"file:///home/teamcity/.config/pydio/cells/pydio.json\")\n</code></pre>"},{"location":"developer-guide/command-line-reference/cells-enterprise/cells-enterprise-version/#see-also","title":"SEE ALSO","text":"<ul> <li>./cells-enterprise  - Secure File Sharing for business</li> </ul> <p>Auto generated by Pydio Cells Enterprise Distribution v4.4.13 on 7-May-2025</p>"},{"location":"developer-guide/cells-development/index/","title":"Cells Development","text":"<p>In this chapter, we introduce the architecture of Pydio Cells. We consider it is a good read for a better understanding of what you do and what you see (particularly in the logs). If you want to start interacting with Cells directly, you can jump to the Cells APIs section.</p> <ul> <li>Developing on Cells</li> <li>Microservices</li> <li>Services categories</li> <li>Security model</li> <li>Activity streams</li> <li>Miscellaneous</li> </ul>"},{"location":"developer-guide/cells-development/activity-streams/","title":"Activity streams","text":""},{"location":"developer-guide/cells-development/activity-streams/#inbox-vs-outbox","title":"Inbox vs Outbox","text":"<p>Activities have been entirely rewritten in Pydio Cells. Inspired by social network interactions, activities are generated by internal events and stored in \"denormalized\" queues, which means that an event may trigger the creation of many activities.</p> <p>Currently, the main objects interacting together are \"Users\" and \"Nodes\", but this could be easily generalized to other aspects as well. Basically, any object has an \"Inbox\" and an \"Outbox\" stack. Inbox represents the activities that were generated by other actors and that this object should be aware of. Outbox represents the object\u2019s own activities. Typically, in a social network, the Inbox of a user could be seen as her wall, whereas her Outbox could be seen as her profile feed.</p> <p>The figure below shows how a \"node event\" (e.g. file XXX created by user A in folder YYY) will be dispatched to the various boxes involved. An additional \"Subscription\" box will store the watches that a user can set on any file or folder.</p> <p></p> <p>When events arrive from the global bus, they are dispatched as follow:</p> <ul> <li>Post in the node Outbox (this is the own activity of this node)</li> <li>Post in the event user Outbox (the own activity of this user)</li> <li>Check other users for subscriptions, and if found, post in these users\u2019 Inbox.</li> </ul> <p>This is then done on the parent Node until the root.</p>"},{"location":"developer-guide/cells-development/activity-streams/#as2-format","title":"AS2 Format","text":"<p>Activities are stored in the Activity Streams 2.0 format. This is a generic JSON-based RFC published by the W3C. This format is used for all activities either sent via the event bus (and then for example sent back to the users via WebSocket), or when listing activities using the Rest API.</p> <p>Here is an example of a REST call to <code>http://proxy:8083/activity/streams</code>:</p> <pre><code>{\n    \"@context\": \"https://www.w3.org/ns/activitystreams\",\n    \"type\": \"Collection\",\n    \"items\": [\n        {\n            \"@context\": \"https://www.w3.org/ns/activitystreams\",\n            \"type\": \"Read\",\n            \"id\": \"/activity-17\",\n            \"name\": \"File Event\",\n            \"summary\": \"Document [Athens.jpg](doc://add672fc-6e7852e4-6b98172a-7d3eebaf) was accessed by [new](user://new)\",\n            \"updated\": \"2017-11-27T16:15:49.000Z\",\n            \"actor\": {\n                \"type\": \"Person\",\n                \"id\": \"new\",\n                \"name\": \"new\"\n            },\n            \"object\": {\n                \"type\": \"Document\",\n                \"id\": \"add672fc-6e7852e4-6b98172a-7d3eebaf\",\n                \"name\": \"ds1/extraction/Photos Vacances/Athens.jpg\",\n                \"partOf\": {\n                    \"type\": \"Collection\",\n                    \"items\": [\n                        {\n                            \"type\": \"Workspace\",\n                            \"id\": \"18583bcd22c3c2705ef55131e1d809a8\",\n                            \"name\": \"DS1\",\n                            \"rel\": \"ds1/extraction/Photos Vacances/Athens.jpg\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n     \"@context\": \"https://www.w3.org/ns/activitystreams\",\n            \"type\": \"Read\",\n            \"id\": \"/activity-15\",\n            \"name\": \"File Event\",\n            \"summary\": \"Folder [Photos Vacances](doc://6jgjyRzPwyfg7tqKhz12m0fuZrwReuuqKWm2) was accessed by [new](user://new)\",\n            \"updated\": \"2017-11-27T15:13:07.000Z\",\n            \"actor\": {\n                \"type\": \"Person\",\n                \"id\": \"new\",\n                \"name\": \"new\"\n            },\n            \"object\": {\n                \"type\": \"Folder\",\n                \"id\": \"6jgjyRzPwyfg7tqKhz12m0fuZrwReuuqKWm2\",\n                \"name\": \"ds1/extraction/Photos Vacances\",\n                \"partOf\": {\n                    \"type\": \"Collection\",\n                    \"items\": [\n                        {\n                            \"type\": \"Workspace\",\n                            \"id\": \"18583bcd22c3c2705ef55131e1d809a8\",\n                            \"name\": \"DS1\",\n                            \"rel\": \"ds1/extraction/Photos Vacances\"\n                        }\n                    ]\n                }\n            }\n        },\n        {\n            \"@context\": \"https://www.w3.org/ns/activitystreams\",\n            \"type\": \"Read\",\n            \"id\": \"/activity-14\",\n            \"name\": \"File Event\",\n            \"summary\": \"Folder [extraction](doc://R8BYGzZXxNxhPgzmh9pBh5Ax3ZB6VjM1ZHHj) was accessed by [new](user://new)\",\n            \"updated\": \"2017-11-27T15:13:05.000Z\",\n            \"actor\": {\n                \"type\": \"Person\",\n                \"id\": \"new\",\n                \"name\": \"new\"\n            },\n      \"object\": {\n                \"type\": \"Folder\",\n                \"id\": \"R8BYGzZXxNxhPgzmh9pBh5Ax3ZB6VjM1ZHHj\",\n                \"name\": \"ds1/extraction\",\n                \"partOf\": {\n                    \"type\": \"Collection\",\n                    \"items\": [\n                        {\n                            \"type\": \"Workspace\",\n                            \"id\": \"18583bcd22c3c2705ef55131e1d809a8\",\n                            \"name\": \"DS1\",\n                            \"rel\": \"ds1/extraction\"\n                        }\n                    ]\n                }\n            }\n        },\n    ],\n    \"totalItems\": 3\n}\n</code></pre>"},{"location":"developer-guide/cells-development/developing-on-cells/index/","title":"Developing on Cells","text":"<ul> <li>Setup dev environment</li> <li>How to contribute</li> <li>Vendoring</li> </ul>"},{"location":"developer-guide/cells-development/developing-on-cells/setup-dev-environment/","title":"Setup dev environment","text":""},{"location":"developer-guide/cells-development/developing-on-cells/setup-dev-environment/#requirements","title":"Requirements","text":"<p>The following is required to develop on Cells backend and frontend</p> <ul> <li>Go version 1.12+</li> <li>Git</li> <li>Nodejs 6.+ (and npm 3.10+)</li> <li>Grunt &amp; grunt-cli</li> </ul>"},{"location":"developer-guide/cells-development/developing-on-cells/setup-dev-environment/#building-binary","title":"Building binary","text":"<p>Before trying to set up a development environment, you should first install a packaged binary version of the application. You can find a step by step guide in the Quick Start section of the admin guide.</p> <p>It helps insuring that your system meets the necessary requirements and let you resolve potential problems that are not directly bound to the fact that you build the code on your machine.</p> <p>Then, building the Pydio Cells backend from the source code is quite straightforward:</p> <pre><code># Retrieve the code\n&gt; go get -u github.com/pydio/cells\n&gt; cd $GOPATH/src/github.com/pydio/cells\n\n# Build the  cellsbinary\n&gt; make dev\n</code></pre>"},{"location":"developer-guide/cells-development/developing-on-cells/setup-dev-environment/#installation","title":"Installation","text":"<p>To have the environment running, you must also:</p> <ul> <li>Create a database in your chosen DB server,</li> <li>Run the Pydio Cells installer that will guide you through the necessary steps: you might refer to the admin guide for additional information.</li> </ul> <pre><code>&gt; ./cells install\n</code></pre>"},{"location":"developer-guide/cells-development/developing-on-cells/setup-dev-environment/#running-the-tests","title":"Running the tests","text":"<p>To run the tests, simply do: <code>go test -v ./...</code></p>"},{"location":"developer-guide/cells-development/developing-on-cells/how-to-contribute/","title":"How to contribute","text":""},{"location":"developer-guide/cells-development/developing-on-cells/how-to-contribute/#guidelines","title":"Guidelines","text":"<p>Expected code style and rules that we internally respect are defined in the Contributing manifest that can be found in the main Pydio Cells repository on Github.</p>"},{"location":"developer-guide/cells-development/developing-on-cells/how-to-contribute/#reporting-bugs","title":"Reporting Bugs","text":"<p>As described in the main contribution rules, we use Github only for \"qualified bugs\" : bugs that are easily reproduced and validated by a Pydio Team member. Our preferred communication channel is our Forum. Please do not ask question in github issues, nor in Twitter or other social feed.</p> <p>So, what should I do in case of:</p> <ul> <li>Install or upgrade issue? Search the F.A.Q or READ THE DOCS</li> <li>No answer yet? Search the FORUM</li> <li>Still stuck? It's time to ask the community via the FORUM</li> </ul> <p>And only if you're invited to:</p> <ul> <li>Post a github issue: make sure to put as much detail as possible.</li> <li>or submit a pull request.</li> </ul>"},{"location":"developer-guide/cells-development/developing-on-cells/how-to-contribute/#branches-and-prs","title":"Branches and PRs","text":"<p>The code is currently using 3 branches (not counting the temporary dev branches):</p> <ul> <li>master: upstream branch, use this as default for Pull Requests</li> <li>stable: the last stable version released</li> <li>x:  (experimental) contains features that are already advanced but still considered unstable.</li> </ul> <p>Pull requests must comply with the main Guidelines (described above). They must come with dedicated passing tests. It can take some time to review and accept them, please be patient, and eventually update them regularly if the master branch is changing.</p>"},{"location":"developer-guide/cells-development/developing-on-cells/vendoring/","title":"Vendoring","text":"<p>Third party dependency management is done within Pydio Cells with Govendor. See their Github page and this very useful cheatsheet.</p> <p>Thus when you clone Pydio Cells repository, you also retrieve all the Go code of the third parties that is used by the app and that is bundled within the binary that is shipped to end clients.</p> <p>You can find these codes in the  <code>cells/vendor</code> sub folder.</p>"},{"location":"developer-guide/cells-development/microservices/index/","title":"Microservices","text":"<ul> <li>Introduction</li> <li>Discovery</li> <li>Communication</li> <li>Api gateway model</li> <li>Architecture overview</li> </ul>"},{"location":"developer-guide/cells-development/microservices/introduction/","title":"Introduction","text":"<p>Pydio Cells is composed of a set of \u201cmicroservices\u201d, each one being dedicated to a simple task. These services can run distributed on a cluster of servers, and most of them can be independantly horizontally scaled. They all communicate together via specific APIs, and each service brings its own persistence layer (when necessary).</p> <p>Breaking a monolithic application into a set of microservices introduces many improvements:</p> <ul> <li>Communication between services via API dictates a predefined protocol without assuming the nature of the service. Services can for example be written in different languages.</li> <li>Per-service persistence layer allows to choose the best persistence implementation for the task implemented by each service.</li> <li>When the application is under heavy load, it is possible to scale only the specific services that constitute bottlenecks, other than scaling out the whole application.</li> <li>Apart the request/response model, a generic event bus can broadcast messages to any service that has subscribed for a given topic, allowing asynchronous communication and event-triggered actions.</li> </ul> <p>Pydio tries to follow at most the 12-factors architecture pattern that constitutes best practices for microservices.</p>"},{"location":"developer-guide/cells-development/microservices/discovery/","title":"Discovery","text":"<p>A key component of a microservice architecture is how services \u201cdiscover\u201d each other.</p> <p>As each service exposes its API (generally using HTTP), it is bound to an IP and a port. Other services must know this address to contact the service and retrieve information from it. This is generally done by keeping a dedicated \u201cregistry\u201d, whose IP and port are known by all services, and to which each service declares itself at run time. Contacting a service is then done by asking the registry a list of available instances of this service running on the various cluster nodes.</p> <p>Pydio Cells uses Micro, a golang-based microservice framework that provides various adapters to common registry solutions. Nats.io is a well known solution providing such a registry solution. Pydio Cells uses Nats by default, and actually embeds a Nats server to avoid any deployment hassle.</p> <p>In the future, Pydio Cells could use etcd or other kubernetes-like feature for services registry.</p>"},{"location":"developer-guide/cells-development/microservices/communication/","title":"Communication","text":"<p>Communication between services is generally achieved using one of the below transport methods:</p>"},{"location":"developer-guide/cells-development/microservices/communication/#grpc","title":"gRPC","text":"<p>Used for low-level services, gRPC is based on HTTP/2 for transport and uses Google Protobuf messages for serialization. Protobufs are super-optimized for fast serialization/deserialization, and HTTP/2 brings the power of Streams on top of the standard request/response model. Pydio Cells Protobufs are available in .proto and in their .go compiled form in the code (see common/proto).</p>"},{"location":"developer-guide/cells-development/microservices/communication/#http-rest","title":"HTTP REST","text":"<p>Some services expose standard HTTP endpoints with REST APIs. As described below, these are higher level services \u201cfacing\u201d the outside world (via proxies).</p> <p>In Pydio Cells, for the sake of documentation and ease of golang marshalling/unmarshalling operations, REST APIs are also described in Protobuf format, along with specific annotations to map the proto services to GET/POST/PUT... classic HTTP operations. Proto messages are serialized in JSON using the jsonpb library (to make sure enums are serialized as string and not ints). These proto services also generate an OpenAPI JSON description of the REST services, allowing easy generation of SDKs for Pydio Cells API in any language.</p> <p>The documentation of the HTTP REST API of Pydio Cells is generated with Swagger and can be found in the web front UI. In <code>settings</code> workspace, go to <code>All Plugins &gt;&gt; REST APIs</code>.</p>"},{"location":"developer-guide/cells-development/microservices/communication/#event-bus","title":"Event bus","text":"<p>Another way of communication across services goes through the global event bus. This feature is also provided by Nats. It allows the broadcast of messages to the whole application. Services can subscribe to certain topics and asynchronously receive messages.</p>"},{"location":"developer-guide/cells-development/microservices/api-gateway-model/","title":"Api gateway model","text":"<p>In a microservice architecture, it is common to have low-level services that do almost only one basic task (like CRUD-ing a given data type into a persistence layer). When it comes to serving usable data to an actual client (web browser, mobile app, etc.), some additional business logic is required to grab information from the many services and put the pieces together.</p> <p>Moreover, the authentication/authorization mechanism may not be enabled on all services, as it would be too much overhead. The API Gateway will complete the underlying APIs with public facing features, such as authenticating incoming requests. Underlying APIs will consider the requests as pre-authorized.</p> <p>In Pydio Cells, many gRPC services have their REST counterpart for serving information to the outside. See the schema below.</p> <p></p> <p>For instance, a query to the /config/ REST endpoint will call the pydio.grpc.config service below to retrieve and store the configs.</p> <pre><code>curl http://localhost:8080/a/config/discovery\n</code></pre> <p>Finally, at the top level, a main proxy receives all requests sent to this address and forwards them to the correct <code>address:port/path</code>.</p>"},{"location":"developer-guide/cells-development/microservices/architecture-overview/","title":"Architecture overview","text":"<p>Below is an overview of the Pydio Cells architecture (click on it to see the detail):</p> <p></p> <p>As explained in the previous section, public access APIs are following the \u201cAPI Gateway\u201d pattern: gRPC services may provide an additional gateway service that translates HTTP REST into gRPC. A dedicated service is acting as a proxy to dispatch incoming queries to these gateways.</p> <p>The data is exposed via a set of standard protocols:</p> <ul> <li>Authentication is following the OpenID Connect Protocol, an identity layer on top of OAuth2, using JSON Web Tokens (JWT)</li> <li>Files can be managed using the Amazon S3 protocol.</li> <li>Activities are published in the Activity Streams 2.0 format (by W3C).</li> <li>Logs are redirected to the stdout in JSON format, to be aggregated in ELK or similar.</li> </ul> <p>It is stored in various ways:</p> <ul> <li>Application metadata, specific business data (users &amp; roles, chat, tasks\u2026) are persisted in a database. For the moment, production servers can run with MySQL (or mariaDB equivalent). Tests are done using SQLite.</li> <li>Logs and semi persistent data (like various queues) are persisted in an embedded KVStore (BoltDB).</li> <li>The Files themselves are stored in the underlying datasources (see relevant resources).</li> <li>A small amount of tactical info is directly stored in a few files, typically:</li> <li>Main configuration is stored in a pydio.json file,</li> <li>License for the enterprise edition is stored in a pydio-license file.</li> </ul>"},{"location":"developer-guide/cells-development/miscellaneous/index/","title":"Miscellaneous","text":"<ul> <li>Logging</li> <li>Tracing</li> <li>Javascript Frontend</li> </ul>"},{"location":"developer-guide/cells-development/miscellaneous/logging/","title":"Logging","text":"<p>We mainly use 2 loggers that are defined in the <code>cells/common/log</code> package and used throughout the backend:</p> <ul> <li>A syslog logger is used to log technical information.</li> <li>An audit logger only logs precise information and is used to monitor the application from a business point of view. Audit logs are among others used for GRDP compliance. WARNING: you should not modify nor remove any of the audit log.</li> </ul> <p>Pydio Cells relies on the zap logging framework that manages 5 levels of information:</p> <ul> <li>Debug</li> <li>Info</li> <li>Warn</li> <li>Error</li> <li>Fatal</li> </ul> <p>And 2 types of output format:</p> <ul> <li>JSON</li> <li>Console like with colors.</li> </ul> <p>Depending on the launching mode (see below), the logs are redirected to:</p> <ul> <li>Standard out</li> <li>Rolling files</li> <li>A gRPC service that streams each message in JSON format to a log service that store them in a BoltDB and index them with Bleve.</li> </ul> <p>The logs can then be accessed within the admin dashboard.</p> <p>Currently, the application can be launched in one of the three following configuration:</p> <ul> <li>Debug: all log messages are redirected to standard out in a console friendly format</li> <li>Info (this is the default mode): same as debug mode but all message with <code>debug</code> level are dropped</li> <li>Production:</li> <li>Debug message are dropped</li> <li>Message are formatted as JSON</li> <li>Messages are redirected to the standard output, some rolling files and streamed the gRPC service that stores and indexes the messages.</li> </ul>"},{"location":"developer-guide/cells-development/miscellaneous/logging/#guidelines","title":"Guidelines","text":"<ul> <li>When enriching the log with zap fields, always use constants from <code>common/zapfields.go</code> as keys, otherwise the logs won't be usable for analysis</li> <li>Pydio provides some shortcuts to easily generate zap fields for commons pydio objects. Typically when logging info about a tree.Node, you should write: <code>...Debug(\"A message\", node.Zap())</code></li> <li>Depending on the level of details required, you can either use <code>Zap()</code> that serializes all accessible information or <code>ZapPath()</code>, <code>ZapUuid()</code> or <code>ZapId()</code> (depending on the relevant info) that simply calls zap.String() with relevant pydio zap id (as seen in common/zapfields.go) and corresponding value.</li> </ul>"},{"location":"developer-guide/cells-development/miscellaneous/tracing/","title":"Tracing","text":"<p>In a microservice environment, it is not rare that an incoming request triggers many sub-requests to many services under the hood. For logging and also for diagnosing bottlenecks and services inter-dependencies, unique tokens are generated and then propagated via the requests Headers on each request.</p> <p>A dedicated HTTP handler is added to both gRPC and REST services, in charge of automatically detecting whether a request already has a \"Span Root Id\" (identifying the very first entry point) and propagating it to sub-requests, and also adding a unique token (Span Id) for each of these. See <code>common/service/context/span.go</code> for this middleware.</p> <p>The result can be seen in the <code>Logs</code> screen of the admin interface, where logs are grouped by Span Root Id.</p> <p>For instance, a \"user update\" operation triggers logs at the users and roles Rest and GRPC levels. All these requests are in fact originating a unique one, as shown below:</p> <p></p>"},{"location":"developer-guide/cells-development/miscellaneous/javascript-frontend/","title":"Javascript Frontend","text":""},{"location":"developer-guide/cells-development/miscellaneous/javascript-frontend/#overview","title":"Overview","text":"<p>The web-based user interface is a Single-Page application written in ReactJS. It directly consumes the various REST APIs provided by Cells to display and manipulate the data.</p> <p>It uses a web session mechanism that is basically just adding some session-persistence to the JWT authentication, performed server-side. The /frontend/session endpoint is in charge of that. All the other APIs are consumed directly with the JWT value, in a RESTful manner (no sessions).</p>"},{"location":"developer-guide/cells-development/miscellaneous/javascript-frontend/#apis-usage","title":"APIs usage","text":"<p>JS frontend mostly uses the REST Apis described in the OpenAPI document. In fact, the javascript SDK itself is dynamically generated from this OpenAPI description and the frontend is provided with all clients and models necessary to speak with our REST Apis.</p> <p>Additionally, the S3 API is used for downloading and uploading actual data. We used S3 Presigned-URLs to create simple GET / PUT urls that are consumable by the browsers http clients (for download, displaying images, uploading, etc...).</p> <p>It is worth noting that the files listing does not uses the LS-capability of the S3 api but a dedicated rest endpoint, as the S3 protocol does not easily allow to add a lot of metadata along with the objects lists returned.</p>"},{"location":"developer-guide/cells-development/services-categories/index/","title":"Services categories","text":"<ul> <li>Identity managment</li> <li>Broker</li> <li>Data</li> <li>Scheduler</li> <li>Gateway</li> </ul>"},{"location":"developer-guide/cells-development/services-categories/identity-managment/","title":"Identity managment","text":"<p>Identity Management (IDM) is split across 8 microservices, that separately manage a single aspect of the application objects:</p> <ul> <li>acl (Access Control List): flags that are attached to nodes to grant a specific permission,</li> <li>auth (Authentication): OpenID Connect authentication server, based on coreos/dex</li> <li>policy: resource-based policy engine (see dedicated section)</li> <li>role: Pydio roles</li> <li>user: Pydio users and groups, represented as a tree</li> <li>workspace: Simple metadata about Pydio workspaces</li> <li>graph: high-level rest endpoint for gathering relations between users</li> <li>share: high-level rest endpoint for managing shares (cells &amp; public links). It is also a metadata provider service that adds shared metadata to nodes dynamically.</li> </ul> <p>These services are generally accessed by gRPC and eventually provide a REST gateway for external clients management.</p> <p>ACL provides the glue between nodes, roles and workspaces. For a given user, the workspace list is dynamically computed from all nodes that are seen as readable in the ACL list. As ACLs are attached to a workspace UUID, a workspace can be composed of many root nodes. The \u201cworkspace\u201d service provides just an additional layer of metadata for the workspaces (label, description, owner, etc.).</p> <p>Sharing is as simple as it gets: a folder X shared with a user U is simply a read permission (Acl Action \u201cread\u201d) on the folder node UUID for the user role. User will then see a new workspace with the folder as its root node.</p>"},{"location":"developer-guide/cells-development/services-categories/broker/","title":"Broker","text":"<p>\u201cBroker\u201d services are generic services that mainly interact with others via the event bus. There are currently 4 of them:</p> <ul> <li>activity: in charge of persisting the activity streams (see corresponding chapter)</li> <li>chat: chat rooms provide a generic real-time discussion mechanism that can be attached to any objects (cells, nodes, etc..). This service is just in charge of message persistence, it is tightly coupled with the WebSocket service that listens and broadcasts messages to the clients.</li> <li>log: simple log service that indexes JSON logs and makes them searchable. This implementation is replacing a more scalable solution that would be using Cells with an ELK stack. See below for more informations about logs.</li> <li>mailer: the mailer service can queue and send emails using various protocols: SMTP, local SendMail command, or the SendGrid API.</li> </ul>"},{"location":"developer-guide/cells-development/services-categories/data/","title":"Data","text":"<p>A Datasource provides access to data. It continuously listens and stores changes to maintain a consistent data index.</p>"},{"location":"developer-guide/cells-development/services-categories/data/#what-is-a-datasource","title":"What is a datasource?","text":"<p>Internally, a datasource is composed of (see image below):</p> <ul> <li>A storage service: provides access to the data and can be accessed by any tool that communicates using Amazon S3 protocol.</li> <li>An index service: stores the data state and stands as the only source of truth for request on data state.</li> <li>A synchronizer: maintains the storage and the index database synchronized.</li> </ul> <p></p> <p>Every time a datasource has its state updated, the index service publishes events to notify the other services.</p> <p>Below are the name pattern of the corresponding services, each of them is always started as a fork:</p> <ul> <li><code>pydio.grpc.data.index.&lt;service_id&gt;</code></li> <li><code>pydio.grpc.data.object.&lt;service_id&gt;</code></li> <li><code>pydio.grpc.data.sync.&lt;service_id&gt;</code></li> </ul> <p></p> <p>Each datasource index is stored in 3 independent tables of the default database. It can be configured to use any other database. This eases the sharding of data across multiple nodes.</p> <p>You should also note that the object service, that is implemented by a fork of minio might be mutualised between more than one datatsource. Typically, all datasources that exposes a local file system which root folder resides in the same parent directory share a single object service.</p>"},{"location":"developer-guide/cells-development/services-categories/data/#the-tree-service","title":"The tree service","text":"<p>The tree service aggregates all datasources and presents the whole as a single data tree in which each datasource is a child of the root node.</p> <p></p> <p>This master tree is used internally to identify nodes by their UUID. It is used globally inside the application, and the ACL (Access Control List) are just flags positioned on any node UUID to grant read/write access to a user to a given node. This is how workspaces and shares are implemented. See previous chapter to learn more about Identity Management.</p>"},{"location":"developer-guide/cells-development/services-categories/scheduler/","title":"Scheduler","text":""},{"location":"developer-guide/cells-development/services-categories/scheduler/#services-involved","title":"Services involved","text":"<p>Pydio comes with a powerful built-in scheduler that is composed of three different services:</p> <ul> <li>jobs: The jobs service is the main interface. It is in charge of persisting the jobs definition and the tasks statuses, and sending proper events when they change.</li> <li>timer: Timer service is a simple scheduler that will analyze job definitions and send task trigger events at a given time if necessary.</li> <li>tasks: The task runners are stateless, pool-based workers that react to timer events, node events or job change events to actually run the tasks.</li> </ul> <p>The figure below shows how these three services interact.</p> <p></p> <p>Jobs are currently stored inside a BoltDB file, which implies that the job services cannot be scaled for the time being, but the task runners themselves can be easily dispatched on many servers, as they listen to events in a queued manner (only one node reads (consumes) a given event).</p>"},{"location":"developer-guide/cells-development/services-categories/scheduler/#jobs-and-actions","title":"Jobs and Actions","text":"<p>Jobs are defined by unitary Actions, that can be started in parallel or in a chained way. Actions are small pieces of code that are already compiled in the binary. Each step can take an input, define how to eventually filter this output, and send data to the output. Below is a diagram of how actions are processed when actually running a task.</p> <p></p>"},{"location":"developer-guide/cells-development/services-categories/scheduler/#preset-jobs","title":"Preset Jobs","text":"<p>Pydio internally uses the scheduler to perform the following tasks</p> <ul> <li>Automatically extract thumbnails and EXIF data from images whenever they are created/modified.</li> <li>Create versions of any files whenever they change</li> <li>Archive database tables that are growing in size.</li> </ul> <p>Pydio Client is able to send a PutJob request to the scheduler to trigger a specific action \u201csync-users\u201d, which will synchronize an external directory (currently LDAP) with the internal API. See \u2018client job sync-users\u2019.</p>"},{"location":"developer-guide/cells-development/services-categories/gateway/","title":"Gateway","text":"<p>The gateway folder contains the highest level services. Most of them are simple proxies in charge of dispatching the incoming requests to the underlying services. Finally, a top level proxy is dispatching all requests to these middlewares, as described below: </p> <p></p> <ul> <li>The Data gateway provides an Amazon s3 compatible access to actual data</li> <li>Dav, Wopi and WebSockets implement their respective protocols</li> <li>Micro gateway is described below.</li> </ul>"},{"location":"developer-guide/cells-development/services-categories/gateway/#routing","title":"Routing","text":"<p>The top-level proxy handles all incoming calls using the first segment to proxy to the correct gateway. The micro gateway is also dynamically dispatching the REST calls to the underlying services. Based on a common namespace (pydio.rest.), the path URI is used to dispatch calls to the correct service and the correct method.</p> <p>For example, calling <code>/a/config/discovery</code> will be first handled by the top level proxy and forwarded as <code>/config/discovery</code> to the Micro gateway, and will then send a <code>/discovery</code> request to the pydio.rest.config service.</p>"},{"location":"developer-guide/cells-development/security-model/index/","title":"Security model","text":"<p>Pydio Cells provides two complementary approaches to manage authorizations:</p> <ul> <li>role-based permissions are inherited from Pydio 8</li> <li> <p>resource-based security rules provide additional flexibility to define access based on a set of conditions.</p> </li> <li> <p>Role based security rules</p> </li> <li>Resource based security rules</li> </ul>"},{"location":"developer-guide/cells-development/security-model/role-based-security-rules/","title":"Role based security rules","text":""},{"location":"developer-guide/cells-development/security-model/role-based-security-rules/#users-roles-and-groups","title":"Users, roles and groups","text":"<p>In Pydio Cells, the major IDM objects are linked to a role: a user has its own role, a group has its own role, and the administrator can define roles as needed.  </p> <p>A user is always part of a group, either the <code>root</code> group or a subgroup defined in the interface. Groups are a way to hierarchically organise users, and a user can only belong to one group. On the other hand, admin roles can be applied to any users, and a user can be assigned any number of roles. In that sense, roles are closer to AD/LDAP groups.</p> <p>At run time, these roles are sequentially traversed to define the actual permissions of a user, as described below:</p> <ul> <li>Apply all permissions inherited from the user groups</li> <li>Apply all admin roles applied to this user</li> <li>Finally apply the user-specific role.</li> </ul> <p>Permissions can be of 3 types:</p> <ul> <li>ACLs (see below)</li> <li>Parameters values: frontend plugins parameters can have their default values overridden by a given role</li> <li>Actions enable/disable: frontend plugins actions can be dynamically enabled/disabled by a given role.</li> </ul> <p>This permissions are applied at various workspace \u201cscopes\u201d: they can be applied to all workspaces, only shared workspaces (cells), or to only one specific workspace.</p>"},{"location":"developer-guide/cells-development/security-model/role-based-security-rules/#acls","title":"ACLs","text":"<p>ACLs are basically the Read/Write permissions granting access to a specific workspace. In Pydio Cells, the dedicated idm/acl service is in charge of storing the ACLs. This service is simply maintaining a list of ACLs that make the association between:</p> <ul> <li>A node UUID: point in the global tree where this ACL applies</li> <li>A Role UUID (optional)</li> <li>A Workspace UUID (optional)</li> <li>An Action (name/value): defines the actual ACL effect.</li> </ul>"},{"location":"developer-guide/cells-development/security-model/resource-based-security-rules/","title":"Resource based security rules","text":""},{"location":"developer-guide/cells-development/security-model/resource-based-security-rules/#introduction","title":"Introduction","text":"<p>Along with the role-based mechanism, it is possible to refine accesses to any specific API or to dynamically compute a specific ACL to be applied to a role. Resource-based rules are heavily inspired by Amazon IAM rules. The idea is to simply stack a set of rules in a \u201cdeny by default\u201d mode and to merge them when necessary to decide \u201cwho is allowed to access what in which context\u201d:</p> <ul> <li>Who is the rule <code>Subject</code>,</li> <li>Allowed is the rule <code>Effect</code>: a boolean flag saying <code>Allow</code> or <code>Deny</code>,</li> <li>What is the <code>Resource</code> of the rule,</li> <li>Context is an optional set of <code>Conditions</code> that can be computed at runtime.</li> </ul> <p>In real-life situation, a rule can have many Subjects, many Resources and many Conditions. Policies are defined by a set of rules. Internally, a dedicated Policy service can be queried by other services to check whether a set of rules, evaluated in a given context, grant Allow or Deny access to the subject.</p> <p>Again, most policies have a \u201cDeny by default\u201d behavior. For example, when creating a new endpoint in the REST api, it is not accessible (returns 403 Forbidden) until a specific security is added to explicitly provide an access to this endpoint. The engine can also give a precise answer whether the deny response is a DenyByDefault (no rules defined matching this resource) or an explicit deny (e.g. one rule allows access to all, but another rule forbids access to users of a given group). See more examples in following sections.</p>"},{"location":"developer-guide/cells-development/security-model/resource-based-security-rules/#security-policies","title":"Security Policies","text":"<p>As already introduced, the first usage of resource-based rules is in the REST API endpoints authorizations. In this case, the policies are used as follow:</p> <ul> <li>The \u201cResource\u201d is a given endpoint of the rest API, identified by its URI (like /a/policies or /front/front-log, etc), along with an HTTP Verb (like GET, POST, PUT, etc).</li> <li>The \u201cSubject\u201d is composed by many subjects using the user roles and profile.</li> <li>The \u201cContext\u201d data is extracted from the incoming query : remote IP, connection time, User-Agent, etc.</li> </ul> <p>The default security policies are exposed in the interface, and editable in the Enterprise Edition. They basically define the necessary authorization for a basic usage of Cells. As explained before, API endpoints accesses are \u201cdenied by default\u201d. These default policies ensure that the required endpoints are accessible e.g. publicly, only by logged users, or only by admin users.</p>"},{"location":"developer-guide/cells-development/security-model/resource-based-security-rules/#idm-objects-policies","title":"IDM Objects Policies","text":"<p>Resource-based rules are also used to manage the visibility of all idm objects (users, workspaces, roles) for a given user. These rules can be queried for specific \u201cread\u201d, \u201cwrite\u201d and \u201cowner\u201d rights to e.g. filter the results of the listings and prevent modification of an object by an unauthorized person.</p> <p>For example, Roles are used internally by users when they create \u201cTeams\u201d in their address books. By default, those roles have the following rules applied:</p> <ul> <li>\u201cProfile: admin\u201d: read</li> <li>\u201cProfile: admin\u201d: write</li> <li>\u201cUser:userId\u201d: read</li> <li>\u201cUser: userId\u201d:write</li> <li>\u201cOwner:userId\u201d: owner</li> </ul> <p>This is required so that a user who creates a team can then see this team in his address book, and eventually modify or delete it. Admins are also allowed to edit this role if necessary. If the user wants to \u201cshare\u201d this team with other users, she can modify the rules to let this Team be visible (and used for sharing for example) by other users. This is done in the interface via the \u201cVisibility\u201d panel, and uses rule-based policies internally.  </p>"},{"location":"developer-guide/cells-development/security-model/resource-based-security-rules/#dynamic-acls","title":"Dynamic ACLs","text":"<p>Finally, combining the best of both worlds, role-based ACLs as described in the previous chapter can also be computed dynamically based on policies. This is very powerful to e.g. restrict access to a given workspace under certain conditions, like accessing from an internal vs/ external network, accessing at given office hours, etc.</p> <p>Furthermore, these ACLs can also use the files metadata as a source of context for computing conditions. That way, it is possible to restrict access only a given type of files (with e.g. a \u201cConfidential\u201d metadata tag) and combined with other context conditions.</p> <p></p>"},{"location":"knowledge-base/access-control/index/","title":"Access Control","text":"<ul> <li>ACL use cases</li> <li>Changing Token Lifespan</li> <li>Fully disabling Cells</li> <li>Managing resources ownership</li> </ul>"},{"location":"knowledge-base/access-control/changing-token-lifespan/","title":"Changing Token Lifespan","text":"<p>Token lifespan (typically the JWT token) can be configured in the main pydio.json</p> <pre><code>{\n    \"services\": {\n        ...\n        \"pydio.web.oauth\": {\n            ...\n            \"accessTokenLifespan\": \"10m\",\n            \"refreshTokenLifespan\": \"60d\"\n        }\n    }\n}\n</code></pre> <p>Make sure to restart afterward.</p> <p>Note: the refresh token can be used only once.</p>"},{"location":"knowledge-base/access-control/fully-disabling-cells/","title":"Fully disabling Cells","text":"<p>Although counter-intuitive, as user-managed collaboration spaces provided by Cells and are at the core of the product, it may be sometime desireable to strictly restrict access to a \"read-only\" or \"upload-only\" interface for users. Find out how in this short article.  </p> <p>First log in as administrator on your Cells Console and toggle <code>Advanced Parameters</code> on (top-left menu).</p>"},{"location":"knowledge-base/access-control/fully-disabling-cells/#disable-sharing","title":"Disable sharing","text":"<ul> <li>Go to <code>Application parameters &gt;&gt; Sharing Features</code></li> <li>Disable all 4 check boxes (you might keep the first enable if necessary)</li> <li>Save changes</li> </ul>"},{"location":"knowledge-base/access-control/fully-disabling-cells/#disable-cells-and-their-creation","title":"Disable Cells and their Creation","text":""},{"location":"knowledge-base/access-control/fully-disabling-cells/#merge-workspaces-and-cells","title":"Merge Workspaces and Cells","text":"<ul> <li>Go to <code>Application parameters &gt;&gt; Main Settings</code></li> <li>Check the <code>Merge Workspace and Cells</code> box</li> <li>Save</li> </ul>"},{"location":"knowledge-base/access-control/fully-disabling-cells/#customize-parameters-via-roles","title":"Customize parameters via Roles","text":"<ul> <li>Go to <code>Identity Management &gt;&gt; Roles</code></li> <li>Edit the Root Group</li> <li>Go to the Application Parameters</li> <li>Choose <code>Add for... &gt;&gt; All Workspaces</code></li> <li>Search for <code>cells</code></li> <li>Choose <code>Let User create new Cells</code></li> <li>toogle this off</li> <li>Add another rule by clicking on the <code>+</code> button that is left to the <code>All Workspaces</code> Header</li> <li>Search for <code>action.share</code>, choose <code>My Shares</code> and turn it off</li> <li>Add another, search for <code>action.share</code>, choose <code>Shares</code> and turn it off</li> <li>Save</li> </ul> <p>You should be good to go (after a hard refresh of the interface)!</p>"},{"location":"knowledge-base/access-control/acl-use-cases/","title":"ACL use cases","text":"<p>This chapter presents some real-life use cases of the ACL feature. At the bottom of the page, you can find a more complete glossary.</p> <p>For a deeper understanding on how Security Policy work you might also refer to the corresponding section of our administration guide.</p>"},{"location":"knowledge-base/access-control/acl-use-cases/#ip-restrictions","title":"IP Restrictions","text":""},{"location":"knowledge-base/access-control/acl-use-cases/#deny-access-on-a-workspace-to-a-list-of-ip","title":"Deny Access on a workspace to a list of IP","text":"<p>This is an example on how to deny access to a given workspace for a list of specific IPs. You can also apply this rule to Cells, Share links and so on.</p> <ul> <li>Create a New Policy (Policy Type: <code>Context-based ACLs</code>. Put the Name and Description of your choice)</li> </ul> <p></p> <p></p> <ul> <li>Then define default permissions: they are mandatory otherwise other users will not have access. So we give read/write to everyone before adding a restriction based on IPs for specific requests.</li> </ul> <p></p> <ul> <li>Now, let's add a policy to define the IP restriction rule:</li> </ul> <p></p> <ul> <li>Give it a Label, Effect: <code>Deny</code>, Actions: <code>Read/Write</code>, as seen in screenshot 5:</li> </ul> <p></p> <ul> <li>Add a condition and choose <code>RemoteAddress</code>:</li> </ul> <p></p> <ul> <li>Write the condition, using JSON: in our example we explicitly define some IPs.</li> </ul> <p></p> <ul> <li> <p>Save</p> </li> <li> <p>We can now apply the newly created rule. In our example, we apply it on a group. But you can also choose user, group, role, etc.</p> </li> </ul> <p></p> <ul> <li>Select the rule, using the label you have defined earlier</li> </ul> <p></p> <ul> <li>Once the rule is selected, save the changes:</li> </ul> <p></p>"},{"location":"knowledge-base/access-control/acl-use-cases/#allow-access-for-a-specific-ip-range","title":"Allow access for a specific IP range","text":"<p>You could also do the opposite and only give access to a list of IP by using <code>StringNotMatchCondition</code>.</p> <p>IMPORTANT: Security policies, as provided by Pydio Cells, are both \"Deny By Default\" and \"First Deny Wins\". It means that, when no policy is defined, the resources are not available. It also means that if we have 2 rules that are applied to the same resource for the same subject, if one gives access and the other forbids it, the resource is not available.</p> <p>Thus to allow access, you only have to define one rule that explicitely gives the access for the required IP range:</p> <ul> <li>Create a New Policy (Policy Type: <code>Context-based ACLs</code>)</li> <li>Create a rule that allows access to specific IP addresses or a range.</li> </ul> <p>Corresponding JSON can then be something like:</p> <pre><code>{\n  \"type\": \"StringMatchCondition\",\n  \"options\": {\n    \"matches\": \"192.168.2.*\"\n  }\n}\n</code></pre> <p>Note that you can also add multiple string conditions by separating them with a pipe <code>|</code> character. For instance:</p> <p><code>192.168.0.*|192.168.3.2|...</code></p>"},{"location":"knowledge-base/access-control/acl-use-cases/#acls-values","title":"ACLs values","text":""},{"location":"knowledge-base/access-control/acl-use-cases/#actions","title":"Actions","text":"Action Effect Example Read read a resource e.g. with a workspace, it means that the workspace is displayed in the various lists and browsable Write write a resource e.g. with a workspace, you can upload new or modify existing resources"},{"location":"knowledge-base/access-control/acl-use-cases/#query-context","title":"Query Context","text":"Query Effect Description Remote Address The client's remote address Remote IP presented by the request that accesses a resource Request Method REST Methods The type of the current REST method (PUT, GET, DELETE, etc.) Request URI A Pydio Cell's endpoint The <code>path</code> part of the URL, to restrict current rule to a subset of end-points HTTP Protocol Protocol used by current request: mainly HTTP or HTTPS UserAgent Type of the client agent Such as browsers, mobile apps, etc."},{"location":"knowledge-base/access-control/acl-use-cases/#conditions","title":"Conditions","text":"Type Options Example Description StringMatchCondition <code>\"matches</code> <code>\"matches\": \"192.168.0.1\"</code> condition is true if there is a match StringNotMatchCondition <code>\"matches</code> <code>\"matches\": \"192.168.2.1\"</code> condition is true if there is no match DateAfterCondition <code>\"matches\"</code> <code>\"matches\": \"2018-02-28T23:59+0100\"</code> condition is true if date is after the one defined in the match WithinPeriodCondition <code>\"matches\"</code> <code>\"matches\": \"2018-02-01T00:00+0100/2018-04-01T00:00+0100\"</code> condition is true if date is within the range of match OfficeHoursCondition <code>\"matches\"</code> <code>\"matches\": \"Monday-Friday/09:00/18:30\"</code> condition is true if date &amp; time are within the match <p>Note: under the hood, Cells uses we internally use LADON, you might find  it useful to refer to their documentation, typically on conditions to gain a deeper understanding of what you can do and how.</p>"},{"location":"knowledge-base/access-control/managing-resources-ownership/","title":"Managing resources ownership","text":"<p>In this HowTo, we take a closer look at the visibility parameters of the shared resources:</p> <ul> <li>What they are,</li> <li>How to enable them,</li> <li>A few use cases.</li> </ul>"},{"location":"knowledge-base/access-control/managing-resources-ownership/#cells-ownership","title":"Cells ownership","text":"<p>With Pydio Cells, you can define the Visibility (2) of your resource (eg. a cell in an instance) that enables transfering ownership of a resource, using users, groups or even roles: A user who has been assigned or has corresponding group or role, can act as if it was her own resource. She therefore has same rights as if she has created the resource herself and can thus modify the cell definition, add users, etc...</p> <p>This Visibility (2) setting is often mistaken for the Shared with (1) setting. For the record, the Shared with (1) setting defines with whom you share a resource, and what they can do with it (read, download or modify, among others).</p>"},{"location":"knowledge-base/access-control/managing-resources-ownership/#share-links-ownership","title":"Share links ownership","text":"<p>In the case of a workspace that can be accessed by multiple users, you can choose to display your link to some of them and/or allow them to edit the link settings.</p> <p>Below is an example of a common workspace (common-files) that can be accessed by two different users, <code>admin</code> and <code>jess</code>.</p> <p>In the first couple of screenshots, the setting is disabled (screenshot 1): user <code>jess</code> is not selected. She therefore does not see the share link on the file (Desert 6.png) (screenshot 2).</p> <p>Screenshot #1</p> <p></p> <p>Screenshot #2</p> <p></p> <p>We then add user <code>jess</code> to the list of users and give her following privileges (see screenshot 3):</p> <ul> <li>view: she sees the link in the workspace</li> <li>edit: she can modify the share settings as if it was her own</li> </ul> <p>You can now notice on screenshot 4 that she has the link listed on her view. She can also right-click &gt;&gt; edit share.</p> <p>Screenshot #3</p> <p></p> <p>Screenshot #4</p> <p></p>"},{"location":"knowledge-base/access-control/managing-resources-ownership/#use-cases","title":"Use cases","text":"<ul> <li>You have a user that is going on vacation and owns important resources about a given client. Before she leaves, she should give the visibility to another of her co-workers that is then able to access this resource.</li> </ul>"},{"location":"knowledge-base/cells-in-production/index/","title":"Cells in Production","text":"<ul> <li>Changing the default datasource storage type</li> <li>Cleanup Strategies for Production Instances</li> <li>Datasources &amp; Workspaces Layout Recommendations</li> <li>Installing ClamAV on a server</li> <li>Migrate a Cells instance to a new server</li> </ul>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/","title":"Changing the default datasource storage type","text":"<p>During the installation process, the application creates 3 default datasources. Namely:</p> <ul> <li>pydiods1: the default datasource for shared files. The <code>Common Files</code> workspace (that exists at startup) points here.</li> <li>personal: contains \"My Files\"-like workspaces for each user.</li> <li>cellsdata: is used to create cells when no root node has been defined upon creation.</li> </ul> <p>By default, these datasources are local FS based and the corresponding folders are created under <code>&lt;CELLS_DATA_DIR&gt;</code></p> <p><code>&lt;CELLS_DATA_DIR&gt;</code> is defined as <code>&lt;CELLS_WORKING_DIR&gt;/data/</code> if not explicitely overridden.</p> <p>Furthermore, the application also create three S3 buckets that are used to store internal and technical data:</p> <ul> <li>thumbs: stores the thumbnails.</li> <li>versions: stores the old versions of the files, when the versioning is enabled on a given DS.</li> <li>binaries: service docstore. It stores various things, like e.g. avatars, custom backgrounds, etc.</li> </ul> <p>In the default setup, these 3 buckets are folders that are siblings of the <code>pydiods1</code> folder and can be also found under <code>&lt;CELLS_DATA_DIR&gt;</code>. These folders are created during the installation process.</p> <p>More generally speaking, the system uses the object service that is linked to the default datasource to create these buckets, see <code>defaults.datasource</code> attribute in the <code>pydio.json</code> configuration file. The system uses this object service to retrieve connection information: where to find and how to connect to the technical buckets.</p> <p>As from version 2.1 of Pydio Cells, if you want to change the default layout for both default DSs and technical buckets, we strongly advise to do so during the installation process: in the last page of the installation wizard, under \"Advanced Configuration\", you can choose another location for the default local FS based datasources or switch to S3-based default datasources. This process is quite straight forward and self-explaining.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#validate-datasources-are-correctly-configured","title":"Validate datasources are correctly configured","text":"<p>In order to double check everything is working correctly, you might perform following checks:</p> <ul> <li>Change your account avatar: it insures the <code>binaries</code> implicit DS runs OK</li> <li>Upload an image: this checks the <code>thumbs</code> implicit DS</li> <li>Turn versioning on for a workspace and modify a file: this validates <code>versions</code> implicit DS</li> <li>Create a Cell with no root folder</li> <li>Add a few files in both <code>My Files</code> and <code>Common Files</code> folder: you can then double check that the crorresponding buckets for instance in your S3 account contain the expected tree structure.</li> </ul>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#legacy-version-v21-change-default-location-still-using-local-file-system","title":"Legacy (version &lt; v2.1) - Change default location still using local file system","text":"<p>The update process in Pydio Cells is quite robust and easy to run. We strongly advise that you use the latest version (see above).</p> <p>Yet, if you are stuck with an older version, we still leave here this legacy procedure as a hint for you to change the default layout.</p> <p>It can be quite tricky and could lead to an unstable system, so you have to understand what is hapenning and follow exactly the below steps.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#my-files-and-cells-data","title":"My Files and Cells Data","text":"<p>It is quite easy to tweak these:</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#enterprise-distribution","title":"Enterprise Distribution","text":"<p>You just have to edit the default template path by going to: <code>Admin console &gt;&gt; show advanced parameters &gt;&gt; Left column menu &gt;&gt; Data management &gt;&gt; Template Path</code></p> <p>If you have created new datasources, you might just then impact the default template paths to use you newly created DS, for instance:</p> <pre><code># Cells\nPath = DataSources.cellsdatanew + \"/\" + User.Name;\n# My Files\nPath = DataSources.personalnew + \"/\" + User.Name;\n</code></pre> <p>To use auto-completion: first move your cursor after the dot, then press <code>CTRL + SPACE</code></p> <p>If you want to mutualise the DS, you might also implement a more complex layout. For instance, you might do the following:</p> <ul> <li>create a new datasource (let say <code>dynamicws</code>)</li> <li>create a temporary workspace that point to it and create 2 folders <code>personal</code> and <code>cellsdata</code> in it</li> <li>delete the temporary workspace</li> <li>impact the template path to have:</li> </ul> <pre><code># Cells\nPath = DataSources.dynamicws + \"/cellsdata/\" + User.Name;\n# Personal Files\nPath = DataSources.dynamicws + \"/personal/\" + User.Name;\n</code></pre>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#home-distribution","title":"Home distribution","text":"<p>As you cannot edit template paths, the only solution you have is to delete the existing default <code>cellsdata</code> and <code>personal</code> DSs and recreate them where it fits you most. You do not have to change anything else then.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#common-files","title":"Common files","text":"<p>This is just a default workspace with Read/Write permissions for everyone. You can easily edit the workspace to point to another datasource.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#technical-buckets","title":"Technical buckets","text":"<p>The trick here is the way the buckets connection info are computed. It was our implementer choice to say:</p> <ul> <li>we will use a raw s3 bucket to store and retrieve our internal technical stuff (typically thumbnails)  </li> <li>these buckets do not need to be real datasources (they do not need neither index nor sync mechanism)</li> <li>yet, as each defined datasource has an <code>object</code> service that might expose more than one bucket, let use one of these</li> <li>so let's define a default datasource, retrieve its object service and assume it also exposes the additionnal buckets we need.</li> </ul> <p>In a fresh vanilla install, the default datasource is <code>pydiods1</code> that exposes the <code>&lt;CELLS_WORKING_DIR&gt;/data/pydiods1</code> folder of your file system. The underlying object service exposes all then folders that are in<code>&lt;CELLS_WORKING_DIR&gt;/data/</code> as S3 buckets. So we just create the <code>thumbs</code>, <code>versions</code>, and <code>binaries</code> folders during installation.</p> <p>If you were to change this, you can:</p> <ul> <li>create a new datasource that points towards the desired path (for instance <code>defaultds</code>)</li> <li>adapt your <code>pydio.json</code> file to have something like:</li> </ul> <pre><code>\"defaults\": {\n    \"database\": \"...\",\n    \"datasource\": \"defaultds\",\n    \"url\": \"https://pydio.example.com\",\n    \"urlInternal\": \"https://pydio.example.com:443\"\n  },\n</code></pre> <ul> <li>save and restart the app.</li> </ul>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#legacy-version-v21-switch-to-amazon-s3","title":"Legacy (version &lt; v2.1) - Switch to Amazon S3","text":"<p>One more time you should really use a recent version and do this during installation process rather than following the below procedure at you own risks </p> <p>You can also tune your configuration to rather have all your Datasources and Bucket on S3. We present here a simple setup that introduces well the steps you have to go through. Feel free to then adapt to your specific use case.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#create-the-required-buckets","title":"Create the required buckets","text":"<p>The main difference here is that you (still) have to manually create your buckets in your S3 administration console before creating the DSs in Cells.</p> <p>Note that buckets names in AWS have to be globally unique, so you cannot use the names they have in the local vanilla setup. Let us use for instance:</p> <ul> <li>com-example-cells-personal</li> <li>com-example-cells-cells</li> <li>com-example-cells-common</li> <li>com-example-cells-thumbs</li> <li>com-example-cells-versions</li> <li>com-example-cells-binaries</li> </ul> <p>Note that due to their implicit declaration (see above) via the default DS, the thumb, versions and binaries must be buckets of the same storage than the ds that is defined as default DS. Otherwise you will have to tweak the config even a little bit more.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#create-the-new-datasources","title":"Create the new datasources","text":"<p>Then, using the admin console of the web UI, we create new DSs pointing to these newly created buckets for personnal, cells and common.</p> default datasource NewDatasource Usage pydiods1 s3common Common files personal s3personal My files for users cellsdata s3cells Root nodes for cells <p>In Home distribution, as you cannot edit the default template path for cellsdata and personal files, you rather have to delete the existing default ds and recreate them with the exact same name pointing toward your newly created s3 buckets.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#adapt-the-template-paths-to-point-to-the-new-datasources","title":"Adapt the template paths to point to the new datasources","text":"<p>Template paths are the mechanism that enable to have dynamic workspaces, typically depending on the name of the lo\u01f5ged in user for personnal files. In Cells ED you can modify this by going to: <code>Admin console &gt;&gt; show advanced parameters &gt;&gt; Left column menu &gt;&gt; Data management &gt;&gt; Template Path</code></p> <p>With the above naming, you should then modify the 2 default template path to reather have:</p> <pre><code># Cells\nPath = DataSources.s3cells + \"/\" + User.Name;\n# My Files\nPath = DataSources.s3personal + \"/\" + User.Name;\n</code></pre> <p>To use auto-completion: first move your cursor after the dot, then press <code>CTRL + SPACE</code></p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#adapt-config-by-directly-impacting-pydiojson","title":"Adapt config by directly impacting pydio.json","text":"<p>The <code>pydio.json</code> file that is at the root of the <code>CELLS_WORKING_DIR</code> is the main configuration file of your instance/node and is also dynamically updated by the app when an admin make some changes via the admin console. You should rather handle it with extra care and we always advise to:</p> <ul> <li>shutdown cells before editing the file</li> <li>do a proper backup of your file before modifying it.</li> </ul> <p>Thus said, let's proceed to the next step by editing this file:</p> <p></p> <p>Modify the higlighted part, <code>defaults.datasource</code> attribute value, that is <code>pydiods1</code> by default, to your new datasource, in our example <code>s3common</code>.</p> <p>Also update the following properties in the <code>services</code> section to use the bucket names you have created for the implicit DSs (thumbs, versions and binaries):</p> <p><code>json ... \"pydio.docstore-binaries\": {       \"bucket\": \"binaries\",       \"datasource\": \"default\"  },  ... \"pydio.thumbs_store\": {       \"bucket\": \"thumbs\",       \"datasource\": \"default\"  },  ...  \"pydio.versions-store\": {       \"bucket\": \"versions\",       \"datasource\": \"default\"  },</code></p> <p>must become (using our names, adapt to your specific context):</p> <p><code>json ... \"pydio.docstore-binaries\": {       \"bucket\": \"com-example-cells-binaries\",       \"datasource\": \"default\"  },  ... \"pydio.thumbs_store\": {       \"bucket\": \"com-example-cells-thumbs\",       \"datasource\": \"default\"  },  ...  \"pydio.versions-store\": {       \"bucket\": \"com-example-cells-versions\",       \"datasource\": \"default\"  },</code></p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#final-step","title":"Final STEP","text":"<p>You should be now fully setup. Just restart the app and perform a few tests. If everything works fine, you can now delete the default datasources that you do not use anymore.</p>"},{"location":"knowledge-base/cells-in-production/changing-the-default-datasource-storage-type/#troubleshooting","title":"Troubleshooting","text":"<p>Note that the above procedure does not include migration of existing data, after restart you will then typically have lost all existing thumbnails that will be blank.</p> <p>In order to double check everything is working correctly, you might perform following checks:</p> <ul> <li>Change your account avatar: it insures the <code>binaries</code> implicit DS runs OK</li> <li>Upload an image: this checks the <code>thumbs</code> implicit DS</li> <li>Turn versioning on for a workspace and modify a file: this validates <code>versions</code> implicit DS</li> <li>Create a Cell with no root folder</li> <li>Add a few files in both <code>My Files</code> and <code>Common Files</code> folder: you can then double check that the crorresponding buckets in your S3 account contain the expected tree structure.</li> </ul>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/","title":"Cleanup Strategies for Production Instances","text":"<p>One of the main selling points of Pydio Cells is the ability to finely control and track usage of your business data. However, gathering a lot of information has a cost, especially in terms of disk usage. This page explains how it works under the hood and outlines strategies to help you keep things under control.</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#ent-tldr-the-sysadmin-check-list","title":"[Ent] TL;DR the sysadmin check list","text":"<p>We list here most of the best practices that we usually setup when configuring a Pydio Cells server. You can find further explanation below.</p> <ul> <li>Configure and enable following jobs via the scheduler</li> <li>Truncate Logs</li> <li>Purge Files Activities</li> <li>Purge Users Notification</li> </ul> <p>Warning: if you are running an old instance of Pydio Cells that has been updated, you should use the <code>cells admin clean reset-job</code> command to insure you are using the latest version of the cleaning jobs.</p> <ul> <li>Monitor free space on your disk, do the cleaning before reaching 90% of disk space</li> <li>If you have a medium to large instance, rather use MongoDB for the KV stores</li> <li>Define reasonable quotas on the Datasources that are File System Based</li> <li>Monitor and prune rolled version of log files under <code>&lt;CELLS_WORKING_DIR&gt;/logs</code> </li> <li>Define reasonable pruning strategies for versioned datasources</li> <li>Monitor and regularly clean the <code>&lt;CELLS_WORKING_DIR&gt;/data/.minio.sys/tmp</code> subfolder to remove parts for uploads that have failed.</li> </ul>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#in-depth-explanation","title":"In depth explanation","text":""},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#datasources","title":"Datasources","text":"<p>Before diving into the technical part, let's have a look at the way your documents are stored on the server. As explained in the admin documentation, your business data is stored in various datasources.</p> <p>At installation time you can choose to use block storage for this. Typically, if you decide to use AWS S3, you won't hit any limit but your costs will grow with the amount of data stored.</p> <p>Otherwise, the documents are stored by default on the server disk at the path defined by the <code>CELLS_DATA_DIR</code> environment variable (that is <code>&lt;CELLS_WORKING_DIR&gt;/data</code> by default).</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#business-datasources","title":"Business Datasources","text":"<ul> <li>You should monitor the size of the data uploaded by your users to avoid filling up disks, typically in the <code>My Files</code> workspaces.</li> <li>[Enterprise] You can define quotas on workspaces to set limits.</li> <li>By default, trashed content is moved to recycle bins - these are simply folders at the root of each workspace that are created by the system when necessary - the disk space is not freed until the user explicitly empties the recycle bin.</li> <li>By default, when deleting a user, her <code>My file</code> folder gets renamed but the data is still there. One way to retrieve the space is to define a workspace for a manager at the root of the corresponding datasource and explicitly delete old data if necessary. </li> </ul>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#technical-datasources","title":"Technical Datasources","text":"<p>In addition to your business datasources, you should also be aware of technical datasources that store data at the same place:</p> <ul> <li>cellsdata: all data that is uploaded to cells that have been created from scratch</li> <li>thumbs: preview images that are created upon data upload</li> <li>versions: old versions of documents </li> <li>binaries: a \"fourre-tout\" to store various binary files that are used by the server</li> </ul> <p>Depending on: - your number of users and they respective usage, - the versioning policies you define,</p> <p>these datasources might also grow big: you should monitor them and either adapt your configuration to spare space or grow your disks size.</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#multipart-uploads","title":"Multipart Uploads","text":"<p>When you define a disk based datasource, typically at <code>&lt;CELLS_WORKING_DIR&gt;/data/mydatasource</code>, an object service is started that creates a working directory at <code>&lt;CELLS_WORKING_DIR&gt;/data/.minio.sys</code> (note that this service is mutualised between datasources that have the same parent folder).</p> <p>When big files are uploaded, Pydio Cells splits the file in parts to improve reliability and efficiency. These parts are first uploaded under the minio working dir in a <code>tmp</code> subfolder. When a multipart upload fails, the parts are left there so that you don't have to upload them again on next try.</p> <p>Thus, sometimes, if your users upload a lot of large files on unreliable connections, the <code>tmp</code> folder might grow big and you have to empty it manually as we cannot decide automatically which parts can be destroyed and which are still to be used. </p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#log-files","title":"Log Files","text":"<p>The log files can be found under the path defined by the <code>CELLS_LOG_DIR</code> environment variable (which is <code>&lt;CELLS_WORKING_DIR&gt;/logs</code> by default). These files are automatically rolled out when they reach a certain limit (see below).</p> <p>You have:</p> <ul> <li><code>pydio.log</code> (limit 10 MB): the main system logs; these will grow more quickly depending on the log level you define when you start the server. Be aware that using the DEBUG level makes the system extremely verbose.</li> <li><code>tasks.log</code> (limit 10 MB): logs for the background jobs.</li> <li><code>caddy_error.log</code> (limit 4 MB): error logs of the internal Caddy web server.</li> <li>[Enterprise only] <code>audit.log</code> (limit 100 MB): business logs to track user activity, typically for compliance and/or audit purposes. </li> </ul> <p>You should specifically monitor this location and set up external cleaning strategies to get rid of old rolled log files that you no longer need.</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#services","title":"Services","text":"<p>The various microservices all have a specific local working dir that is under the path defined by the <code>CELLS_SERVICES_DIR</code> environment variable (that is <code>&lt;CELLS_WORKING_DIR&gt;/services</code> by default) on each node where they are deployed.</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#update-service","title":"Update Service","text":"<p>Each time you upgrade the server, the old binary is stored under <code>&lt;CELLS_SERVICES_DIR&gt;/pydio.grpc.update</code>. These files are each ~200MB and you can safely get rid of them when you are happy with the current running version. Furthermore, you can always download old versions again from our download server</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#in-app-logs-syslog-audit-tasks","title":"In App Logs (Syslog, Audit, Tasks)","text":"<p>In addition to the log files that we have seen earlier, Pydio Cells also comes with a mechanism to display and search the various logs via the Admin console.</p> <p>To provide this feature, the server uses microservices that ingest and index logs as they are produced by the other running microservices. Under the hood, the log microservices parses log events that they receive via gRPC messages and index them in a key/value store.</p> <p>These key value stores can grow big, especially on big instances. This has 2 consequences:</p> <ul> <li>more space used </li> <li>longer response times when searching for specific logs in the Admin console.</li> </ul>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#automatic-cleaning","title":"Automatic cleaning","text":"<p>Tasks logs </p> <p>The enterprise distribution also comes with a pre-defined job template that can be used to prune old logs from the KV stores. Simply adjust the parameters to fit your needs and run it</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#manual-cleaning-when-using-bleve","title":"Manual cleaning when using Bleve","text":"<p>By default, Cells uses Bleve as a KV store.  These stores are files-backed and the corresponding data is stored in subfolders in  <code>&lt;CELLS_SERVICES_DIR&gt;/pydio.grpc.{log,tasks,audit}</code></p> <p>In worse case scenario, you can get rid of these stores by:</p> <ul> <li>stopping the app</li> <li>delete the <code>*.bleve</code> subfolder </li> <li>restart the app</li> </ul> <p>You won't be able to search for old logs, but the app can start restart and work without issues. If you have kept the log files that are under <code>CELLS_LOG_DIR</code> (cf above) you can still dig them manually and thus won't loose information.</p>"},{"location":"knowledge-base/cells-in-production/cleanup-strategies-for-production-instances/#with-mongodb","title":"With MongoDB","text":""},{"location":"knowledge-base/cells-in-production/installing-clamav-on-a-server/","title":"Installing ClamAV on a server","text":"<p>This article explains how to install ClamAV software, to be used in conjunction with Cells Flows job for antivirus scan.</p> <p>From the Clam AV website:</p> <p>Clam AntiVirus is an open source (GPLv2) anti-virus toolkit, designed especially for e-mail scanning on mail gateways. It provides a number of utilities including a flexible and scalable multi-threaded daemon, a command line scanner and advanced tool for automatic database updates. The core of the package is an anti-virus engine available in a form of shared library.</p> <p>Below information are based on the official installation guide.</p>"},{"location":"knowledge-base/cells-in-production/installing-clamav-on-a-server/#install","title":"Install","text":"<p>Following commands will install:</p> <ul> <li>clamav: the antivirus and also the client to scan.</li> <li>clamav-daemon: installs the daemon that can be used with TCP or UNIX and allow scanning.</li> <li>clamav-freshclam: this package handles all the updates for the antivirus database.</li> </ul> <pre><code>sudo apt install clamav clamav-daemon clamav-freshclam\n</code></pre>"},{"location":"knowledge-base/cells-in-production/installing-clamav-on-a-server/#configure","title":"Configure","text":"<p>After you have installed all the packages, run this command to configure <code>clamav-daemon</code>. You can keep default settings for almost everything, see details below for the parameters that have to be set explicitly.</p> <pre><code>sudo dpkg-reconfigure clamav-daemon\n</code></pre> <p>Important settings:</p> <ul> <li>Socket: choose local UNIX socket if both Cells and ClamAV run on the same machine, in such case, you should remember the path to the socket file (typically: <code>/var/run/clamav/clamd.ctl</code>). You can choose TCP otherwise, and note FQDN and port used.</li> <li>Group Owner of the socket: choose pydio (or the user that runs the <code>cells</code> process if you did not follow our recommendations during Cells install)</li> <li>Maximum stream length: if you want clamd to scan bigger files, put a larger value than the 25MB default. Warning: this will also consume more resources.</li> <li>Choose pydio / pydio as user &amp; group for the daemon process</li> </ul> <p>The daemon is started with systemd, at this point, the service should be started and enabled, to double check:</p> <pre><code>sudo systemctl status clamav-daemon\n</code></pre>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/","title":"Migrate a Cells instance to a new server","text":"<p>This How-To comes in addition to the public documentation about how to manage Backup with Pydio Cells.</p>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#prepare-the-new-machine","title":"Prepare the new machine","text":"<p>The following assumes that your server is running under a recent Red Hat Enterprise Linux-like server, installed from a minimal iso.</p> <pre><code># As sudo user on target machine\nsudo useradd -m -s /bin/bash pydio\n\n# Add some utils \nsudo apt install wget rsync \n\n# Registrer CELLS_WORKING_DIR as global environment variable for everyone\nsudo tee -a /etc/profile.d/cells-env.sh &lt;&lt; EOF\nexport CELLS_WORKING_DIR=/var/cells\nEOF\nsudo chmod 0755 /etc/profile.d/cells-env.sh\n</code></pre> <p>If you have no DB yet, refer to this page https://pydio.com/en/docs/kb/deployment/install-cells-centosrhel for hints about mariaDB installation</p> <pre><code># prepare database\ndbUserPwd=&lt;your pwd here&gt;\nmysql -u root -p -e \"CREATE USER \\\"pydio\\\"@\\\"localhost\\\" IDENTIFIED BY \\\"$dbUserPwd\\\"; CREATE DATABASE cells; GRANT ALL PRIVILEGES ON cells.* to \\\"pydio\\\"@\\\"localhost\\\"; FLUSH PRIVILEGES;\"\n\n# prepare tree structure\nsudo mkdir -p /opt/pydio/bin\n\n# retrieve correct version of the binary\nsudo wget --output-document=/opt/pydio/bin/cells https://download.pydio.com/latest/cells-enterprise/release/{latest}/linux-amd64/cells-enterprise\n\n# Permissions\nsudo chmod a+x /opt/pydio/bin/cells\nsudo chown -R pydio:pydio /opt/pydio\nsudo ln -s /opt/pydio/bin/cells /usr/local/bin/cells\n\n# if necessary (use of reserved ports 80 &amp; 443)\nsudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n\n# Configure systemd\nsudo tee /etc/systemd/system/cells.service &lt;&lt; EOF\n[Unit]\nDescription=Pydio Cells Enterprise Distribution\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nPermissionsStartOnly=true\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\nWorkingDirectory=/home/pydio\n\n# Add environment variables\nEnvironment=CELLS_WORKING_DIR=/var/cells\nEnvironment=PYDIO_ENABLE_METRICS=false\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# and enable the service\nsudo systemctl daemon-reload\nsudo systemctl enable cells\n</code></pre>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#backup-of-the-old-machine","title":"Backup of the old machine","text":"<p>With vanilla setups, to fully restore the system, you only needs 2 things:</p> <ul> <li>a dump of the Cells DB</li> <li>a copy of the data.</li> </ul>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#db-backup","title":"DB Backup","text":"<pre><code># On the source machine\n\n# If it is the \"Go Live\" migration, it is better to stop the cells service before moving the data. If it is for the staging test, you can leave the app \"on\".\nsudo systemctl stop cells\n\n# As the user who run the app, typically, \"pydio\"\nsudo su - pydio\nmkdir ~/backup\ncd ~/backup \n\n## Perform a MySQL dump\ndbName=cells\ndbUser=pydio\nmysqldump -u $dbUser -p $dbName &gt; /home/pydio/backups/current/cells-dump.sql\n</code></pre> <p>You can then copy the mysql dump to the new machine.</p>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#data-backup","title":"Data backup","text":"<p>By default, in a single node deployment, all data (both technical and business data) is in a single folder: - by default at <code>/home/pydio/.config/pydio/cells</code> - if you have followed our best practices at <code>/var/cells</code></p> <p>You should <code>rsync</code> these folder to the new machine. We strongly advise to migrate to <code>/var/cells</code> standard location for the base Cells working dir, even if you used another one on the source machine. If you choose another working dir, modify the various scripts and config file accordingly.</p> <p>Warning: if you have defined file datasources that are not at the default location (that is under <code>${CELLS_WORKING_DIR}/data</code>), you must also copy these folder to your chosen location on the target machine.</p>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#restoration-itself","title":"Restoration itself","text":"<pre><code># On the **target** machine, as sudo user\n\n# Retrieve the data via rsync:\n\n# If you can afford 2 passes (staging and then prod) and have enough place,\n# make the rsync to a tmp folder in the new machine and make a local copy: this speeds up the second pass\nsudo mkdir /var/cells_tmp\n\n# WARNING: you should use the pydio user in the source machine, otherwise you will encounter permission issues, \n# typically on the bleve DB and on the keyring file.\nsourcePort=56789\nsourceDN=your.old.server\nsourceUser=pydio\nsudo rsync -arvz -e 'ssh -p $sourcePort' --progress $sourceUser@$sourceDN:/var/cells /var/cells_tmp/\n# or \nsudo rsync -arvz -e 'ssh -p $sourcePort' --progress $sourceUser@$sourceDN:/home/$sourceUser/.config/pydio/cells /var/cells_tmp/\n\n# Copy locally the working dir\nsudo cp -r /var/cells_tmp /var/cells\nsudo chown -R pydio:pydio /var/cells\n\n## WARNING: switch to pydio user\n\n# As pydio user \n\n# Restore SQL dump\nscp -P $sourcePort $sourceUser@$sourceDN:/home/$sourceUser/backup/cells-dump.sql .\nmysql -u pydio -p cells &lt; cells-dump.sql\n# Skipping foreign key checks upon import works around the creation order issue that sometimes happens\nmysql --init-command=\"SET foreign_key_checks=0;\" -u pydio -p cells &lt; cells-dump.sql \n\n# Adapt the pydio.json file\n\n# first make a copy\ncp /var/cells/pydio.json /var/cells/pydio.json.orig\n\n## Warning: below commands must be adapted to your specific use case, think twice or ask for help if necessary\n\n# If you went from the \"home\" layout to the standard \"var/cells\" layout\nsed -i \"s;/home/pydio/.config/pydio/cells/;/var/cells/;g\" /var/cells/pydio.json\n\n# In single node deployment, if the IP or hostname can change, it might be better to get rid of the peer address param\nsed -i \"s;\\\"PeerAddress\\\": \\\"10.0.10.143\\\",;;g\" /var/cells/pydio.json\n\n# Adapt URLs\nsed -i \"s;\\\"urlInternal\\\": \\\"http://oldname.local:8080\\\";\\\"urlInternal\\\": \\\"http://0.0.0.0:8080\\\";g\"  /var/cells/pydio.json\n# or if only (part of) your fqdn has changed, e.g from old-name.example.com to new-name.example.com\nsed -i \"s/old-name.example.com/new-name.example.com/g\"  /var/cells/pydio.json\n\n# If necessary, change the DB login/mdp and then insure everything is correct\nvi /var/cells/pydio.json \n</code></pre> <p>You should be good to go.</p> <p>First try to start the server from the command line as pydio user, to be able to monitor first start. Then stop the app and restart it with systemd</p>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#troubleshooting-and-tips","title":"Troubleshooting and tips","text":""},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#things-to-check-when-adapting-pydiojson-config-file","title":"Things to check when adapting pydio.json config file","text":"<p>Make a copy of the file before starting to tweak!!</p> <ul> <li>DB URL (typically user &amp; password)</li> <li>Peer addresses</li> <li>Path of local datasource folder(s) on the new FS</li> <li>Bind &amp; public URL</li> </ul>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#clean-an-existing-machine","title":"Clean an existing machine","text":"<p>If you are restoring on a machine that already had cells, you should start with removing legacy data.</p> <p>Warning: the following erase any cells related data on your machine. Think twice.</p> <pre><code># On the target machine, as a sysadmin user\n\nsudo systemctl stop cells\nsudo rm -rf /home/pydio/.config/pydio/cells\n# or \nsudo rm -rf /var/cells\n\nmysql -u pydio -p -e \"DROP DATABASE cells; CREATE DATABASE cells;\"\n\n# for the record if you want to change user password\nmysql -u root -p -e \"ALTER USER 'pydio'@'localhost' IDENTIFIED BY '&lt;the new PWD here&gt;';\"\n</code></pre>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#bleve-cannot-create-new-index","title":"Bleve: cannot create new index","text":"<pre><code>Dez 18 19:07:20 pydio.example.com cells[115428]: [pydio.grpc.log] Cannot open bleve index /var/cells/services/pydio.grpc.log/syslog.bleve cannot create new index, path already exists\n</code></pre> <p>This generally means that the corresponding folder has not been correctly / completely retrieved. It usually happens if you forgot to stop the <code>Cells</code> service before copying the <code>CELLS_WORKING_DIRECTORY</code> content. Double check and try again.</p>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#cannot-restore-mysql-dump","title":"Cannot restore mysql dump","text":"<ul> <li>Check if db is empty, if user and permission are correct</li> <li>Check version of source and target DB</li> <li>When getting an error upon import, try with no check on foreign key:</li> </ul> <pre><code>mysql --init-command=\"SET foreign_key_checks=0;\" -u pydio -p cells &lt; cells-dump.sql\n</code></pre>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#check-io-on-disk","title":"Check I/O on disk","text":"<pre><code>dd if=/dev/zero  of=/tmp/test1.img  bs=1G  count=1  oflag=dsync\n</code></pre>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#check-ds","title":"Check DS","text":"<p>If you are running an enterprise distribution instance and see some dupplication errors during the indexing phase while starting the new instance, you can fix the index with following commands:</p> <pre><code># As Pydio user\ncells tools find-duplicate --dry-run --datasource pydiods1\n# if it seems OK:\ncells tools find-duplicate --dry-run=false --datasource pydiods1\n\n# Before 2.2\n# As Pydio user\ncells data find-duplicate --dry-run --datasource pydiods1\n# if it seems OK:\ncells data find-duplicate --dry-run=false --datasource pydiods1\n</code></pre>"},{"location":"knowledge-base/cells-in-production/migrate-a-cells-instance-to-a-new-server/#network-certificate-issues","title":"network / certificate issues","text":"<p>It is always better to check the target URL from the command line with curl in order to skip the noise introduced by the various caches, typically:</p> <pre><code>curl -v --insecure https://files.example.com/index.html\n</code></pre>"},{"location":"knowledge-base/cells-in-production/datasources-workspaces-layout-recommendations/","title":"Datasources & Workspaces Layout Recommendations","text":"<p>When deploying Cells and building your DataSources and Workspaces, you have to pick the right layout both in terms of data security and system scalability. This article gives a couple of recommendation for having a correct balance.</p>"},{"location":"knowledge-base/cells-in-production/datasources-workspaces-layout-recommendations/#datasources-cost","title":"Datasources \"Cost\"","text":"<p>Datasource is the level where Cells maintains the consistence. It means that the performance of the service depends on the size of the datasource (the number of files). In the other hand, each datasource runs in a private service and requires a table in the database. More datasources in Cells means more resources for the Cells' services. The ratio between the number of datasource and the size of each one should be selected carefully to optimize the resource usage.</p>"},{"location":"knowledge-base/cells-in-production/datasources-workspaces-layout-recommendations/#using-workspaces","title":"Using Workspaces","text":"<p>Being defined on the top of datasources, Workspaces are the right level to define access control rules.</p> <p>A datasource per project is absolutely not a good solution. Instead, you may organize several projects in a datasource. For example, you have a directory /data/cells which stores users' data. The directory structure would be:</p> <ul> <li>/data/cells/datasources/ds1</li> <li>/data/cells/datasources/ds1/project1</li> <li>/data/cells/datasources/ds1/project2</li> <li>/data/cells/datasources/ds1/project3</li> <li>/data/cells/datasources/ds2</li> <li>/data/cells/datasources/ds2/project21</li> <li>/data/cells/datasources/ds2/project22</li> <li>/data/cells/datasources/ds2/project23        </li> </ul> <p>Over the time, as the number of project grows, you can add more new datasources as well as a sub folder for each new project</p> <ul> <li>/data/cells/datasources/dsx</li> <li>/data/cells/datasources/dsx/projectx1</li> <li>/data/cells/datasources/dsx/projectx2</li> <li>/data/cells/datasources/dsx/projectx3</li> </ul>"},{"location":"knowledge-base/cells-in-production/datasources-workspaces-layout-recommendations/#caveats","title":"Caveats","text":"<p>Please keep in mind that you can create new datasource only on the first-level of /data/cells/datasources directory. A new datasource in any second-level sub-directory of /data/cells/datasources/ will result in a nested-service-object error.</p> <p>For further information, you can see .minio.sys directory in /data/cells/datasources. This is the data for the object service, all datasources that are then defined in this location depend on it.</p> <p>See also: https://pydio.com/en/docs/cells/v4/datasources-overview</p>"},{"location":"knowledge-base/client-applications/index/","title":"Client Applications","text":"<ul> <li>Setup Cells Server for CellsSync</li> <li>Using WebDAV clients</li> </ul>"},{"location":"knowledge-base/client-applications/using-webdav-clients/","title":"Using WebDAV clients","text":"<p>You find below instuctions to configure and use each of the webdav client we have been testing. Be advised that each client has a different behaviour, unique to itself.</p>"},{"location":"knowledge-base/client-applications/using-webdav-clients/#macos-finder","title":"MacOS Finder","text":"<p>Do the following: Go to your Finder &gt; right click &gt; connect to a server.</p> <p></p> <p>In the menu that pops up, add your server public address (e.g. <code>http://192.168.0.1:8080/dav/</code>).</p> <p></p> <p>You are then prompted to enter your credentials.</p> <p>You can now access the files located in your Pydio Cells server using the MacOS Finder. Note that your server is mounted as a remote disk: if the connection is lost you also loose your ability to see/interact with your files using the Finder.</p> <p>Do not forget to refresh the Finder if there are changes on Pydio Cells' side</p>"},{"location":"knowledge-base/client-applications/using-webdav-clients/#ubuntu-or-linux-like-distributions","title":"Ubuntu (or Linux like distributions)","text":"<p>Linux users can use the Nautilus file manager.</p> <p>As seen in the below screenshot (Ubuntu 18), if you click on <code>Other locations</code>, a field on the bottom of the screen is opened, allowing you to enter the address of the webdav. </p> <p>For instance: <code>dav://192.168.0.1:8080/dav/personal-files</code>. You are then prompted for login and password and you are good to go.</p> <p>if you are using SSL replace <code>dav</code> by <code>davs</code>  ---&gt; <code>davs://192.168.0.1:8080/dav/personal-files</code></p> <p></p> <p>For command line user you can use <code>mount</code> and mount the volume using the same path.</p>"},{"location":"knowledge-base/client-applications/using-webdav-clients/#windows-explorer","title":"Windows Explorer","text":"<p>Windows 10 users must:</p> <p></p> <ul> <li>Go to This pc </li> <li>go in the top menu to Map a network drive</li> <li>choose a letter type the url such as <code>http://192.168.0.122:8080/dav/personal-files</code> (do not forget to tick connect using different credentials)</li> </ul> <p>In the example, we show a specific workspace, but you can browse all of them by only typing <code>/dav/</code>.</p> <p></p> <p>With windows you might encounter an issue when accessing a webdav that is not running with SSL. To solve this, you have to edit a value in the registry:</p> <ul> <li>Look for this inside the registry: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\WebClient\\Parameters</code></li> <li>Then select this <code>BasicAuthLevel</code></li> <li>and set it's value to 2</li> </ul> <p>the value to 2 means that it's no more restricted to only secure connection(https)</p> <p>It's done. You can now browse your workspaces and cells from your explorer.</p> <p>Do not forget to refresh the explorer (F5 key) to get an up to date state each time you make a modification in the GUI directly: auto refresh and synchronisation is not yet implemented.</p>"},{"location":"knowledge-base/client-applications/using-webdav-clients/#cyberduck-client-macos-windows","title":"Cyberduck client (MacOS &amp; Windows)","text":"<p>Cyberduck is a free storage browser. It can also be used as a webdav client.</p> <p>You can downlooad it and find a complete documentation on Cyberduck website.</p> <p>To configure Cyberduck with Pydio Cells: </p> <ul> <li>Create a connection (in the below example, Pydio Cells is accessed at <code>http://192.168.0.122:8080</code>)</li> </ul> <p></p> <ul> <li>Choose relevant protocol (HTTP or HTTPS) depending on your setup.</li> </ul> <p></p> <ul> <li>Server: the address where your server is running (can also be a domain name for instance example.com)</li> <li>Port: the port on which it is accessed, usually it 443 or 80 but for our example we use 8080.</li> <li>Username: Your Pydio Cells username</li> <li>Path: you can either point to a specific workspace by typing <code>/dav/workspace-name</code> or <code>/dav/</code> to list all workspaces.</li> </ul>"},{"location":"knowledge-base/client-applications/setup-cells-server-for-cellssync/","title":"Setup Cells Server for CellsSync","text":"<p>CellsSync is the desktop app providing offline synchronization of files and folders. Written in 100% GO, as the server is, it shares most of its library with Cells. This how-to provides tips and tricks for configuring Cells in a proper way for starting using CellsSync.</p>"},{"location":"knowledge-base/client-applications/setup-cells-server-for-cellssync/#oidc-authentication","title":"OIDC Authentication","text":"<p>CellsSync provides authentication to the server by using an OpenIDConnect workflow. This means that when a user wants to login in the desktop app, it is redirected to the Cells web UX inside an external browser, and redirected back to the application one the process is complete. </p> <p>As the CellsSync frontend must call a specific OIDC discovery endpoint before initiating the authentication workflow, currently the Self-Signed TLS configuration on the server is not working, </p> <p>If you do want to enable self-signed, e.g. for development or staging case, you have to manually install the rootCA used for generating the server certificate in your desktop local trust store. Note that if you upgraded from Cells V1 with a self-signed mode, you have to re-run the  <code>cells config proxy tls</code>  step to regenerate a working configuration (this will create a rootCA that you can install in your trust store).</p>"},{"location":"knowledge-base/client-applications/setup-cells-server-for-cellssync/#proxy-firewalls","title":"Proxy / Firewalls","text":"<p>For best performances and real-time events, CellsSync communicates with the server using a gRPC connection. gRPC is an HTTP/2 protocol, which implies that HTTP/2 must be enabled on the bind address facing the outside world.</p> <p>If you are behind a proxy or inside a private network, you may have to check your proxy settings: </p> <ul> <li>[SSL Enabled]  Cert/Key couple, Let's Encrypt, Self-signed config (see note below)</li> </ul> <p>Cells will serve HTTP/1.1 and HTTP/2 on the same port, the one you define for external url (e.g; 443, or 8080 or anything you choose). You don't have to open any other port in your firewall.</p> <ul> <li>[No Proxy] Your Cells is directly facing the outside world with a proper SSL configuration, everything should be working out of the box</li> <li> <p>[Proxy] Just make sure your proxy is HTTP/2 enabled. If Cells using self-signed configuration (see note below), you can either install the generated rootCA.pem on the proxy machine, or configure the proxy to SkipVerify (for example insecure_skip_verify on Caddy).</p> </li> <li> <p>[No SSL] Cells will serve HTTP/1.1 and HTTP/2 on two different ports. By default, gRPC will pick a randomly available port and advertise it in the /a/config/discovery API. The CellsSync client will automagically query this API to connect. </p> </li> <li> <p>[No firewall, No Proxy] If you are on a local machine with all ports open, this should work out of the box.</p> </li> <li>[Firewall and/or Proxy] You will have to make proper configuration to open and forward the HTTP/2 on this port. To avoid using a random port at each restart, you can fix this port by using the CELLS_GRPC_EXTERNAL environnement variable at startup. Your proxy will probably not be able to serve HTTPS but HTTP only. </li> </ul> <p>The various cases are summarized in the figure below.</p> <p></p>"},{"location":"knowledge-base/client-applications/setup-cells-server-for-cellssync/#testing","title":"Testing","text":"<p>The way to test if your setup is correct is to simply create a synchronization task in the app. If you can successfully browse workspaces on the server, it means that gRPC is working well..</p>"},{"location":"knowledge-base/deployment/index/","title":"Deployment","text":"<ul> <li>Install Cells on CentOS/RHEL</li> <li>Install Cells on Debian/Ubuntu</li> <li>Install Cells on MacOSX</li> <li>Install Cells on Raspberry</li> <li>Install Cells on Windows</li> <li>Monitoring Cells with Prometheus &amp; Grafana</li> <li>No private IP detected issue</li> <li>Running Cells as a service with Supervisor</li> <li>Running Cells as a service with Systemd</li> <li>Running Cells behind a Caddy2 reverse proxy</li> <li>Running Cells behind a Nginx reverse proxy</li> <li>Running Cells behind an Apache reverse proxy</li> <li>Running a Cells container behind a Traefik reverse proxy</li> </ul>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/","title":"Install Cells on Debian/Ubuntu","text":"<p>This guide explains how to install and configure Cells on an Debian-like system. It contains strongly opinionated choices and best practices. It explains the steps required for a production-ready and reasonnably secured server. For a simple test, you should rather visit our quick start page.</p> <p>Use case</p> <p>Deploy a self-contained Pydio Cells instance on a web-facing Debian 12 server, exposed at <code>https://&lt;your-fqdn&gt;</code> using a Let's Encrypt certificate.</p> <p>Requirements</p> <ul> <li>CPU/Memory: 4GB RAM, 2 CPU</li> <li>Storage: 100GB SSD hard drive</li> <li>Operating System:</li> <li>Debian (10, 11, 12), Ubuntu LTS (18, 20, 22)</li> <li>An admin user with sudo rights that can connect to the server via SSH</li> <li>Note: The present guide uses a Debian 11 (Bullseye) server. You might have to adapt some commands if you use a different version or flavour.</li> <li>Networking:</li> <li>One Network Interface Controller connected to the internet</li> <li>A registered domain that points toward the public IP of your server: if you already know your IP address, it is a good idea to already add a <code>A Record</code> in your provider DNS so that the record has been already propagated when we need it.</li> </ul>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#installation","title":"Installation","text":""},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#dedicated-user-and-file-system-layout","title":"Dedicated user and file system layout","text":"<p>We recommend to run Pydio Cells with a dedicated <code>pydio</code> user with no sudo permission.</p> <p>As admin user on your server:</p> <pre><code># Create pydio user with a home directory\nsudo useradd -m -s /bin/bash pydio\n\n# Create necessary folders\nsudo mkdir -p /opt/pydio/bin /var/cells\nsudo chown -R pydio: /opt/pydio /var/cells\n\n# Add system-wide ENV var\nsudo tee -a /etc/profile.d/cells-env.sh &lt;&lt; EOF\nexport CELLS_WORKING_DIR=/var/cells\nEOF\nsudo chmod 0755 /etc/profile.d/cells-env.sh\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#verification","title":"Verification","text":"<p>Login as user <code>pydio</code> and make sure that the environment variables are correctly set:</p> <pre><code>sysadmin@server:~$ sudo su - pydio \npydio@server:~$ echo $CELLS_WORKING_DIR\n/var/cells\npydio@server:~$ exit\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#database","title":"Database","text":"<p>We use the default MariaDB package shipped with Debian Bullseye:</p> <pre><code># Install the server from the default repository\nsudo apt install mariadb-server\n# Run the script to secure your install\nsudo mysql_secure_installation\n\n# Open MySQL CLI to create your database and a dedicated user\nmysql -u root -p\n</code></pre> <p>Start a MySQL prompt and create the database and the dedicated <code>pydio</code> user.</p> <pre><code>CREATE DATABASE cells;\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;PUT YOUR PASSWORD HERE&gt;';\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre> <p>Note: default limits on MariaDB are quite low after install. If your target instance is not small, you probably should adapt them for Cells to run smoothly:</p> <pre><code>SET GLOBAL max_connections = 1000;\nSHOW VARIABLES LIKE \"max_connections\";\nSET GLOBAL max_prepared_stmt_count = 131056;\nSHOW VARIABLES LIKE \"max_prepared_stmt_count\";\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#verification_1","title":"Verification","text":"<p>Check the service is running and that the user <code>pydio</code> is correctly created:</p> <pre><code>sudo systemctl status mariadb\nmysql -u pydio -p\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#retrieve-binary","title":"Retrieve binary","text":"<pre><code># As pydio user\nsudo su - pydio \n\n# Download correct binary\ndistribId=cells \n# or for Cells Enterprise\n# distribId=cells-enterprise \nwget -O /opt/pydio/bin/cells https://download.pydio.com/latest/${distribId}/release/{latest}/linux-amd64/${distribId}\n\n# Make it executable\nchmod a+x /opt/pydio/bin/cells\nexit\n\n# As sysadmin user \n# Add permissions to bind to default HTTP ports\nsudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n\n# Declare the cells commands system wide\nsudo ln -s /opt/pydio/bin/cells /usr/local/bin/cells\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#verification_2","title":"Verification","text":"<p>Call the command <code>version</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells version\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#configuration","title":"Configuration","text":""},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#configure-the-server","title":"Configure the server","text":"<p>Call the command <code>configure</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells configure\n</code></pre> <p>If you choose <code>Browser install</code> at the first prompt, you can access the configuration wizard at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code> after accepting the self-signed certificate. (Ensure the port <code>8080</code> is free and not blocked by a firewall).</p> <p>You can alternatively finalise the configuration from the command line by answering a few questions.</p>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#verification_3","title":"Verification","text":"<p>If you used the browser install, you can login in the web browser as user <code>admin</code>.</p> <p>If you have done the CLI install, you first need to start the server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect and login at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code></p> <p>Note: At this stage, we start the server in foreground mode. In such case, it is important that you always stop the server using the <code>CTRL + C</code> shortcut before calling the <code>start</code> command again.</p>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#declare-site-and-generate-lets-encrypt-certificate","title":"Declare site and generate Let's Encrypt Certificate","text":"<p>At this point, we assume that:</p> <ul> <li>your <code>A record</code> has been propagated: verify with <code>ping &lt;YOUR_FQDN&gt;</code> from your local workstation</li> <li>both port 80 and 443 are free and not blocked by any firewall <code>sudo netstat -tulpn</code></li> </ul> <p>Create a site:</p> <pre><code>sudo su - pydio \ncells configure sites\n</code></pre> <ul> <li>Choose \"Create a new site\"</li> <li>Choose <code>443</code> as the port to bind to</li> <li>Enter your FQDN as the address to bind to</li> <li>Choose \"Automagically generate certificate with Let's Encrypt\"</li> <li>Enter your Email, Accept Let's Encrypt EULA</li> <li>Redirect default <code>HTTP</code> port towards <code>HTTPS</code> </li> <li>Double check and save.</li> </ul> <p>Note: if you are not 100% sure of your network setup, we suggest that you first use the staging entry point for Let's Encrypt. You can then avoid being black-listed while fine-tuning and fixing any network issue you might still have at this point.</p>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#verification_4","title":"Verification","text":"<p>Restart your server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect to your web site at <code>https://&lt;YOUR_FQDN&gt;</code>. A valid certificate is now used.</p> <p>Stop your server once again before performing the finalisation steps.</p>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#finalisation","title":"Finalisation","text":""},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#run-your-server-as-a-service-with-systemd","title":"Run your server as a service with systemd","text":"<p>Create a configuration file <code>sudo vi /etc/systemd/system/cells.service</code> with the following:</p> <pre><code>[Unit]\nDescription=Pydio Cells\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nPermissionsStartOnly=true\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\nWorkingDirectory=/home/pydio\n\n# Add environment variables\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Reload systemd daemon, enable and start cells:</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable --now cells\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#verification_5","title":"Verification","text":"<pre><code># you can check the system logs to insure everything seems OK\njournalctl -fu cells -S -1h\n</code></pre> <p>Connect to your certified web site at <code>https://&lt;YOUR_FQDN&gt;</code>.</p>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#add-a-firewall","title":"Add a firewall","text":"<p>In this tutorial, we use UncomplicatedFirewall (UFW).</p> <pre><code>sudo apt install ufw\nsudo ufw allow ssh\nsudo ufw allow http\nsudo ufw allow https\nsudo systemctl start ufw\nsudo systemctl status ufw\n</code></pre> <p>If you can still connect to your web GUI and open a ssh connection, even after reboot, you are now good to go. </p> <p>Thanks for using Pydio Cells and happy file sharing!</p>"},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#troubleshooting","title":"Troubleshooting","text":""},{"location":"knowledge-base/deployment/install-cells-on-debian-ubuntu/#main-tips","title":"Main tips","text":"<p>With cells as a service, you can access the logs in different ways:</p> <pre><code># Pydio file logs\ntail -200f /var/cells/logs/pydio.log\n# Some of the microservices have their own log files, check:\nls -lsah /var/cells/logs/\n\n# Check systemd files\njournalctl -fu cells -S -1h\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/","title":"Install Cells on CentOS/RHEL","text":"<p>This guide explains how to configure Cells on a Red-Hat-Enterprise-Linux-like system. It contains strongly opinionated choices and best practices. It guides you through the steps required for a production-ready and reasonnably secured server. For a simple test on a RHEL-like server, you can skim through our quick start page instead.</p> <p>Usecase</p> <p>Deploy a self-contained Pydio Cells instance on a web-facing RHEL-like Linux server, exposed at <code>https://&lt;your-fqdn&gt;</code> using a Let's Encrypt certificate.</p> <p>Requirements</p> <ul> <li>CPU/Memory: 4GB RAM, 2 CPU</li> <li>Storage: 100GB SSD hard drive</li> <li>Operating System:</li> <li>RHEL 7, 8 or 9, Rocky Linux 8 or 9, CentOS and Scientific Linux 7.  </li> <li>An admin user with sudo rights that can connect to the server via SSH</li> <li>Note: The present guide uses a Rocky Linux 9 server. You might have to adapt some commands if you use a different version or flavour.</li> <li>Networking:</li> <li>One Network Interface Controller connected to the internet</li> <li>A registered domain that points toward the public IP of your server: if you already know your IP address, it is a good idea to already add a <code>A Record</code> in your provider DNS so that the record has been already propagated when we need it.</li> </ul>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#installation","title":"Installation","text":""},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#dedicated-user-and-file-system-layout","title":"Dedicated user and file system layout","text":"<p>We recommend to run Pydio Cells with a dedicated <code>pydio</code> user with no sudo permission.</p> <p>As admin user on your server:</p> <pre><code># Create pydio user with a home directory\nsudo useradd -m -s /bin/bash pydio\n\n# Create necessary folders\nsudo mkdir -p /opt/pydio/bin /var/cells/certs\nsudo chown -R pydio:pydio /opt/pydio /var/cells\n\n# Add system-wide ENV var\nsudo tee -a /etc/profile.d/cells-env.sh &lt;&lt; EOF\nexport CELLS_WORKING_DIR=/var/cells\nEOF\nsudo chmod 0755 /etc/profile.d/cells-env.sh\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#verification","title":"Verification","text":"<p>Login as user <code>pydio</code> and make sure that the environment variables are correctly set:</p> <pre><code>sysadmin@server:~$ sudo su - pydio \npydio@server:~$ echo $CELLS_WORKING_DIR\n/var/cells\npydio@server:~$ exit\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#database","title":"Database","text":"<p>On Rocky Linux 9.2, default MariaDB package is 10.5 that works well for Cells. So simply do:</p> <pre><code>sudo yum install mariadb-server\nsudo systemctl enable --now mariadb\n\n# Run the script to secure your install\nsudo mysql_secure_installation\n\n# Open MySQL CLI to create your database and a dedicated user\nsudo mysql -u root -p\n</code></pre> <p>Start a MySQL prompt and create the database and the dedicated <code>pydio</code> user.</p> <pre><code>CREATE DATABASE cells;\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;PUT YOUR OWN PASSWORD HERE&gt;';\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\nexit\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#verification_1","title":"Verification","text":"<p>Check the service is running and that the user <code>pydio</code> is correctly created:</p> <pre><code>sudo systemctl status mariadb\nmysql -u pydio -p\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#retrieve-binary","title":"Retrieve binary","text":"<pre><code># As pydio user\nsudo su - pydio \n\n# Download correct binary\ndistribId=cells \n# or for Cells Enterprise\n# distribId=cells-enterprise \nwget -O /opt/pydio/bin/cells -v https://download.pydio.com/latest/${distribId}/release/{latest}/linux-amd64/${distribId}\n\n# Make it executable\nchmod a+x /opt/pydio/bin/cells\nexit\n\n# As sysadmin user \n# Add permissions to bind to default HTTP ports\nsudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n\n# Declare the cells commands system wide\nsudo ln -s /opt/pydio/bin/cells /usr/local/bin/cells\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#verification_2","title":"Verification","text":"<p>Call the command <code>version</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells version\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#configuration","title":"Configuration","text":""},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#configure-the-server","title":"Configure the server","text":"<p>Call the command <code>configure</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells configure\n</code></pre> <p>If you choose <code>Browser install</code> at the first prompt, you can access the configuration wizard at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code> after accepting the self-signed certificate. (Ensure the port <code>8080</code> is free and not blocked by a firewall).</p> <p>You can alternatively finalise the configuration from the command line by answering a few questions.</p>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#verification_3","title":"Verification","text":"<p>If you used the browser install, you can login in the web browser as user <code>admin</code></p> <p>First insure your firewall does not block the port 8080:</p> <pre><code>sudo firewall-cmd --add-port=8080/tcp\n</code></pre> <p>If you have done the CLI install, you first need to start the server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect and login at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code></p> <p>Note: At this stage, we start the server in foreground mode. It is important that you always stop the server using the <code>CTRL + C</code> shortcut before calling the <code>start</code> command again.</p>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#declare-site-and-generate-lets-encrypt-certificate","title":"Declare site and generate Let's Encrypt Certificate","text":"<p>At this point, we assume that:</p> <ul> <li>your <code>A record</code> has been propagated: verify with <code>ping &lt;YOUR_FQDN&gt;</code> from your local workstation</li> <li>both port 80 and 443 are free and not blocked by any firewall <code>sudo netstat -tulpn</code></li> </ul> <p>Create a site:</p> <pre><code>sudo su - pydio \ncells configure sites\n</code></pre> <ul> <li>Choose \"Create a new site\"</li> <li>Choose <code>443</code> as the port to bind to</li> <li>Enter your FQDN as the address to bind to</li> <li>Choose \"Automagically generate certificate with Let's Encrypt\"</li> <li>Enter your Email, Accept Let's Encrypt EULA</li> <li>In a first pass, if you have a complicated network setup, you might want to choose to use the staging entrypoint for Let's Encrypt: it has much more generous limitations and let you try/error while fixing glitches in your network setup without getting black-listed. </li> <li>Redirect default <code>HTTP</code> port towards <code>HTTPS</code></li> <li>Double check and save.</li> </ul>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#verification_4","title":"Verification","text":"<pre><code># Restart your server\nsudo su - pydio \ncells start\n</code></pre> <p>Connect to your web site at <code>https://&lt;YOUR_FQDN&gt;</code>. A valid certificate is now used.</p> <p>Stop your server once again before performing the finalisation steps.</p>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#finalisation","title":"Finalisation","text":""},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#run-your-server-as-a-service-with-systemd","title":"Run your server as a service with systemd","text":"<p>Create a configuration file <code>sudo vi /etc/systemd/system/cells.service</code> with the following:</p> <pre><code>[Unit]\nDescription=Pydio Cells\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nPermissionsStartOnly=true\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\nWorkingDirectory=/home/pydio\n\n# Add environment variables\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Reload systemd daemon, enable and start cells:</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable --now cells\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#verification_5","title":"Verification","text":"<pre><code># you can check the system logs to insure everything seems OK\nsudo journalctl -fu cells -S -1h\n</code></pre> <p>Connect to your certified web site at <code>https://&lt;YOUR_FQDN&gt;</code>.</p> <p>You are now good to go. Happy file sharing!</p>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#troubleshooting","title":"Troubleshooting","text":""},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#main-tips","title":"Main tips","text":"<p>With Cells running as a service, you can access the logs in different ways:</p> <pre><code># Pydio file logs\ntail -200f /var/cells/logs/pydio.log\n# Some of the microservices have their own log files, check:\nls -lsah /var/cells/logs/\n\n# Check systemd files\njournalctl -fu cells -S -1h\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#time-out-while-trying-to-reach-the-web-ui","title":"Time-out while trying to reach the web UI","text":"<p>If the server is started and you get timeout errors while trying to connect to the web UI, it is generally a sign that the connection to the declared port is blocked by a firewall. Check both on your OS and on the admin console of your machine provider. </p>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#selinux-is-enforced","title":"SELinux is enforced","text":"<p>If, after a successful installation and when you try to navigate to the main application page with your browser, you land on a blank page with following message:</p> <p>Access denied.</p> <p>ensure you have modified SELinux to be in permissive mode.</p>"},{"location":"knowledge-base/deployment/install-cells-on-centos-rhel/#non-standard-db-install","title":"Non standard DB install","text":"<p>If the default MariaDB package shipped with your OS does not meet your needs, you can install a more recent version from official MariaDB repository. Typically to get version 10.4 on Centos7:</p> <pre><code># Add MariaDB 10.4 CentOS repository list\n# See http://downloads.mariadb.org/mariadb/repositories/\nsudo mkdir -p /etc/yum.repos.d\nsudo tee /etc/yum.repos.d/MariaDB.repo &lt;&lt; EOF\n[mariadb]\nname = MariaDB\nbaseurl = http://yum.mariadb.org/10.4/centos7-amd64\ngpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\ngpgcheck=1\nEOF\n\n# Install and start the server\nsudo yum install MariaDB-server\nsudo systemctl enable --now mariadb\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-macosx/","title":"Install Cells on MacOSX","text":"<p>This guide explains how to install and configure Pydio Cells on macOS.</p> <p>Cells comes as a self-contained binary that can be directly run. The only hard requirement is a recent MySQL server. You can use either MySQL (5.7 or 8) or MariaDB 10.3+, both are available in Homebrew.</p> <p><code>brew install mysql</code> or <code>brew install mariadb</code></p>"},{"location":"knowledge-base/deployment/install-cells-on-macosx/#installation","title":"Installation","text":""},{"location":"knowledge-base/deployment/install-cells-on-macosx/#pydio","title":"Pydio","text":"<p>Download the Pydio Cells binary on your server/machine with the following command:</p> <pre><code># You can use this url as-is: it will be resolved automatically to latest version\nwget https://download.pydio.com/latest/cells/release/{latest}/darwin-amd64/cells\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-macosx/#port-80-443","title":"Port 80 &amp; 443","text":"<p>You can only use these ports if you are connected as an Admin User or root.</p> <p>By default, Apache is running on macOS, so you need to ensure that it - or any other webservers - is not bound to these ports.</p> <p>To stop the default Apache, you can use:</p> <p><code>sudo apachectl stop</code></p> <p>To prevent Apache from starting during launch, you may use:</p> <p><code>sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist</code></p>"},{"location":"knowledge-base/deployment/install-cells-on-macosx/#database-configuration","title":"Database configuration","text":"<p>In this section, we assume you have installed MySQL server. Adapt the following steps to your current setup.</p> <pre><code># Go to mysql mode\nsudo mysql -u root\n# Create new user and set password\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY 'your password goes here';\nCREATE DATABASE cells;\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-macosx/#starting-with-pydio","title":"Starting with Pydio","text":"<p>First, give execution permission on the file for your user. For instance, you can use <code>chmod u+x &lt;binary&gt;</code>.</p> <p>Then run the installer with the following command:</p> <pre><code>cells configure\n</code></pre> <p>Once you have finished the configuration, you can start Cells with:</p> <pre><code>cells start\n</code></pre> <p>By default, the server is started with a self-signed certificate on port 8080: to access the webUI browse to <code>https://localhost:8080</code> and accept the certificate.</p> <p>To configure a different URL and/or port for Cells, run the following command.</p> <pre><code>cells configure sites\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-macosx/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>The database service might not be started, you can look at its status using : <code>brew services list</code> and then <code>brew services start mysql</code> if needed.</li> <li>You can look at the webserver's error file located in <code>/Users/&lt;Your User Name&gt;/Library/Application Support/Pydio/cells</code>.</li> </ul>"},{"location":"knowledge-base/deployment/install-cells-on-windows/","title":"Install Cells on Windows","text":"<p>This guide shows how to install and run Pydio Cells on Windows 10.</p> <p>The binary also work on other version of Windows Desktop (8, 11) and of the Windows Server. Yet, please note that due to the majority of UNIX-like boxes in the enterprise server world and also the lack of feedback from the community, the Windows version of our application might still have unknown glitches and is not officially suported.</p> <p>Please feel free to join our community to improve this. </p>"},{"location":"knowledge-base/deployment/install-cells-on-windows/#install-cells-on-windows-10","title":"Install Cells on Windows 10","text":"<p>The only hard requirement is a recent MySQL database. If not yet present on your machine, you can refer to:  </p> <ul> <li>MySQL 8.0</li> <li>MariaDB 10.4</li> </ul> <p>You can then download the Pydio Cells executable from our download server.</p> <p>Open a powershell terminal then proceed to install with the following command:</p> <ul> <li><code>.\\cells.exe configure</code></li> </ul> <p>Note: on Powershell, with legacy version of Cells or Windows, if the arrows keys do not seem to work, you can try with H-J-K-L (J: Up, K: Down).</p> <p>Note: the legacy Windows Command Prompt, also known as CMD, which is the original shell for the Microsoft DOS operating system and has been the default until Windows 10 is known to have issues with the <code>Go</code> language command framework that we use to directly communicate with the server via terminal. On some version, it renders the Cells CLI completely unusable. TL;DR: use <code>powershell</code>.</p> <p>At first prompt, you can choose how you want to go on with the installation:</p> <ul> <li>Browser based: opens a tab in your local browser with an intuitive installer.</li> <li>command line interface: for advanced users, pretty straight forward.</li> </ul> <p>Once installed, you can find the application working folder with data, configurations and logs under %APPDATA%. For instance: <code>C:\\Users\\pydio\\AppData\\Roaming\\Pydio\\cells</code>.</p> <p>Note: you may have to explicitly allow displaying hidden files/folders in your settings to see this folder.</p> <p>You can now start Cells and access it at <code>https://localhost:8080</code> or <code>https://&lt;server ip or domain&gt;:8080</code></p> <pre><code>.\\cells.exe start\n</code></pre> <p>By default, Cells start on port 8080 with a self-signed certificate. To change this and use a different domain, port or protocol, run:</p> <pre><code>.\\cells.exe configure sites\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-windows/#troubleshooting","title":"Troubleshooting","text":""},{"location":"knowledge-base/deployment/install-cells-on-windows/#error-message-when-moving-files-license-binary","title":"Error message when moving files (license, binary...)","text":"<p>You might encounter this message in the logs after performing actions like updating the license or upgrading to the latest version of the server via the in-app process:</p> <pre><code>Update successfully applied but previous binary could not be moved to backup folder     {\"error\": \"remove C:\\\\&lt;path to you binary file&gt;\\\\cells-v3.0.9.exe: Access is denied.\"}\n</code></pre> <p>This is a known issue and non-blocking: the new file is correctly installed on its intended destination and the app will function normally.</p>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/","title":"Install Cells on Raspberry","text":"<p>This guide explains how to install and configure Cells on a Raspberry Pi system.</p> <p>Use case</p> <p>Deploy a self-contained Pydio Cells instance on your local home network with a simple Raspberry Pi.</p> <p>Requirements</p> <ul> <li>Although we tested and could start Cells on a Rasberry Pi 3B with only 1GB of RAM, we suggest to use a version 4B with at least 4 GB RAM.</li> <li>Storage: 32 SD card</li> <li>Operating System:</li> <li>Raspbian (Bullseye, Buster or Stretch), the official Raspberry Pi desktop OS (which a Raspbian repackaged the Raspberry Pi team) also works out of the box.  </li> <li>An admin user with sudo rights that can connect to the server via SSH</li> <li>Networking: TODO.</li> </ul>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#installation","title":"Installation","text":""},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#dedicated-user-and-file-system-layout","title":"Dedicated user and file system layout","text":"<p>We recommend to run Pydio Cells with a dedicated <code>pydio</code> user with no sudo permission:</p> <pre><code># Create pydio user with a home directory\nsudo useradd -m -s /bin/bash pydio\n\n# Create necessary folders\nsudo mkdir -p /opt/pydio/bin /var/cells/certs\nsudo chown -R pydio: /opt/pydio /var/cells\n\n# Add system-wide ENV var\nsudo tee -a /etc/profile.d/cells-env.sh &lt;&lt; EOF\nexport CELLS_WORKING_DIR=/var/cells\nEOF\nsudo chmod 0755 /etc/profile.d/cells-env.sh\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#verification","title":"Verification","text":"<p>Login as user <code>pydio</code> and make sure that the environment variables are correctly set:</p> <pre><code>user@raspberrypi:~$ sudo su - pydio \npydio@raspberrypi:~$ echo $CELLS_WORKING_DIR\n/var/cells\npydio@raspberrypi:~$ exit\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#database","title":"Database","text":"<p>We use the default mariadb-server package shipped with Bullseye, it installs the 10.5 version with no hassle:</p> <pre><code>sudo apt install mariadb-server\n# You should run the script to secure your install\nsudo mysql_secure_installation\n\n# Open MySQL CLI to create your database and a dedicated user\nsudo mysql -u root -p\n</code></pre> <p>Start a MySQL prompt and create the database and the dedicated <code>pydio</code> user.</p> <pre><code>CREATE DATABASE cells;\nCREATE USER 'pydio'@'localhost' IDENTIFIED BY '&lt;PUT YOUR PASSWORD HERE&gt;';\nGRANT ALL PRIVILEGES ON cells.* to 'pydio'@'localhost';\nFLUSH PRIVILEGES;\nexit\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#verification_1","title":"Verification","text":"<p>Check the service is running and that the user <code>pydio</code> is correctly created:</p> <pre><code>sudo systemctl status mariadb\nmysql -u pydio -p\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#retrieve-binary","title":"Retrieve binary","text":"<p>Note: we only started shipping the necessary ARM build for Cells at v4.</p> <pre><code># As pydio user\nsudo su - pydio \n\n# Download correct binary\ndistribId=cells \n# or for Cells Enterprise\n# distribId=cells-enterprise \nwget -O /opt/pydio/bin/cells https://download.pydio.com/latest/${distribId}/release/{latest}/linux-arm/${distribId}\n\n# Make it executable\nchmod a+x /opt/pydio/bin/cells\nexit\n\n# As sysadmin user \n# Add permissions to bind to default HTTP ports\nsudo setcap 'cap_net_bind_service=+ep' /opt/pydio/bin/cells\n\n# Declare the cells commands system wide\nsudo ln -s /opt/pydio/bin/cells /usr/local/bin/cells\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#verification_2","title":"Verification","text":"<p>Call the command <code>version</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells version\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#configuration","title":"Configuration","text":""},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#configure-the-server","title":"Configure the server","text":"<p>Call the command <code>configure</code> as user <code>pydio</code>:</p> <pre><code>sudo su - pydio \ncells configure\n</code></pre> <p>If you choose <code>Browser install</code> at the first prompt, you can access the configuration wizard at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code> after accepting the self-signed certificate. (Ensure the port <code>8080</code> is free and not blocked by a firewall).</p> <p>You can alternatively finalise the configuration from the command line by answering a few questions.</p>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#verification_3","title":"Verification","text":"<p>If you used the browser install, you can login in the web browser as user <code>admin</code>.</p> <p>If you have done the CLI install, you first need to start the server:</p> <pre><code>sudo su - pydio \ncells start\n</code></pre> <p>Connect and login at <code>https://&lt;YOUR PUBLIC IP&gt;:8080</code></p> <p>Note: At this stage, we start the server in foreground mode. In such case, it is important that you always stop the server using the <code>CTRL + C</code> shortcut before calling the <code>start</code> command again.</p>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#finalisation","title":"Finalisation","text":""},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#run-your-server-as-a-service-with-systemd","title":"Run your server as a service with systemd","text":"<p>Create a configuration file <code>sudo vi /etc/systemd/system/cells.service</code> with the following:</p> <pre><code>[Unit]\nDescription=Pydio Cells\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nPermissionsStartOnly=true\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\nWorkingDirectory=/home/pydio\n\n# Add environment variables\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Reload systemd daemon, enable and start cells:</p> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable --now cells\n</code></pre>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#verification_4","title":"Verification","text":"<pre><code># you can check the system logs to insure everything seems OK\njournalctl -fu cells -S -1h\n</code></pre> <p>You are now good to go. Happy file sharing!</p>"},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#troubleshooting","title":"Troubleshooting","text":""},{"location":"knowledge-base/deployment/install-cells-on-raspberry/#main-tips","title":"Main tips","text":"<p>With cells as a service, you can access the logs in different ways:</p> <pre><code># Pydio file logs\ntail -200f /var/cells/logs/pydio.log\n# Some of the microservices have their own log files, check:\nls -lsah /var/cells/logs/\n\n# Check systemd files\njournalctl -fu cells -S -1h\n</code></pre>"},{"location":"knowledge-base/deployment/no-private-ip-detected-issue/","title":"No private IP detected issue","text":"<p>When starting <code>cells</code>, you see this warning in your logs:</p> <pre><code>Warning: no private IP detected for binding broker. Will bind to &lt;YOUR PUBLIC IP ADDRESS&gt;, which may give public access to the broker.\n</code></pre> <p>You should solve this issue by adding a virtual NIC  on your machine or you might be at risk (depending onn how secure is your network).</p>"},{"location":"knowledge-base/deployment/no-private-ip-detected-issue/#overview","title":"Overview","text":"<p>Internally, Pydio Cells is implemented with a microservice oriented architecture: each simple feature is implemented as an independant brick that exposes a set of internal APIs inside Cells.</p> <p>All microservices communicate together via gRPC, a HTML2 based protocol. It is important that this communication happens on a private network for better security.</p> <p>On single instance servers, this is done by using a private IP of the server.</p>"},{"location":"knowledge-base/deployment/no-private-ip-detected-issue/#how-to-fix","title":"How to fix","text":"<p>There are many ways to declare a private virtual interface. A few examples:</p>"},{"location":"knowledge-base/deployment/no-private-ip-detected-issue/#with-docker","title":"With docker","text":"<p>If you have <code>docker</code> installed on your machine, launch the service: the docker daemon creates a virtual private network that can be used by Cells.</p>"},{"location":"knowledge-base/deployment/no-private-ip-detected-issue/#on-debian-like","title":"On Debian like","text":"<p>If your main interface is called <code>eno1</code>, make a backup of your <code>/etc/network/interfaces</code> file and append this:</p> <pre><code># virtual IP on eno1\nauto eno1:0\niface eno1:0 inet static\naddress 10.0.0.1\nnetmask 255.255.255.0\nnetwork 10.0.0.0\nbroadcast 10.0.0.255\n</code></pre> <p>From your comand line, mount the virtual NIC and list all:</p> <pre><code>sudo ifup eno1:0\nsudo ip address\n</code></pre>"},{"location":"knowledge-base/deployment/no-private-ip-detected-issue/#on-rhel-like","title":"On RHEL like","text":"<p>Your main interface is called <code>eth0</code>, adapt otherwise.</p> <pre><code>sudo tee /etc/sysconfig/network-scripts/ifcfg-eth0:0 &lt;&lt; EOF\nDEVICE=\"eth0:0\"\nONBOOT=\"yes\"\nBOOTPROTO=\"static\"\nIPADDR=\"10.0.0.1\"\nNETMASK=\"255.255.255.0\"\nBROADCAST=\"10.0.0.1\"\nEOF\n\n# Start the interface and check new IP\nsudo ifup eth0:0\nsudo ip address\n</code></pre>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/","title":"Monitoring Cells with Prometheus & Grafana","text":"<p>This tutorial introduces how to set up and run Prometheus and Grafana to gather and display metrics for your Pydio Cells instance.</p> <p>Please note that this feature is only available in the Enterprise Distribution.</p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#enable-metrics","title":"Enable metrics","text":"<p>The backend code is instrumented with gauges and counters. We use an interface for various metrics systems (uber-go/tally), using a no-op implementation by default.</p> <p>Using the <code>--enable_metrics</code> flag upon startup registers a Prometheus compatible collector instead of the no-op implementation. Same goal is achieved by using the <code>CELLS_ENABLE_METRICS</code> environment variable, typically in your systemd file you can add:</p> <p><code>Environment=CELLS_ENABLE_METRICS=true</code></p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#via-the-file-system","title":"Via the file system","text":"<p>The <code>enable_metrics</code> flag triggers 3 things: </p> <ul> <li>each Cells process exposes metrics as HTTP on a random port under the <code>/metrics</code> endpoint (only one per process, not per service)</li> <li>a <code>pydio.gateway.metrics</code> service gathers info about these exposed endpoints for all processes via the registry and lists all these endpoints as Prometheus compatible targets.</li> <li>Cells updates a JSON file under <code>$CELLS_WORKING_DIR/services/pydio.grpc.metrics/prom_clients.json</code>. This file is watched by Prometheus so that the endpoints can be dynamically discovered (see below).</li> </ul> <p>In a distributed environment (that is if you have split your microservices on various nodes), you must install and run Prometheus on the same node where the <code>pydio.gateway.metrics</code> service is running.</p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#via-https-with-basic-auth","title":"Via https with basic auth","text":"<p>You can also directly expose a scrape config for Prometheus in https with basic authentication using the <code>metrics_basic_auth</code> flag.</p> <p>WARNING this flag is useless if the <code>enable_metrics</code> flag is not set.</p> <p>WARNING this feature is experimental and has been rather tested in dev and staging environments to monitor the application. Use at your own risk in production. </p> <p>Adding <code>--metrics_basic_auth=\"metrics:metrics\"</code> to your start command rather:</p> <ul> <li>starts an http server that exposes the scrape config at <code>&lt;YOUR FQDN&gt;/metrics/sd</code> that can be directly consumed by a client Prometheus (see below)</li> <li>proxy the various metrics exposed by each process to be available via https with basic auth   </li> </ul>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#install-agents","title":"Install Agents","text":"<p>You can download Prometheus and Grafana binaries for your platform. Both websites also provide a complete documentation and some best practices to install these tools.</p> <p>Another (and easier) way to go is to directly use the Docker images that can be found on Docker Hub.</p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#configure-prometheus","title":"Configure Prometheus","text":"<p>Edit <code>prometheus.yml</code> to add a new job in the <code>scrape_config section</code>, using either the <code>file_sd_configs</code> or the <code>http_sd_configs</code> Prometheus discovery mechanism.</p> <p>This tells Prometheus where to watch to get an up-to-date list of scraping targets.</p> <p>The <code>scrape_configs</code> section of your Prometheus config should look like this, knowing that:</p> <ul> <li>the first job is set by default by Prometheus to monitor itself,</li> <li>you have to choose if your Cells is local or not: you generally have either one or the other <code>cells</code> config.</li> </ul> <pre><code># A scrape configuration containing exactly one endpoint to scrape:\nscrape_configs:\n  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n  - job_name: 'prometheus'\n    # metrics_path defaults to '/metrics'\n    # scheme defaults to 'http'.\n    static_configs:\n    - targets: ['localhost:9090']\n\n  # Scrape configuration locally or via a mounted volume\n  - job_name: 'cells@localhost'\n    file_sd_configs:\n      - files:\n        - {PATH_TO_CELLS_WORKING_DIR}/services/pydio.gateway.metrics/prom_clients.json\n\n  # Scrape remote configuration and metrics via http\n  - job_name: 'cells@http'\n    scheme: https\n    tls_config:\n      # insecure_skip_verify: true # e.g within docker compose setups\n    basic_auth:\n      username: \"metrics\" # adapt here\n      password: \"metrics\" # and here\n    http_sd_configs:\n      - url: \"https://cells:8080/metrics/sd\"\n        basic_auth:\n          username: \"metrics\"  # and also here\n          password: \"metrics\"  # and here\n        tls_config:\n          insecure_skip_verify: true  \n</code></pre> <p>You can configure Prometheus to start on the port you wish, default is 9090.</p> <p>In the machine where Prometheus runs, you can check that all processes are correctly detected by visiting http://localhost:9090/targets.</p> <p></p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#grafana","title":"Grafana","text":"<p>First Start Grafana. By default, it is accessible at port 3000. You can define your own specific port using the <code>GF_SERVER_HTTP_PORT</code> environnement variable.</p> <p>Choose an admin/password and perform basic install steps.</p> <p>Add a Prometheus DataSource in Grafana pointing to the Prometheus instance defined in the previous step.</p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#the-grafana-dashboard","title":"The Grafana Dashboard","text":"<p>A simple dashboard has been published on the Grafana website. It can be simply imported with the Grafana UI by following steps:</p> <ul> <li>In the left menu, select Dashboard &gt; Import</li> <li>In the \"Grafana.com Dashboard\" text field, enter the dashboard ID 9817</li> </ul> <p>The new dashboard should be available and show something like the image below.</p> <p></p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#advanced-dashboard","title":"Advanced Dashboard","text":"<p>For power users who want to gather and display more info about their server, we have also prepared a dashboard with additional gauges.</p> <p>This section describes the required configuration to display them in a more complete Grafana dashboard.</p>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#prerequisites","title":"Prerequisites","text":"<ul> <li>Download and install the Node Exporter application,</li> <li>Import this Dashboard (ID: <code>15153</code>) in your Grafana instance.</li> </ul>"},{"location":"knowledge-base/deployment/monitoring-cells-with-prometheus-grafana/#system-metrics","title":"System metrics","text":"<p>Append this configuration to your <code>prometheus.yml</code> to enable prometheus to collect and scrape the metrics.</p> <pre><code>  - job_name: 'node_exporter'\n    static_configs:\n    - targets: ['localhost:9100']\n</code></pre> <p>To run the <code>node_exporter</code>, it is advised to create a service file and use systemd.</p> <p>Here is a simple template:</p> <pre><code>[Unit]\nDescription=Node Exporter\nAfter=network-online.target\n\n[Service]\nUser=pydio\nGroup=pydio\nType=simple\nExecStart=/usr/local/bin/node_exporter\n\n[Install]\nWantedBy=multi-user.target\n</code></pre>"},{"location":"knowledge-base/deployment/running-cells-behind-an-apache-reverse-proxy/","title":"Running Cells behind an Apache reverse proxy","text":"<p>In this tutorial, we explain how to use an Apache HTTP Server as reverse proxy in front of a Pydio Cells instance. We present a basic vanilla setup and give a few tips to address most common issues. </p>"},{"location":"knowledge-base/deployment/running-cells-behind-an-apache-reverse-proxy/#adapt-cells-internal-webserver-configuration","title":"Adapt Cells' internal webserver configuration","text":"<p>By default, Cells start on port 8080 with a self-signed certificate. To adapt your configuration, you have 3 options:</p> <ul> <li>open a shell on the same machine where the service is running and call the <code>cells configure sites</code> command</li> <li>define (at least) the CELLS_BIND and CELLS_EXTERNAL environment variables or the corresponding flags (see the help for other flags, typically to choose http or https between Apache and Cells) </li> <li>add a <code>proxyconfig</code> section in your YAML installation file (or <code>ProxyConfig</code> if you use JSON format)</li> </ul> <p>Doing so, you can define: </p> <ul> <li>Bind Address: interface and port on which Cells server is bound. It MUST contain a server name (or IP) and a port.</li> <li>External URL: the public URL that you communicate to your end users. Note that the external URL must contain the protocol (http or https) depending on wether you do TLS termination at the Apache layer or not.</li> </ul> <p>A typical example if Apache and Cells run on the same machine:</p> <pre><code>+---+------------------------+-------------+---------------------------------------------+\n| # |        BIND(S)         |     TLS     |                EXTERNAL URL                 |\n+---+------------------------+-------------+---------------------------------------------+\n| 0 | https://localhost:8080 | Self-signed | https://cells.example.com                   |\n+---+------------------------+-------------+---------------------------------------------+\n</code></pre>"},{"location":"knowledge-base/deployment/running-cells-behind-an-apache-reverse-proxy/#configure-apache","title":"Configure Apache","text":"<p>You must enable the following mods with Apache:</p> <ul> <li><code>proxy</code></li> <li><code>proxy_http</code></li> <li><code>proxy_wstunnel</code> official documentation</li> </ul> <p>To enable a module with apache use <code>sudo a2enmod &lt;mod_name&gt;</code>.</p>"},{"location":"knowledge-base/deployment/running-cells-behind-an-apache-reverse-proxy/#a-simple-example","title":"A simple example","text":"<p>For this example, we are using a simple setup. The proxy is running on a server under the hostname <code>cells.example.com</code> while Pydio Cells is bound on <code>localhost</code> with port <code>8080</code> with TLS enabled.</p> <p>Create or Edit your apache virtual host configuration with :</p> <pre><code>&lt;VirtualHost *:80&gt;\n    ServerName cells.example.com\n\n    RewriteEngine On\n    RewriteCond %{HTTPS} off\n    RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}\n\n    RewriteCond %{SERVER_NAME} =cells.example.com\n    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost *:443&gt;\n    ServerName cells.example.com\n    AllowEncodedSlashes On\n    RewriteEngine On\n    SSLProxyEngine On\n\n    ## The order of the directives matters.\n    # If Cells is not running with https, consider using ws instead of wss\n    ProxyPassMatch \"/ws/(.*)\" wss://localhost:8080/ws/$1 nocanon\n\n    ## This rewrite condition is required if using Cells-Sync\n    # RewriteCond %{HTTP:Content-Type} =application/grpc [NC]\n    # RewriteRule /(.*) h2://localhost:8080/$1 [P,L]\n\n    ProxyPass \"/\" \"https://localhost:8080/\" \n    ProxyPassReverse \"/\" \"https://localhost:8080/\"\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n\n    SSLCertificateFile /etc/letsencrypt/live/cells.example.com/fullchain.pem\n    SSLCertificateKeyFile /etc/letsencrypt/live/cells.example.com/privkey.pem\n    Include /etc/letsencrypt/options-ssl-apache.conf\n&lt;/VirtualHost&gt;\n</code></pre> <p>This was tested with Apache/2.4.51 on Debian</p>"},{"location":"knowledge-base/deployment/running-cells-behind-an-apache-reverse-proxy/#important-points","title":"Important points","text":"<p>Please note:</p> <ul> <li>The <code>AllowEncodedSlashes On</code> directive is necessary if it is not globally activated in Apache. It enables API calls like <code>/a/meta/bulk/path%2F%to%2Ffolder</code>.</li> <li>When configuring Cells, even on another port, make sure to bind it directly to the cells.example.com as well (like Apache). This is necessary for the presigned URL used with S3 API for uploads and downloads (they used signed headers and a mismatch between received Host headers may break the signature). Another option is to still bind Cells using a local IP, then in the Admin Settings, under Configs Backend, use the field \u201cReplace Host Header for S3 Signature\u201d and use the internal IP here.</li> <li><code>nocanon</code> is required after the ProxyPass to be able to download files which names contain special characters such as commas or quotes.</li> <li>websocket: make sure to also proxy the websocket depending on your protocol (<code>ws</code>, or <code>wss</code>) and enable the module.</li> <li><code>RewriteEngine</code> is required to enable rewriting requests. </li> </ul>"},{"location":"knowledge-base/deployment/running-cells-behind-an-apache-reverse-proxy/#cells-sync","title":"Cells Sync","text":"<p>For Cells-Sync to work it is required to proxy the grpc requests using the http2 module, for that 2 prerequisites need to be met:</p> <ul> <li>Enable apache module <code>http2</code> &amp; <code>proxy_http2</code>.</li> <li><code>http2</code> does not work with the module <code>mpm_prefork</code> therefore it is required to use <code>mpm_event</code> instead (see apache official documentation).</li> </ul> <p>Once you have met the prerequisites, enable the http2 proxy with the following directive (h2 for TLS or h2c for clear text), for more information please refer to Apache's official documentation.</p> <pre><code>## The order of the directive is important please see the full example above.\n    # RewriteCond %{HTTP:Content-Type} =application/grpc [NC]\n    # RewriteRule /(.*) h2://localhost:8080/$1 [P,L]\n</code></pre> <p>All requests done from Cells-Sync have the header <code>Content-Type</code> set to <code>application/grpc</code>.</p> <p>See Also</p> <p>Running Cells Behind a reverse proxy</p>"},{"location":"knowledge-base/deployment/running-cells-behind-a-caddy2-reverse-proxy/","title":"Running Cells behind a Caddy2 reverse proxy","text":"<p>In this tutorial, we explain how to use a Caddy v2 webserver as reverse proxy in front of a Pydio Cells installation. Caddy 2 is the latest version of the Caddy webserver. It brings many enhancements but also some breaking changes when migrating from version 1; typically in the <code>CaddyFile</code> configuration file.</p> <p>In this example, Pydio Cells is running, on the same machine as the Caddy reverse proxy, with following configuration:</p> <ul> <li>Binding Port: <code>8080</code></li> <li>Binding Host: <code>0.0.0.0</code></li> <li>Do not add another host</li> <li>TLS Activation: self-signed</li> <li>External (public) URL: <code>https://cells.example.com</code> </li> </ul> <p>We use https with self-signed certificate between Caddy and Cells so that the Cells Sync Desktop tool can communicate with the backend: the communication between the server and the Sync client uses the gRPC protocol on HTTP2 and this protocol forbids TLS dropping at the reverse proxy layer.</p> <p>Yet, public end-point uses the Let's Encrypt certificate that is provided by Caddy by default.</p> <p>In a simple case, the caddy file of the reverse proxy looks like this:</p> <pre><code>cells.example.com {\n\n  tls tls@example.com\n\n  reverse_proxy localhost:8080 {\n    # Use https with a self signed cert between Caddy and Cells\n    transport http {\n      tls\n      tls_insecure_skip_verify\n    }\n  }\n}\n</code></pre> <p>Note that Caddy default is to redirect the http traffic towards port 443 (default port for https).</p> <p>If you are running the Enterprise Distribution and want to enable Prometheus, you might want to add these 2 directives in the main block (before the reverse proxy directive for Cells):</p> <pre><code>https://cells.example.com {\n\n  tls tls@example.com\n\n  route /prometheus* {\n    reverse_proxy localhost:9090\n  }\n\n  basicauth /prometheus* {\n    sysadminUser JDJhJDE0JGZad2Y0VHF5OWtHb2NaV3BnMC9jak9jRTkzUi9pSnMxWUM0cmxMWVhJSFguaWtCYnYxdEZt\n  }\n\n  reverse_proxy localhost:8080 {\n    # Use https with a self signed cert between Caddy and Cells\n    transport http {\n      tls\n      tls_insecure_skip_verify\n    }\n  }\n}\n</code></pre> <p>Notes:</p> <ul> <li>We use caddy2 basic authentication mechanism to protect prometheus end-point, otherwise anybody knowing the URL could access the metrics of your instance.</li> <li>2nd argument of the <code>basicauth</code> directive is a hash password that can be simply generated using with the <code>caddy hash-password</code> command on the server where you have installed caddy</li> <li>Do not forget to set the <code>web.external-url</code> flag on Prometheus when using such a configuration. Typically, if you are using systemd, you must add this flag to the <code>ExecStart</code> directive <code>--web.external-url=https://cells.example.com/prometheus</code> in the <code>*.service</code> configuration file.</li> </ul> <p>See Also</p> <p>Running Cells Behind a reverse proxy</p>"},{"location":"knowledge-base/deployment/running-cells-behind-a-nginx-reverse-proxy/","title":"Running Cells behind a Nginx reverse proxy","text":"<p>In this tutorial, we explain how to use nginx as reverse proxy in front of a Pydio Cells instance, together with a few tips to address the most common issues. </p>"},{"location":"knowledge-base/deployment/running-cells-behind-a-nginx-reverse-proxy/#requirements","title":"Requirements","text":"<p>We assume that:</p> <ul> <li>You are using a Linux server, if not you might have to adapt some commands</li> <li>You own a FQDN (e.g.: <code>cells.example.com</code>) that has been registered in a public DNS</li> <li>Your <code>A record</code> has been propagated: you can verify this with <code>ping &lt;YOUR_FQDN&gt;</code> from your local workstation</li> <li>Both port 80 and 443 are free and not blocked by any firewall <code>sudo netstat -tulpn</code></li> </ul> <p>Depending on your setup, you might have to install nginx on your machine, please refer to the official documentation.</p> <p>You also must adapt your configuration to define your public FQDN, and optionally adapt bindind configuration. To do so, you have 3 options:</p> <ul> <li>Open a shell on the machine where the application is running and call the <code>cells configure sites</code> command, with the user that runs the service</li> <li>Define <code>CELLS_SITE_EXTERNAL</code> (and optionally <code>CELLS_SITE_BIND</code> and <code>CELLS_SITE_NO_TLS</code>) environment variable or the corresponding flag</li> <li>Add a <code>proxyconfig</code> section in your YAML installation file (or <code>ProxyConfig</code> if you use JSON format)</li> </ul> <p>Note that the external (public) URL must contain the protocol (http or https).</p>"},{"location":"knowledge-base/deployment/running-cells-behind-a-nginx-reverse-proxy/#examples","title":"Examples","text":""},{"location":"knowledge-base/deployment/running-cells-behind-a-nginx-reverse-proxy/#simple-setup-on-a-stand-alone-server","title":"Simple setup on a stand alone server","text":"<p>We assume that:</p> <ul> <li>your registered FQDN is <code>cells.example.com</code>, adapt with your FQDN</li> <li>nginx and cells are running on the same machine</li> <li>you have docker installed and have launched a Collabora server with e.g.: <code>docker run -t -d --restart=always -p 9980:9980 -e \"domain=cells.example.com\" collabora/code</code></li> <li>you have used Certbot to generate the certificates</li> </ul> <p>This config has been last tested with nginx version 1.18 that can be installed on Debian 11 (Bulleyes) by running <code>sudo apt install nginx</code>.</p> <pre><code>server {\n    server_name cells.example.com;\n\n    # Allow any size file to be uploaded\n    client_max_body_size 0;\n    # Disable buffering\n    proxy_buffering off;\n\n    # Main entry point for the application\n    location / {\n        # Uncomment this to enable gRPC and thus be able to use cells-sync\n        #if ($http_content_type = \"application/grpc\") {\n        #    grpc_pass grpcs://cells:8080;\n        #}\n        proxy_pass https://localhost:8080;\n    }\n\n    # Enable the websocket\n    location /ws/ {\n        proxy_pass https://localhost:8080;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"Upgrade\";\n    }\n\n   # Necessary to use Collabora (online edition of office documents)\n   location /cool/ {\n        proxy_pass https://localhost:8080;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"Upgrade\";\n    }\n\n    error_log /var/log/nginx/cells-proxy-error.log;\n    access_log /var/log/nginx/cells-proxy-access.log;\n\n    listen [::]:443 ssl;\n    listen 443 ssl http2;\n\n    # certificate configuration (generated by certbot)  \n    ssl_certificate /etc/letsencrypt/live/cells.example.com/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/cells.example.com/privkey.pem;\n}\n\nserver {\n    if ($host = cells.example.com) {\n        return 301 https://$host$request_uri;\n    }\n\n    listen 80;\n    listen [::]:80;\n    server_name cells.example.com;\n    return 404;\n}\n</code></pre>"},{"location":"knowledge-base/deployment/running-cells-behind-a-nginx-reverse-proxy/#further-configuration","title":"Further configuration","text":""},{"location":"knowledge-base/deployment/running-cells-behind-a-nginx-reverse-proxy/#cells-sync","title":"Cells Sync","text":"<p>Cells Sync is the desktop client tool that can be used to synchronise a folder on your local workstation with e.g. a subfolder of your personal file folder on the server.</p> <p>In Cells Home distribution, you can only use the Cells Sync client with sub-folders of the <code>Personal Files</code> workspace (a.k.a: <code>My Files</code>).</p> <p>The communication between the client and the server uses <code>gRPC</code> on <code>http2</code>, thus:</p> <ul> <li>HTTP2 has to be enabled on nginx with <code>http2</code> for instance <code>listen 443 ssl http2;</code></li> <li>if you are using TLS encryption, you cannot perform TLS termination at the reverse proxy (nginx) level</li> </ul>"},{"location":"knowledge-base/deployment/running-cells-behind-a-nginx-reverse-proxy/#collabora","title":"Collabora","text":"<p>With the setup described above, you must also configure the Collabora plugin via the Cells Admin Console:</p> <ul> <li>Go to <code>Admin Console &gt;&gt; Advanced Parameters &gt;&gt; Application Parameters &gt;&gt; All Plugins &gt;&gt; (search for collabora)</code></li> <li>Enable the plugin</li> <li>Configure with:</li> <li>Code version: 21 and upper</li> <li>Libre Office SSL: enabled</li> <li>Host for Libre Office: localhost</li> <li>Port: 9980</li> <li>It is safer to restart the Cells service</li> </ul> <p>See Also</p> <p>Running Cells Behind a reverse proxy</p>"},{"location":"knowledge-base/deployment/running-a-cells-container-behind-a-traefik-reverse-proxy/","title":"Running a Cells container behind a Traefik reverse proxy","text":"<p>In this tutorial, we explain how to configure a Traefik v2 reverse proxy for your Cells Docker container and what settings are the most important to change.</p> <p>Traefik v2 is a very efficient Go reverse proxy designed to perfectly integrate with Docker and Kubernetes.  </p> <p>For the purpose of this deployment, we use <code>docker compose</code>: it offers a simple way to visualize the full stack deployment under a single file.  </p>"},{"location":"knowledge-base/deployment/running-a-cells-container-behind-a-traefik-reverse-proxy/#quick-start-on-localhost","title":"Quick start on localhost","text":"<pre><code>version: \"3\"\n\nservices:\n  reverse:\n    image: traefik:2.10\n    ports: [\"80:80\"]\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n    command:\n      - --providers.docker\n      - --api\n      - --entrypoints.web.address=:80\n    labels:\n      - traefik.http.routers.reverse.service=api@internal\n      - traefik.http.routers.reverse.rule=PathPrefix(`/api`)||PathPrefix(`/dashboard`)\n      - traefik.http.routers.reverse.entrypoints=web\n\n  cells:\n    image: pydio/cells:latest\n    expose: [8080]\n    environment:\n      - CELLS_BIND=0.0.0.0:8080\n      - CELLS_EXTERNAL=http://localhost\n      - CELLS_NO_TLS=1\n    labels:\n      - traefik.http.routers.cells.rule=Host(`localhost`)\n      - traefik.http.routers.cells.entrypoints=web\n\n  mysql:\n    image: mysql:8\n    restart: unless-stopped\n    environment: \n      - MYSQL_ROOT_PASSWORD=cells\n      - MYSQL_DATABASE=cells\n      - MYSQL_USER=pydio\n      - MYSQL_PASSWORD=cells\n    cap_add: \n      - SYS_NICE \n    command: \n      - mysqld\n      - --character-set-server=utf8mb4\n      - --collation-server=utf8mb4_unicode_ci\n      - --default_authentication_plugin=mysql_native_password\n</code></pre> <p>You can then access the Cells installer on http://localhost and the Traefik dashboard at http://localhost/dashboard/ (the trailing slash is important or you get a 404 - Page not found exception).</p>"},{"location":"knowledge-base/deployment/running-a-cells-container-behind-a-traefik-reverse-proxy/#for-live-environments","title":"For live environments","text":"<p>This file sets up a production ready Cells ecosystem with opiniated configuration.</p> <p>It exposes various services via HTTPS (provided by Let's Encrypt) under $PUBLIC_FQDN:</p> <ul> <li>The Pydio Cells server at the root</li> <li>The Traefik dashboard  under <code>/dashboard/</code></li> <li>Promotheus metrics under <code>/prometheus</code></li> </ul> <p>Both Traefik and Prometheus endpoints are protected by basic authentication with login/password: admin/admin</p> <p>Do not forget to prepare / reset acme.json file when changing the Let's Encrypt configiguration,typically at first start or when switching from staging to prod CA server: <code>touch acme.json; chmod 600 acme.json</code></p> <p>Note that we do not do the TLS termination of the requests for Cells at the Traefik level in order to enable gRPC communication between the End-User and the Cells application (necessary for the Sync client typically). If you do not need that, refer to the example above to perform TLS termination at the reverse proxy layer and thus have a simpler and easier to maintain configuration.</p> <pre><code>version: \"3\"\n\nvolumes:\n    cells_working_dir: {}\n    cells_data: {}\n    mysql_data: {}\n    prometheus_data: {}\n\nservices:\n  # Traefik as reverse proxy with dashboard enabled\n  reverse:\n    image: traefik:2.10\n    restart: unless-stopped\n    command:\n      # More logs when debugging\n      #- --log.level=DEBUG\n      # Tell traefik to watch docker events for hot reload\n      - --providers.docker\n      - --providers.docker.exposedbydefault=false\n      # Enable the dashboard on https\n      - --api\n      # Listen default HTTP ports\n      - --entrypoints.web.address=:80\n      - --entrypoints.websecure.address=:443\n      # Trust all certificates that are exposed by the downstream services, this is \n      # necessary to accept the default self-signed cert exposed by the Cells service.\n      - --serverstransport.insecureskipverify=true\n      # Automatic generation of certificate with Let's Encrypt\n      - --certificatesresolvers.leresolver.acme.email=${TLS_MAIL_ADDRESS}\n      - --certificatesresolvers.leresolver.acme.storage=/acme.json\n      - --certificatesresolvers.leresolver.acme.tlschallenge=true\n      # Insure to use staging CA server while testing to avoid being black listed =&gt; generated cert is un-trusted by browsers. Comment out once everything is correctly configured.\n      - --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory\n    ports:\n      - 80:80\n      - 443:443\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      # Persists certificate locally, otherwise we will recreate new ones at each restarts and quickly hit limits.\n      # Remember to flush the file if you want to switch from staging CA server to prod\n      - ./acme.json:/acme.json\n    labels:\n      # Redirect HTTP traffic to HTTPS\n      - traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)\n      - traefik.http.routers.redirs.entrypoints=web\n      - traefik.http.routers.redirs.middlewares=redirect-to-https\n      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https\n      # Expose the traefik dashboard on the reserved sub path, TLS is provided by the Let's Encrypt cert provider.\n      - traefik.enable=true\n      - traefik.http.routers.reverse.service=api@internal\n      - traefik.http.routers.reverse.rule=PathPrefix(`/api`)||PathPrefix(`/dashboard`)\n      - traefik.http.routers.reverse.entrypoints=websecure\n      - traefik.http.routers.reverse.tls.certresolver=leresolver\n      # Protect dashboard with simple auth =&gt; log with admin / admin for this example\n      - traefik.http.routers.reverse.middlewares=admin\n      # Password is generated with `htpasswd -nb admin admin` beware to escape all '$' replacing them by '$$'\n      - \"traefik.http.middlewares.admin.basicauth.users=admin:$$apr1$$KnKvATsN$$L8K.P.maCu4zR/rVzD8h0/\"\n\n  # DB backend\n  mysql:\n    image: mysql:8\n    restart: unless-stopped\n    volumes:\n      - mysql_data:/var/lib/mysql\n    environment: \n      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}\n      - MYSQL_DATABASE=cells\n      - MYSQL_USER=${MYSQL_CELLS_USER_LOGIN}\n      - MYSQL_PASSWORD=${MYSQL_CELLS_USER_PASSWORD}\n    command: [mysqld, --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci]\n\n# Pydio Cells app\n  cells:\n    image: ${CELLS_DOCKER_IMAGE}\n    restart: unless-stopped\n    # Not compulsory but it eases some of the maintenance operations. \n    hostname: cells\n    expose:\n      - 443\n    volumes:\n      - cells_working_dir:/var/cells\n      - cells_data:/data\n      - ./metrics:/var/cells/services/pydio.gateway.metrics\n    environment:\n      - CELLS_WORKING_DIR=/var/cells\n      - CELLS_DATA=/data\n      - CELLS_BIND=${PUBLIC_FQDN}:443\n      - CELLS_EXTERNAL=https://${PUBLIC_FQDN}\n      - CELLS_ENABLE_METRICS=true\n      - CELLS_METRICS_BASIC_AUTH=admin:admin\n    labels:\n      - traefik.enable=true\n      - traefik.http.services.cells.loadbalancer.server.scheme=https\n      - traefik.http.routers.cells.rule=Host(`${PUBLIC_FQDN}`)\n      - traefik.http.routers.cells.entrypoints=websecure\n      - traefik.http.routers.cells.tls=true\n      - traefik.http.routers.cells.tls.certresolver=leresolver\n    depends_on:\n      - mysql\n\n  # Prometheus to expose metrics\n  prometheus:\n    image: prom/prometheus\n    expose:\n      - 9090\n    volumes:\n      - prometheus_data:/prometheus\n      - ./prom.yml:/etc/prometheus/prometheus.yml\n      - ./metrics:/etc/prometheus/watch:ro\n    command:\n      - --config.file=/etc/prometheus/prometheus.yml\n      - --storage.tsdb.path=/prometheus\n      - --storage.tsdb.retention.time=30d\n      - --web.external-url=https://${PUBLIC_FQDN}/prometheus\n      - --web.listen-address=:9090\n    labels:\n      # Expose the metrics on the reserved sub path, TLS is provided by the Let's Encrypt cert provider.\n      - traefik.enable=true\n      - traefik.http.routers.prometheus.rule=Host(`${PUBLIC_FQDN}`)&amp;&amp;PathPrefix(`/prometheus`)\n      - traefik.http.routers.prometheus.entrypoints=websecure\n      - traefik.http.services.prometheus.loadbalancer.server.port=9090\n      - traefik.http.routers.prometheus.tls.certresolver=leresolver\n      # Protect metrics entry point with simple auth\n      - traefik.http.routers.prometheus.middlewares=admin\n</code></pre> <p>In order to use the above file, you must add a <code>.env</code> and a <code>prom.yml</code> file in the same folder with following content:</p> <pre><code>CELLS_DOCKER_IMAGE=pydio/cells-enterprise:latest\nPUBLIC_FQDN=share.example.com\nTLS_MAIL_ADDRESS=tls@example.com\nMYSQL_ROOT_PASSWORD=cells\nMYSQL_CELLS_USER_LOGIN=pydio\nMYSQL_CELLS_USER_PASSWORD=cells\n</code></pre> <pre><code># Simple prometheus configuration that watches itself and the entry points declared by cells:\nscrape_configs:\n  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n  - job_name: 'prometheus'\n    metrics_path: '/prometheus/metrics'\n    # scheme defaults to 'http'.\n    static_configs:\n    - targets: ['prometheus:9090']\n  - job_name: 'cells'\n    scheme: https\n    basic_auth:\n      username: \"admin\"\n      password: \"admin\"\n    tls_config:\n      insecure_skip_verify: true\n    http_sd_configs:\n      - url: \"https://cells/metrics/sd\"\n        basic_auth:\n          username: \"admin\"\n          password: \"admin\"\n        tls_config:\n          insecure_skip_verify: true\n</code></pre>"},{"location":"knowledge-base/deployment/running-a-cells-container-behind-a-traefik-reverse-proxy/#a-few-more-hints-about-the-docker-compose-file","title":"A few more hints about the docker-compose file","text":"<p>For <code>reverse</code>:</p> <ul> <li><code>ports</code>: our reverse proxy listens incoming requests on port 443</li> <li><code>volumes</code>:</li> <li>in order to listen to docker events, traefik containers needs to access our machine docker socket</li> <li>we also setup a permanent volume so the SSL certificates are not regenerated every time we relaunch our container</li> <li><code>command</code>:</li> <li><code>provider</code>: we link traefik routing system to docker</li> <li><code>entrypoints</code>: we name <code>websecure</code> our link to port 443</li> <li><code>certificateresolvers</code>:<ul> <li>we name <code>leresolver</code> the certificate issuing process, set it up to <code>tlschallenge</code> - meaning that Let's encrypt checks the domain is ours by connecting to our server on port 443 -, provide a valid email to complete the certificate issuing, and define the path in the container where the certificate is stored / found</li> <li>in case the machine is not accessible from outside your network, you might use <code>dnschallenge</code> instead of <code>tlschallenge</code></li> </ul> </li> </ul> <p>For <code>cells</code>:</p> <ul> <li><code>expose</code>: our cells instance is configured to listen on port 443, but this port is not exposed outside of docker.</li> <li><code>environment</code>:</li> <li><code>CELLS_BIND</code>: address where the application http server is bound to - our cell container accepts requests addressed to <code>$PUBLIC_FQDN:443</code>, with a self signed certificate that is managed by Cells</li> <li><code>CELLS_EXTERNAL</code>: url the end user uses to connect to the application - in our case, by typing <code>https://$PUBLIC_FQDN</code> in a web browser</li> <li><code>labels</code>:</li> <li>we name <code>cells</code> the configuration we are going to use, and specify it is to be used for requests searching to reach the host.</li> <li>we specify that the requests that are served are the ones reaching the entrypoint <code>websecure</code> - that we have defined in traefik, listening on port 443</li> <li>we define that the SSL communication for this host is using the resolver <code>leresolver</code> we configured in traefik</li> <li>Note: the <code>extra_hosts</code> option can be used if there is no DNS entry accessible by the Cells container matching the FQDN: and if you are using an old version of Cells (prior to 2.1). Cells must be able to access itself via the <code>CELLS_BIND</code> address. <code>extra_hosts</code> directive simply add a new entry to the <code>/etc/hosts</code> file of the container.</li> </ul> <p>See Also</p> <p>Running Cells Behind a reverse proxy</p>"},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-supervisor/","title":"Running Cells as a service with Supervisor","text":"<p>On UNIX-like operating systems, you can use Supervisor to run your Pydio Cells instance as a service: this enables for instance automated application relaunch after a server reboot.</p> <p>To install Supervisor on Debian-like systems for instance, you can do:</p> <pre><code>sudo apt-get install supervisor\n# Enable and start the service\nsudo systemctl enable --now supervisor\n</code></pre>"},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-supervisor/#configuration-for-debianubuntu-based-systems","title":"Configuration for Debian/Ubuntu based systems","text":"<p>Note: this configuration assumes you have done a vanilla setup by following our install guides. Adapt to your specific setup if necessary.</p> <p>You must then declare the path to your <code>cells</code> binary file in a supervisor configuration file:</p> <ul> <li>Create a <code>/etc/supervisor/conf.d/cells.conf</code> file</li> <li>Add this after having replaced the <code>&lt;path-to-binary&gt;</code> and <code>&lt;user-launching-cells&gt;</code> place holders by their respective values depending on your setup:</li> </ul> <pre><code>[program:cells]\ncommand=&lt;path-to-binary&gt; start\ndirectory=&lt;path-to-cells-working-dir&gt;       ; directory to cwd to before exec (def no cwd)\n;umask=022                                   ; umask for process (default None)\n;priority=999                                ; the relative start priority (default 999)\nautostart=true                               ; start at supervisord start (default: true)\nautorestart=unexpected                       ; whether/when to restart (default: unexpected)\nstartsecs=15                                 ; number of secs prog must stay running (def. 1)\nstartretries=5                               ; max # of serial start failures (default 3)\nexitcodes=0,2                                ; 'expected' exit codes for process (default 0,2)\nstopsignal=QUIT                              ; signal used to kill process (default TERM)\nstopwaitsecs=10                              ; max num secs to wait b4 SIGKILL (default 10)\nstopasgroup=false                            ; send stop signal to the UNIX process group (default false)\n;killasgroup=false                           ; SIGKILL the UNIX process group (def false)\nuser=&lt;user-launching-cells&gt;                  ; setuid to this UNIX account to run the program\n\nredirect_stderr=true                         ; redirect proc stderr to stdout (default false)\nstdout_logfile=&lt;path-to-cells-working-dir&gt;/logs/cells.log\nstdout_logfile_maxbytes=1MB                  ; max # logfile bytes b4 rotation (default 50MB)\nstdout_logfile_backups=10                    ; # of stdout logfile backups (default 10)\nstdout_capture_maxbytes=1MB                  ; number of bytes in 'capturemode' (default 0)\n;stdout_events_enabled=false                 ; emit events on stdout writes (default false)\nstderr_logfile=&lt;path-to-cells-working-dir&gt;/logs/cells_err.log        ; stderr log path, NONE for none; default AUTO\n;stderr_logfile_maxbytes=1MB                 ; max # logfile bytes b4 rotation (default 50MB)\n;stderr_logfile_backups=10                   ; # of stderr logfile backups (default 10)\n;stderr_capture_maxbytes=1MB                 ; number of bytes in 'capturemode' (default 0)\n;stderr_events_enabled=false                 ; emit events on stderr writes (default false)\n;environment=TMPDIR=\"/tmp\",B=\"2\"             ; process environment additions (def no adds)\n;serverurl=AUTO                              ; override serverurl computation (childutils)\n</code></pre> <p>Reload Supervisor configuration with:</p> <pre><code>sudo supervisorctl reread\n</code></pre> <p>Note: this triggers a reload of all <code>*.conf</code> files located within the <code>/etc/supervisor/conf.d</code> directory.</p> <p>Then enact the changes with:</p> <pre><code>sudo supervisorctl update\n</code></pre>"},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-supervisor/#usage","title":"Usage","text":"<p>You can now monitor your program with <code>supervisorctl</code></p> <pre><code>$ sudo supervisorctl\ncells                             RUNNING   pid 3365, uptime 1:10:26\n\n# You can now manage Cells service life cycle:\nsupervisor&gt; stop cells\nlong_script: stopped\nsupervisor&gt; start cells\nlong_script: started\nsupervisor&gt; restart cells\nlong_script: stopped\nlong_script: started\n# To check the status:\nsupervisor&gt; status\ncells                             RUNNING   pid 3365, uptime 1:13:07\n# To leave supervisor \nsupervisor&gt; quit\n</code></pre> <p>You now have Pydio Cells running as a daemon and auto-restarting after server reboot.</p>"},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-supervisor/#for-centos","title":"For CentOS","text":"<p>On a RHEL/CentOS system and assuming you have followed our recommended best practices during installation, here is a config sample that will run Cells as a service.</p> <p>This configuration is based on a system that has, among others, a pydio Unix account. Please adapt to your custom setup if necessary.</p> <ul> <li>Install supervisor: <code>sudo yum install supervisor</code></li> <li>Create a new file <code>/etc/supervisord.d/cells.ini</code> with following content:</li> </ul> <pre><code>[program:cells]\ncommand=/opt/pydio/bin/cells start\ndirectory=/home/pydio       ; directory to cwd to before exec (def no cwd)\n;umask=022                     ; umask for process (default None)\n;priority=999                  ; the relative start priority (default 999)\nautostart=true                ; start at supervisord start (default: true)\nautorestart=unexpected        ; whether/when to restart (default: unexpected)\nstartsecs=15                   ; number of secs prog must stay running (def. 1)\nstartretries=5                ; max # of serial start failures (default 3)\nexitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)\nstopsignal=QUIT               ; signal used to kill process (default TERM)\nstopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)\nstopasgroup=false             ; send stop signal to the UNIX process group (default false)\n;killasgroup=false             ; SIGKILL the UNIX process group (def false)\nuser=pydio                 ; setuid to this UNIX account to run the program\n\nredirect_stderr=true          ; redirect proc stderr to stdout (default false)\nstdout_logfile=/var/cells/logs/cells.log\nstdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\nstdout_logfile_backups=10     ; # of stdout logfile backups (default 10)\nstdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)\n;stdout_events_enabled=false   ; emit events on stdout writes (default false)\nstderr_logfile=/var/cells/logs/cells_err.log        ; stderr log path, NONE for none; default AUTO\n;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)\n;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)\n;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)\n;stderr_events_enabled=false   ; emit events on stderr writes (default false)\n;environment=TMPDIR=\"/tmp\",B=\"2\"       ; process environment additions (def no adds)\n;serverurl=AUTO                ; override serverurl computation (childutils)\n</code></pre> <ul> <li>Enable and launch Supervisor with Systemd <code>systemctl enable supervisor &amp;&amp; systemctl start supervisor</code></li> <li>Update Supervisor config: <code>supervisorctl update</code></li> <li>Start Cells with Supervisor: <code>supervisorctl start cells</code></li> </ul> <p>To insure everything is correctly configured, restart the machine. Pydio Cells should be running, launched by Supervisord.</p> <p>To watch the output, you can use: <code>tail -f /var/cells/logs/cells.log</code></p>"},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-systemd/","title":"Running Cells as a service with Systemd","text":"<p>When deployed in a production environment, we generally advise to run Pydio Cells as a systemd service.</p> <p>The present guide explains you how to do it on a Linux box, assuming that you have followed our recommended best practices during the installation process. Adapt to your specific setup if necessary.</p> <p>Thus you have:</p> <ul> <li>defined <code>CELLS_WORKING_DIR</code> as <code>/var/cells</code></li> <li>the downloaded binary at <code>/opt/pydio/bin/cells</code></li> <li>a <code>pydio</code> user that has correct (read and execute) permissions on <code>/opt/pydio</code> and <code>/var/cells</code>.</li> </ul> <p>Create a new <code>/etc/systemd/system/cells.service</code> file with following content:</p> <pre><code>[Unit]\nDescription=Pydio Cells\nDocumentation=https://pydio.com\nWants=network-online.target\nAfter=network-online.target\nAssertFileIsExecutable=/opt/pydio/bin/cells\n\n[Service]\nUser=pydio\nGroup=pydio\nWorkingDirectory=/home/pydio\nPermissionsStartOnly=true\n\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nExecStart=/opt/pydio/bin/cells start\nRestart=on-failure\nStandardOutput=journal\nStandardError=inherit\nLimitNOFILE=65536\nTimeoutStopSec=5\nKillSignal=INT\nSendSIGKILL=yes\nSuccessExitStatus=0\n\n# Add environment variables\nEnvironment=CELLS_ENABLE_METRICS=false\nEnvironment=CELLS_WORKING_DIR=/var/cells\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <p>Then, enable and start the service:</p> <pre><code>sudo systemctl enable --now cells\n</code></pre>"},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-systemd/#various-notes","title":"Various Notes","text":""},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-systemd/#loging","title":"Loging","text":"<p>With the above configuration, Pydio Cells logs in rolling text files of 10MB under <code>&lt;CELLS_WORKING_DIR&gt;/logs/</code> folder. Typically, on Linux:</p> <pre><code>tail -200f /var/cells/logs/pydio.log\n</code></pre> <p>It is worth noting that logs are also outputed to the systemd standard loging system so that you can also see them with e.g.:</p> <pre><code>sudo journalctl -fu cells --since \"1 hour ago\"\n</code></pre>"},{"location":"knowledge-base/deployment/running-cells-as-a-service-with-systemd/#systemd-working-directory","title":"Systemd working directory","text":"<p>In the above file, we also overwrite the default systemd configuration for the working directory by using:</p> <pre><code>...\n[Service]\nWorkingDirectory=/home/pydio\n...\n</code></pre> <p>Please note that this directory must exist and be writable before launching the application.</p> <p>If it is not the case, the system fails to start with a message that can be quite cryptic for people that are not systemd fluent:</p> <pre><code>...\ncode=exited, status=200/CHDIR\n...\n</code></pre>"},{"location":"knowledge-base/identity-management/index/","title":"Identity Management","text":"<ul> <li>Connect to Pydio Cells via Microsoft Identity</li> <li>Connect to Pydio Cells via On-Premise ADFS server</li> <li>Connect to Pydio Cells via SimpleSAML PHP</li> <li>Using AWS Cognito as an Identity Provider</li> <li>Using Github as an Identity Provider</li> <li>Using Google as an Identity Provider</li> <li>Using Pydio Cells as an Identity Provider for WordPress</li> </ul>"},{"location":"knowledge-base/identity-management/using-aws-cognito-as-an-identity-provider/","title":"Using AWS Cognito as an Identity Provider","text":"<p>This how-to shows you how to let users authenticate to Cells Enterprise using the AWS Cognito identity platform. Amazon Cognito lets you add user sign-up, sign-in, and access control to your web and mobile apps quickly and easily. </p>"},{"location":"knowledge-base/identity-management/using-aws-cognito-as-an-identity-provider/#pre-requisites","title":"Pre-requisites","text":"<p>We assume here that you already have some basic knowledge of AWS Cognito and that you have a created a Cognito User Pool. If you do not have one, create it with the defaults configurations and create some users in it.</p> <p>Later on, you will have to know the User Pool ID (<code>POOL_ID</code>) and the AWS region ID you are operating on (<code>REGION_ID</code>).</p> <p></p> <p>Also, we assume that for example Cells Enterprise is exposed on <code>https://local.pydio</code> domain.</p>"},{"location":"knowledge-base/identity-management/using-aws-cognito-as-an-identity-provider/#create-a-client-application-inside-your-user-pool","title":"Create a Client Application inside your User Pool","text":"<p>Go to <code>General Settings &gt; App Clients</code> menu to create a new app client. Choose a name and hit the \"Generate client secret\" option. Leave other options unchecked and create the client. </p> <p></p> <p>Once it is created, use \"Show Details\" button to display the App client id and App Client secret fields : these values will be required when configuring the connector on the Cells side.</p> <p>Now go to <code>App Integration &gt; App client settings</code> in the left-hand menu. Make sure that your new App client is enabled for all Identity Providers, and set up the Callback URL pointing to <code>https://local.pydio/auth/login/callback</code>, and logout URL to <code>https://local.pydio/logout</code>.</p> <p>Under the OAuth2.0 section, check the boxes as shown on the image below.</p> <p></p> <p>In the <code>App Integration &gt; Domain</code> menu, create a specific sub-domain under the Amazon endpoint (or use your own domain if you want to, but that's more complex). This will be used as login URL for displaying the Sign In form.</p> <p></p> <p>In the UI Customization tab, you may upload a custom logo for the Sign In page.</p>"},{"location":"knowledge-base/identity-management/using-aws-cognito-as-an-identity-provider/#set-up-a-new-oidc-connector-on-cells-enterprise","title":"Set up a new OIDC connector on Cells Enterprise","text":"<p>Going back to Cells, go to the Cells Console, under <code>Authentication &gt; OAUTH2/OIDC</code> setup panel, and create a new connector with the \"OpenID Connect type\".</p> <p></p> <p>Here you will need the connection data gathered at the previous step : </p> <ul> <li>Canonical URL of the provider : use https://cognito-idp.{REGION_ID}.amazonaws.com/{POOL_ID}. That should look like https://cognito-idp.eu-west-2.amazonaws.com/eu-west-2_KcLwCelr7</li> <li>Connector Authentication Values: use the Client ID / Client Secret of the Cognito Client App.</li> <li>Redirection URL, use <code>https://local.pydio/auth/login/callback</code>. Make sure that it exactly matches the Callback URL used in the cognito configuration.</li> </ul> <p></p> <p>At the bottom of the connector configuration, fill the \"Claims Key used as User ID\" key with \"email\". </p> <p>Save and close, looking at your server logs, you should see an \"Auth configuration changes, reloading\" log. If everything is fine, you can now try to login.</p>"},{"location":"knowledge-base/identity-management/using-aws-cognito-as-an-identity-provider/#test","title":"Test","text":"<p>Opening a private browser window, you should now see the new connector appear in the Login with... list : </p> <p></p> <p>By clicking on AWS Cognito, you will be redirected to the new Sign In form</p> <p></p> <p>Once correctly signed in, you should be automatically redirected to Cells and the user will be created in Cells under the \"AWS Cognito\" group.</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-microsoft-identity/","title":"Connect to Pydio Cells via Microsoft Identity","text":""},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-microsoft-identity/#about-microsoft-identity-platform","title":"About Microsoft Identity Platform","text":"<p>Microsoft Identity Platform offers registration and configuration of applications that sign in all Microsoft Identities and get tokens to call Microsoft APIs like Microsoft Graph or other APIs. It consists of a fully compliant OAuth2 and OpenID Connect standard-compliant authentication service. It is an evolution of the Azure Active Directory (Azure AD) developer platform.</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-microsoft-identity/#register-cells-application-with-the-microsoft-identity-platform","title":"Register cells application with the Microsoft Identity Platform","text":"<p>Please visit this article to register a new application.</p> <p> The callback url (or redirect uri) is generated in the step below. The format of the url may vary depending on the version of Cells so please refer to your admin console.</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-microsoft-identity/#add-a-microsoft-identity-connector-in-cells","title":"Add a Microsoft Identity connector in Cells","text":"<p>Navigate to the Admin Console &gt; Authentication &gt; OAUTH2 / OIDC</p> <p>Use the following configuration example to create a new connector :</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-microsoft-identity/#connector-options","title":"Connector Options","text":"<ul> <li>Connector type : <code>Microsoft</code></li> <li>Id: <code>&lt;your_id_here&gt;</code></li> <li>Name: <code>&lt;your_name_here&gt;</code> (the name will appear to the end user in the Login dialog box)</li> </ul>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-microsoft-identity/#microsoft-options","title":"Microsoft Options","text":"<ul> <li>Credentials:</li> <li>Client ID: <code>&lt;your_client_id&gt;</code> (created in the precedent step)</li> <li>Client Secret: <code>&lt;your_client_secret&gt;</code> (created in the precedent step)</li> <li>Redirect URI: (generated - use it to register cells with the Microsoft Identity platform)</li> <li>Tenant: <code>&lt;your_tenant_id&gt;</code> (created in the precedent step)</li> </ul>"},{"location":"knowledge-base/identity-management/using-github-as-an-identity-provider/","title":"Using Github as an Identity Provider","text":"<p>This how-to shows, how to let users authenticate in Cells Enterprise using their GitHub credentials.</p>"},{"location":"knowledge-base/identity-management/using-github-as-an-identity-provider/#create-a-github-application","title":"Create a Github Application","text":"<p>Create a New OAuth Application on Github,</p> <p></p> <ul> <li>Application name: Name your application</li> <li>Homepage URL: Your pydio Cells URL (main page)</li> <li>Authorization callback URL: http(s)://your-pydio/auth/login/callback (the endpoint is the immutable part)</li> </ul> <p></p> <p></p>"},{"location":"knowledge-base/identity-management/using-github-as-an-identity-provider/#set-the-github-connector-on-pydio-cells","title":"Set the GitHub connector on Pydio Cells","text":"<p>In your Pydio Cells instance go to Cells Console &gt; Authentication &gt; OAUTH2/OIDC and hit the + Connector button.</p> <p></p> <p>Select GitHub.</p> <ul> <li>Client ID: the client ID of your Github application (Fetched from github application, see step 1 )</li> <li>Client Secret: the client Secret of your Github application (Fetched from github application, see step 1)</li> <li>Callback URL: the same url defined during the creation of the GitHub application (Fetched from github application, see step 1)</li> </ul> <p></p>"},{"location":"knowledge-base/identity-management/using-google-as-an-identity-provider/","title":"Add a Google Connector","text":""},{"location":"knowledge-base/identity-management/using-google-as-an-identity-provider/#create-a-google-application-for-oidc","title":"Create a Google Application for OIDC","text":""},{"location":"knowledge-base/identity-management/using-google-as-an-identity-provider/#references","title":"References","text":"<ul> <li>https://cloud.google.com/identity-platform/docs/how-to-enable-application-for-oidc</li> </ul> <p>Default values</p> name value Issuer/Provider <code>https://accounts.google.com</code> redirect_uri <code>https://your-cells.com/auth/login/google/callback</code>"},{"location":"knowledge-base/identity-management/using-google-as-an-identity-provider/#step-1","title":"Step 1","text":"<p>Visit https://console.cloud.google.com/, </p> <ul> <li>Go to APIs &amp; Services.</li> </ul> <p></p> <ul> <li>Then browse to OAuth consent screen</li> </ul> <p>And set the following fields:</p> <ul> <li>Application name: name your application</li> <li>Authorized domains: add your Pydio Cells instance domain</li> <li>Hit Save</li> </ul> <p></p>"},{"location":"knowledge-base/identity-management/using-google-as-an-identity-provider/#step-2","title":"Step 2","text":"<ul> <li> <p>Then head to Credentials</p> </li> <li> <p>Click on Create credentials</p> </li> <li> <p>Select OAuth client ID</p> </li> <li> <p>Application Type : Select Web Application</p> </li> <li>Press Create</li> </ul> <p></p> <p>Last step, name your app (make sure to remember your ID and Secret) :</p> <ul> <li>Authorized JavaScript origins: Add your Pydio Cells url.</li> <li>Authorized redirect URIs: add a redirect url such as <code>https://my-cells.com/auth/login/google/callback</code>, add at the end of your Pydio Cells URL /auth/login/callback (this is the endpoint).</li> </ul> <p></p>"},{"location":"knowledge-base/identity-management/using-google-as-an-identity-provider/#create-a-google-connector-in-cells","title":"Create a Google Connector in Cells","text":"<p>In your Pydio Cells instance go to Cells Console &gt; Authentication &gt; OAUTH2/OIDC &gt; + Connector.</p> <ul> <li>Select OpenID Connect</li> <li>give it a label (name)</li> </ul> <p>Then set the following parameters:</p> <ul> <li>Canonical URL of the Provider: <code>https://accounts.google.com</code></li> <li>Client ID: your previously fetched client ID</li> <li>Client Secret: your previously fetched client Secret</li> <li>Redirection URI: the same URI that you have set during the google app creation.</li> </ul> <p></p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-on-premise-adfs-server/","title":"Connect to Pydio Cells via On-Premise ADFS server","text":""},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-on-premise-adfs-server/#about-on-premise-adfs","title":"About On-Premise ADFS","text":"<p>Azure Active Directory Federation Service platform deployed on-premise provides Single Sign-On on multiple systems and applications from a Windows Server to Windows Users using the SAML2.0 protocol.</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-on-premise-adfs-server/#install-and-configure-adfs-service-on-windows-server-2012","title":"Install and configure ADFS service on windows server 2012","text":"<p>Install following this guide</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-on-premise-adfs-server/#register-cells-as-a-relying-party-trust-in-adfs","title":"Register Cells as a Relying Party Trust in ADFS","text":"<p> The callback url (or redirect uri) is generated in the next step. The format of the url may vary depending on the version of Cells so please refer to your admin console.</p> <p>Create a Relying Party Trust following this guide.</p> <p>On the Configure URL page, select the Enable support for the SAML 2.0 WebSSO protocol checkbox and enter the callback url generated during the creation of the connector as the Relying party SAML 2.0 SSO service URL.</p> <p>It can also be configured afterwards in the Endpoints tab of the Relying Party Trust.</p> <p></p> <p>On the Configure Identifiers page, add your Cells URL as a Relying Party Trust Identifier. It needs to exactly match with the Entity issuer URL you specified in the connector configuration.</p> <p>It can also be configured afterwards in the Identifiers tab of the Relying Party Trust.</p> <p></p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-on-premise-adfs-server/#add-adfs-connector-in-cells","title":"Add ADFS connector in Cells","text":"<p>Navigate to the Admin Console &gt; Authentication &gt; OAUTH2 / OIDC</p> <p>Use the following configuration example to create a new connector :</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-on-premise-adfs-server/#connector-options","title":"Connector Options","text":"<ul> <li>Connector type : <code>SAML</code></li> <li>Id: <code>&lt;your_id_here&gt;</code></li> <li>Name: <code>&lt;your_name_here&gt;</code> (the name will appear to the end user in the Login dialog box)</li> </ul>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-on-premise-adfs-server/#saml-options","title":"SAML Options","text":"<ul> <li>SSO URL user for POST Value: <code>https://&lt;your_adfs_url_here&gt;/adfs/ls</code></li> <li>CA to use when validating the signature of the SAML response : <code>&lt;your_certificate_path_on_the_cells_server&gt;</code></li> <li>Callback URL : (generated - use it to register cells as a relying party trust in adfs)</li> <li>Name of the attributes to map in the ID Token Claims: (may vary for your usecase)</li> <li>Username: <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname</code></li> <li>Email: <code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress</code></li> <li>Manually specify issuers value:</li> <li>Entity issuer: <code>https://&lt;your_cells_url_here&gt;</code></li> </ul>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/","title":"Connect to Pydio Cells via SimpleSAML PHP","text":""},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/#about-simplesamlphp","title":"About SimpleSAMLphp","text":"<p>SimpleSAMLphp is written in native PHP and deals with authentication. For more information, please visit this link</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/#install-and-configure-simplesamlphp-server","title":"Install and configure SimpleSAMLphp server","text":"<p>Download the source code here.</p> <p>Install following this guide.</p> <p>Setup SimpleSAMLphp as an Identity Provider</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/#register-cells-as-a-service-provider-in-simplesamlphp","title":"Register Cells as a Service Provider in SimpleSAMLphp","text":"<p>metadata/saml20-sp-remote.php <pre><code>/*\n * Example SimpleSAMLphp SAML 2.0 SP\n */\n$metadata['https://cells.lab.py/auth/login/callback'] = [\n    'AssertionConsumerService' =&gt; '&lt;your_callback_url&gt;',\n    'SingleLogoutService' =&gt; '&lt;your_logout_url&gt;,\n];\n</code></pre></p> <p> The callback url used here is generated in the next step. The format of the url may vary depending on the version of Cells so please refer to your admin console.</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/#add-a-simplesamlphp-connector-in-cells","title":"Add a SimpleSAMLphp connector in Cells","text":"<p>Navigate to the Admin Console &gt; Authentication &gt; OAUTH2 / OIDC</p> <p>Use the following configuration example to create a new connector :</p>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/#connector-options","title":"Connector Options","text":"<ul> <li>Connector type : <code>SAML</code></li> <li>Id: <code>your_id_here</code></li> <li>Name: <code>your_name_here</code> (the name will appear to the end user in the Login dialog)</li> </ul>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/#saml-options","title":"SAML Options","text":"<ul> <li>SSO URL user for POST Value: <code>https://&lt;your_saml_url_here&gt;/saml2/idp/SSOService.php</code></li> <li>CA to use when validating the signature of the SAML response : <code>&lt;your_certificate_path_on_the_cells_server&gt;</code></li> <li>Callback URL : (generated - use it to register cells as a relying party trust in adfs)</li> <li>Name of the attributes to map in the ID Token Claims: (this will depend on your configuration - see excerpts below)</li> <li>Username: <code>uid</code></li> <li>Email: <code>email</code></li> <li>Manually specify issuers value:</li> <li>Entity issuer: <code>https://&lt;your_cells_url_here&gt;</code></li> <li>SSO issuer: <code>https://&lt;your_saml_url&gt;/saml2/idp/metadata.php</code></li> </ul>"},{"location":"knowledge-base/identity-management/connect-to-pydio-cells-via-simplesaml-php/#excerpts-from-local-testing-configuration","title":"Excerpts from local testing configuration","text":"<p>Enable Idp protocol in config/config.php <pre><code>    'enable.saml20-idp' =&gt; true,\n    'enable.shib13-idp' =&gt; false,\n    'enable.adfs-idp' =&gt; false,\n    'enable.wsfed-sp' =&gt; false,\n    'enable.authmemcookie' =&gt; false,\n</code></pre></p> <p>config/authsources.php <pre><code>&lt;?php\n$config = [\n    // This is a authentication source which handles admin authentication.\n    'admin' =&gt; [\n        // The default is to use core:AdminPassword, but it can be replaced with\n        // any authentication source.\n        'core:AdminPassword',\n    ],\n    'example-userpass' =&gt; [\n        'exampleauth:UserPass',\n        'student:studentpass' =&gt; [\n            'uid' =&gt; ['student'],\n            'email' =&gt; ['stu01@lab.py'],\n            'eduPersonAffiliation' =&gt; ['member', 'student'],\n        ],\n        'employee:employeepass' =&gt; [\n            'uid' =&gt; ['employee'],\n            'email' =&gt; ['emp001@lab.py'],\n            'eduPersonAffiliation' =&gt; ['member', 'employee'],\n        ],\n    ],\n];\n</code></pre></p> <p>metadata/saml20-idp-hosted.php <pre><code>    // X.509 key and certificate. Relative to the cert directory.\n    'privatekey' =&gt; 'key.pem',\n    'certificate' =&gt; 'cert.pem',\n</code></pre></p>"},{"location":"knowledge-base/identity-management/using-pydio-cells-as-an-identity-provider-for-wordpress/","title":"Using Pydio Cells as an Identity Provider for WordPress","text":"<p>Resources :</p> <ul> <li>https://wordpress.org/plugins/miniorange-login-with-eve-online-google-facebook/</li> <li>https://pydio.com/en/docs/cells/v4/cells-identity-provider</li> </ul>"},{"location":"knowledge-base/identity-management/using-pydio-cells-as-an-identity-provider-for-wordpress/#create-an-oauth2-client-for-wordpress-on-pydio-cells","title":"Create an OAuth2 client for WordPress on Pydio Cells","text":"<p>This is possible on both the Home and Enterprise Edition.</p>"},{"location":"knowledge-base/identity-management/using-pydio-cells-as-an-identity-provider-for-wordpress/#pydio-cells-enterprise-edition","title":"Pydio Cells Enterprise Edition","text":"<p>On the left-bar menu, go to Authentication &gt; OAUTH2/OIDC (top left) &gt; + OAUTH2 Client to create a new client.</p> <p>You must provide the following information:</p> Name <code>cellswordpress</code> put any label of your choice Client ID <code>cells-wp</code> this setting is a sort of username Client Secret a secret (like a password) this setting is a sort of username Scope <code>openid email profile pydio offline</code> Callback URL <code>https://my-wordpress.com</code> Grant Types <code>Authorization code</code> Response Types <code>Code</code>"},{"location":"knowledge-base/identity-management/using-pydio-cells-as-an-identity-provider-for-wordpress/#pydio-cells-home-edition","title":"Pydio Cells Home Edition","text":"<p>On Pydio Cells Home edition you must manually add to your pydio.json, the oauth2 client, below is a default sample:</p> <pre><code>{\n    \"client_id\": \"cells-wp\",\n    \"client_name\": \"cellswordpress\",\n    \"client_secret\": \"secret\",\n    \"grant_types\": [\n    \"authorization_code\"\n    ],\n    \"redirect_uris\": [\n    \"https://my-wordpress.com\"\n    ],\n    \"response_types\": [\n    \"code\"\n    ],\n    \"scope\": \"email user pydio openid offline\"\n}\n</code></pre> <p>You must add it inside the <code>staticClients</code> array (located inside your pydio.json file).</p> <p>pydio.json: <pre><code>\"staticClients\": [\n    // It must be placed here\n]\n</code></pre></p>"},{"location":"knowledge-base/identity-management/using-pydio-cells-as-an-identity-provider-for-wordpress/#configure-the-oauth2-client-on-wordpress","title":"Configure the OAuth2 client on WordPress","text":"<p>Download and install the following plugin on WordPress:</p> <ul> <li>https://wordpress.org/plugins/miniorange-login-with-eve-online-google-facebook/ </li> <li>Make sure to enable the plugin (Plugins menu)</li> </ul> <p>Then proceed on the Plugins settings (left bar menu), click on miniOrange OAuth, you are now invited to configure your OAuth Provider,</p> Client ID you must put the previously created Client ID Client Secret you must put the previously created Client Secret Authorize Endpoint https://your-cells/oidc/oauth2/auth Access Token Endpoint https://your-cells/oidc/oauth2/token <p></p> <p>Then hit the Test Configuration button, once you have the test-configuration (presented in an Array), keep it open as it is required later for the mapping, and proceed to Save.</p> <p></p> <p>Browse to Attribute/Role mapping and put inside the Username field the previously retrieved Attribute, <code>name</code> (see screenshot above).</p> <p></p> <p>Hit save and now you can connect to your WordPress with your PydioCells credentials.</p> <p></p>"}]}