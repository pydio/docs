name: Build and Deploy MkDocs Versions with Mike

on:
  push:
    branches:
      - '*'  # Trigger on any branch
    paths:
      - 'docs/**'
      - 'resources/**'
      - 'overrides/**'
      - 'mkdocs.yml'
      - 'requirements.txt'
      - '.github/workflows/**'

jobs:
  sync-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pydio/docs (pushed branch)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: Debug workflow trigger
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Repository: ${{ github.repository }}"

      - name: Checkout main for workflow and config
        uses: actions/checkout@v4
        with:
          ref: main
          path: main-config

      - name: Sync config files from main
        run: |
          cp main-config/mkdocs.yml .
          cp main-config/requirements.txt .
          cp -r main-config/.github .
          rm -rf main-config
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git add mkdocs.yml requirements.txt .github
          git commit -m "Sync config from main for ${{ github.ref_name }}" || echo "No changes to commit"
          git push origin ${{ github.ref_name }}

      - name: Debug contents
        run: |
          ls -la .
          ls -la docs/ || echo "docs/ not found"
          ls -la resources/ || echo "resources/ not found"
          ls -la overrides/ || echo "overrides/ not found"
          cat docs/index.md || echo "index.md not readable"
          cat resources/fix_index.html || echo "fix_index.html not readable"
          cat docs/cellsflows/1_preset_flows/1_efficient-system-maintenance/0_backup-personal-files.md || echo "File not readable"

      - name: Initialize gh-pages if not exists
        run: |
          git fetch origin gh-pages || {
            echo "gh-pages does not exist, creating it"
            git checkout --orphan gh-pages
            git rm -rf .
            echo "# Pydio Docs" > README.md
            git add README.md
            git config user.name "GitHub Action"
            git config user.email "action@github.com"
            git commit -m "Initialize gh-pages branch"
            git push origin gh-pages
            git checkout ${{ github.ref_name }}
          }

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Validate MkDocs build
        run: |
          mkdocs build --verbose
          if [ ! -f "site/index.html" ]; then
            echo "Error: index.html not generated"
            exit 1
          fi
          ls -la site/

      - name: Deploy with mike
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          VERSION=${GITHUB_REF_NAME}
          ALIAS=""
          if [ "$VERSION" = "cells-v4" ]; then
            ALIAS="latest"
          fi
          echo "Deploying $VERSION with alias $ALIAS"
          mike deploy --push --update-aliases --allow-empty "$VERSION" $ALIAS || {
            echo "mike deploy failed"
            exit 1
          }
          if [ "$VERSION" = "cells-v4" ]; then
            echo "Setting default to cells-v4"
            mike set-default --push cells-v4 || {
              echo "mike set-default failed"
              exit 1
            }
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy custom files to gh-pages
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          git fetch origin gh-pages
          git checkout gh-pages
          VERSION=${GITHUB_REF_NAME}
          mkdir -p "$VERSION"
          cp resources/fix_index.html "$VERSION/index.html" || echo "fix_index.html not found"
          cp resources/versions.json versions.json || echo "versions.json not found"
          git add "$VERSION/index.html" versions.json
          git commit -m "Add custom index and versions.json for $VERSION" || echo "No changes to commit"
          git push origin gh-pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}